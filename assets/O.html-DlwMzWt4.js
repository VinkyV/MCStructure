import{_ as s,c as e,o as n,d as a}from"./app-CsZ-F4rT.js";const l={},i=a(`<h1 id="o" tabindex="-1"><a class="header-anchor" href="#o"><span>O</span></a></h1><h3 id="optionconstants-lambda-494f639503c40febe0dbb14372a57cbf" tabindex="-1"><a class="header-anchor" href="#optionconstants-lambda-494f639503c40febe0dbb14372a57cbf"><span><code>OptionConstants::&lt;lambda_494f639503c40febe0dbb14372a57cbf&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c" tabindex="-1"><a class="header-anchor" href="#optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c"><span><code>OptionConstants::&lt;lambda_631366cfcd28947db7d3be15dfb1611c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="optionconstants-lambda-f6873ee4037cf69a5750303b33811eac" tabindex="-1"><a class="header-anchor" href="#optionconstants-lambda-f6873ee4037cf69a5750303b33811eac"><span><code>OptionConstants::&lt;lambda_f6873ee4037cf69a5750303b33811eac&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9" tabindex="-1"><a class="header-anchor" href="#optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9"><span><code>OptionConstants::&lt;lambda_ac8f171e94addf05b263c93e72bdf2a9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="option" tabindex="-1"><a class="header-anchor" href="#option"><span><code>Option</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Option_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(120) <code>Bedrock::PubSub::Publisher&lt;void __cdecl(Option const &amp;),Bedrock::PubSub::ThreadModel::MultiThreaded,void&gt;</code></td><td>mValueChangedPublisher</td></tr><tr><td>128</td><td>(120) <code>Bedrock::PubSub::Publisher&lt;void __cdecl(Option const &amp;,enum InputMode),Bedrock::PubSub::ThreadModel::MultiThreaded,void&gt;</code></td><td>mInputModeChangedPublisher</td></tr><tr><td>248</td><td>(8) <code>std::unique_ptr&lt;Bedrock::PubSub::Publisher&lt;void __cdecl(bool &amp;),Bedrock::PubSub::ThreadModel::MultiThreaded,void&gt;&gt;</code></td><td>mLock</td></tr><tr><td>256</td><td>(32) <code>std::string</code></td><td>mSaveTag</td></tr><tr><td>288</td><td>(32) <code>std::string</code></td><td>mTelemetryProperty</td></tr><tr><td>320</td><td>(4) <code>const OptionID</code></td><td>mID</td></tr><tr><td>324</td><td>(4) <code>const OptionOwnerType</code></td><td>mOwnerType</td></tr><tr><td>328</td><td>(4) <code>OptionType</code></td><td>mOptionType</td></tr><tr><td>336</td><td>(32) <code>const std::string</code></td><td>mCaptionId</td></tr><tr><td>368</td><td>(4) <code>_BYTE[4]</code></td><td>mOptionResetFlags</td></tr><tr><td>376</td><td>(8) <code>Option *</code></td><td>mOverrideSource</td></tr><tr><td>384</td><td>(16) <code>Bedrock::PubSub::ScopedSubscription</code></td><td>mOverrideSourceValueChangedSubscription</td></tr><tr><td>400</td><td>(16) <code>Bedrock::PubSub::ScopedSubscription</code></td><td>mOverrideSourceInputModeChangedSubscription</td></tr><tr><td>416</td><td>(64) <code>std::function&lt;void __cdecl(bool)&gt;</code></td><td>mRequestSaveCallback</td></tr><tr><td>480</td><td>(1) <code>bool</code></td><td>mCanChange</td></tr></tbody></table><h3 id="optional-ref-terrainmaterialvariationmanager-const" tabindex="-1"><a class="header-anchor" href="#optional-ref-terrainmaterialvariationmanager-const"><span><code>optional_ref&lt;TerrainMaterialVariationManager const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const TerrainMaterialVariationManager *</code></td><td>ptr</td></tr></tbody></table><h3 id="optional-ref-rendergraph-framebufferbuilder" tabindex="-1"><a class="header-anchor" href="#optional-ref-rendergraph-framebufferbuilder"><span><code>optional_ref&lt;rendergraph::FrameBufferBuilder&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>rendergraph::FrameBufferBuilder *</code></td><td>ptr</td></tr></tbody></table><h3 id="optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee" tabindex="-1"><a class="header-anchor" href="#optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee"><span><code>OptionConstants::&lt;lambda_0e1acb4e778a483f08cd62409c6f59ee&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="ownerptrt-entityregistryreftraits" tabindex="-1"><a class="header-anchor" href="#ownerptrt-entityregistryreftraits"><span><code>OwnerPtrT&lt;EntityRegistryRefTraits&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>OwnerStorageSharePtr&lt;EntityRegistryOwned&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="ownerstorageshareptr-entityregistryowned" tabindex="-1"><a class="header-anchor" href="#ownerstorageshareptr-entityregistryowned"><span><code>OwnerStorageSharePtr&lt;EntityRegistryOwned&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;EntityRegistryOwned&gt;</code></td><td>mValue</td></tr></tbody></table><h3 id="ownerptrt-entityreftraits" tabindex="-1"><a class="header-anchor" href="#ownerptrt-entityreftraits"><span><code>OwnerPtrT&lt;EntityRefTraits&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>OwnerStorageEntity</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="ownerstorageentity" tabindex="-1"><a class="header-anchor" href="#ownerstorageentity"><span><code>OwnerStorageEntity</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::optional&lt;OwnerStorageEntity::EntityContextOwned&gt;</code></td><td>mContext</td></tr></tbody></table><h3 id="ownerstorageentity-entitycontextowned" tabindex="-1"><a class="header-anchor" href="#ownerstorageentity-entitycontextowned"><span><code>OwnerStorageEntity::EntityContextOwned</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>EntityContext</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="optional-ref-localization-const" tabindex="-1"><a class="header-anchor" href="#optional-ref-localization-const"><span><code>optional_ref&lt;Localization const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Localization *</code></td><td>ptr</td></tr></tbody></table><h3 id="optionsavedeferral" tabindex="-1"><a class="header-anchor" href="#optionsavedeferral"><span><code>OptionSaveDeferral</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;Options&gt;</code></td><td>mOptions</td></tr></tbody></table><h3 id="objmodel" tabindex="-1"><a class="header-anchor" href="#objmodel"><span><code>ObjModel</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>name</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;float&gt;</code></td><td>positions</td></tr><tr><td>56</td><td>(24) <code>std::vector&lt;float&gt;</code></td><td>normals</td></tr><tr><td>80</td><td>(24) <code>std::vector&lt;float&gt;</code></td><td>texcoords</td></tr><tr><td>104</td><td>(24) <code>std::vector&lt;unsigned int&gt;</code></td><td>colors</td></tr><tr><td>128</td><td>(24) <code>std::vector&lt;unsigned int&gt;</code></td><td>indices</td></tr></tbody></table><h3 id="optional-ref-rendergraph-pass" tabindex="-1"><a class="header-anchor" href="#optional-ref-rendergraph-pass"><span><code>optional_ref&lt;rendergraph::Pass&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>rendergraph::Pass *</code></td><td>ptr</td></tr></tbody></table><h3 id="owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818"><span><code>OwnedDurablesPagingCache::{ctor}::__l2::&lt;lambda_28a90fe2ce902a855825d33515958818&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>OwnedDurablesPagingCache *const</code></td><td>__this</td></tr></tbody></table><h3 id="owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb"><span><code>OwnedDurablesPagingCache::search::__l2::&lt;lambda_c62e108c2369350517fae1efb94c51cb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>OwnedDurablesPagingCache *const</code></td><td>__this</td></tr><tr><td>8</td><td>(576) <code>const SearchQuery</code></td><td>query</td></tr><tr><td>584</td><td>(64) <code>std::function&lt;void __cdecl(DurableSearchResults const &amp;)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="ownerptrt-shareptrreftraits-fogdefinition-const" tabindex="-1"><a class="header-anchor" href="#ownerptrt-shareptrreftraits-fogdefinition-const"><span><code>OwnerPtrT&lt;SharePtrRefTraits&lt;FogDefinition const &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>OwnerStorageSharePtr&lt;FogDefinition const &gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="ownerstorageshareptr-fogdefinition-const" tabindex="-1"><a class="header-anchor" href="#ownerstorageshareptr-fogdefinition-const"><span><code>OwnerStorageSharePtr&lt;FogDefinition const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;FogDefinition const &gt;</code></td><td>mValue</td></tr></tbody></table><h3 id="owneditemstackrequestscope" tabindex="-1"><a class="header-anchor" href="#owneditemstackrequestscope"><span><code>OwnedItemStackRequestScope</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ItemStackNetManagerClient *</code></td><td>mItemStackNetManagerClient</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>mBeganRequest</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;ItemStackRequestData&gt;</code></td><td>mResult</td></tr></tbody></table><h3 id="optionalstring" tabindex="-1"><a class="header-anchor" href="#optionalstring"><span><code>OptionalString</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>valid</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>string</td></tr></tbody></table><h3 id="osinformation" tabindex="-1"><a class="header-anchor" href="#osinformation"><span><code>OSInformation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>MajorOSVersion</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>MinorOSVersion</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>OSVersionName</td></tr></tbody></table><h3 id="overworldgenerator-overridablebiomesourcehelper" tabindex="-1"><a class="header-anchor" href="#overworldgenerator-overridablebiomesourcehelper"><span><code>OverworldGenerator::OverridableBiomeSourceHelper</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;CachedBiomeSource&lt;VanillaOverworldBiomeSource&gt;&gt;</code></td><td>mNormalBiomeSource</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;FixedBiomeSource&gt;</code></td><td>mOverriddenBiomeSource</td></tr><tr><td>16</td><td>(8) <code>BiomeSource *</code></td><td>mBiomeSource</td></tr></tbody></table><h3 id="oceanruinconfiguration" tabindex="-1"><a class="header-anchor" href="#oceanruinconfiguration"><span><code>OceanRuinConfiguration</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>OceanTempCategory</code></td><td>type</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>largeProbability</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>clusterProbability</td></tr></tbody></table><h3 id="ownerptrt-shareptrreftraits-perlinsimplexnoise" tabindex="-1"><a class="header-anchor" href="#ownerptrt-shareptrreftraits-perlinsimplexnoise"><span><code>OwnerPtrT&lt;SharePtrRefTraits&lt;PerlinSimplexNoise&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>OwnerStorageSharePtr&lt;PerlinSimplexNoise&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="ownerstorageshareptr-perlinsimplexnoise" tabindex="-1"><a class="header-anchor" href="#ownerstorageshareptr-perlinsimplexnoise"><span><code>OwnerStorageSharePtr&lt;PerlinSimplexNoise&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;PerlinSimplexNoise&gt;</code></td><td>mValue</td></tr></tbody></table><h3 id="outputstring" tabindex="-1"><a class="header-anchor" href="#outputstring"><span><code>OutputString</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>char *</code></td><td>ptr</td></tr><tr><td>8</td><td>(8) <code>char *</code></td><td>end</td></tr><tr><td>16</td><td>(8) <code>_object *</code></td><td>obj</td></tr><tr><td>24</td><td>(8) <code>__int64</code></td><td>size_increment</td></tr></tbody></table><h3 id="onscreentextureanimationpacket" tabindex="-1"><a class="header-anchor" href="#onscreentextureanimationpacket"><span><code>OnScreenTextureAnimationPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) OnScreenTextureAnimationPacket : Packet</span>
<span class="line">{</span>
<span class="line">  unsigned int mEffectID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onscreentextureanimationpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#onscreentextureanimationpacket-vtbl"><span><code>OnScreenTextureAnimationPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnScreenTextureAnimationPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-vtbl" tabindex="-1"><a class="header-anchor" href="#option-vtbl"><span><code>Option_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Option_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Option)(Option *this);</span>
<span class="line">  void (__fastcall *save)(Option *this, std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *load)(Option *this, const Json::Value *);</span>
<span class="line">  void (__fastcall *load)(Option *this, std::map&lt;std::string,std::string&gt; *);</span>
<span class="line">  void (__fastcall *load)(Option *this, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span><code>Options</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options : std::enable_shared_from_this&lt;Options&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;std::unique_ptr&lt;Option&gt;,541&gt; mOptions;</span>
<span class="line">  std::unique_ptr&lt;ChatOptions&gt; mChatOptions;</span>
<span class="line">  Options *mPerMachineOptionsSource;</span>
<span class="line">  std::string mOverrideUsername;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFilePath;</span>
<span class="line">  bool mLoadInProgress;</span>
<span class="line">  bool mUseVROptions;</span>
<span class="line">  bool mPrimaryUserStatus;</span>
<span class="line">  bool mAllowedToSave;</span>
<span class="line">  _BYTE mSaveRequestMode[4];</span>
<span class="line">  std::atomic&lt;int&gt; mSaveDeferralCount;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mNextSaveTime;</span>
<span class="line">  std::unique_ptr&lt;OptionValueInterface&gt; mOptionValues;</span>
<span class="line">  int mDefaultViewDistanceChunks;</span>
<span class="line">  int mDefaultRayTracingViewDistanceChunks;</span>
<span class="line">  int mDefaultVRViewDistanceChunks;</span>
<span class="line">  std::vector&lt;int&gt; mRenderDistanceLevels;</span>
<span class="line">  std::vector&lt;int&gt; mVRRenderDistanceLevels;</span>
<span class="line">  std::vector&lt;int&gt; mRayTracingRenderDistanceLevels;</span>
<span class="line">  float mPpmDpadSizeOld;</span>
<span class="line">  std::vector&lt;std::string&gt; mRecentSkinIds;</span>
<span class="line">  std::unique_ptr&lt;GamePadRemappingLayout&gt; mGamePadRemappings[4];</span>
<span class="line">  std::unique_ptr&lt;GamePadRemappingLayout&gt; mMotionControllerRemapping;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;KeyboardRemappingLayout&gt;&gt; mKeyboardRemappings;</span>
<span class="line">  Core::Subject&lt;OptionsObserver,Core::SingleThreadedLock&gt; mEventSubject;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  bool mIsSaveInProgress;</span>
<span class="line">  std::vector&lt;Bedrock::PubSub::ScopedSubscription&gt; mObserverSubscriptions;</span>
<span class="line">  std::vector&lt;Bedrock::PubSub::ScopedSubscription&gt; mLockSubscriptions;</span>
<span class="line">  int mLockPlayerViewMode;</span>
<span class="line">  int mLockViewBobbing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionvalueinterface" tabindex="-1"><a class="header-anchor" href="#optionvalueinterface"><span><code>OptionValueInterface</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OptionValueInterface</span>
<span class="line">{</span>
<span class="line">  OptionValueInterface_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionvalueinterface-vtbl" tabindex="-1"><a class="header-anchor" href="#optionvalueinterface-vtbl"><span><code>OptionValueInterface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OptionValueInterface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~OptionValueInterface)(OptionValueInterface *this);</span>
<span class="line">  const std::vector&lt;int&gt; *(__fastcall *getRenderDistanceLevels)(OptionValueInterface *this, const std::vector&lt;int&gt; *result);</span>
<span class="line">  const std::vector&lt;int&gt; *(__fastcall *getVRRenderDistanceLevels)(OptionValueInterface *this, const std::vector&lt;int&gt; *result);</span>
<span class="line">  const std::vector&lt;int&gt; *(__fastcall *getRayTracingRenderDistanceLevels)(OptionValueInterface *this, const std::vector&lt;int&gt; *result);</span>
<span class="line">  int (__fastcall *getDefaultRenderDistanceLevel)(OptionValueInterface *this);</span>
<span class="line">  int (__fastcall *getDefaultVRRenderDistanceLevel)(OptionValueInterface *this);</span>
<span class="line">  int (__fastcall *getDefaultRayTracingRenderDistanceLevel)(OptionValueInterface *this);</span>
<span class="line">  bool (__fastcall *getDefaultTexelAA)(OptionValueInterface *this);</span>
<span class="line">  bool (__fastcall *getDefaultVRTexelAA)(OptionValueInterface *this);</span>
<span class="line">  int (__fastcall *getDefaultMSAA)(OptionValueInterface *this);</span>
<span class="line">  int (__fastcall *getDefaultVRMSAA)(OptionValueInterface *this);</span>
<span class="line">  VRHUDPosition (__fastcall *getDefaultVRHUDPosition)(OptionValueInterface *this);</span>
<span class="line">  const std::vector&lt;int&gt; *(__fastcall *getSupportedMSAAValues)(OptionValueInterface *this, const std::vector&lt;int&gt; *result, bool);</span>
<span class="line">  void (__fastcall *setMSAAValue)(OptionValueInterface *this, int);</span>
<span class="line">  void (__fastcall *setTexelAA)(OptionValueInterface *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionsobserver" tabindex="-1"><a class="header-anchor" href="#optionsobserver"><span><code>OptionsObserver</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OptionsObserver : Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionsobserver-vtbl" tabindex="-1"><a class="header-anchor" href="#optionsobserver-vtbl"><span><code>OptionsObserver_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OptionsObserver_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *onForceCloudSave)(OptionsObserver *this);</span>
<span class="line">  void (__fastcall *onOptionsLoadBegin)(OptionsObserver *this);</span>
<span class="line">  void (__fastcall *onOptionsLoadComplete)(OptionsObserver *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offer" tabindex="-1"><a class="header-anchor" href="#offer"><span><code>Offer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Offer</span>
<span class="line">{</span>
<span class="line">  ProductSku mProductSku;</span>
<span class="line">  ProductType mProductType;</span>
<span class="line">  OfferCategory mCategory;</span>
<span class="line">  std::unique_ptr&lt;ProductInfo&gt; mActiveProductInfo;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Purchase&gt;&gt; mActivePurchases;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="objectivecriteria" tabindex="-1"><a class="header-anchor" href="#objectivecriteria"><span><code>ObjectiveCriteria</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ObjectiveCriteria</span>
<span class="line">{</span>
<span class="line">  const std::string mName;</span>
<span class="line">  const bool mReadOnly;</span>
<span class="line">  const ObjectiveRenderType mRenderType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="objective" tabindex="-1"><a class="header-anchor" href="#objective"><span><code>Objective</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj Objective</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ScoreboardId,int&gt; mScores;</span>
<span class="line">  const std::string mName;</span>
<span class="line">  std::string mDisplayName;</span>
<span class="line">  const ObjectiveCriteria *mCriteria;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercollectioncomponent" tabindex="-1"><a class="header-anchor" href="#offercollectioncomponent"><span><code>OfferCollectionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OfferCollectionComponent : StoreUIComponent</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;CatalogCollection&gt; mCollection;</span>
<span class="line">  bool mIsValid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercollectioncomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#offercollectioncomponent-vtbl"><span><code>OfferCollectionComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OfferCollectionComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);</span>
<span class="line">  bool (__fastcall *canRemove)(StoreUIComponent *this);</span>
<span class="line">  int (__fastcall *getReadyCount)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache"><span><code>OwnedDurablesPagingCache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache</span>
<span class="line">{</span>
<span class="line">  const int SEARCH_BATCH_SIZE;</span>
<span class="line">  std::shared_ptr&lt;GenericEntitlementChangeListener&gt; mEntitlementChangeListener;</span>
<span class="line">  std::function&lt;void __cdecl(SearchQuery const &amp;,std::function&lt;void __cdecl(DurableSearchResults const &amp;)&gt;)&gt; mSearchHandler;</span>
<span class="line">  std::unordered_map&lt;std::string,DocumentMeta&gt; mDocumentCache;</span>
<span class="line">  std::unordered_map&lt;unsigned int,std::unique_ptr&lt;std::unordered_set&lt;std::string&gt;&gt;&gt; mCachedQueryResultsMap;</span>
<span class="line">  std::function&lt;std::vector&lt;mce::UUID&gt; __cdecl(void)&gt; mRetrieveOwnedPackIds;</span>
<span class="line">  std::function&lt;std::unordered_set&lt;PackIdVersion,PackIdentityUUIDHash,PackIdentityUUIDEquality,std::allocator&lt;PackIdVersion&gt; &gt; __cdecl(void)&gt; mRetrieveInstalledPackIds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-rendergraph-resourceviewinterface-const" tabindex="-1"><a class="header-anchor" href="#optional-ref-rendergraph-resourceviewinterface-const"><span><code>optional_ref&lt;rendergraph::ResourceViewInterface const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;rendergraph::ResourceViewInterface const &gt;</span>
<span class="line">{</span>
<span class="line">  const rendergraph::ResourceViewInterface *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-rendergraph-resourcetargetinterface-const" tabindex="-1"><a class="header-anchor" href="#optional-ref-rendergraph-resourcetargetinterface-const"><span><code>optional_ref&lt;rendergraph::ResourceTargetInterface const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;rendergraph::ResourceTargetInterface const &gt;</span>
<span class="line">{</span>
<span class="line">  const rendergraph::ResourceTargetInterface *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overlaytexturemap" tabindex="-1"><a class="header-anchor" href="#overlaytexturemap"><span><code>OverlayTextureMap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverlayTextureMap</span>
<span class="line">{</span>
<span class="line">  mce::TextureGroupBase *mTextureGroup;</span>
<span class="line">  _BYTE mCachedOverlayTextureId[4];</span>
<span class="line">  mce::TexturePtr mCachedOverlayTexture;</span>
<span class="line">  std::array&lt;std::string,2&gt; mTextureNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-playerrenderview" tabindex="-1"><a class="header-anchor" href="#optional-ref-playerrenderview"><span><code>optional_ref&lt;PlayerRenderView&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;PlayerRenderView&gt;</span>
<span class="line">{</span>
<span class="line">  PlayerRenderView *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-playerrenderview-legacyplayerrenderpass" tabindex="-1"><a class="header-anchor" href="#optional-ref-playerrenderview-legacyplayerrenderpass"><span><code>optional_ref&lt;PlayerRenderView::LegacyPlayerRenderPass&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;PlayerRenderView::LegacyPlayerRenderPass&gt;</span>
<span class="line">{</span>
<span class="line">  PlayerRenderView::LegacyPlayerRenderPass *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-mce-renderstage" tabindex="-1"><a class="header-anchor" href="#optional-ref-mce-renderstage"><span><code>optional_ref&lt;mce::RenderStage&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;mce::RenderStage&gt;</span>
<span class="line">{</span>
<span class="line">  mce::RenderStage *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-commandlistqueue" tabindex="-1"><a class="header-anchor" href="#optional-ref-commandlistqueue"><span><code>optional_ref&lt;CommandListQueue&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;CommandListQueue&gt;</span>
<span class="line">{</span>
<span class="line">  CommandListQueue *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ovrplatformmessagehandler" tabindex="-1"><a class="header-anchor" href="#ovrplatformmessagehandler"><span><code>OVRPlatformMessageHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OVRPlatformMessageHandler</span>
<span class="line">{</span>
<span class="line">  OVRPlatformMessageHandler_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ovrplatformmessagehandler-vtbl" tabindex="-1"><a class="header-anchor" href="#ovrplatformmessagehandler-vtbl"><span><code>OVRPlatformMessageHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OVRPlatformMessageHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~OVRPlatformMessageHandler)(OVRPlatformMessageHandler *this);</span>
<span class="line">  bool (__fastcall *handleMessage)(OVRPlatformMessageHandler *this, struct ovrMessage *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculusplatformmessagepump" tabindex="-1"><a class="header-anchor" href="#oculusplatformmessagepump"><span><code>OculusPlatformMessagePump</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OculusPlatformMessagePump</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;OVRPlatformMessageHandler *&gt; mOVRPlatformMessageHandlers;</span>
<span class="line">  bool mEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-productqueryattemptresult" tabindex="-1"><a class="header-anchor" href="#offerrepository-productqueryattemptresult"><span><code>OfferRepository::ProductQueryAttemptResult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::ProductQueryAttemptResult</span>
<span class="line">{</span>
<span class="line">  bool mComplete;</span>
<span class="line">  bool mSuccess;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-realmsoffertypecontainer" tabindex="-1"><a class="header-anchor" href="#offerrepository-realmsoffertypecontainer"><span><code>OfferRepository::RealmsOfferTypeContainer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::RealmsOfferTypeContainer</span>
<span class="line">{</span>
<span class="line">  std::map&lt;enum RealmsOfferPeriod,std::map&lt;enum RealmsOfferTier,std::vector&lt;Offer *&gt;&gt;&gt; Elements;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculussyncservice" tabindex="-1"><a class="header-anchor" href="#oculussyncservice"><span><code>OculusSyncService</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OculusSyncService : ServiceClient</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculussyncservice-vtbl" tabindex="-1"><a class="header-anchor" href="#oculussyncservice-vtbl"><span><code>OculusSyncService_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OculusSyncService_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ServiceClient)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *update)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr&lt;RequestHandler&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository" tabindex="-1"><a class="header-anchor" href="#offerrepository"><span><code>OfferRepository</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository : StoreListener, Bedrock::EnableNonOwnerReferences, std::enable_shared_from_this&lt;OfferRepository&gt;</span>
<span class="line">{</span>
<span class="line">  IMinecraftEventing *mEventing;</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;Social::IUserManager&gt; mUserManager;</span>
<span class="line">  IEntitlementManager *mEntitlementManager;</span>
<span class="line">  IClientInstance *mPrimaryClient;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;Offer&gt;&gt; mAllOffers;</span>
<span class="line">  std::vector&lt;Offer *&gt; mRealmsOffersPendingFulfillment;</span>
<span class="line">  std::vector&lt;Offer *&gt; mMinecoinOffersPendingFulfillment;</span>
<span class="line">  std::vector&lt;Offer *&gt; mEduOffersPendingFulfillment;</span>
<span class="line">  std::function&lt;std::shared_ptr&lt;OfferRepository::ProductQueryAttemptResult&gt; __cdecl(void)&gt; mProductQueryAttemptCallback;</span>
<span class="line">  std::map&lt;enum RealmsOfferType,OfferRepository::RealmsOfferTypeContainer&gt; mRealmsOfferMatrix;</span>
<span class="line">  std::unique_ptr&lt;GameStore&gt; mGameStore;</span>
<span class="line">  std::unique_ptr&lt;DurableTransactionHandler&gt; mDurableTransactionHandler;</span>
<span class="line">  std::unique_ptr&lt;RealmsTransactionHandler&gt; mRealmsTransactionHandler;</span>
<span class="line">  std::unique_ptr&lt;MinecoinTransactionHandler&gt; mMinecoinTransactionHandler;</span>
<span class="line">  std::unique_ptr&lt;EduTransactionHandler&gt; mEduTransactionHandler;</span>
<span class="line">  std::unique_ptr&lt;PurchaseCache&gt; mPurchaseCache;</span>
<span class="line">  std::unique_ptr&lt;TransactionContext&gt; mUserTransactionContext;</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mQueryPurchasesCallback;</span>
<span class="line">  bool mQueryPurchasesAllowSignIn;</span>
<span class="line">  __declspec(align(4)) RetryDelay mProductsRefresh;</span>
<span class="line">  RetryDelay mPurchasesRefresh;</span>
<span class="line">  RetryDelay mFulfillmentRefresh;</span>
<span class="line">  bool mInitialized;</span>
<span class="line">  ServiceRegistrationToken&lt;OfferRepository&gt; mServiceRegistrationToken;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-vtbl" tabindex="-1"><a class="header-anchor" href="#offerrepository-vtbl"><span><code>OfferRepository_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OfferRepository_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreListener)(StoreListener *this);</span>
<span class="line">  void (__fastcall *onStoreInitialized)(StoreListener *this, bool);</span>
<span class="line">  void (__fastcall *setStoreAvailable)(StoreListener *this, bool);</span>
<span class="line">  void (__fastcall *onQueryProductsSuccess)(StoreListener *this, const std::vector&lt;ProductInfo&gt; *);</span>
<span class="line">  void (__fastcall *onQueryProductsFail)(StoreListener *this);</span>
<span class="line">  void (__fastcall *onPurchaseSuccessful)(StoreListener *this, const PurchaseInfo *);</span>
<span class="line">  void (__fastcall *onPurchaseCanceled)(StoreListener *this, const ProductSku *);</span>
<span class="line">  void (__fastcall *onPurchaseFailed)(StoreListener *this, const ProductSku *);</span>
<span class="line">  void (__fastcall *onQueryPurchasesSuccess)(StoreListener *this, const std::vector&lt;PurchaseInfo&gt; *);</span>
<span class="line">  void (__fastcall *onQueryPurchasesFail)(StoreListener *this);</span>
<span class="line">  void (__fastcall *onAppPurchaseSuccess)(StoreListener *this);</span>
<span class="line">  void (__fastcall *onAppPurchaseFailed)(StoreListener *this);</span>
<span class="line">  void (__fastcall *onAppPurchaseCanceled)(StoreListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerstoragefeature" tabindex="-1"><a class="header-anchor" href="#ownerstoragefeature"><span><code>OwnerStorageFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerStorageFeature</span>
<span class="line">{</span>
<span class="line">  std::optional&lt;std::reference_wrapper&lt;FeatureRegistry&gt; &gt; mRegistry;</span>
<span class="line">  unsigned __int64 mIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerptrt-featurereftraits" tabindex="-1"><a class="header-anchor" href="#ownerptrt-featurereftraits"><span><code>OwnerPtrT&lt;FeatureRefTraits&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerPtrT&lt;FeatureRefTraits&gt; : OwnerStorageFeature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onhitsubcomponent" tabindex="-1"><a class="header-anchor" href="#onhitsubcomponent"><span><code>OnHitSubcomponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnHitSubcomponent</span>
<span class="line">{</span>
<span class="line">  OnHitSubcomponent_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onhitsubcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#onhitsubcomponent-vtbl"><span><code>OnHitSubcomponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnHitSubcomponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~OnHitSubcomponent)(OnHitSubcomponent *this);</span>
<span class="line">  void (__fastcall *readfromJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *writetoJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *doOnHitEffect)(OnHitSubcomponent *this, Actor *, ProjectileComponent *);</span>
<span class="line">  const char *(__fastcall *getName)(OnHitSubcomponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorannotationdescription" tabindex="-1"><a class="header-anchor" href="#opendoorannotationdescription"><span><code>OpenDoorAnnotationDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OpenDoorAnnotationDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorannotationdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#opendoorannotationdescription-vtbl"><span><code>OpenDoorAnnotationDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OpenDoorAnnotationDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerstorageshareptr-entityregistry" tabindex="-1"><a class="header-anchor" href="#ownerstorageshareptr-entityregistry"><span><code>OwnerStorageSharePtr&lt;EntityRegistry&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerStorageSharePtr&lt;EntityRegistry&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;EntityRegistry&gt; mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetyprogresshandler" tabindex="-1"><a class="header-anchor" href="#onlinesafetyprogresshandler"><span><code>OnlineSafetyProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OnlineSafetyProgressHandler : ProgressHandler</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyProgressHandler::State mState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetyprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#onlinesafetyprogresshandler-vtbl"><span><code>OnlineSafetyProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnlineSafetyProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercollectioncustom" tabindex="-1"><a class="header-anchor" href="#offercollectioncustom"><span><code>OfferCollectionCustom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OfferCollectionCustom</span>
<span class="line">{</span>
<span class="line">  QueryDocument mQueryDoc;</span>
<span class="line">  int mSalesRecentDocumentValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercollectiondocument" tabindex="-1"><a class="header-anchor" href="#offercollectiondocument"><span><code>OfferCollectionDocument</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferCollectionDocument</span>
<span class="line">{</span>
<span class="line">  CommonDocument mCommon;</span>
<span class="line">  OfferCollectionCustom mCustom;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercollectionsearchresults" tabindex="-1"><a class="header-anchor" href="#offercollectionsearchresults"><span><code>OfferCollectionSearchResults</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj OfferCollectionSearchResults : CommonSearchResults</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;OfferCollectionDocument&gt; mDocuments;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller"><span><code>OnlineSafetyDialogScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyProgressHandler *mOnlineSafetyProgressHandler;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-vtbl"><span><code>OnlineSafetyDialogScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnlineSafetyDialogScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405"><span><code>OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::&lt;lambda_7cab83aadfffc6c6f3533f3188941405&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::&lt;lambda_7cab83aadfffc6c6f3533f3188941405&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce"><span><code>OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::&lt;lambda_9a561524d40350cc3faeda38517440ce&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::&lt;lambda_9a561524d40350cc3faeda38517440ce&gt;</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyDialogScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1"><span><code>OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_aa0696b494dc24d731ca3415eb7512e1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_aa0696b494dc24d731ca3415eb7512e1&gt;</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyDialogScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d"><span><code>OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_ff8c03f366e9ea90c239e7accb05879d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_ff8c03f366e9ea90c239e7accb05879d&gt;</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyDialogScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc"><span><code>OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_1ca3a046a3907aedfae4f13653e071cc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_1ca3a046a3907aedfae4f13653e071cc&gt;</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyDialogScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969"><span><code>OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_a93e6c06c61804e1fbd2a20a8c69c969&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_a93e6c06c61804e1fbd2a20a8c69c969&gt;</span>
<span class="line">{</span>
<span class="line">  OnlineSafetyDialogScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d" tabindex="-1"><a class="header-anchor" href="#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d"><span><code>OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_98bb0289cd1621c1ca883be4cca3467d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::&lt;lambda_98bb0289cd1621c1ca883be4cca3467d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offercategoryenumhasher" tabindex="-1"><a class="header-anchor" href="#offercategoryenumhasher"><span><code>OfferCategoryEnumHasher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferCategoryEnumHasher</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-int" tabindex="-1"><a class="header-anchor" href="#optional-ref-int"><span><code>optional_ref&lt;int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;int&gt;</span>
<span class="line">{</span>
<span class="line">  int *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-ref-mce-texture" tabindex="-1"><a class="header-anchor" href="#optional-ref-mce-texture"><span><code>optional_ref&lt;mce::Texture&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj optional_ref&lt;mce::Texture&gt;</span>
<span class="line">{</span>
<span class="line">  mce::Texture *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionactivationrule" tabindex="-1"><a class="header-anchor" href="#optionactivationrule"><span><code>OptionActivationRule</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OptionActivationRule : ActivationRule</span>
<span class="line">{</span>
<span class="line">  PlayerViewMode mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionactivationrule-vtbl" tabindex="-1"><a class="header-anchor" href="#optionactivationrule-vtbl"><span><code>OptionActivationRule_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OptionActivationRule_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ActivationRule)(ActivationRule *this);</span>
<span class="line">  std::unique_ptr&lt;ActivationRule&gt; *(__fastcall *create)(ActivationRule *this, std::unique_ptr&lt;ActivationRule&gt; *result, Json::Value *);</span>
<span class="line">  bool (__fastcall *evaluate)(ActivationRule *this, const IClientInstance *, float, const Camera *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orbitbehavior" tabindex="-1"><a class="header-anchor" href="#orbitbehavior"><span><code>OrbitBehavior</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OrbitBehavior : CameraBehavior&lt;OrbitBehavior&gt;</span>
<span class="line">{</span>
<span class="line">  CriticallyDampedSpring&lt;float&gt; mAzimuthSmoothingSpring;</span>
<span class="line">  CriticallyDampedSpring&lt;float&gt; mPolarAngleSmoothingSpring;</span>
<span class="line">  CriticallyDampedSpring&lt;float&gt; mDistanceSmoothingSpring;</span>
<span class="line">  Spherical mCurrentSpherical;</span>
<span class="line">  Spherical mIdealSpherical;</span>
<span class="line">  float mPolarAngleMin;</span>
<span class="line">  float mPolarAngleMax;</span>
<span class="line">  float mAzimuthVelocity;</span>
<span class="line">  float mPolarAngleVelocity;</span>
<span class="line">  float mDistanceVelocity;</span>
<span class="line">  float mDistanceConstraint;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orbitbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#orbitbehavior-vtbl"><span><code>OrbitBehavior_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OrbitBehavior_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orbitbehaviorloader" tabindex="-1"><a class="header-anchor" href="#orbitbehaviorloader"><span><code>OrbitBehaviorLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OrbitBehaviorLoader : CameraBehaviorLoader</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orbitbehaviorloader-vtbl" tabindex="-1"><a class="header-anchor" href="#orbitbehaviorloader-vtbl"><span><code>OrbitBehaviorLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OrbitBehaviorLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);</span>
<span class="line">  std::unique_ptr&lt;ICameraBehavior&gt; *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr&lt;ICameraBehavior&gt; *result);</span>
<span class="line">  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overloadsyntaxinformation" tabindex="-1"><a class="header-anchor" href="#overloadsyntaxinformation"><span><code>OverloadSyntaxInformation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverloadSyntaxInformation</span>
<span class="line">{</span>
<span class="line">  std::string text;</span>
<span class="line">  unsigned int start;</span>
<span class="line">  unsigned int length;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseitemcomponent" tabindex="-1"><a class="header-anchor" href="#onuseitemcomponent"><span><code>OnUseItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnUseItemComponent : ItemComponent</span>
<span class="line">{</span>
<span class="line">  DefinitionTrigger mOnUse;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseitemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#onuseitemcomponent-vtbl"><span><code>OnUseItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnUseItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemComponent)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);</span>
<span class="line">  void (__fastcall *writeSettings)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(ItemComponent *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-aggregateresults" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-aggregateresults"><span><code>OwnedDurablesPagingCache::AggregateResults</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::AggregateResults</span>
<span class="line">{</span>
<span class="line">  int mRemainingBatches;</span>
<span class="line">  std::unique_ptr&lt;std::unordered_set&lt;std::string&gt;&gt; mProductIdSet;</span>
<span class="line">  std::function&lt;void __cdecl(std::unique_ptr&lt;std::unordered_set&lt;std::string&gt;&gt;)&gt; mCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a" tabindex="-1"><a class="header-anchor" href="#optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a"><span><code>OptionSaveDeferral::release::__l16::&lt;lambda_b309dec70b808e8609e224c1506fb95a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OptionSaveDeferral::release::__l16::&lt;lambda_b309dec70b808e8609e224c1506fb95a&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;Options&gt; options;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027" tabindex="-1"><a class="header-anchor" href="#options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027"><span><code>Options::setPlayerViewPerspective::__l2::&lt;lambda_2933f73a92da25ab7eb8888027fc5027&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::setPlayerViewPerspective::__l2::&lt;lambda_2933f73a92da25ab7eb8888027fc5027&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">  int *playerViewPerspective;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a" tabindex="-1"><a class="header-anchor" href="#options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a"><span><code>Options::_endLoadingSession::__l5::&lt;lambda_c02e99fb4834412c0d487a342dd02b2a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_endLoadingSession::__l5::&lt;lambda_c02e99fb4834412c0d487a342dd02b2a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d" tabindex="-1"><a class="header-anchor" href="#options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d"><span><code>Options::_beginLoadingSession::__l5::&lt;lambda_efe1aacdc65c1acb51ca6cd303b70c1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_beginLoadingSession::__l5::&lt;lambda_efe1aacdc65c1acb51ca6cd303b70c1d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab" tabindex="-1"><a class="header-anchor" href="#options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab"><span><code>Options::_loadOptions::__l2::&lt;lambda_f2dc6bf19bfc274071900699a3267aab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadOptions::__l2::&lt;lambda_f2dc6bf19bfc274071900699a3267aab&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d" tabindex="-1"><a class="header-anchor" href="#options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d"><span><code>Options::_loadOptions::__l2::&lt;lambda_a60f418fafc87ff5dc33874f9996e92d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadOptions::__l2::&lt;lambda_a60f418fafc87ff5dc33874f9996e92d&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172" tabindex="-1"><a class="header-anchor" href="#options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172"><span><code>Options::_loadOptions::__l2::&lt;lambda_75c87264413dc083e0ecaa10c5192172&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadOptions::__l2::&lt;lambda_75c87264413dc083e0ecaa10c5192172&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215" tabindex="-1"><a class="header-anchor" href="#options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215"><span><code>Options::_save::__l18::&lt;lambda_6f9032d848d392ddf02a80ada4c68215&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_save::__l18::&lt;lambda_6f9032d848d392ddf02a80ada4c68215&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea" tabindex="-1"><a class="header-anchor" href="#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea"><span><code>Options::_saveAsync::__l2::&lt;lambda_79138d76ef9458f6e4612f819f3ab2ea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Options::_saveAsync::__l2::&lt;lambda_79138d76ef9458f6e4612f819f3ab2ea&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; hasFailedToSave;</span>
<span class="line">  _BYTE cachedSaveRequest[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935" tabindex="-1"><a class="header-anchor" href="#options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935"><span><code>Options::_saveAsync::__l2::&lt;lambda_fbed4f7a7e8aeeddc0b8e4a80d747935&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_saveAsync::__l2::&lt;lambda_fbed4f7a7e8aeeddc0b8e4a80d747935&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">  std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; settingsVec;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; hasFailedToSave;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1" tabindex="-1"><a class="header-anchor" href="#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1"><span><code>Options::_saveAsync::__l2::&lt;lambda_79138d76ef9458f6e4612f819f3ab2ea&gt;::()::__l8::&lt;lambda_0dfff5764f0623e212f81d2e2f8bfba1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_saveAsync::__l2::&lt;lambda_79138d76ef9458f6e4612f819f3ab2ea&gt;::()::__l8::&lt;lambda_0dfff5764f0623e212f81d2e2f8bfba1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_50fe63b9e25ac6375291495c25d838f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_50fe63b9e25ac6375291495c25d838f4&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_b5d6adc02c288532a55896180d04bcb6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_b5d6adc02c288532a55896180d04bcb6&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_a38362f13b6055cf66128de76723f3d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_a38362f13b6055cf66128de76723f3d8&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_ac581a5d50fb80d69368380a8811d8a1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_ac581a5d50fb80d69368380a8811d8a1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_57c624900efc65c068fad36bbfdbaebf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_57c624900efc65c068fad36bbfdbaebf&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_199adfe065c6dca797da5ce18416772e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_199adfe065c6dca797da5ce18416772e&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_cd834d48ffb65032bb9f6c8cca8d0312&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_cd834d48ffb65032bb9f6c8cca8d0312&gt;</span>
<span class="line">{</span>
<span class="line">  Options::_registerSelfLocks::__l2::&lt;lambda_199adfe065c6dca797da5ce18416772e&gt; vrSnapLock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_86205ee13076472cb59fe87cb90a8ae9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_86205ee13076472cb59fe87cb90a8ae9&gt;</span>
<span class="line">{</span>
<span class="line">  Options::_registerSelfLocks::__l2::&lt;lambda_199adfe065c6dca797da5ce18416772e&gt; vrSnapLock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_b9da9739a53f45c8f2534e78482a8f15&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_b9da9739a53f45c8f2534e78482a8f15&gt;</span>
<span class="line">{</span>
<span class="line">  Options::_registerSelfLocks::__l2::&lt;lambda_199adfe065c6dca797da5ce18416772e&gt; vrSnapLock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_0a437dfd734b2239b707d376daf7211a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_0a437dfd734b2239b707d376daf7211a&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13" tabindex="-1"><a class="header-anchor" href="#options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13"><span><code>Options::_registerSelfLocks::__l2::&lt;lambda_de46fbdf10fbd5875880cec202917d13&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfLocks::__l2::&lt;lambda_de46fbdf10fbd5875880cec202917d13&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_8728dfacd96bef3f811545e6af45195a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_8728dfacd96bef3f811545e6af45195a&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_236561e98783743080cb37aab28a134f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_236561e98783743080cb37aab28a134f&gt;</span>
<span class="line">{</span>
<span class="line">  Options::_registerSelfObservers::__l2::&lt;lambda_8728dfacd96bef3f811545e6af45195a&gt; forEachGamePadRemapping;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_236561e98783743080cb37aab28a134f&gt;::()::__l2::&lt;lambda_7ecfef012c0561dc8df6ecd46b929d09&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_236561e98783743080cb37aab28a134f&gt;::()::__l2::&lt;lambda_7ecfef012c0561dc8df6ecd46b929d09&gt;</span>
<span class="line">{</span>
<span class="line">  const bool newValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_da79e5db0113a982f326005a0df5fe67&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_da79e5db0113a982f326005a0df5fe67&gt;</span>
<span class="line">{</span>
<span class="line">  Options::_registerSelfObservers::__l2::&lt;lambda_8728dfacd96bef3f811545e6af45195a&gt; forEachGamePadRemapping;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_da79e5db0113a982f326005a0df5fe67&gt;::()::__l2::&lt;lambda_83afd32887477a4a48785321fb5da7ce&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_da79e5db0113a982f326005a0df5fe67&gt;::()::__l2::&lt;lambda_83afd32887477a4a48785321fb5da7ce&gt;</span>
<span class="line">{</span>
<span class="line">  const bool newValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e"><span><code>Options::_registerSelfObservers::__l5::&lt;lambda_54a4fc15e87446e96720d7403f0c0d1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l5::&lt;lambda_54a4fc15e87446e96720d7403f0c0d1e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d"><span><code>Options::_registerSelfObservers::__l5::&lt;lambda_557bf8d5cc55e77fe80dd091c4484c9d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l5::&lt;lambda_557bf8d5cc55e77fe80dd091c4484c9d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_83f555d90a49e0a1b25a0ec40e3fff25&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_83f555d90a49e0a1b25a0ec40e3fff25&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_e30f9b834d00dfc3dd4e96db8a3a5bea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_e30f9b834d00dfc3dd4e96db8a3a5bea&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_64ef34ccf9fab49f51aa313471ca3845&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_64ef34ccf9fab49f51aa313471ca3845&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_c77648a2d5ed4dd75b935a12e6167dc4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_c77648a2d5ed4dd75b935a12e6167dc4&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_153f972500716c6f966a5058a0a6e79d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_153f972500716c6f966a5058a0a6e79d&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073" tabindex="-1"><a class="header-anchor" href="#options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073"><span><code>Options::_registerSelfObservers::__l2::&lt;lambda_e4f03c81be69e05a90c38d508926b073&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerSelfObservers::__l2::&lt;lambda_e4f03c81be69e05a90c38d508926b073&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73" tabindex="-1"><a class="header-anchor" href="#options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73"><span><code>Options::_setOptionCallbacks::__l2::&lt;lambda_2baa0dd320795f4976a4bc2b9c2a8c73&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_setOptionCallbacks::__l2::&lt;lambda_2baa0dd320795f4976a4bc2b9c2a8c73&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed" tabindex="-1"><a class="header-anchor" href="#options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed"><span><code>Options::_setOptionCallbacks::__l2::&lt;lambda_977405555789dcffc289e657addad1ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_setOptionCallbacks::__l2::&lt;lambda_977405555789dcffc289e657addad1ed&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5" tabindex="-1"><a class="header-anchor" href="#options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5"><span><code>Options::_setOptionCallbacks::__l2::&lt;lambda_adeaa5a7f14542839dda6e3dd82859e5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_setOptionCallbacks::__l2::&lt;lambda_adeaa5a7f14542839dda6e3dd82859e5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030" tabindex="-1"><a class="header-anchor" href="#options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030"><span><code>Options::_registerOption::__l2::&lt;lambda_66976bbdee59fb67fe1feb36db4af030&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerOption::__l2::&lt;lambda_66976bbdee59fb67fe1feb36db4af030&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778" tabindex="-1"><a class="header-anchor" href="#options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778"><span><code>Options::{ctor}::__l14::&lt;lambda_fa4403c1a03d594c6268b771c878a778&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::{ctor}::__l14::&lt;lambda_fa4403c1a03d594c6268b771c878a778&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b" tabindex="-1"><a class="header-anchor" href="#options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b"><span><code>Options::_registerChatOptions::__l2::&lt;lambda_4b61316cf59efab0fcdfe3f771b9653b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerChatOptions::__l2::&lt;lambda_4b61316cf59efab0fcdfe3f771b9653b&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerstorageshareptr-fogdefinition" tabindex="-1"><a class="header-anchor" href="#ownerstorageshareptr-fogdefinition"><span><code>OwnerStorageSharePtr&lt;FogDefinition&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerStorageSharePtr&lt;FogDefinition&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;FogDefinition&gt; mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf"><span><code>OwnedDurablesPagingCache::_performBatchedSearch::__l2::&lt;lambda_b134f75ebce8a481f3da8d26d3d4bddf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_performBatchedSearch::__l2::&lt;lambda_b134f75ebce8a481f3da8d26d3d4bddf&gt;</span>
<span class="line">{</span>
<span class="line">  OwnedDurablesPagingCache *const __this;</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;mce::UUID&gt; &gt; packIdBatch;</span>
<span class="line">  std::shared_ptr&lt;OwnedDurablesPagingCache::AggregateResults&gt; sharedResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_709068024ba758914a8b9be0575b359c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_709068024ba758914a8b9be0575b359c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_f79e648a61267cc2eba8fabdbac8c75a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_f79e648a61267cc2eba8fabdbac8c75a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_278f90c39267690d5f8fd7879c8a262a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_278f90c39267690d5f8fd7879c8a262a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_b101d75ce3122f6287edbbe29bc1860e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_b101d75ce3122f6287edbbe29bc1860e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_2352e89429b7cbbe1e610b942d38dc7a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_2352e89429b7cbbe1e610b942d38dc7a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_810c9df654a8be4ff39687782286a8a0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_810c9df654a8be4ff39687782286a8a0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_39e81e94d3d33a0f208a7c22f80c2a20&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_39e81e94d3d33a0f208a7c22f80c2a20&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732"><span><code>OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_fb4fd9557833de1e6e3d537364831732&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::&lt;lambda_fb4fd9557833de1e6e3d537364831732&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculuspostdata" tabindex="-1"><a class="header-anchor" href="#oculuspostdata"><span><code>OculusPostData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OculusPostData</span>
<span class="line">{</span>
<span class="line">  const std::string mOculusAppId;</span>
<span class="line">  const std::string mLanguageCode;</span>
<span class="line">  const std::string mRegionCode;</span>
<span class="line">  const std::string mCustomerPurchaseId;</span>
<span class="line">  const std::string mOculusUserAccessToken;</span>
<span class="line">  const std::string mProductSku;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculusgetserviceticket" tabindex="-1"><a class="header-anchor" href="#oculusgetserviceticket"><span><code>OculusGetServiceTicket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OculusGetServiceTicket : RequestHandler</span>
<span class="line">{</span>
<span class="line">  std::string mClientId;</span>
<span class="line">  mce::UUID mCorrelationId;</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;)&gt; mCallback;</span>
<span class="line">  std::shared_ptr&lt;std::string &gt; mServiceTicketResponse;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculusgetserviceticket-vtbl" tabindex="-1"><a class="header-anchor" href="#oculusgetserviceticket-vtbl"><span><code>OculusGetServiceTicket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OculusGetServiceTicket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculuspostentitlement" tabindex="-1"><a class="header-anchor" href="#oculuspostentitlement"><span><code>OculusPostEntitlement</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OculusPostEntitlement : RequestHandler</span>
<span class="line">{</span>
<span class="line">  OculusPostData mPostData;</span>
<span class="line">  mce::UUID mCorrelationId;</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mCallback;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mSuccess;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oculuspostentitlement-vtbl" tabindex="-1"><a class="header-anchor" href="#oculuspostentitlement-vtbl"><span><code>OculusPostEntitlement_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OculusPostEntitlement_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d" tabindex="-1"><a class="header-anchor" href="#offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d"><span><code>OfferRepository::update::__l25::&lt;lambda_872c40fd9efcbf74f55c70f8d9ffb74d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::update::__l25::&lt;lambda_872c40fd9efcbf74f55c70f8d9ffb74d&gt;</span>
<span class="line">{</span>
<span class="line">  OfferRepository *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8" tabindex="-1"><a class="header-anchor" href="#offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8"><span><code>OfferRepository::update::__l22::&lt;lambda_8ae77870353b265a35b8d175223822f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::update::__l22::&lt;lambda_8ae77870353b265a35b8d175223822f8&gt;</span>
<span class="line">{</span>
<span class="line">  OfferRepository *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da" tabindex="-1"><a class="header-anchor" href="#offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da"><span><code>OfferRepository::beginAsyncInit::__l2::&lt;lambda_fe2a701c6f03e4c80ab08db13674b5da&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::beginAsyncInit::__l2::&lt;lambda_fe2a701c6f03e4c80ab08db13674b5da&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;OfferRepository&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94" tabindex="-1"><a class="header-anchor" href="#offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94"><span><code>OfferRepository::beginAsyncInit::__l2::&lt;lambda_0690b8f7dfc1d762a7c6c615b4ac4b94&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::beginAsyncInit::__l2::&lt;lambda_0690b8f7dfc1d762a7c6c615b4ac4b94&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;OfferRepository&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635" tabindex="-1"><a class="header-anchor" href="#offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635"><span><code>OfferRepository::registerProductQueryAttemptCallback::__l2::&lt;lambda_36626fa5e6a2b1fdb27f2301632d6635&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferRepository::registerProductQueryAttemptCallback::__l2::&lt;lambda_36626fa5e6a2b1fdb27f2301632d6635&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;OfferRepository::ProductQueryAttemptResult&gt; productQueryAttempted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="outofcontroldefinition" tabindex="-1"><a class="header-anchor" href="#outofcontroldefinition"><span><code>OutOfControlDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OutOfControlDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="outofcontrolcomponent" tabindex="-1"><a class="header-anchor" href="#outofcontrolcomponent"><span><code>OutOfControlComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OutOfControlComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseonitemcomponent" tabindex="-1"><a class="header-anchor" href="#onuseonitemcomponent"><span><code>OnUseOnItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnUseOnItemComponent : ItemComponent</span>
<span class="line">{</span>
<span class="line">  DefinitionTrigger mOnUseOn;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseonitemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#onuseonitemcomponent-vtbl"><span><code>OnUseOnItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnUseOnItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemComponent)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);</span>
<span class="line">  void (__fastcall *writeSettings)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(ItemComponent *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription"><span><code>OnFallOnTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OnFallOnTriggerDescription : BlockTriggerDescription&lt;OnFallOnTrigger&gt;</span>
<span class="line">{</span>
<span class="line">  float mMinimumFallDistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-vtbl"><span><code>OnFallOnTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnFallOnTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontrigger" tabindex="-1"><a class="header-anchor" href="#onfallontrigger"><span><code>OnFallOnTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OnFallOnTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">  float mMinimumFallDistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d"><span><code>OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_ff131107eb300bbd2c5caa396b00731d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_ff131107eb300bbd2c5caa396b00731d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021"><span><code>OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_faf42de703e4e5a4c3f6fb1f94959021&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_faf42de703e4e5a4c3f6fb1f94959021&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361"><span><code>OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_b614e50d91add974a8a52f7400d9d361&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_b614e50d91add974a8a52f7400d9d361&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f"><span><code>OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_654a272ba692830cd3f5ce995706e46f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_654a272ba692830cd3f5ce995706e46f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37" tabindex="-1"><a class="header-anchor" href="#onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37"><span><code>OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_c92ebfb32705be8ff950d83fc5ef4c37&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::&lt;lambda_c92ebfb32705be8ff950d83fc5ef4c37&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oninteracttriggerdescription" tabindex="-1"><a class="header-anchor" href="#oninteracttriggerdescription"><span><code>OnInteractTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnInteractTriggerDescription : BlockTriggerDescription&lt;OnInteractTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oninteracttriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#oninteracttriggerdescription-vtbl"><span><code>OnInteractTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnInteractTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oninteracttrigger" tabindex="-1"><a class="header-anchor" href="#oninteracttrigger"><span><code>OnInteractTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnInteractTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplacedtriggerdescription" tabindex="-1"><a class="header-anchor" href="#onplacedtriggerdescription"><span><code>OnPlacedTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlacedTriggerDescription : BlockTriggerDescription&lt;OnPlacedTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplacedtriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onplacedtriggerdescription-vtbl"><span><code>OnPlacedTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnPlacedTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplacedtrigger" tabindex="-1"><a class="header-anchor" href="#onplacedtrigger"><span><code>OnPlacedTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlacedTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerdestroyedtriggerdescription" tabindex="-1"><a class="header-anchor" href="#onplayerdestroyedtriggerdescription"><span><code>OnPlayerDestroyedTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlayerDestroyedTriggerDescription : BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerdestroyedtriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onplayerdestroyedtriggerdescription-vtbl"><span><code>OnPlayerDestroyedTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnPlayerDestroyedTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerdestroyedtrigger" tabindex="-1"><a class="header-anchor" href="#onplayerdestroyedtrigger"><span><code>OnPlayerDestroyedTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlayerDestroyedTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerplacingtriggerdescription" tabindex="-1"><a class="header-anchor" href="#onplayerplacingtriggerdescription"><span><code>OnPlayerPlacingTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlayerPlacingTriggerDescription : BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerplacingtriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onplayerplacingtriggerdescription-vtbl"><span><code>OnPlayerPlacingTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnPlayerPlacingTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onplayerplacingtrigger" tabindex="-1"><a class="header-anchor" href="#onplayerplacingtrigger"><span><code>OnPlayerPlacingTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnPlayerPlacingTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepontriggerdescription" tabindex="-1"><a class="header-anchor" href="#onstepontriggerdescription"><span><code>OnStepOnTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStepOnTriggerDescription : BlockTriggerDescription&lt;OnStepOnTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepontriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onstepontriggerdescription-vtbl"><span><code>OnStepOnTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnStepOnTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepofftriggerdescription" tabindex="-1"><a class="header-anchor" href="#onstepofftriggerdescription"><span><code>OnStepOffTriggerDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStepOffTriggerDescription : BlockTriggerDescription&lt;OnStepOffTrigger&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepofftriggerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#onstepofftriggerdescription-vtbl"><span><code>OnStepOffTriggerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OnStepOffTriggerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepofftrigger" tabindex="-1"><a class="header-anchor" href="#onstepofftrigger"><span><code>OnStepOffTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStepOffTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstepontrigger" tabindex="-1"><a class="header-anchor" href="#onstepontrigger"><span><code>OnStepOnTrigger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStepOnTrigger : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerptrt-shareptrreftraits-fogdefinition" tabindex="-1"><a class="header-anchor" href="#ownerptrt-shareptrreftraits-fogdefinition"><span><code>OwnerPtrT&lt;SharePtrRefTraits&lt;FogDefinition&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerPtrT&lt;SharePtrRefTraits&lt;FogDefinition&gt; &gt; : OwnerStorageSharePtr&lt;FogDefinition&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorannotationcomponent" tabindex="-1"><a class="header-anchor" href="#opendoorannotationcomponent"><span><code>OpenDoorAnnotationComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OpenDoorAnnotationComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  std::queue&lt;BlockPos&gt; mPassedDoorPositions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onignitedefinition" tabindex="-1"><a class="header-anchor" href="#onignitedefinition"><span><code>OnIgniteDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnIgniteDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onfriendlyangerdefinition" tabindex="-1"><a class="header-anchor" href="#onfriendlyangerdefinition"><span><code>OnFriendlyAngerDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnFriendlyAngerDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorannotationsystem" tabindex="-1"><a class="header-anchor" href="#opendoorannotationsystem"><span><code>OpenDoorAnnotationSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OpenDoorAnnotationSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorannotationsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#opendoorannotationsystem-vtbl"><span><code>OpenDoorAnnotationSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OpenDoorAnnotationSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="observingnetworkpeer" tabindex="-1"><a class="header-anchor" href="#observingnetworkpeer"><span><code>ObservingNetworkPeer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ObservingNetworkPeer : NetworkPeer</span>
<span class="line">{</span>
<span class="line">  NetworkIdentifier mId;</span>
<span class="line">  PacketObserver *mPacketObserver;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="observingnetworkpeer-vtbl" tabindex="-1"><a class="header-anchor" href="#observingnetworkpeer-vtbl"><span><code>ObservingNetworkPeer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ObservingNetworkPeer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~NetworkPeer)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);</span>
<span class="line">  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);</span>
<span class="line">  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);</span>
<span class="line">  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);</span>
<span class="line">  void (__fastcall *update)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *flush)(NetworkPeer *this, std::function&lt;void __cdecl(void)&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c" tabindex="-1"><a class="header-anchor" href="#option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c"><span><code>Option::setOverrideSource::__l8::&lt;lambda_b12e3f1582359f44e815cb61e571f14c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Option::setOverrideSource::__l8::&lt;lambda_b12e3f1582359f44e815cb61e571f14c&gt;</span>
<span class="line">{</span>
<span class="line">  Option *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e" tabindex="-1"><a class="header-anchor" href="#option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e"><span><code>Option::setOverrideSource::__l8::&lt;lambda_0267e32cdc5641c5ccc3bda66d66248e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Option::setOverrideSource::__l8::&lt;lambda_0267e32cdc5641c5ccc3bda66d66248e&gt;</span>
<span class="line">{</span>
<span class="line">  Option *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opcommand" tabindex="-1"><a class="header-anchor" href="#opcommand"><span><code>OpCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OpCommand : ServerCommand</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#opcommand-vtbl"><span><code>OpCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OpCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ontargetacquireddefinition" tabindex="-1"><a class="header-anchor" href="#ontargetacquireddefinition"><span><code>OnTargetAcquiredDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnTargetAcquiredDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ontargetescapedefinition" tabindex="-1"><a class="header-anchor" href="#ontargetescapedefinition"><span><code>OnTargetEscapeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnTargetEscapeDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onhurtdefinition" tabindex="-1"><a class="header-anchor" href="#onhurtdefinition"><span><code>OnHurtDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnHurtDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ondeathdefinition" tabindex="-1"><a class="header-anchor" href="#ondeathdefinition"><span><code>OnDeathDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnDeathDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onhurtbyplayerdefinition" tabindex="-1"><a class="header-anchor" href="#onhurtbyplayerdefinition"><span><code>OnHurtByPlayerDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnHurtByPlayerDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstartlandingdefinition" tabindex="-1"><a class="header-anchor" href="#onstartlandingdefinition"><span><code>OnStartLandingDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStartLandingDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onstarttakeoffdefinition" tabindex="-1"><a class="header-anchor" href="#onstarttakeoffdefinition"><span><code>OnStartTakeoffDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnStartTakeoffDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onwakewithownerdefinition" tabindex="-1"><a class="header-anchor" href="#onwakewithownerdefinition"><span><code>OnWakeWithOwnerDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnWakeWithOwnerDefinition : DefinitionTrigger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerflowergoal" tabindex="-1"><a class="header-anchor" href="#offerflowergoal"><span><code>OfferFlowerGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OfferFlowerGoal : Goal</span>
<span class="line">{</span>
<span class="line">  TempEPtr&lt;Mob&gt; mOfferedToMob;</span>
<span class="line">  int mGameTicks;</span>
<span class="line">  IronGolem *mGolem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offerflowergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#offerflowergoal-vtbl"><span><code>OfferFlowerGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OfferFlowerGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelot" tabindex="-1"><a class="header-anchor" href="#ocelot"><span><code>Ocelot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Ocelot : Animal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offhandcontainermodel" tabindex="-1"><a class="header-anchor" href="#offhandcontainermodel"><span><code>OffhandContainerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OffhandContainerModel : ContainerModel</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offhandcontainermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#offhandcontainermodel-vtbl"><span><code>OffhandContainerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OffhandContainerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *postInit)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *releaseResources)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getContainerSize)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *tick)(ContainerModel *this, int);</span>
<span class="line">  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);</span>
<span class="line">  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);</span>
<span class="line">  const std::vector&lt;ItemStack&gt; *(__fastcall *getItems)(ContainerModel *this);</span>
<span class="line">  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);</span>
<span class="line">  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerModel *this);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);</span>
<span class="line">  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);</span>
<span class="line">  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);</span>
<span class="line">  void (__fastcall *switchItemExpando)(ContainerModel *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *_getContainerOffset)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldheightattributes" tabindex="-1"><a class="header-anchor" href="#overworldheightattributes"><span><code>OverworldHeightAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldHeightAttributes</span>
<span class="line">{</span>
<span class="line">  BiomeHeight mHeightParams;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="observerblock" tabindex="-1"><a class="header-anchor" href="#observerblock"><span><code>ObserverBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ObserverBlock : FaceDirectionalBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="observerblock-vtbl" tabindex="-1"><a class="header-anchor" href="#observerblock-vtbl"><span><code>ObserverBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ObserverBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="obsidianblock" tabindex="-1"><a class="header-anchor" href="#obsidianblock"><span><code>ObsidianBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ObsidianBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  bool mIsGlowing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="obsidianblock-vtbl" tabindex="-1"><a class="header-anchor" href="#obsidianblock-vtbl"><span><code>ObsidianBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ObsidianBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oldleafblock" tabindex="-1"><a class="header-anchor" href="#oldleafblock"><span><code>OldLeafBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OldLeafBlock : LeafBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oldleafblock-vtbl" tabindex="-1"><a class="header-anchor" href="#oldleafblock-vtbl"><span><code>OldLeafBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OldLeafBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getExtraResourceItem)(LeafBlock *this, ItemInstance *result, const Block *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oldlogblock" tabindex="-1"><a class="header-anchor" href="#oldlogblock"><span><code>OldLogBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OldLogBlock : LogBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oldlogblock-vtbl" tabindex="-1"><a class="header-anchor" href="#oldlogblock-vtbl"><span><code>OldLogBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OldLogBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oreblock" tabindex="-1"><a class="header-anchor" href="#oreblock"><span><code>OreBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OreBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oreblock-vtbl" tabindex="-1"><a class="header-anchor" href="#oreblock-vtbl"><span><code>OreBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OreBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orefeature" tabindex="-1"><a class="header-anchor" href="#orefeature"><span><code>OreFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OreFeature : IFeature</span>
<span class="line">{</span>
<span class="line">  int mCount;</span>
<span class="line">  float mCountf;</span>
<span class="line">  float mCountfInv;</span>
<span class="line">  BlockDescriptor mBlock;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mMayReplace;</span>
<span class="line">  std::set&lt;Block const *&gt; mMatchBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="orefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#orefeature-vtbl"><span><code>OreFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OreFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmixerlayer" tabindex="-1"><a class="header-anchor" href="#oceanmixerlayer"><span><code>OceanMixerLayer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMixerLayer : MixerLayer&lt;Biome *,Biome *,enum BiomeTemperatureCategory&gt;</span>
<span class="line">{</span>
<span class="line">  Biome *mGenericShallowOcean;</span>
<span class="line">  Biome *mGenericDeepOcean;</span>
<span class="line">  std::vector&lt;std::pair&lt;Biome *,unsigned int&gt;&gt; mShallowOceanBiomes[5];</span>
<span class="line">  std::vector&lt;std::pair&lt;Biome *,unsigned int&gt;&gt; mDeepOceanBiomes[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmixerlayer-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmixerlayer-vtbl"><span><code>OceanMixerLayer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMixerLayer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);</span>
<span class="line">  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);</span>
<span class="line">  LayerDetails::TransferData&lt;Biome *&gt; *(__fastcall *_allocateAndFill)(Layer&lt;Biome *&gt; *this, LayerDetails::TransferData&lt;Biome *&gt; *result, unsigned __int64, int, int, unsigned int, unsigned int);</span>
<span class="line">  void (__fastcall *_fillArea)(MixerLayer&lt;Biome *,Biome *,enum BiomeTemperatureCategory&gt; *this, LayerDetails::WorkingData&lt;Biome *,Biome *&gt; *, int, int, int, int, int, LayerResult&lt;enum BiomeTemperatureCategory&gt;);</span>
<span class="line">  std::tuple&lt;int,int,unsigned int,unsigned int&gt; *(__fastcall *_getAreaRead)(MixerLayer&lt;Biome *,Biome *,enum BiomeTemperatureCategory&gt; *this, std::tuple&lt;int,int,unsigned int,unsigned int&gt; *result, int, int, unsigned int, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6" tabindex="-1"><a class="header-anchor" href="#oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6"><span><code>OceanMixerLayer::{ctor}::__l2::&lt;lambda_12b4dbfeadd327d72f7fe23713e095d6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMixerLayer::{ctor}::__l2::&lt;lambda_12b4dbfeadd327d72f7fe23713e095d6&gt;</span>
<span class="line">{</span>
<span class="line">  OceanMixerLayer *const __this;</span>
<span class="line">  const TagRegistry&lt;IDType&lt;BiomeTagIDType&gt;,IDType&lt;BiomeTagSetIDType&gt; &gt; *tagRegistry;</span>
<span class="line">  const WellKnownBiomeTags *wellKnownBiomeTags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldlighttextureimagebuilder" tabindex="-1"><a class="header-anchor" href="#overworldlighttextureimagebuilder"><span><code>OverworldLightTextureImageBuilder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldLightTextureImageBuilder : BaseLightTextureImageBuilder</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldlighttextureimagebuilder-vtbl" tabindex="-1"><a class="header-anchor" href="#overworldlighttextureimagebuilder-vtbl"><span><code>OverworldLightTextureImageBuilder_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OverworldLightTextureImageBuilder_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseLightTextureImageBuilder)(BaseLightTextureImageBuilder *this);</span>
<span class="line">  void (__fastcall *init)(BaseLightTextureImageBuilder *this, Dimension *);</span>
<span class="line">  bool (__fastcall *buildImage)(BaseLightTextureImageBuilder *this, const BaseLightData *, mce::Image *, unsigned int, float, float, bool);</span>
<span class="line">  void (__fastcall *getModifiedBlockBrightnessColor)(BaseLightTextureImageBuilder *this, const BlockPos *, const Block *, const Brightness *, BrightnessPair *);</span>
<span class="line">  std::unique_ptr&lt;BaseLightData&gt; *(__fastcall *createBaseLightTextureData)(BaseLightTextureImageBuilder *this, std::unique_ptr&lt;BaseLightData&gt; *result, IClientInstance *, const BaseLightData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotattackdefinition" tabindex="-1"><a class="header-anchor" href="#ocelotattackdefinition"><span><code>OcelotAttackDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OcelotAttackDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mCooldownTime;</span>
<span class="line">  float mMaxRotationX;</span>
<span class="line">  float mMaxHeadRotationY;</span>
<span class="line">  float mMaxDistance;</span>
<span class="line">  float mMaxSneakRange;</span>
<span class="line">  float mMaxSprintRange;</span>
<span class="line">  float mReachMultiplier;</span>
<span class="line">  float mSneakSpeedModifier;</span>
<span class="line">  float mSprintSpeedModifier;</span>
<span class="line">  float mWalkSpeedModifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotattackdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#ocelotattackdefinition-vtbl"><span><code>OcelotAttackDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OcelotAttackDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotattackgoal" tabindex="-1"><a class="header-anchor" href="#ocelotattackgoal"><span><code>OcelotAttackGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OcelotAttackGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mAttackTicks;</span>
<span class="line">  int mCooldownTicks;</span>
<span class="line">  float mMaxRotationX;</span>
<span class="line">  float mMaxHeadRotationY;</span>
<span class="line">  float mMaxDistance;</span>
<span class="line">  float mMaxSneakRange;</span>
<span class="line">  float mMaxSprintRange;</span>
<span class="line">  float mReachMultiplier;</span>
<span class="line">  float mSneakSpeedModifier;</span>
<span class="line">  float mSprintSpeedModifier;</span>
<span class="line">  float mWalkSpeedModifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotattackgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#ocelotattackgoal-vtbl"><span><code>OcelotAttackGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OcelotAttackGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotsitonblockgoal" tabindex="-1"><a class="header-anchor" href="#ocelotsitonblockgoal"><span><code>OcelotSitOnBlockGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OcelotSitOnBlockGoal : BaseMoveToBlockGoal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelotsitonblockgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#ocelotsitonblockgoal-vtbl"><span><code>OcelotSitOnBlockGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OcelotSitOnBlockGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorgoal" tabindex="-1"><a class="header-anchor" href="#opendoorgoal"><span><code>OpenDoorGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OpenDoorGoal : DoorInteractGoal</span>
<span class="line">{</span>
<span class="line">  bool mCloseDoor;</span>
<span class="line">  int mForgetTime;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opendoorgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#opendoorgoal-vtbl"><span><code>OpenDoorGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OpenDoorGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerhurtbytargetgoal" tabindex="-1"><a class="header-anchor" href="#ownerhurtbytargetgoal"><span><code>OwnerHurtByTargetGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnerHurtByTargetGoal : TargetGoal</span>
<span class="line">{</span>
<span class="line">  TempEPtr&lt;Mob&gt; mOwnerHurtBy;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerhurtbytargetgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#ownerhurtbytargetgoal-vtbl"><span><code>OwnerHurtByTargetGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OwnerHurtByTargetGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerhurttargetgoal" tabindex="-1"><a class="header-anchor" href="#ownerhurttargetgoal"><span><code>OwnerHurtTargetGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OwnerHurtTargetGoal : TargetGoal</span>
<span class="line">{</span>
<span class="line">  TempEPtr&lt;Mob&gt; mLastOwnerHurt;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mTimestamp;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownerhurttargetgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#ownerhurttargetgoal-vtbl"><span><code>OwnerHurtTargetGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OwnerHurtTargetGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentstart" tabindex="-1"><a class="header-anchor" href="#oceanmonumentstart"><span><code>OceanMonumentStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OceanMonumentStart : StructureStart</span>
<span class="line">{</span>
<span class="line">  bool isCreated;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentstart-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentstart-vtbl"><span><code>OceanMonumentStart_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentStart_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureStart)(StructureStart *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  bool (__fastcall *isValid)(StructureStart *this);</span>
<span class="line">  StructureFeatureType (__fastcall *getType)(StructureStart *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinstart" tabindex="-1"><a class="header-anchor" href="#oceanruinstart"><span><code>OceanRuinStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OceanRuinStart : StructureStart</span>
<span class="line">{</span>
<span class="line">  OceanRuinConfiguration mConfig;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinstart-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanruinstart-vtbl"><span><code>OceanRuinStart_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanRuinStart_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureStart)(StructureStart *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  bool (__fastcall *isValid)(StructureStart *this);</span>
<span class="line">  StructureFeatureType (__fastcall *getType)(StructureStart *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldgenerator-threaddata" tabindex="-1"><a class="header-anchor" href="#overworldgenerator-threaddata"><span><code>OverworldGenerator::ThreadData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OverworldGenerator::ThreadData</span>
<span class="line">{</span>
<span class="line">  std::array&lt;float,1024&gt; buffer;</span>
<span class="line">  std::array&lt;float,256&gt; depthBuffer;</span>
<span class="line">  std::array&lt;float,256&gt; dataBuffer;</span>
<span class="line">  std::array&lt;Block const *,32768&gt; blockBuffer;</span>
<span class="line">  float *fi;</span>
<span class="line">  float *fis;</span>
<span class="line">  Random random;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentfeature" tabindex="-1"><a class="header-anchor" href="#oceanmonumentfeature"><span><code>OceanMonumentFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentFeature : StructureFeature</span>
<span class="line">{</span>
<span class="line">  int mMonumentSpacing;</span>
<span class="line">  int mMinMonumentSeparation;</span>
<span class="line">  std::vector&lt;int&gt; allowedBiomes;</span>
<span class="line">  std::vector&lt;int&gt; allowedSpawnBiomes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentfeature-vtbl"><span><code>OceanMonumentFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureFeature)(StructureFeature *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);</span>
<span class="line">  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);</span>
<span class="line">  std::unique_ptr&lt;StructureStart&gt; *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr&lt;StructureStart&gt; *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);</span>
<span class="line">  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);</span>
<span class="line">  std::vector&lt;BlockPos&gt; *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector&lt;BlockPos&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldgenerator" tabindex="-1"><a class="header-anchor" href="#overworldgenerator"><span><code>OverworldGenerator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldGenerator : ChunkSource, WorldGenerator</span>
<span class="line">{</span>
<span class="line">  const bool legacyDevice;</span>
<span class="line">  BeardKernel mBeardKernel;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; minLimitPerlinNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; maxLimitPerlinNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; mainPerlinNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinSimplexNoise&gt; surfaceNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; scaleNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; depthNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; forestNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinSimplexNoise&gt; mMaterialAdjNoise;</span>
<span class="line">  float biomeWeights[25];</span>
<span class="line">  __declspec(align(8)) Bedrock::Threading::InstancedThreadLocal&lt;OverworldGenerator::ThreadData,std::allocator&lt;OverworldGenerator::ThreadData&gt; &gt; generatorHelpersPool;</span>
<span class="line">  VillageFeature villageFeature;</span>
<span class="line">  StrongholdFeature strongholdFeature;</span>
<span class="line">  RandomScatteredLargeFeature scatteredFeature;</span>
<span class="line">  MineshaftFeature mineshaftFeature;</span>
<span class="line">  MonsterRoomFeature monsterRoomFeature;</span>
<span class="line">  OceanMonumentFeature oceanMonumentFeature;</span>
<span class="line">  OceanRuinFeature oceanRuinFeature;</span>
<span class="line">  WoodlandMansionFeature woodlandMansionFeature;</span>
<span class="line">  ShipwreckFeature shipwreckFeature;</span>
<span class="line">  RuinedPortalFeature ruinedPortalFeature;</span>
<span class="line">  BuriedTreasureFeature buriedChestFeature;</span>
<span class="line">  LargeCaveFeature caveFeature;</span>
<span class="line">  CanyonFeature canyonFeature;</span>
<span class="line">  UnderwaterLargeCaveFeature underwaterCaveFeature;</span>
<span class="line">  UnderwaterCanyonFeature underwaterCanyonFeature;</span>
<span class="line">  PillagerOutpostFeature pillagerOutpostFeature;</span>
<span class="line">  std::shared_ptr&lt;Layer&lt;Biome *&gt; const &gt; mBlockResolutionLayer;</span>
<span class="line">  std::shared_ptr&lt;Layer&lt;Biome *&gt; const &gt; m4x4ResolutionLayer;</span>
<span class="line">  std::shared_ptr&lt;BiomeSourceGetBiomeCache&gt; mBiomeSourceCache;</span>
<span class="line">  const Biome *mBiomeOverride;</span>
<span class="line">  std::shared_mutex mTryGetHeightMutex;</span>
<span class="line">  std::unordered_map&lt;BlockPos,int&gt; mHeightCache;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinfeature" tabindex="-1"><a class="header-anchor" href="#oceanruinfeature"><span><code>OceanRuinFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanRuinFeature : StructureFeature</span>
<span class="line">{</span>
<span class="line">  int mRuinSpacing;</span>
<span class="line">  int mMinRuinSeparation;</span>
<span class="line">  std::vector&lt;int&gt; allowedBiomes;</span>
<span class="line">  OverworldGenerator *mLevelSource;</span>
<span class="line">  OceanMonumentFeature *mMonument;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanruinfeature-vtbl"><span><code>OceanRuinFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanRuinFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureFeature)(StructureFeature *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);</span>
<span class="line">  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);</span>
<span class="line">  std::unique_ptr&lt;StructureStart&gt; *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr&lt;StructureStart&gt; *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);</span>
<span class="line">  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);</span>
<span class="line">  std::vector&lt;BlockPos&gt; *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector&lt;BlockPos&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldgenerator-vtbl" tabindex="-1"><a class="header-anchor" href="#overworldgenerator-vtbl"><span><code>OverworldGenerator_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OverworldGenerator_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkSource)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *shutdown)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isShutdownDone)(ChunkSource *this);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, Random *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);</span>
<span class="line">  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);</span>
<span class="line">  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr&lt;LevelChunk,LevelChunkFinalDeleter&gt;);</span>
<span class="line">  void (__fastcall *compact)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *flushPendingWrites)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getChunkMap)(ChunkSource *this);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getStorage)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *clearDeletedEntities)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set&lt;AutomaticID&lt;Dimension,int&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *canCreateViews)(ChunkSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworlddimension" tabindex="-1"><a class="header-anchor" href="#overworlddimension"><span><code>OverworldDimension</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldDimension : Dimension</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldbrightnessramp" tabindex="-1"><a class="header-anchor" href="#overworldbrightnessramp"><span><code>OverworldBrightnessRamp</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldBrightnessRamp : DimensionBrightnessRamp</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldbrightnessramp-vtbl" tabindex="-1"><a class="header-anchor" href="#overworldbrightnessramp-vtbl"><span><code>OverworldBrightnessRamp_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OverworldBrightnessRamp_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DimensionBrightnessRamp)(DimensionBrightnessRamp *this);</span>
<span class="line">  void (__fastcall *buildBrightnessRamp)(DimensionBrightnessRamp *this);</span>
<span class="line">  float (__fastcall *getBaseAmbientValue)(DimensionBrightnessRamp *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentpiece" tabindex="-1"><a class="header-anchor" href="#oceanmonumentpiece"><span><code>OceanMonumentPiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentPiece : StructurePiece</span>
<span class="line">{</span>
<span class="line">  bool mDoFill;</span>
<span class="line">  std::shared_ptr&lt;RoomDefinition&gt; mRoomDefinition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentpiece-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentpiece-vtbl"><span><code>OceanMonumentPiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentPiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumententryroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumententryroom"><span><code>OceanMonumentEntryRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentEntryRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumententryroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumententryroom-vtbl"><span><code>OceanMonumentEntryRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentEntryRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentsimpleroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentsimpleroom"><span><code>OceanMonumentSimpleRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) OceanMonumentSimpleRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">  int mMainDesign;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentsimpleroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentsimpleroom-vtbl"><span><code>OceanMonumentSimpleRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentSimpleRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentsimpletoproom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentsimpletoproom"><span><code>OceanMonumentSimpleTopRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentSimpleTopRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentsimpletoproom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentsimpletoproom-vtbl"><span><code>OceanMonumentSimpleTopRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentSimpleTopRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoubleyroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoubleyroom"><span><code>OceanMonumentDoubleYRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentDoubleYRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoubleyroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoubleyroom-vtbl"><span><code>OceanMonumentDoubleYRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentDoubleYRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublexroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublexroom"><span><code>OceanMonumentDoubleXRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentDoubleXRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublexroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublexroom-vtbl"><span><code>OceanMonumentDoubleXRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentDoubleXRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublezroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublezroom"><span><code>OceanMonumentDoubleZRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentDoubleZRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublezroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublezroom-vtbl"><span><code>OceanMonumentDoubleZRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentDoubleZRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublexyroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublexyroom"><span><code>OceanMonumentDoubleXYRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentDoubleXYRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoublexyroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoublexyroom-vtbl"><span><code>OceanMonumentDoubleXYRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentDoubleXYRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoubleyzroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoubleyzroom"><span><code>OceanMonumentDoubleYZRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentDoubleYZRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentdoubleyzroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentdoubleyzroom-vtbl"><span><code>OceanMonumentDoubleYZRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentDoubleYZRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentcoreroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentcoreroom"><span><code>OceanMonumentCoreRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentCoreRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentcoreroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentcoreroom-vtbl"><span><code>OceanMonumentCoreRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentCoreRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentwingroom" tabindex="-1"><a class="header-anchor" href="#oceanmonumentwingroom"><span><code>OceanMonumentWingRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) OceanMonumentWingRoom : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">  int mMainDesign;</span>
<span class="line">  bool mIsRightWing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentwingroom-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentwingroom-vtbl"><span><code>OceanMonumentWingRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentWingRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentpenthouse" tabindex="-1"><a class="header-anchor" href="#oceanmonumentpenthouse"><span><code>OceanMonumentPenthouse</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanMonumentPenthouse : OceanMonumentPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanmonumentpenthouse-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanmonumentpenthouse-vtbl"><span><code>OceanMonumentPenthouse_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanMonumentPenthouse_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinpieces" tabindex="-1"><a class="header-anchor" href="#oceanruinpieces"><span><code>OceanRuinPieces</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanRuinPieces</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinpieces-oceanruinpiece" tabindex="-1"><a class="header-anchor" href="#oceanruinpieces-oceanruinpiece"><span><code>OceanRuinPieces::OceanRuinPiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OceanRuinPieces::OceanRuinPiece : TemplateStructurePiece</span>
<span class="line">{</span>
<span class="line">  StructureManager *mStructureManager;</span>
<span class="line">  std::string mTemplateName;</span>
<span class="line">  OceanTempCategory mBiomeType;</span>
<span class="line">  float mIntegrity;</span>
<span class="line">  bool mIsLarge;</span>
<span class="line">  Rotation mRotation;</span>
<span class="line">  BlockPos mPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oceanruinpieces-oceanruinpiece-vtbl" tabindex="-1"><a class="header-anchor" href="#oceanruinpieces-oceanruinpiece-vtbl"><span><code>OceanRuinPieces::OceanRuinPiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OceanRuinPieces::OceanRuinPiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *_handleDataMarker)(TemplateStructurePiece *this, const std::string *, const BlockPos *, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oobject" tabindex="-1"><a class="header-anchor" href="#oobject"><span><code>Oobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) Oobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  char *buf;</span>
<span class="line">  __int64 pos;</span>
<span class="line">  __int64 string_size;</span>
<span class="line">  __int64 buf_size;</span>
<span class="line">  int softspace;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17" tabindex="-1"><a class="header-anchor" href="#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17"><span><code>Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;::()::__l2::&lt;lambda_d80c656ec8d59dbc8c64dfb75c527a17&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;::()::__l2::&lt;lambda_d80c656ec8d59dbc8c64dfb75c527a17&gt;</span>
<span class="line">{</span>
<span class="line">  std::map&lt;std::string,std::string&gt; *propertyMap;</span>
<span class="line">  VRHUDPosition *newValue;</span>
<span class="line">  bool *oldValueFound;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a" tabindex="-1"><a class="header-anchor" href="#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a"><span><code>Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">  std::map&lt;std::string,std::string&gt; *propertyMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c" tabindex="-1"><a class="header-anchor" href="#options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c"><span><code>Options::_loadSpecialOptions::__l2::&lt;lambda_5f5d8b8987f054e6094d54779a8bba1c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadSpecialOptions::__l2::&lt;lambda_5f5d8b8987f054e6094d54779a8bba1c&gt;</span>
<span class="line">{</span>
<span class="line">  Options *const __this;</span>
<span class="line">  std::map&lt;std::string,std::string&gt; *propertyMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5" tabindex="-1"><a class="header-anchor" href="#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5"><span><code>Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;::()::__l2::&lt;lambda_e1c73b97ad6c18a48e39f5468b8a33d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_loadSpecialOptions::__l2::&lt;lambda_7bb255bdacde2a2b702d5f80ab936b7a&gt;::()::__l2::&lt;lambda_e1c73b97ad6c18a48e39f5468b8a33d5&gt;</span>
<span class="line">{</span>
<span class="line">  std::map&lt;std::string,std::string&gt; *propertyMap;</span>
<span class="line">  VRStickyMining *newValue;</span>
<span class="line">  bool *oldValueFound;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed" tabindex="-1"><a class="header-anchor" href="#options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed"><span><code>Options::_saveInputMapping::__l2::&lt;lambda_065485d2bbf015adaf440567a3df3aed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_saveInputMapping::__l2::&lt;lambda_065485d2bbf015adaf440567a3df3aed&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *settingsVec;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab" tabindex="-1"><a class="header-anchor" href="#options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab"><span><code>Options::_registerOptions::__l2::&lt;lambda_e2061f6fc1dbebba1e5f7aa7386008ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Options::_registerOptions::__l2::&lt;lambda_e2061f6fc1dbebba1e5f7aa7386008ab&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51" tabindex="-1"><a class="header-anchor" href="#owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51"><span><code>OwnedDurablesPagingCache::_performBatchedSearch::__l2::&lt;lambda_0c82040d1ea396f7bd80ce9a5fa8db51&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OwnedDurablesPagingCache::_performBatchedSearch::__l2::&lt;lambda_0c82040d1ea396f7bd80ce9a5fa8db51&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal" tabindex="-1"><a class="header-anchor" href="#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal"><span><code>OnUseOnItemComponent::useOn::__l2::&lt;lambda_617c656cd3c75210e2a62aa9582f3625&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnUseOnItemComponent::useOn::__l2::&lt;lambda_617c656cd3c75210e2a62aa9582f3625&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625" tabindex="-1"><a class="header-anchor" href="#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625"><span><code>OnUseOnItemComponent::useOn::__l2::&lt;lambda_617c656cd3c75210e2a62aa9582f3625&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OnUseOnItemComponent::useOn::__l2::&lt;lambda_617c656cd3c75210e2a62aa9582f3625&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal" tabindex="-1"><a class="header-anchor" href="#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal"><span><code>Ocelot::updateEntitySpecificMolangVariables::__l2::&lt;lambda_d37c0c731b3f334c5f417233dbc1aa03&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Ocelot::updateEntitySpecificMolangVariables::__l2::&lt;lambda_d37c0c731b3f334c5f417233dbc1aa03&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03" tabindex="-1"><a class="header-anchor" href="#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03"><span><code>Ocelot::updateEntitySpecificMolangVariables::__l2::&lt;lambda_d37c0c731b3f334c5f417233dbc1aa03&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Ocelot::updateEntitySpecificMolangVariables::__l2::&lt;lambda_d37c0c731b3f334c5f417233dbc1aa03&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f" tabindex="-1"><a class="header-anchor" href="#overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f"><span><code>OverworldGenerator::_makeLayers::__l2::&lt;lambda_00d2029390727aff6abfa69bf88b314f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj OverworldGenerator::_makeLayers::__l2::&lt;lambda_00d2029390727aff6abfa69bf88b314f&gt;</span>
<span class="line">{</span>
<span class="line">  const BiomeRegistry *biomeRegistry;</span>
<span class="line">  const AutomaticID&lt;Dimension,int&gt; *id;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ocelot-vtbl" tabindex="-1"><a class="header-anchor" href="#ocelot-vtbl"><span><code>Ocelot_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Ocelot_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overworlddimension-vtbl" tabindex="-1"><a class="header-anchor" href="#overworlddimension-vtbl"><span><code>OverworldDimension_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ OverworldDimension_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);</span>
<span class="line">  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);</span>
<span class="line">  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);</span>
<span class="line">  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr&lt;BlockActor&gt;);</span>
<span class="line">  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);</span>
<span class="line">  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);</span>
<span class="line">  void (__fastcall *allChanged)(LevelListener *this);</span>
<span class="line">  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);</span>
<span class="line">  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);</span>
<span class="line">  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);</span>
<span class="line">  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);</span>
<span class="line">  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);</span>
<span class="line">  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);</span>
<span class="line">  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);</span>
<span class="line">  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);</span>
<span class="line">  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);</span>
<span class="line">  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);</span>
<span class="line">  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);</span>
<span class="line">  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);</span>
<span class="line">  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);</span>
<span class="line">  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);</span>
<span class="line">  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);</span>
<span class="line">  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);</span>
<span class="line">  void (__fastcall *stopAllSounds)(LevelListener *this);</span>
<span class="line">  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);</span>
<span class="line">  void (__fastcall *playerListChanged)(LevelListener *this);</span>
<span class="line">  void (__fastcall *init)(Dimension *this);</span>
<span class="line">  void (__fastcall *tick)(Dimension *this);</span>
<span class="line">  void (__fastcall *tickRedstone)(Dimension *this);</span>
<span class="line">  std::tuple&lt;std::unique_ptr&lt;ChunkSource&gt;,WorldGenerator *&gt; *(__fastcall *createGenerator)(Dimension *this, std::tuple&lt;std::unique_ptr&lt;ChunkSource&gt;,WorldGenerator *&gt; *result);</span>
<span class="line">  void (__fastcall *upgradeLevelChunk)(Dimension *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *fixWallChunk)(Dimension *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  bool (__fastcall *isNaturalDimension)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isValidSpawn)(Dimension *this, int, int);</span>
<span class="line">  mce::Color *(__fastcall *getBrightnessDependentFogColor)(Dimension *this, mce::Color *result, const mce::Color *, float);</span>
<span class="line">  float (__fastcall *getMaxFogEnd)(Dimension *this);</span>
<span class="line">  float (__fastcall *getMaxFogStart)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isFoggyAt)(Dimension *this, int, int);</span>
<span class="line">  __int16 (__fastcall *getCloudHeight)(Dimension *this);</span>
<span class="line">  int (__fastcall *getDefaultBiome)(Dimension *this);</span>
<span class="line">  bool (__fastcall *mayRespawnViaBed)(Dimension *this);</span>
<span class="line">  bool (__fastcall *hasGround)(Dimension *this);</span>
<span class="line">  BlockPos *(__fastcall *getSpawnPos)(Dimension *this, BlockPos *result);</span>
<span class="line">  int (__fastcall *getSpawnYPosition)(Dimension *this);</span>
<span class="line">  bool (__fastcall *hasBedrockFog)(Dimension *this);</span>
<span class="line">  float (__fastcall *getClearColorScale)(Dimension *this);</span>
<span class="line">  bool (__fastcall *showSky)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isDay)(Dimension *this);</span>
<span class="line">  float (__fastcall *getTimeOfDay)(Dimension *this, int, float);</span>
<span class="line">  float (__fastcall *getSunIntensity)(Dimension *this, float, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *forceCheckAllNeighChunkSavedStat)(Dimension *this);</span>
<span class="line">  Vec3 *(__fastcall *translatePosAcrossDimension)(Dimension *this, Vec3 *result, const Vec3 *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  void (__fastcall *sendBroadcast)(Dimension *this, const Packet *, Player *);</span>
<span class="line">  bool (__fastcall *is2DPositionRelevantForPlayer)(Dimension *this, const BlockPos *, Player *);</span>
<span class="line">  bool (__fastcall *isEntityRelevantForPlayer)(Dimension *this, Player *, const Actor *);</span>
<span class="line">  BaseLightTextureImageBuilder *(__fastcall *getLightTextureImageBuilder)(Dimension *this);</span>
<span class="line">  const DimensionBrightnessRamp *(__fastcall *getBrightnessRamp)(Dimension *this);</span>
<span class="line">  void (__fastcall *startLeaveGame)(Dimension *this);</span>
<span class="line">  std::unique_ptr&lt;ChunkBuildOrderPolicyBase&gt; *(__fastcall *_createChunkBuildOrderPolicy)(Dimension *this, std::unique_ptr&lt;ChunkBuildOrderPolicyBase&gt; *result);</span>
<span class="line">  void (__fastcall *_upgradeOldLimboEntity)(Dimension *this, CompoundTag *, LimboEntitiesVersion);</span>
<span class="line">  std::unique_ptr&lt;ChunkSource&gt; *(__fastcall *_wrapStorageForVersionCompatibility)(Dimension *this, std::unique_ptr&lt;ChunkSource&gt; *result, std::unique_ptr&lt;ChunkSource&gt;, StorageVersion);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,591),t=[i];function c(o,d){return n(),e("div",null,t)}const p=s(l,[["render",c],["__file","O.html.vue"]]),v=JSON.parse('{"path":"/1.16.201/structure/O.html","title":"O","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"OptionConstants::<lambda_494f639503c40febe0dbb14372a57cbf>","slug":"optionconstants-lambda-494f639503c40febe0dbb14372a57cbf","link":"#optionconstants-lambda-494f639503c40febe0dbb14372a57cbf","children":[]},{"level":3,"title":"OptionConstants::<lambda_631366cfcd28947db7d3be15dfb1611c>","slug":"optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c","link":"#optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c","children":[]},{"level":3,"title":"OptionConstants::<lambda_f6873ee4037cf69a5750303b33811eac>","slug":"optionconstants-lambda-f6873ee4037cf69a5750303b33811eac","link":"#optionconstants-lambda-f6873ee4037cf69a5750303b33811eac","children":[]},{"level":3,"title":"OptionConstants::<lambda_ac8f171e94addf05b263c93e72bdf2a9>","slug":"optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9","link":"#optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9","children":[]},{"level":3,"title":"Option","slug":"option","link":"#option","children":[]},{"level":3,"title":"optional_ref<TerrainMaterialVariationManager const >","slug":"optional-ref-terrainmaterialvariationmanager-const","link":"#optional-ref-terrainmaterialvariationmanager-const","children":[]},{"level":3,"title":"optional_ref<rendergraph::FrameBufferBuilder>","slug":"optional-ref-rendergraph-framebufferbuilder","link":"#optional-ref-rendergraph-framebufferbuilder","children":[]},{"level":3,"title":"OptionConstants::<lambda_0e1acb4e778a483f08cd62409c6f59ee>","slug":"optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee","link":"#optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee","children":[]},{"level":3,"title":"OwnerPtrT<EntityRegistryRefTraits>","slug":"ownerptrt-entityregistryreftraits","link":"#ownerptrt-entityregistryreftraits","children":[]},{"level":3,"title":"OwnerStorageSharePtr<EntityRegistryOwned>","slug":"ownerstorageshareptr-entityregistryowned","link":"#ownerstorageshareptr-entityregistryowned","children":[]},{"level":3,"title":"OwnerPtrT<EntityRefTraits>","slug":"ownerptrt-entityreftraits","link":"#ownerptrt-entityreftraits","children":[]},{"level":3,"title":"OwnerStorageEntity","slug":"ownerstorageentity","link":"#ownerstorageentity","children":[]},{"level":3,"title":"OwnerStorageEntity::EntityContextOwned","slug":"ownerstorageentity-entitycontextowned","link":"#ownerstorageentity-entitycontextowned","children":[]},{"level":3,"title":"optional_ref<Localization const >","slug":"optional-ref-localization-const","link":"#optional-ref-localization-const","children":[]},{"level":3,"title":"OptionSaveDeferral","slug":"optionsavedeferral","link":"#optionsavedeferral","children":[]},{"level":3,"title":"ObjModel","slug":"objmodel","link":"#objmodel","children":[]},{"level":3,"title":"optional_ref<rendergraph::Pass>","slug":"optional-ref-rendergraph-pass","link":"#optional-ref-rendergraph-pass","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::{ctor}::__l2::<lambda_28a90fe2ce902a855825d33515958818>","slug":"owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818","link":"#owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::search::__l2::<lambda_c62e108c2369350517fae1efb94c51cb>","slug":"owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb","link":"#owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb","children":[]},{"level":3,"title":"OwnerPtrT<SharePtrRefTraits<FogDefinition const > >","slug":"ownerptrt-shareptrreftraits-fogdefinition-const","link":"#ownerptrt-shareptrreftraits-fogdefinition-const","children":[]},{"level":3,"title":"OwnerStorageSharePtr<FogDefinition const >","slug":"ownerstorageshareptr-fogdefinition-const","link":"#ownerstorageshareptr-fogdefinition-const","children":[]},{"level":3,"title":"OwnedItemStackRequestScope","slug":"owneditemstackrequestscope","link":"#owneditemstackrequestscope","children":[]},{"level":3,"title":"OptionalString","slug":"optionalstring","link":"#optionalstring","children":[]},{"level":3,"title":"OSInformation","slug":"osinformation","link":"#osinformation","children":[]},{"level":3,"title":"OverworldGenerator::OverridableBiomeSourceHelper","slug":"overworldgenerator-overridablebiomesourcehelper","link":"#overworldgenerator-overridablebiomesourcehelper","children":[]},{"level":3,"title":"OceanRuinConfiguration","slug":"oceanruinconfiguration","link":"#oceanruinconfiguration","children":[]},{"level":3,"title":"OwnerPtrT<SharePtrRefTraits<PerlinSimplexNoise> >","slug":"ownerptrt-shareptrreftraits-perlinsimplexnoise","link":"#ownerptrt-shareptrreftraits-perlinsimplexnoise","children":[]},{"level":3,"title":"OwnerStorageSharePtr<PerlinSimplexNoise>","slug":"ownerstorageshareptr-perlinsimplexnoise","link":"#ownerstorageshareptr-perlinsimplexnoise","children":[]},{"level":3,"title":"OutputString","slug":"outputstring","link":"#outputstring","children":[]},{"level":3,"title":"OnScreenTextureAnimationPacket","slug":"onscreentextureanimationpacket","link":"#onscreentextureanimationpacket","children":[]},{"level":3,"title":"OnScreenTextureAnimationPacket_vtbl","slug":"onscreentextureanimationpacket-vtbl","link":"#onscreentextureanimationpacket-vtbl","children":[]},{"level":3,"title":"Option_vtbl","slug":"option-vtbl","link":"#option-vtbl","children":[]},{"level":3,"title":"Options","slug":"options","link":"#options","children":[]},{"level":3,"title":"OptionValueInterface","slug":"optionvalueinterface","link":"#optionvalueinterface","children":[]},{"level":3,"title":"OptionValueInterface_vtbl","slug":"optionvalueinterface-vtbl","link":"#optionvalueinterface-vtbl","children":[]},{"level":3,"title":"OptionsObserver","slug":"optionsobserver","link":"#optionsobserver","children":[]},{"level":3,"title":"OptionsObserver_vtbl","slug":"optionsobserver-vtbl","link":"#optionsobserver-vtbl","children":[]},{"level":3,"title":"Offer","slug":"offer","link":"#offer","children":[]},{"level":3,"title":"ObjectiveCriteria","slug":"objectivecriteria","link":"#objectivecriteria","children":[]},{"level":3,"title":"Objective","slug":"objective","link":"#objective","children":[]},{"level":3,"title":"OfferCollectionComponent","slug":"offercollectioncomponent","link":"#offercollectioncomponent","children":[]},{"level":3,"title":"OfferCollectionComponent_vtbl","slug":"offercollectioncomponent-vtbl","link":"#offercollectioncomponent-vtbl","children":[]},{"level":3,"title":"OwnedDurablesPagingCache","slug":"owneddurablespagingcache","link":"#owneddurablespagingcache","children":[]},{"level":3,"title":"optional_ref<rendergraph::ResourceViewInterface const >","slug":"optional-ref-rendergraph-resourceviewinterface-const","link":"#optional-ref-rendergraph-resourceviewinterface-const","children":[]},{"level":3,"title":"optional_ref<rendergraph::ResourceTargetInterface const >","slug":"optional-ref-rendergraph-resourcetargetinterface-const","link":"#optional-ref-rendergraph-resourcetargetinterface-const","children":[]},{"level":3,"title":"OverlayTextureMap","slug":"overlaytexturemap","link":"#overlaytexturemap","children":[]},{"level":3,"title":"optional_ref<PlayerRenderView>","slug":"optional-ref-playerrenderview","link":"#optional-ref-playerrenderview","children":[]},{"level":3,"title":"optional_ref<PlayerRenderView::LegacyPlayerRenderPass>","slug":"optional-ref-playerrenderview-legacyplayerrenderpass","link":"#optional-ref-playerrenderview-legacyplayerrenderpass","children":[]},{"level":3,"title":"optional_ref<mce::RenderStage>","slug":"optional-ref-mce-renderstage","link":"#optional-ref-mce-renderstage","children":[]},{"level":3,"title":"optional_ref<CommandListQueue>","slug":"optional-ref-commandlistqueue","link":"#optional-ref-commandlistqueue","children":[]},{"level":3,"title":"OVRPlatformMessageHandler","slug":"ovrplatformmessagehandler","link":"#ovrplatformmessagehandler","children":[]},{"level":3,"title":"OVRPlatformMessageHandler_vtbl","slug":"ovrplatformmessagehandler-vtbl","link":"#ovrplatformmessagehandler-vtbl","children":[]},{"level":3,"title":"OculusPlatformMessagePump","slug":"oculusplatformmessagepump","link":"#oculusplatformmessagepump","children":[]},{"level":3,"title":"OfferRepository::ProductQueryAttemptResult","slug":"offerrepository-productqueryattemptresult","link":"#offerrepository-productqueryattemptresult","children":[]},{"level":3,"title":"OfferRepository::RealmsOfferTypeContainer","slug":"offerrepository-realmsoffertypecontainer","link":"#offerrepository-realmsoffertypecontainer","children":[]},{"level":3,"title":"OculusSyncService","slug":"oculussyncservice","link":"#oculussyncservice","children":[]},{"level":3,"title":"OculusSyncService_vtbl","slug":"oculussyncservice-vtbl","link":"#oculussyncservice-vtbl","children":[]},{"level":3,"title":"OfferRepository","slug":"offerrepository","link":"#offerrepository","children":[]},{"level":3,"title":"OfferRepository_vtbl","slug":"offerrepository-vtbl","link":"#offerrepository-vtbl","children":[]},{"level":3,"title":"OwnerStorageFeature","slug":"ownerstoragefeature","link":"#ownerstoragefeature","children":[]},{"level":3,"title":"OwnerPtrT<FeatureRefTraits>","slug":"ownerptrt-featurereftraits","link":"#ownerptrt-featurereftraits","children":[]},{"level":3,"title":"OnHitSubcomponent","slug":"onhitsubcomponent","link":"#onhitsubcomponent","children":[]},{"level":3,"title":"OnHitSubcomponent_vtbl","slug":"onhitsubcomponent-vtbl","link":"#onhitsubcomponent-vtbl","children":[]},{"level":3,"title":"OpenDoorAnnotationDescription","slug":"opendoorannotationdescription","link":"#opendoorannotationdescription","children":[]},{"level":3,"title":"OpenDoorAnnotationDescription_vtbl","slug":"opendoorannotationdescription-vtbl","link":"#opendoorannotationdescription-vtbl","children":[]},{"level":3,"title":"OwnerStorageSharePtr<EntityRegistry>","slug":"ownerstorageshareptr-entityregistry","link":"#ownerstorageshareptr-entityregistry","children":[]},{"level":3,"title":"OnlineSafetyProgressHandler","slug":"onlinesafetyprogresshandler","link":"#onlinesafetyprogresshandler","children":[]},{"level":3,"title":"OnlineSafetyProgressHandler_vtbl","slug":"onlinesafetyprogresshandler-vtbl","link":"#onlinesafetyprogresshandler-vtbl","children":[]},{"level":3,"title":"OfferCollectionCustom","slug":"offercollectioncustom","link":"#offercollectioncustom","children":[]},{"level":3,"title":"OfferCollectionDocument","slug":"offercollectiondocument","link":"#offercollectiondocument","children":[]},{"level":3,"title":"OfferCollectionSearchResults","slug":"offercollectionsearchresults","link":"#offercollectionsearchresults","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController","slug":"onlinesafetydialogscreencontroller","link":"#onlinesafetydialogscreencontroller","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController_vtbl","slug":"onlinesafetydialogscreencontroller-vtbl","link":"#onlinesafetydialogscreencontroller-vtbl","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_7cab83aadfffc6c6f3533f3188941405>","slug":"onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405","link":"#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_9a561524d40350cc3faeda38517440ce>","slug":"onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce","link":"#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_aa0696b494dc24d731ca3415eb7512e1>","slug":"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1","link":"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_ff8c03f366e9ea90c239e7accb05879d>","slug":"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d","link":"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_1ca3a046a3907aedfae4f13653e071cc>","slug":"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc","link":"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_a93e6c06c61804e1fbd2a20a8c69c969>","slug":"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969","link":"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969","children":[]},{"level":3,"title":"OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_98bb0289cd1621c1ca883be4cca3467d>","slug":"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d","link":"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d","children":[]},{"level":3,"title":"OfferCategoryEnumHasher","slug":"offercategoryenumhasher","link":"#offercategoryenumhasher","children":[]},{"level":3,"title":"optional_ref<int>","slug":"optional-ref-int","link":"#optional-ref-int","children":[]},{"level":3,"title":"optional_ref<mce::Texture>","slug":"optional-ref-mce-texture","link":"#optional-ref-mce-texture","children":[]},{"level":3,"title":"OptionActivationRule","slug":"optionactivationrule","link":"#optionactivationrule","children":[]},{"level":3,"title":"OptionActivationRule_vtbl","slug":"optionactivationrule-vtbl","link":"#optionactivationrule-vtbl","children":[]},{"level":3,"title":"OrbitBehavior","slug":"orbitbehavior","link":"#orbitbehavior","children":[]},{"level":3,"title":"OrbitBehavior_vtbl","slug":"orbitbehavior-vtbl","link":"#orbitbehavior-vtbl","children":[]},{"level":3,"title":"OrbitBehaviorLoader","slug":"orbitbehaviorloader","link":"#orbitbehaviorloader","children":[]},{"level":3,"title":"OrbitBehaviorLoader_vtbl","slug":"orbitbehaviorloader-vtbl","link":"#orbitbehaviorloader-vtbl","children":[]},{"level":3,"title":"OverloadSyntaxInformation","slug":"overloadsyntaxinformation","link":"#overloadsyntaxinformation","children":[]},{"level":3,"title":"OnUseItemComponent","slug":"onuseitemcomponent","link":"#onuseitemcomponent","children":[]},{"level":3,"title":"OnUseItemComponent_vtbl","slug":"onuseitemcomponent-vtbl","link":"#onuseitemcomponent-vtbl","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::AggregateResults","slug":"owneddurablespagingcache-aggregateresults","link":"#owneddurablespagingcache-aggregateresults","children":[]},{"level":3,"title":"OptionSaveDeferral::release::__l16::<lambda_b309dec70b808e8609e224c1506fb95a>","slug":"optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a","link":"#optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a","children":[]},{"level":3,"title":"Options::setPlayerViewPerspective::__l2::<lambda_2933f73a92da25ab7eb8888027fc5027>","slug":"options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027","link":"#options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027","children":[]},{"level":3,"title":"Options::_endLoadingSession::__l5::<lambda_c02e99fb4834412c0d487a342dd02b2a>","slug":"options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a","link":"#options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a","children":[]},{"level":3,"title":"Options::_beginLoadingSession::__l5::<lambda_efe1aacdc65c1acb51ca6cd303b70c1d>","slug":"options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d","link":"#options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d","children":[]},{"level":3,"title":"Options::_loadOptions::__l2::<lambda_f2dc6bf19bfc274071900699a3267aab>","slug":"options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab","link":"#options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab","children":[]},{"level":3,"title":"Options::_loadOptions::__l2::<lambda_a60f418fafc87ff5dc33874f9996e92d>","slug":"options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d","link":"#options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d","children":[]},{"level":3,"title":"Options::_loadOptions::__l2::<lambda_75c87264413dc083e0ecaa10c5192172>","slug":"options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172","link":"#options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172","children":[]},{"level":3,"title":"Options::_save::__l18::<lambda_6f9032d848d392ddf02a80ada4c68215>","slug":"options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215","link":"#options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215","children":[]},{"level":3,"title":"Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>","slug":"options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea","link":"#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea","children":[]},{"level":3,"title":"Options::_saveAsync::__l2::<lambda_fbed4f7a7e8aeeddc0b8e4a80d747935>","slug":"options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935","link":"#options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935","children":[]},{"level":3,"title":"Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>::()::__l8::<lambda_0dfff5764f0623e212f81d2e2f8bfba1>","slug":"options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1","link":"#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_50fe63b9e25ac6375291495c25d838f4>","slug":"options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4","link":"#options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_b5d6adc02c288532a55896180d04bcb6>","slug":"options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6","link":"#options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_a38362f13b6055cf66128de76723f3d8>","slug":"options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8","link":"#options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_ac581a5d50fb80d69368380a8811d8a1>","slug":"options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1","link":"#options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_57c624900efc65c068fad36bbfdbaebf>","slug":"options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf","link":"#options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e>","slug":"options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e","link":"#options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_cd834d48ffb65032bb9f6c8cca8d0312>","slug":"options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312","link":"#options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_86205ee13076472cb59fe87cb90a8ae9>","slug":"options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9","link":"#options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_b9da9739a53f45c8f2534e78482a8f15>","slug":"options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15","link":"#options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_0a437dfd734b2239b707d376daf7211a>","slug":"options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a","link":"#options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a","children":[]},{"level":3,"title":"Options::_registerSelfLocks::__l2::<lambda_de46fbdf10fbd5875880cec202917d13>","slug":"options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13","link":"#options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_8728dfacd96bef3f811545e6af45195a>","slug":"options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a","link":"#options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>","slug":"options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f","link":"#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>::()::__l2::<lambda_7ecfef012c0561dc8df6ecd46b929d09>","slug":"options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09","link":"#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>","slug":"options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67","link":"#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>::()::__l2::<lambda_83afd32887477a4a48785321fb5da7ce>","slug":"options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce","link":"#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l5::<lambda_54a4fc15e87446e96720d7403f0c0d1e>","slug":"options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e","link":"#options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l5::<lambda_557bf8d5cc55e77fe80dd091c4484c9d>","slug":"options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d","link":"#options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_83f555d90a49e0a1b25a0ec40e3fff25>","slug":"options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25","link":"#options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_e30f9b834d00dfc3dd4e96db8a3a5bea>","slug":"options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea","link":"#options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_64ef34ccf9fab49f51aa313471ca3845>","slug":"options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845","link":"#options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_c77648a2d5ed4dd75b935a12e6167dc4>","slug":"options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4","link":"#options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_153f972500716c6f966a5058a0a6e79d>","slug":"options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d","link":"#options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d","children":[]},{"level":3,"title":"Options::_registerSelfObservers::__l2::<lambda_e4f03c81be69e05a90c38d508926b073>","slug":"options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073","link":"#options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073","children":[]},{"level":3,"title":"Options::_setOptionCallbacks::__l2::<lambda_2baa0dd320795f4976a4bc2b9c2a8c73>","slug":"options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73","link":"#options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73","children":[]},{"level":3,"title":"Options::_setOptionCallbacks::__l2::<lambda_977405555789dcffc289e657addad1ed>","slug":"options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed","link":"#options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed","children":[]},{"level":3,"title":"Options::_setOptionCallbacks::__l2::<lambda_adeaa5a7f14542839dda6e3dd82859e5>","slug":"options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5","link":"#options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5","children":[]},{"level":3,"title":"Options::_registerOption::__l2::<lambda_66976bbdee59fb67fe1feb36db4af030>","slug":"options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030","link":"#options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030","children":[]},{"level":3,"title":"Options::{ctor}::__l14::<lambda_fa4403c1a03d594c6268b771c878a778>","slug":"options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778","link":"#options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778","children":[]},{"level":3,"title":"Options::_registerChatOptions::__l2::<lambda_4b61316cf59efab0fcdfe3f771b9653b>","slug":"options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b","link":"#options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b","children":[]},{"level":3,"title":"OwnerStorageSharePtr<FogDefinition>","slug":"ownerstorageshareptr-fogdefinition","link":"#ownerstorageshareptr-fogdefinition","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_b134f75ebce8a481f3da8d26d3d4bddf>","slug":"owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf","link":"#owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_709068024ba758914a8b9be0575b359c>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_f79e648a61267cc2eba8fabdbac8c75a>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_278f90c39267690d5f8fd7879c8a262a>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_b101d75ce3122f6287edbbe29bc1860e>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_2352e89429b7cbbe1e610b942d38dc7a>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_810c9df654a8be4ff39687782286a8a0>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_39e81e94d3d33a0f208a7c22f80c2a20>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_fb4fd9557833de1e6e3d537364831732>","slug":"owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732","link":"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732","children":[]},{"level":3,"title":"OculusPostData","slug":"oculuspostdata","link":"#oculuspostdata","children":[]},{"level":3,"title":"OculusGetServiceTicket","slug":"oculusgetserviceticket","link":"#oculusgetserviceticket","children":[]},{"level":3,"title":"OculusGetServiceTicket_vtbl","slug":"oculusgetserviceticket-vtbl","link":"#oculusgetserviceticket-vtbl","children":[]},{"level":3,"title":"OculusPostEntitlement","slug":"oculuspostentitlement","link":"#oculuspostentitlement","children":[]},{"level":3,"title":"OculusPostEntitlement_vtbl","slug":"oculuspostentitlement-vtbl","link":"#oculuspostentitlement-vtbl","children":[]},{"level":3,"title":"OfferRepository::update::__l25::<lambda_872c40fd9efcbf74f55c70f8d9ffb74d>","slug":"offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d","link":"#offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d","children":[]},{"level":3,"title":"OfferRepository::update::__l22::<lambda_8ae77870353b265a35b8d175223822f8>","slug":"offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8","link":"#offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8","children":[]},{"level":3,"title":"OfferRepository::beginAsyncInit::__l2::<lambda_fe2a701c6f03e4c80ab08db13674b5da>","slug":"offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da","link":"#offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da","children":[]},{"level":3,"title":"OfferRepository::beginAsyncInit::__l2::<lambda_0690b8f7dfc1d762a7c6c615b4ac4b94>","slug":"offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94","link":"#offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94","children":[]},{"level":3,"title":"OfferRepository::registerProductQueryAttemptCallback::__l2::<lambda_36626fa5e6a2b1fdb27f2301632d6635>","slug":"offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635","link":"#offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635","children":[]},{"level":3,"title":"OutOfControlDefinition","slug":"outofcontroldefinition","link":"#outofcontroldefinition","children":[]},{"level":3,"title":"OutOfControlComponent","slug":"outofcontrolcomponent","link":"#outofcontrolcomponent","children":[]},{"level":3,"title":"OnUseOnItemComponent","slug":"onuseonitemcomponent","link":"#onuseonitemcomponent","children":[]},{"level":3,"title":"OnUseOnItemComponent_vtbl","slug":"onuseonitemcomponent-vtbl","link":"#onuseonitemcomponent-vtbl","children":[]},{"level":3,"title":"OnFallOnTriggerDescription","slug":"onfallontriggerdescription","link":"#onfallontriggerdescription","children":[]},{"level":3,"title":"OnFallOnTriggerDescription_vtbl","slug":"onfallontriggerdescription-vtbl","link":"#onfallontriggerdescription-vtbl","children":[]},{"level":3,"title":"OnFallOnTrigger","slug":"onfallontrigger","link":"#onfallontrigger","children":[]},{"level":3,"title":"OnFallOnTriggerDescription::buildSchema::__l2::<lambda_ff131107eb300bbd2c5caa396b00731d>","slug":"onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d","link":"#onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d","children":[]},{"level":3,"title":"OnFallOnTriggerDescription::buildSchema::__l2::<lambda_faf42de703e4e5a4c3f6fb1f94959021>","slug":"onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021","link":"#onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021","children":[]},{"level":3,"title":"OnFallOnTriggerDescription::buildSchema::__l2::<lambda_b614e50d91add974a8a52f7400d9d361>","slug":"onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361","link":"#onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361","children":[]},{"level":3,"title":"OnFallOnTriggerDescription::buildSchema::__l2::<lambda_654a272ba692830cd3f5ce995706e46f>","slug":"onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f","link":"#onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f","children":[]},{"level":3,"title":"OnFallOnTriggerDescription::buildSchema::__l2::<lambda_c92ebfb32705be8ff950d83fc5ef4c37>","slug":"onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37","link":"#onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37","children":[]},{"level":3,"title":"OnInteractTriggerDescription","slug":"oninteracttriggerdescription","link":"#oninteracttriggerdescription","children":[]},{"level":3,"title":"OnInteractTriggerDescription_vtbl","slug":"oninteracttriggerdescription-vtbl","link":"#oninteracttriggerdescription-vtbl","children":[]},{"level":3,"title":"OnInteractTrigger","slug":"oninteracttrigger","link":"#oninteracttrigger","children":[]},{"level":3,"title":"OnPlacedTriggerDescription","slug":"onplacedtriggerdescription","link":"#onplacedtriggerdescription","children":[]},{"level":3,"title":"OnPlacedTriggerDescription_vtbl","slug":"onplacedtriggerdescription-vtbl","link":"#onplacedtriggerdescription-vtbl","children":[]},{"level":3,"title":"OnPlacedTrigger","slug":"onplacedtrigger","link":"#onplacedtrigger","children":[]},{"level":3,"title":"OnPlayerDestroyedTriggerDescription","slug":"onplayerdestroyedtriggerdescription","link":"#onplayerdestroyedtriggerdescription","children":[]},{"level":3,"title":"OnPlayerDestroyedTriggerDescription_vtbl","slug":"onplayerdestroyedtriggerdescription-vtbl","link":"#onplayerdestroyedtriggerdescription-vtbl","children":[]},{"level":3,"title":"OnPlayerDestroyedTrigger","slug":"onplayerdestroyedtrigger","link":"#onplayerdestroyedtrigger","children":[]},{"level":3,"title":"OnPlayerPlacingTriggerDescription","slug":"onplayerplacingtriggerdescription","link":"#onplayerplacingtriggerdescription","children":[]},{"level":3,"title":"OnPlayerPlacingTriggerDescription_vtbl","slug":"onplayerplacingtriggerdescription-vtbl","link":"#onplayerplacingtriggerdescription-vtbl","children":[]},{"level":3,"title":"OnPlayerPlacingTrigger","slug":"onplayerplacingtrigger","link":"#onplayerplacingtrigger","children":[]},{"level":3,"title":"OnStepOnTriggerDescription","slug":"onstepontriggerdescription","link":"#onstepontriggerdescription","children":[]},{"level":3,"title":"OnStepOnTriggerDescription_vtbl","slug":"onstepontriggerdescription-vtbl","link":"#onstepontriggerdescription-vtbl","children":[]},{"level":3,"title":"OnStepOffTriggerDescription","slug":"onstepofftriggerdescription","link":"#onstepofftriggerdescription","children":[]},{"level":3,"title":"OnStepOffTriggerDescription_vtbl","slug":"onstepofftriggerdescription-vtbl","link":"#onstepofftriggerdescription-vtbl","children":[]},{"level":3,"title":"OnStepOffTrigger","slug":"onstepofftrigger","link":"#onstepofftrigger","children":[]},{"level":3,"title":"OnStepOnTrigger","slug":"onstepontrigger","link":"#onstepontrigger","children":[]},{"level":3,"title":"OwnerPtrT<SharePtrRefTraits<FogDefinition> >","slug":"ownerptrt-shareptrreftraits-fogdefinition","link":"#ownerptrt-shareptrreftraits-fogdefinition","children":[]},{"level":3,"title":"OpenDoorAnnotationComponent","slug":"opendoorannotationcomponent","link":"#opendoorannotationcomponent","children":[]},{"level":3,"title":"OnIgniteDefinition","slug":"onignitedefinition","link":"#onignitedefinition","children":[]},{"level":3,"title":"OnFriendlyAngerDefinition","slug":"onfriendlyangerdefinition","link":"#onfriendlyangerdefinition","children":[]},{"level":3,"title":"OpenDoorAnnotationSystem","slug":"opendoorannotationsystem","link":"#opendoorannotationsystem","children":[]},{"level":3,"title":"OpenDoorAnnotationSystem_vtbl","slug":"opendoorannotationsystem-vtbl","link":"#opendoorannotationsystem-vtbl","children":[]},{"level":3,"title":"ObservingNetworkPeer","slug":"observingnetworkpeer","link":"#observingnetworkpeer","children":[]},{"level":3,"title":"ObservingNetworkPeer_vtbl","slug":"observingnetworkpeer-vtbl","link":"#observingnetworkpeer-vtbl","children":[]},{"level":3,"title":"Option::setOverrideSource::__l8::<lambda_b12e3f1582359f44e815cb61e571f14c>","slug":"option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c","link":"#option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c","children":[]},{"level":3,"title":"Option::setOverrideSource::__l8::<lambda_0267e32cdc5641c5ccc3bda66d66248e>","slug":"option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e","link":"#option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e","children":[]},{"level":3,"title":"OpCommand","slug":"opcommand","link":"#opcommand","children":[]},{"level":3,"title":"OpCommand_vtbl","slug":"opcommand-vtbl","link":"#opcommand-vtbl","children":[]},{"level":3,"title":"OnTargetAcquiredDefinition","slug":"ontargetacquireddefinition","link":"#ontargetacquireddefinition","children":[]},{"level":3,"title":"OnTargetEscapeDefinition","slug":"ontargetescapedefinition","link":"#ontargetescapedefinition","children":[]},{"level":3,"title":"OnHurtDefinition","slug":"onhurtdefinition","link":"#onhurtdefinition","children":[]},{"level":3,"title":"OnDeathDefinition","slug":"ondeathdefinition","link":"#ondeathdefinition","children":[]},{"level":3,"title":"OnHurtByPlayerDefinition","slug":"onhurtbyplayerdefinition","link":"#onhurtbyplayerdefinition","children":[]},{"level":3,"title":"OnStartLandingDefinition","slug":"onstartlandingdefinition","link":"#onstartlandingdefinition","children":[]},{"level":3,"title":"OnStartTakeoffDefinition","slug":"onstarttakeoffdefinition","link":"#onstarttakeoffdefinition","children":[]},{"level":3,"title":"OnWakeWithOwnerDefinition","slug":"onwakewithownerdefinition","link":"#onwakewithownerdefinition","children":[]},{"level":3,"title":"OfferFlowerGoal","slug":"offerflowergoal","link":"#offerflowergoal","children":[]},{"level":3,"title":"OfferFlowerGoal_vtbl","slug":"offerflowergoal-vtbl","link":"#offerflowergoal-vtbl","children":[]},{"level":3,"title":"Ocelot","slug":"ocelot","link":"#ocelot","children":[]},{"level":3,"title":"OffhandContainerModel","slug":"offhandcontainermodel","link":"#offhandcontainermodel","children":[]},{"level":3,"title":"OffhandContainerModel_vtbl","slug":"offhandcontainermodel-vtbl","link":"#offhandcontainermodel-vtbl","children":[]},{"level":3,"title":"OverworldHeightAttributes","slug":"overworldheightattributes","link":"#overworldheightattributes","children":[]},{"level":3,"title":"ObserverBlock","slug":"observerblock","link":"#observerblock","children":[]},{"level":3,"title":"ObserverBlock_vtbl","slug":"observerblock-vtbl","link":"#observerblock-vtbl","children":[]},{"level":3,"title":"ObsidianBlock","slug":"obsidianblock","link":"#obsidianblock","children":[]},{"level":3,"title":"ObsidianBlock_vtbl","slug":"obsidianblock-vtbl","link":"#obsidianblock-vtbl","children":[]},{"level":3,"title":"OldLeafBlock","slug":"oldleafblock","link":"#oldleafblock","children":[]},{"level":3,"title":"OldLeafBlock_vtbl","slug":"oldleafblock-vtbl","link":"#oldleafblock-vtbl","children":[]},{"level":3,"title":"OldLogBlock","slug":"oldlogblock","link":"#oldlogblock","children":[]},{"level":3,"title":"OldLogBlock_vtbl","slug":"oldlogblock-vtbl","link":"#oldlogblock-vtbl","children":[]},{"level":3,"title":"OreBlock","slug":"oreblock","link":"#oreblock","children":[]},{"level":3,"title":"OreBlock_vtbl","slug":"oreblock-vtbl","link":"#oreblock-vtbl","children":[]},{"level":3,"title":"OreFeature","slug":"orefeature","link":"#orefeature","children":[]},{"level":3,"title":"OreFeature_vtbl","slug":"orefeature-vtbl","link":"#orefeature-vtbl","children":[]},{"level":3,"title":"OceanMixerLayer","slug":"oceanmixerlayer","link":"#oceanmixerlayer","children":[]},{"level":3,"title":"OceanMixerLayer_vtbl","slug":"oceanmixerlayer-vtbl","link":"#oceanmixerlayer-vtbl","children":[]},{"level":3,"title":"OceanMixerLayer::{ctor}::__l2::<lambda_12b4dbfeadd327d72f7fe23713e095d6>","slug":"oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6","link":"#oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6","children":[]},{"level":3,"title":"OverworldLightTextureImageBuilder","slug":"overworldlighttextureimagebuilder","link":"#overworldlighttextureimagebuilder","children":[]},{"level":3,"title":"OverworldLightTextureImageBuilder_vtbl","slug":"overworldlighttextureimagebuilder-vtbl","link":"#overworldlighttextureimagebuilder-vtbl","children":[]},{"level":3,"title":"OcelotAttackDefinition","slug":"ocelotattackdefinition","link":"#ocelotattackdefinition","children":[]},{"level":3,"title":"OcelotAttackDefinition_vtbl","slug":"ocelotattackdefinition-vtbl","link":"#ocelotattackdefinition-vtbl","children":[]},{"level":3,"title":"OcelotAttackGoal","slug":"ocelotattackgoal","link":"#ocelotattackgoal","children":[]},{"level":3,"title":"OcelotAttackGoal_vtbl","slug":"ocelotattackgoal-vtbl","link":"#ocelotattackgoal-vtbl","children":[]},{"level":3,"title":"OcelotSitOnBlockGoal","slug":"ocelotsitonblockgoal","link":"#ocelotsitonblockgoal","children":[]},{"level":3,"title":"OcelotSitOnBlockGoal_vtbl","slug":"ocelotsitonblockgoal-vtbl","link":"#ocelotsitonblockgoal-vtbl","children":[]},{"level":3,"title":"OpenDoorGoal","slug":"opendoorgoal","link":"#opendoorgoal","children":[]},{"level":3,"title":"OpenDoorGoal_vtbl","slug":"opendoorgoal-vtbl","link":"#opendoorgoal-vtbl","children":[]},{"level":3,"title":"OwnerHurtByTargetGoal","slug":"ownerhurtbytargetgoal","link":"#ownerhurtbytargetgoal","children":[]},{"level":3,"title":"OwnerHurtByTargetGoal_vtbl","slug":"ownerhurtbytargetgoal-vtbl","link":"#ownerhurtbytargetgoal-vtbl","children":[]},{"level":3,"title":"OwnerHurtTargetGoal","slug":"ownerhurttargetgoal","link":"#ownerhurttargetgoal","children":[]},{"level":3,"title":"OwnerHurtTargetGoal_vtbl","slug":"ownerhurttargetgoal-vtbl","link":"#ownerhurttargetgoal-vtbl","children":[]},{"level":3,"title":"OceanMonumentStart","slug":"oceanmonumentstart","link":"#oceanmonumentstart","children":[]},{"level":3,"title":"OceanMonumentStart_vtbl","slug":"oceanmonumentstart-vtbl","link":"#oceanmonumentstart-vtbl","children":[]},{"level":3,"title":"OceanRuinStart","slug":"oceanruinstart","link":"#oceanruinstart","children":[]},{"level":3,"title":"OceanRuinStart_vtbl","slug":"oceanruinstart-vtbl","link":"#oceanruinstart-vtbl","children":[]},{"level":3,"title":"OverworldGenerator::ThreadData","slug":"overworldgenerator-threaddata","link":"#overworldgenerator-threaddata","children":[]},{"level":3,"title":"OceanMonumentFeature","slug":"oceanmonumentfeature","link":"#oceanmonumentfeature","children":[]},{"level":3,"title":"OceanMonumentFeature_vtbl","slug":"oceanmonumentfeature-vtbl","link":"#oceanmonumentfeature-vtbl","children":[]},{"level":3,"title":"OverworldGenerator","slug":"overworldgenerator","link":"#overworldgenerator","children":[]},{"level":3,"title":"OceanRuinFeature","slug":"oceanruinfeature","link":"#oceanruinfeature","children":[]},{"level":3,"title":"OceanRuinFeature_vtbl","slug":"oceanruinfeature-vtbl","link":"#oceanruinfeature-vtbl","children":[]},{"level":3,"title":"OverworldGenerator_vtbl","slug":"overworldgenerator-vtbl","link":"#overworldgenerator-vtbl","children":[]},{"level":3,"title":"OverworldDimension","slug":"overworlddimension","link":"#overworlddimension","children":[]},{"level":3,"title":"OverworldBrightnessRamp","slug":"overworldbrightnessramp","link":"#overworldbrightnessramp","children":[]},{"level":3,"title":"OverworldBrightnessRamp_vtbl","slug":"overworldbrightnessramp-vtbl","link":"#overworldbrightnessramp-vtbl","children":[]},{"level":3,"title":"OceanMonumentPiece","slug":"oceanmonumentpiece","link":"#oceanmonumentpiece","children":[]},{"level":3,"title":"OceanMonumentPiece_vtbl","slug":"oceanmonumentpiece-vtbl","link":"#oceanmonumentpiece-vtbl","children":[]},{"level":3,"title":"OceanMonumentEntryRoom","slug":"oceanmonumententryroom","link":"#oceanmonumententryroom","children":[]},{"level":3,"title":"OceanMonumentEntryRoom_vtbl","slug":"oceanmonumententryroom-vtbl","link":"#oceanmonumententryroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentSimpleRoom","slug":"oceanmonumentsimpleroom","link":"#oceanmonumentsimpleroom","children":[]},{"level":3,"title":"OceanMonumentSimpleRoom_vtbl","slug":"oceanmonumentsimpleroom-vtbl","link":"#oceanmonumentsimpleroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentSimpleTopRoom","slug":"oceanmonumentsimpletoproom","link":"#oceanmonumentsimpletoproom","children":[]},{"level":3,"title":"OceanMonumentSimpleTopRoom_vtbl","slug":"oceanmonumentsimpletoproom-vtbl","link":"#oceanmonumentsimpletoproom-vtbl","children":[]},{"level":3,"title":"OceanMonumentDoubleYRoom","slug":"oceanmonumentdoubleyroom","link":"#oceanmonumentdoubleyroom","children":[]},{"level":3,"title":"OceanMonumentDoubleYRoom_vtbl","slug":"oceanmonumentdoubleyroom-vtbl","link":"#oceanmonumentdoubleyroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentDoubleXRoom","slug":"oceanmonumentdoublexroom","link":"#oceanmonumentdoublexroom","children":[]},{"level":3,"title":"OceanMonumentDoubleXRoom_vtbl","slug":"oceanmonumentdoublexroom-vtbl","link":"#oceanmonumentdoublexroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentDoubleZRoom","slug":"oceanmonumentdoublezroom","link":"#oceanmonumentdoublezroom","children":[]},{"level":3,"title":"OceanMonumentDoubleZRoom_vtbl","slug":"oceanmonumentdoublezroom-vtbl","link":"#oceanmonumentdoublezroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentDoubleXYRoom","slug":"oceanmonumentdoublexyroom","link":"#oceanmonumentdoublexyroom","children":[]},{"level":3,"title":"OceanMonumentDoubleXYRoom_vtbl","slug":"oceanmonumentdoublexyroom-vtbl","link":"#oceanmonumentdoublexyroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentDoubleYZRoom","slug":"oceanmonumentdoubleyzroom","link":"#oceanmonumentdoubleyzroom","children":[]},{"level":3,"title":"OceanMonumentDoubleYZRoom_vtbl","slug":"oceanmonumentdoubleyzroom-vtbl","link":"#oceanmonumentdoubleyzroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentCoreRoom","slug":"oceanmonumentcoreroom","link":"#oceanmonumentcoreroom","children":[]},{"level":3,"title":"OceanMonumentCoreRoom_vtbl","slug":"oceanmonumentcoreroom-vtbl","link":"#oceanmonumentcoreroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentWingRoom","slug":"oceanmonumentwingroom","link":"#oceanmonumentwingroom","children":[]},{"level":3,"title":"OceanMonumentWingRoom_vtbl","slug":"oceanmonumentwingroom-vtbl","link":"#oceanmonumentwingroom-vtbl","children":[]},{"level":3,"title":"OceanMonumentPenthouse","slug":"oceanmonumentpenthouse","link":"#oceanmonumentpenthouse","children":[]},{"level":3,"title":"OceanMonumentPenthouse_vtbl","slug":"oceanmonumentpenthouse-vtbl","link":"#oceanmonumentpenthouse-vtbl","children":[]},{"level":3,"title":"OceanRuinPieces","slug":"oceanruinpieces","link":"#oceanruinpieces","children":[]},{"level":3,"title":"OceanRuinPieces::OceanRuinPiece","slug":"oceanruinpieces-oceanruinpiece","link":"#oceanruinpieces-oceanruinpiece","children":[]},{"level":3,"title":"OceanRuinPieces::OceanRuinPiece_vtbl","slug":"oceanruinpieces-oceanruinpiece-vtbl","link":"#oceanruinpieces-oceanruinpiece-vtbl","children":[]},{"level":3,"title":"Oobject","slug":"oobject","link":"#oobject","children":[]},{"level":3,"title":"Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_d80c656ec8d59dbc8c64dfb75c527a17>","slug":"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17","link":"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17","children":[]},{"level":3,"title":"Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>","slug":"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a","link":"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a","children":[]},{"level":3,"title":"Options::_loadSpecialOptions::__l2::<lambda_5f5d8b8987f054e6094d54779a8bba1c>","slug":"options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c","link":"#options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c","children":[]},{"level":3,"title":"Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_e1c73b97ad6c18a48e39f5468b8a33d5>","slug":"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5","link":"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5","children":[]},{"level":3,"title":"Options::_saveInputMapping::__l2::<lambda_065485d2bbf015adaf440567a3df3aed>","slug":"options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed","link":"#options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed","children":[]},{"level":3,"title":"Options::_registerOptions::__l2::<lambda_e2061f6fc1dbebba1e5f7aa7386008ab>","slug":"options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab","link":"#options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab","children":[]},{"level":3,"title":"OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_0c82040d1ea396f7bd80ce9a5fa8db51>","slug":"owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51","link":"#owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51","children":[]},{"level":3,"title":"OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>::()::__l2::Literal","slug":"onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal","link":"#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal","children":[]},{"level":3,"title":"OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>","slug":"onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625","link":"#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625","children":[]},{"level":3,"title":"Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>::()::__l2::Literal","slug":"ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal","link":"#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal","children":[]},{"level":3,"title":"Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>","slug":"ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03","link":"#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03","children":[]},{"level":3,"title":"OverworldGenerator::_makeLayers::__l2::<lambda_00d2029390727aff6abfa69bf88b314f>","slug":"overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f","link":"#overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f","children":[]},{"level":3,"title":"Ocelot_vtbl","slug":"ocelot-vtbl","link":"#ocelot-vtbl","children":[]},{"level":3,"title":"OverworldDimension_vtbl","slug":"overworlddimension-vtbl","link":"#overworlddimension-vtbl","children":[]}],"git":{"updatedTime":1722099801000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1},{"name":"VinkyV","email":"75137786+VinkyV@users.noreply.github.com","commits":1}]},"filePathRelative":"1.16.201/structure/O.md"}');export{p as comp,v as data};
