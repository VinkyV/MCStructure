import{_ as a,c as s,o as l,d as e}from"./app-CsZ-F4rT.js";const n={},i=e(`<h1 id="b-1" tabindex="-1"><a class="header-anchor" href="#b-1"><span>B~1</span></a></h1><h3 id="bedrock-threading-asyncdeferredresultt-bool-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncdeferredresultt-bool-vtbl"><span><code>Bedrock::Threading::AsyncDeferredResultT&lt;bool&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::AsyncDeferredResultT&lt;bool&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;bool&gt;)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this, std::exception_ptr *result);</span>
<span class="line">  bool (__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;bool&gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;bool&gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="batchworker-packstorage-pendingtask-tryqueueworker-l9-lambda-af25b8745a49294668e7e18ef98137e4" tabindex="-1"><a class="header-anchor" href="#batchworker-packstorage-pendingtask-tryqueueworker-l9-lambda-af25b8745a49294668e7e18ef98137e4"><span><code>BatchWorker&lt;PackStorage::PendingTask&gt;::_tryQueueWorker::__l9::&lt;lambda_af25b8745a49294668e7e18ef98137e4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BatchWorker&lt;PackStorage::PendingTask&gt;::_tryQueueWorker::__l9::&lt;lambda_af25b8745a49294668e7e18ef98137e4&gt;</span>
<span class="line">{</span>
<span class="line">  BatchWorker&lt;PackStorage::PendingTask&gt; *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadlocalobjectimplementation-molangevalparams-std-allocator-molangevalparams" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadlocalobjectimplementation-molangevalparams-std-allocator-molangevalparams"><span><code>Bedrock::Threading::ThreadLocalObjectImplementation&lt;MolangEvalParams,std::allocator&lt;MolangEvalParams&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::ThreadLocalObjectImplementation&lt;MolangEvalParams,std::allocator&lt;MolangEvalParams&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  MolangEvalParams *mPtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadlocalobject-molangevalparams-std-allocator-molangevalparams" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadlocalobject-molangevalparams-std-allocator-molangevalparams"><span><code>Bedrock::Threading::ThreadLocalObject&lt;MolangEvalParams,std::allocator&lt;MolangEvalParams&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::ThreadLocalObject&lt;MolangEvalParams,std::allocator&lt;MolangEvalParams&gt; &gt; : Bedrock::Threading::ThreadLocalObjectImplementation&lt;MolangEvalParams,std::allocator&lt;MolangEvalParams&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(MolangEvalParams *)&gt; mConstructor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void"><span><code>Bedrock::Threading::TLSDetail::DefaultConstructor&lt;MolangEvalParams,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::TLSDetail::DefaultConstructor&lt;MolangEvalParams,void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void-create-l2-lambda-958a58132a7af05cc0661d2aecfa4548" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void-create-l2-lambda-958a58132a7af05cc0661d2aecfa4548"><span><code>Bedrock::Threading::TLSDetail::DefaultConstructor&lt;MolangEvalParams,void&gt;::create::__l2::&lt;lambda_958a58132a7af05cc0661d2aecfa4548&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::TLSDetail::DefaultConstructor&lt;MolangEvalParams,void&gt;::create::__l2::&lt;lambda_958a58132a7af05cc0661d2aecfa4548&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-enum-itemstacknetresult-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-enum-itemstacknetresult-std-string"><span><code>BidirectionalUnorderedMap&lt;enum ItemStackNetResult,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BidirectionalUnorderedMap&lt;enum ItemStackNetResult,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum ItemStackNetResult,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,enum ItemStackNetResult&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadlocalvalueaccessor-componentitem" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadlocalvalueaccessor-componentitem"><span><code>Bedrock::Threading::ThreadLocalValueAccessor&lt;ComponentItem *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::ThreadLocalValueAccessor&lt;ComponentItem *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostablecomponent" tabindex="-1"><a class="header-anchor" href="#boostablecomponent"><span><code>BoostableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoostableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  bool mIsBoosting;</span>
<span class="line">  int mBoostTime;</span>
<span class="line">  int mBoostTimeTotal;</span>
<span class="line">  float mFovMod;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockitem" tabindex="-1"><a class="header-anchor" href="#blockitem"><span><code>BlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-4e7611f2c774939b21bda2cfa4f46e40" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-4e7611f2c774939b21bda2cfa4f46e40"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4e7611f2c774939b21bda2cfa4f46e40&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4e7611f2c774939b21bda2cfa4f46e40&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-01b284e148679bd63bab12b0717db626" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-01b284e148679bd63bab12b0717db626"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_01b284e148679bd63bab12b0717db626&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_01b284e148679bd63bab12b0717db626&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;CappedSurfaceAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-0f779d43536bc104e122b0d74a889027" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-0f779d43536bc104e122b0d74a889027"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_0f779d43536bc104e122b0d74a889027&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_0f779d43536bc104e122b0d74a889027&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-b059eddd1b406bfce4b57442217ab1b3" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-b059eddd1b406bfce4b57442217ab1b3"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_b059eddd1b406bfce4b57442217ab1b3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_b059eddd1b406bfce4b57442217ab1b3&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;CappedSurfaceAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-a41f431bfd368896c55b381baacd11ba" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-a41f431bfd368896c55b381baacd11ba"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_a41f431bfd368896c55b381baacd11ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_a41f431bfd368896c55b381baacd11ba&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-cea596d8301ad7333b74eecd38417d3c" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-cea596d8301ad7333b74eecd38417d3c"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_cea596d8301ad7333b74eecd38417d3c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_cea596d8301ad7333b74eecd38417d3c&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;CappedSurfaceAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-e084b3da421e0a056d83c37c8ebf2c09" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-e084b3da421e0a056d83c37c8ebf2c09"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_e084b3da421e0a056d83c37c8ebf2c09&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_e084b3da421e0a056d83c37c8ebf2c09&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;CappedSurfaceAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-201c44a5279f845d9ef54bb2268fc08b" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-201c44a5279f845d9ef54bb2268fc08b"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_201c44a5279f845d9ef54bb2268fc08b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_201c44a5279f845d9ef54bb2268fc08b&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;CappedSurfaceAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-ae3f9c725f64bdda2a0fe8a5292f5adc" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-ae3f9c725f64bdda2a0fe8a5292f5adc"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ae3f9c725f64bdda2a0fe8a5292f5adc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ae3f9c725f64bdda2a0fe8a5292f5adc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreathabilitydescription" tabindex="-1"><a class="header-anchor" href="#blockbreathabilitydescription"><span><code>BlockBreathabilityDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockBreathabilityDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  BreathingType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreathabilitydescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockbreathabilitydescription-vtbl"><span><code>BlockBreathabilityDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockBreathabilityDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreathabilitycomponent" tabindex="-1"><a class="header-anchor" href="#blockbreathabilitycomponent"><span><code>BlockBreathabilityComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreathabilityComponent</span>
<span class="line">{</span>
<span class="line">  BreathingType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreathabilitydescription-buildschema-l2-lambda-4c61f8557da081b1c8c2a22b9346d104" tabindex="-1"><a class="header-anchor" href="#blockbreathabilitydescription-buildschema-l2-lambda-4c61f8557da081b1c8c2a22b9346d104"><span><code>BlockBreathabilityDescription::buildSchema::__l2::&lt;lambda_4c61f8557da081b1c8c2a22b9346d104&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreathabilityDescription::buildSchema::__l2::&lt;lambda_4c61f8557da081b1c8c2a22b9346d104&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription"><span><code>BlockCollisionComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockCollisionComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  Vec3 mOrigin;</span>
<span class="line">  Vec3 mSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription-vtbl"><span><code>BlockCollisionComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockCollisionComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription"><span><code>BlockRaycastComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockRaycastComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  Vec3 mOrigin;</span>
<span class="line">  Vec3 mSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription-vtbl"><span><code>BlockRaycastComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockRaycastComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponent" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponent"><span><code>BlockCollisionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponent</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  bool mWorldInfoBaked;</span>
<span class="line">  AABB mOriginalAABB;</span>
<span class="line">  AABB mTransformedAABB;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentprocessor" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentprocessor"><span><code>BlockCollisionComponentProcessor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentProcessor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentprocessor-getprocessor-l2-lambda-d50d369ffbd5602eccd1ecd87abe7ddc" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentprocessor-getprocessor-l2-lambda-d50d369ffbd5602eccd1ecd87abe7ddc"><span><code>BlockCollisionComponentProcessor::getProcessor::__l2::&lt;lambda_d50d369ffbd5602eccd1ecd87abe7ddc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentProcessor::getProcessor::__l2::&lt;lambda_d50d369ffbd5602eccd1ecd87abe7ddc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription-buildschema-l2-lambda-4b812ccf5071d0acd944581760f037ef" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription-buildschema-l2-lambda-4b812ccf5071d0acd944581760f037ef"><span><code>BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_4b812ccf5071d0acd944581760f037ef&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_4b812ccf5071d0acd944581760f037ef&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription-buildschema-l2-lambda-6878f6579073ac5e14ce6c03b3c5937f" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription-buildschema-l2-lambda-6878f6579073ac5e14ce6c03b3c5937f"><span><code>BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_6878f6579073ac5e14ce6c03b3c5937f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_6878f6579073ac5e14ce6c03b3c5937f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription-buildschema-l2-lambda-dc89933ad8a520e005190a29280cbde2" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription-buildschema-l2-lambda-dc89933ad8a520e005190a29280cbde2"><span><code>BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_dc89933ad8a520e005190a29280cbde2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_dc89933ad8a520e005190a29280cbde2&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcollisioncomponentdescription-buildschema-l2-lambda-c14de7537c04cb6c24d0e6d8a11adb99" tabindex="-1"><a class="header-anchor" href="#blockcollisioncomponentdescription-buildschema-l2-lambda-c14de7537c04cb6c24d0e6d8a11adb99"><span><code>BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_c14de7537c04cb6c24d0e6d8a11adb99&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockCollisionComponentDescription::buildSchema::__l2::&lt;lambda_c14de7537c04cb6c24d0e6d8a11adb99&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdestroytimedescription" tabindex="-1"><a class="header-anchor" href="#blockdestroytimedescription"><span><code>BlockDestroyTimeDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockDestroyTimeDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mDestroyTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdestroytimedescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockdestroytimedescription-vtbl"><span><code>BlockDestroyTimeDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockDestroyTimeDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdestroytimecomponent" tabindex="-1"><a class="header-anchor" href="#blockdestroytimecomponent"><span><code>BlockDestroyTimeComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockDestroyTimeComponent</span>
<span class="line">{</span>
<span class="line">  float mDestroyTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdestroytimedescription-buildschema-l2-lambda-d1e3a537cd9a75624f45c10c16433a09" tabindex="-1"><a class="header-anchor" href="#blockdestroytimedescription-buildschema-l2-lambda-d1e3a537cd9a75624f45c10c16433a09"><span><code>BlockDestroyTimeDescription::buildSchema::__l2::&lt;lambda_d1e3a537cd9a75624f45c10c16433a09&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockDestroyTimeDescription::buildSchema::__l2::&lt;lambda_d1e3a537cd9a75624f45c10c16433a09&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdisplaynamedescription" tabindex="-1"><a class="header-anchor" href="#blockdisplaynamedescription"><span><code>BlockDisplayNameDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockDisplayNameDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mDisplayName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdisplaynamedescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockdisplaynamedescription-vtbl"><span><code>BlockDisplayNameDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockDisplayNameDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdisplaynamedescription-buildschema-l2-lambda-c46f60d3a9697599df883587d19d6273" tabindex="-1"><a class="header-anchor" href="#blockdisplaynamedescription-buildschema-l2-lambda-c46f60d3a9697599df883587d19d6273"><span><code>BlockDisplayNameDescription::buildSchema::__l2::&lt;lambda_c46f60d3a9697599df883587d19d6273&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockDisplayNameDescription::buildSchema::__l2::&lt;lambda_c46f60d3a9697599df883587d19d6273&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockexplodeabledescription" tabindex="-1"><a class="header-anchor" href="#blockexplodeabledescription"><span><code>BlockExplodeableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockExplodeableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mExplosionResistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockexplodeabledescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockexplodeabledescription-vtbl"><span><code>BlockExplodeableDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockExplodeableDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockexplodeablecomponent" tabindex="-1"><a class="header-anchor" href="#blockexplodeablecomponent"><span><code>BlockExplodeableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockExplodeableComponent</span>
<span class="line">{</span>
<span class="line">  float mExplosionResistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockexplodeabledescription-buildschema-l2-lambda-daebb62fbd57786a9760bf50be0a77d9" tabindex="-1"><a class="header-anchor" href="#blockexplodeabledescription-buildschema-l2-lambda-daebb62fbd57786a9760bf50be0a77d9"><span><code>BlockExplodeableDescription::buildSchema::__l2::&lt;lambda_daebb62fbd57786a9760bf50be0a77d9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockExplodeableDescription::buildSchema::__l2::&lt;lambda_daebb62fbd57786a9760bf50be0a77d9&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription"><span><code>BlockFlammableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  int mFlameOdds;</span>
<span class="line">  int mBurnOdds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription-vtbl"><span><code>BlockFlammableDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockFlammableDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammablecomponent" tabindex="-1"><a class="header-anchor" href="#blockflammablecomponent"><span><code>BlockFlammableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableComponent</span>
<span class="line">{</span>
<span class="line">  int mFlameOdds;</span>
<span class="line">  int mBurnOdds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription-buildschema-l2-lambda-c59bc263b6294a6e6f39b8d0e04877f0" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription-buildschema-l2-lambda-c59bc263b6294a6e6f39b8d0e04877f0"><span><code>BlockFlammableDescription::buildSchema::__l2::&lt;lambda_c59bc263b6294a6e6f39b8d0e04877f0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableDescription::buildSchema::__l2::&lt;lambda_c59bc263b6294a6e6f39b8d0e04877f0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription-buildschema-l2-lambda-a96b44a40c7e60e12ae13262d5bca2e7" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription-buildschema-l2-lambda-a96b44a40c7e60e12ae13262d5bca2e7"><span><code>BlockFlammableDescription::buildSchema::__l2::&lt;lambda_a96b44a40c7e60e12ae13262d5bca2e7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableDescription::buildSchema::__l2::&lt;lambda_a96b44a40c7e60e12ae13262d5bca2e7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription-buildschema-l2-lambda-57c47e0013d9103b49b0606920551b9d" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription-buildschema-l2-lambda-57c47e0013d9103b49b0606920551b9d"><span><code>BlockFlammableDescription::buildSchema::__l2::&lt;lambda_57c47e0013d9103b49b0606920551b9d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableDescription::buildSchema::__l2::&lt;lambda_57c47e0013d9103b49b0606920551b9d&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockfrictiondescription" tabindex="-1"><a class="header-anchor" href="#blockfrictiondescription"><span><code>BlockFrictionDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockFrictionDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mFriction;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockfrictiondescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockfrictiondescription-vtbl"><span><code>BlockFrictionDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockFrictionDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockfrictiondescription-buildschema-l2-lambda-c69e137bc810408b918b6f7d7307713f" tabindex="-1"><a class="header-anchor" href="#blockfrictiondescription-buildschema-l2-lambda-c69e137bc810408b918b6f7d7307713f"><span><code>BlockFrictionDescription::buildSchema::__l2::&lt;lambda_c69e137bc810408b918b6f7d7307713f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFrictionDescription::buildSchema::__l2::&lt;lambda_c69e137bc810408b918b6f7d7307713f&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometrydescription-buildschema-l2-lambda-ce6722aba34e352d0154f0dda9737a1e" tabindex="-1"><a class="header-anchor" href="#blockgeometrydescription-buildschema-l2-lambda-ce6722aba34e352d0154f0dda9737a1e"><span><code>BlockGeometryDescription::buildSchema::__l2::&lt;lambda_ce6722aba34e352d0154f0dda9737a1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockGeometryDescription::buildSchema::__l2::&lt;lambda_ce6722aba34e352d0154f0dda9737a1e&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacycomponent" tabindex="-1"><a class="header-anchor" href="#blocklegacycomponent"><span><code>BlockLegacyComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockLegacyComponent</span>
<span class="line">{</span>
<span class="line">  BlockLegacy *mBlockLegacy;</span>
<span class="line">  bool mAllowSame;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacycomponentdescription" tabindex="-1"><a class="header-anchor" href="#blocklegacycomponentdescription"><span><code>BlockLegacyComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLegacyComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacycomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blocklegacycomponentdescription-vtbl"><span><code>BlockLegacyComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockLegacyComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacycomponentdescription-buildschema-l2-lambda-27204d2f2a39d85660d61256896bff1b" tabindex="-1"><a class="header-anchor" href="#blocklegacycomponentdescription-buildschema-l2-lambda-27204d2f2a39d85660d61256896bff1b"><span><code>BlockLegacyComponentDescription::buildSchema::__l2::&lt;lambda_27204d2f2a39d85660d61256896bff1b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLegacyComponentDescription::buildSchema::__l2::&lt;lambda_27204d2f2a39d85660d61256896bff1b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightdescription" tabindex="-1"><a class="header-anchor" href="#blocklightdescription"><span><code>BlockLightDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockLightDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  Brightness mLightLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blocklightdescription-vtbl"><span><code>BlockLightDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockLightDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightcomponent" tabindex="-1"><a class="header-anchor" href="#blocklightcomponent"><span><code>BlockLightComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLightComponent</span>
<span class="line">{</span>
<span class="line">  Brightness mLightLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightdescription-buildschema-l2-lambda-d71761e05246a34376364883fdb7208e" tabindex="-1"><a class="header-anchor" href="#blocklightdescription-buildschema-l2-lambda-d71761e05246a34376364883fdb7208e"><span><code>BlockLightDescription::buildSchema::__l2::&lt;lambda_d71761e05246a34376364883fdb7208e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLightDescription::buildSchema::__l2::&lt;lambda_d71761e05246a34376364883fdb7208e&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightemissiondescription" tabindex="-1"><a class="header-anchor" href="#blocklightemissiondescription"><span><code>BlockLightEmissionDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockLightEmissionDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mLightEmission;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightemissiondescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blocklightemissiondescription-vtbl"><span><code>BlockLightEmissionDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockLightEmissionDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightemissiondescription-buildschema-l2-lambda-1f9e1aeaf46d2eac21fea725a5f02ba0" tabindex="-1"><a class="header-anchor" href="#blocklightemissiondescription-buildschema-l2-lambda-1f9e1aeaf46d2eac21fea725a5f02ba0"><span><code>BlockLightEmissionDescription::buildSchema::__l2::&lt;lambda_1f9e1aeaf46d2eac21fea725a5f02ba0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLightEmissionDescription::buildSchema::__l2::&lt;lambda_1f9e1aeaf46d2eac21fea725a5f02ba0&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmapcolordescription" tabindex="-1"><a class="header-anchor" href="#blockmapcolordescription"><span><code>BlockMapColorDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMapColorDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  mce::Color mMapColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmapcolordescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockmapcolordescription-vtbl"><span><code>BlockMapColorDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockMapColorDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmapcolorcomponent" tabindex="-1"><a class="header-anchor" href="#blockmapcolorcomponent"><span><code>BlockMapColorComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMapColorComponent</span>
<span class="line">{</span>
<span class="line">  mce::Color mMapColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmapcolordescription-buildschema-l2-lambda-08f7f2a483b2ce2d8ae180541a033fbf" tabindex="-1"><a class="header-anchor" href="#blockmapcolordescription-buildschema-l2-lambda-08f7f2a483b2ce2d8ae180541a033fbf"><span><code>BlockMapColorDescription::buildSchema::__l2::&lt;lambda_08f7f2a483b2ce2d8ae180541a033fbf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMapColorDescription::buildSchema::__l2::&lt;lambda_08f7f2a483b2ce2d8ae180541a033fbf&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-ba98cf8c091c5275fe54b54a6fd1fa64" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-ba98cf8c091c5275fe54b54a6fd1fa64"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_ba98cf8c091c5275fe54b54a6fd1fa64&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_ba98cf8c091c5275fe54b54a6fd1fa64&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-06f55dbee568ee03701593fa00d64316" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-06f55dbee568ee03701593fa00d64316"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_06f55dbee568ee03701593fa00d64316&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_06f55dbee568ee03701593fa00d64316&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-573d2fb4ea2eda602f92a6079ece291a" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-573d2fb4ea2eda602f92a6079ece291a"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_573d2fb4ea2eda602f92a6079ece291a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_573d2fb4ea2eda602f92a6079ece291a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-12efd0823a81885ff5970a7012bb91e8" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-12efd0823a81885ff5970a7012bb91e8"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_12efd0823a81885ff5970a7012bb91e8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_12efd0823a81885ff5970a7012bb91e8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-db0e7cbf50b78f865c00e20c1e7ca2f2" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-db0e7cbf50b78f865c00e20c1e7ca2f2"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_db0e7cbf50b78f865c00e20c1e7ca2f2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_db0e7cbf50b78f865c00e20c1e7ca2f2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-44ff594e168fc93ea3851ee9be5d388a" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-44ff594e168fc93ea3851ee9be5d388a"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_44ff594e168fc93ea3851ee9be5d388a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_44ff594e168fc93ea3851ee9be5d388a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmaterialinstancesdescription-buildschema-l2-lambda-89c1e1e1679be2065bf56004cfe846be" tabindex="-1"><a class="header-anchor" href="#blockmaterialinstancesdescription-buildschema-l2-lambda-89c1e1e1679be2065bf56004cfe846be"><span><code>BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_89c1e1e1679be2065bf56004cfe846be&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockMaterialInstancesDescription::buildSchema::__l2::&lt;lambda_89c1e1e1679be2065bf56004cfe846be&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription"><span><code>BlockPlacementFilterDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BlockPlacementCondition&gt; conditions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-vtbl"><span><code>BlockPlacementFilterDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockPlacementFilterDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-buildschema-l4-lambda-e8ce4e56bf378dc7388d7d765e0865c1" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-buildschema-l4-lambda-e8ce4e56bf378dc7388d7d765e0865c1"><span><code>BlockPlacementFilterDescription::buildSchema::__l4::&lt;lambda_e8ce4e56bf378dc7388d7d765e0865c1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription::buildSchema::__l4::&lt;lambda_e8ce4e56bf378dc7388d7d765e0865c1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-buildschema-l3-lambda-9da8bab70b5a357e6f6558be61f31a37" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-buildschema-l3-lambda-9da8bab70b5a357e6f6558be61f31a37"><span><code>BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_9da8bab70b5a357e6f6558be61f31a37&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_9da8bab70b5a357e6f6558be61f31a37&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-buildschema-l3-lambda-3929d7bdc0012c1d5b5d07211a568962" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-buildschema-l3-lambda-3929d7bdc0012c1d5b5d07211a568962"><span><code>BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_3929d7bdc0012c1d5b5d07211a568962&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_3929d7bdc0012c1d5b5d07211a568962&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-buildschema-l3-lambda-48a2c92454dca1b1eb86708c0cb6f245" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-buildschema-l3-lambda-48a2c92454dca1b1eb86708c0cb6f245"><span><code>BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_48a2c92454dca1b1eb86708c0cb6f245&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription::buildSchema::__l3::&lt;lambda_48a2c92454dca1b1eb86708c0cb6f245&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplacementfilterdescription-buildschema-l2-lambda-cb0824acb19a6926bc16ae918b367222" tabindex="-1"><a class="header-anchor" href="#blockplacementfilterdescription-buildschema-l2-lambda-cb0824acb19a6926bc16ae918b367222"><span><code>BlockPlacementFilterDescription::buildSchema::__l2::&lt;lambda_cb0824acb19a6926bc16ae918b367222&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlacementFilterDescription::buildSchema::__l2::&lt;lambda_cb0824acb19a6926bc16ae918b367222&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockunwalkabledescription" tabindex="-1"><a class="header-anchor" href="#blockunwalkabledescription"><span><code>BlockUnwalkableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockUnwalkableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockunwalkabledescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockunwalkabledescription-vtbl"><span><code>BlockUnwalkableDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockUnwalkableDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpreventsjumpingdescription" tabindex="-1"><a class="header-anchor" href="#blockpreventsjumpingdescription"><span><code>BlockPreventsJumpingDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockPreventsJumpingDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpreventsjumpingdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockpreventsjumpingdescription-vtbl"><span><code>BlockPreventsJumpingDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockPreventsJumpingDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockimmovabledescription" tabindex="-1"><a class="header-anchor" href="#blockimmovabledescription"><span><code>BlockImmovableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockImmovableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockimmovabledescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockimmovabledescription-vtbl"><span><code>BlockImmovableDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockImmovableDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreakonpushdescription" tabindex="-1"><a class="header-anchor" href="#blockbreakonpushdescription"><span><code>BlockBreakOnPushDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockBreakOnPushDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreakonpushdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockbreakonpushdescription-vtbl"><span><code>BlockBreakOnPushDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockBreakOnPushDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockonlypistonpushdescription" tabindex="-1"><a class="header-anchor" href="#blockonlypistonpushdescription"><span><code>BlockOnlyPistonPushDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockOnlyPistonPushDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockonlypistonpushdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockonlypistonpushdescription-vtbl"><span><code>BlockOnlyPistonPushDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockOnlyPistonPushDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreakswhenhitbyarrowdescription" tabindex="-1"><a class="header-anchor" href="#blockbreakswhenhitbyarrowdescription"><span><code>BlockBreaksWhenHitByArrowDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockBreaksWhenHitByArrowDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreakswhenhitbyarrowdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockbreakswhenhitbyarrowdescription-vtbl"><span><code>BlockBreaksWhenHitByArrowDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockBreaksWhenHitByArrowDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpropertycomponent" tabindex="-1"><a class="header-anchor" href="#blockpropertycomponent"><span><code>BlockPropertyComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPropertyComponent</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum BlockProperty,bool&gt; propertyMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockonlypistonpushdescription-buildschema-l2-lambda-c945b5662cf1eb5589293648d6eec793" tabindex="-1"><a class="header-anchor" href="#blockonlypistonpushdescription-buildschema-l2-lambda-c945b5662cf1eb5589293648d6eec793"><span><code>BlockOnlyPistonPushDescription::buildSchema::__l2::&lt;lambda_c945b5662cf1eb5589293648d6eec793&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockOnlyPistonPushDescription::buildSchema::__l2::&lt;lambda_c945b5662cf1eb5589293648d6eec793&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreakonpushdescription-buildschema-l2-lambda-85b29853f478a656648e5c7bba71cddf" tabindex="-1"><a class="header-anchor" href="#blockbreakonpushdescription-buildschema-l2-lambda-85b29853f478a656648e5c7bba71cddf"><span><code>BlockBreakOnPushDescription::buildSchema::__l2::&lt;lambda_85b29853f478a656648e5c7bba71cddf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreakOnPushDescription::buildSchema::__l2::&lt;lambda_85b29853f478a656648e5c7bba71cddf&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockimmovabledescription-buildschema-l2-lambda-e8efcee476cac9f07672d89dca1ff150" tabindex="-1"><a class="header-anchor" href="#blockimmovabledescription-buildschema-l2-lambda-e8efcee476cac9f07672d89dca1ff150"><span><code>BlockImmovableDescription::buildSchema::__l2::&lt;lambda_e8efcee476cac9f07672d89dca1ff150&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockImmovableDescription::buildSchema::__l2::&lt;lambda_e8efcee476cac9f07672d89dca1ff150&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpreventsjumpingdescription-buildschema-l2-lambda-9542622d127f343463dd4c8650a62bd0" tabindex="-1"><a class="header-anchor" href="#blockpreventsjumpingdescription-buildschema-l2-lambda-9542622d127f343463dd4c8650a62bd0"><span><code>BlockPreventsJumpingDescription::buildSchema::__l2::&lt;lambda_9542622d127f343463dd4c8650a62bd0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPreventsJumpingDescription::buildSchema::__l2::&lt;lambda_9542622d127f343463dd4c8650a62bd0&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockunwalkabledescription-buildschema-l2-lambda-1a4657843158ef697741cd4b4af2d5c3" tabindex="-1"><a class="header-anchor" href="#blockunwalkabledescription-buildschema-l2-lambda-1a4657843158ef697741cd4b4af2d5c3"><span><code>BlockUnwalkableDescription::buildSchema::__l2::&lt;lambda_1a4657843158ef697741cd4b4af2d5c3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockUnwalkableDescription::buildSchema::__l2::&lt;lambda_1a4657843158ef697741cd4b4af2d5c3&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription"><span><code>BlockQueuedTickingDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mDelayRange[2];</span>
<span class="line">  bool mLooping;</span>
<span class="line">  DefinitionTrigger mOnTimeDown;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-vtbl"><span><code>BlockQueuedTickingDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockQueuedTickingDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-cf213ad65c48f5af5c1a97b78c1e03cc" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-cf213ad65c48f5af5c1a97b78c1e03cc"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_cf213ad65c48f5af5c1a97b78c1e03cc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_cf213ad65c48f5af5c1a97b78c1e03cc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-626e42b5f549b74b2c47ecc5065668f8" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-626e42b5f549b74b2c47ecc5065668f8"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_626e42b5f549b74b2c47ecc5065668f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_626e42b5f549b74b2c47ecc5065668f8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-3dcdcc4801ba6f06b5bd699cf19f4ae9" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-3dcdcc4801ba6f06b5bd699cf19f4ae9"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_3dcdcc4801ba6f06b5bd699cf19f4ae9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_3dcdcc4801ba6f06b5bd699cf19f4ae9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-d7521e35ca8cc680c738d8c91bd339a3" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-d7521e35ca8cc680c738d8c91bd339a3"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_d7521e35ca8cc680c738d8c91bd339a3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_d7521e35ca8cc680c738d8c91bd339a3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-9dd896149b2b0e048d3f4e74066c6d79" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-9dd896149b2b0e048d3f4e74066c6d79"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_9dd896149b2b0e048d3f4e74066c6d79&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_9dd896149b2b0e048d3f4e74066c6d79&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-aa9609fada4ce700b2792b8814cdcabf" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-aa9609fada4ce700b2792b8814cdcabf"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_aa9609fada4ce700b2792b8814cdcabf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_aa9609fada4ce700b2792b8814cdcabf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockqueuedtickingdescription-buildschema-l2-lambda-b620b3e3f93259a2e6ac65f0433095c0" tabindex="-1"><a class="header-anchor" href="#blockqueuedtickingdescription-buildschema-l2-lambda-b620b3e3f93259a2e6ac65f0433095c0"><span><code>BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_b620b3e3f93259a2e6ac65f0433095c0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockQueuedTickingDescription::buildSchema::__l2::&lt;lambda_b620b3e3f93259a2e6ac65f0433095c0&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription"><span><code>BlockRandomTickingDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  DefinitionTrigger mOnTimeDown;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-vtbl"><span><code>BlockRandomTickingDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockRandomTickingDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingcomponent" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingcomponent"><span><code>BlockRandomTickingComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingComponent</span>
<span class="line">{</span>
<span class="line">  DefinitionTrigger mOnTimeDown;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-buildschema-l2-lambda-07d8c21d2a1191c5ff5c50620c1730e3" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-buildschema-l2-lambda-07d8c21d2a1191c5ff5c50620c1730e3"><span><code>BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_07d8c21d2a1191c5ff5c50620c1730e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_07d8c21d2a1191c5ff5c50620c1730e3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-buildschema-l2-lambda-1321e859aa1dd025510131cc9e8e6225" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-buildschema-l2-lambda-1321e859aa1dd025510131cc9e8e6225"><span><code>BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_1321e859aa1dd025510131cc9e8e6225&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_1321e859aa1dd025510131cc9e8e6225&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-buildschema-l2-lambda-9c30243026aaa59f1df4244d1fee3202" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-buildschema-l2-lambda-9c30243026aaa59f1df4244d1fee3202"><span><code>BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_9c30243026aaa59f1df4244d1fee3202&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_9c30243026aaa59f1df4244d1fee3202&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-buildschema-l2-lambda-c59ae86f72fe7374104f30d451d32d65" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-buildschema-l2-lambda-c59ae86f72fe7374104f30d451d32d65"><span><code>BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_c59ae86f72fe7374104f30d451d32d65&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_c59ae86f72fe7374104f30d451d32d65&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrandomtickingdescription-buildschema-l2-lambda-eb0063f1e7722fc1fd674532441eac14" tabindex="-1"><a class="header-anchor" href="#blockrandomtickingdescription-buildschema-l2-lambda-eb0063f1e7722fc1fd674532441eac14"><span><code>BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_eb0063f1e7722fc1fd674532441eac14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRandomTickingDescription::buildSchema::__l2::&lt;lambda_eb0063f1e7722fc1fd674532441eac14&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentprocessor" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentprocessor"><span><code>BlockRaycastComponentProcessor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentProcessor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentprocessor-getprocessor-l2-lambda-10b292fb3bf93b28c6ce9e7cd4e94995" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentprocessor-getprocessor-l2-lambda-10b292fb3bf93b28c6ce9e7cd4e94995"><span><code>BlockRaycastComponentProcessor::getProcessor::__l2::&lt;lambda_10b292fb3bf93b28c6ce9e7cd4e94995&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentProcessor::getProcessor::__l2::&lt;lambda_10b292fb3bf93b28c6ce9e7cd4e94995&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription-buildschema-l2-lambda-fb014cf2776a7d8c0e9f3bbce0361b6c" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription-buildschema-l2-lambda-fb014cf2776a7d8c0e9f3bbce0361b6c"><span><code>BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_fb014cf2776a7d8c0e9f3bbce0361b6c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_fb014cf2776a7d8c0e9f3bbce0361b6c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription-buildschema-l2-lambda-589fb79a6d3e2959a4a37044011844b6" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription-buildschema-l2-lambda-589fb79a6d3e2959a4a37044011844b6"><span><code>BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_589fb79a6d3e2959a4a37044011844b6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_589fb79a6d3e2959a4a37044011844b6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription-buildschema-l2-lambda-8bf5a874efbe02d284420606108a25cb" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription-buildschema-l2-lambda-8bf5a874efbe02d284420606108a25cb"><span><code>BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_8bf5a874efbe02d284420606108a25cb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_8bf5a874efbe02d284420606108a25cb&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockraycastcomponentdescription-buildschema-l2-lambda-5dc9edb90a48ac3aff1ad1a548af9b94" tabindex="-1"><a class="header-anchor" href="#blockraycastcomponentdescription-buildschema-l2-lambda-5dc9edb90a48ac3aff1ad1a548af9b94"><span><code>BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_5dc9edb90a48ac3aff1ad1a548af9b94&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRaycastComponentDescription::buildSchema::__l2::&lt;lambda_5dc9edb90a48ac3aff1ad1a548af9b94&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockrotationdescription-buildschema-l2-lambda-ad48c97325fe1028e35444e9e43fe6d8" tabindex="-1"><a class="header-anchor" href="#blockrotationdescription-buildschema-l2-lambda-ad48c97325fe1028e35444e9e43fe6d8"><span><code>BlockRotationDescription::buildSchema::__l2::&lt;lambda_ad48c97325fe1028e35444e9e43fe6d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockRotationDescription::buildSchema::__l2::&lt;lambda_ad48c97325fe1028e35444e9e43fe6d8&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockunitcubedescription-buildschema-l2-lambda-19fd5eb0a190a0558be6cf70036e4f47" tabindex="-1"><a class="header-anchor" href="#blockunitcubedescription-buildschema-l2-lambda-19fd5eb0a190a0558be6cf70036e4f47"><span><code>BlockUnitCubeDescription::buildSchema::__l2::&lt;lambda_19fd5eb0a190a0558be6cf70036e4f47&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockUnitCubeDescription::buildSchema::__l2::&lt;lambda_19fd5eb0a190a0558be6cf70036e4f47&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnFallOnTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnFallOnTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-ef8916e3db97f444a0c05fc5425db430" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-ef8916e3db97f444a0c05fc5425db430"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_ef8916e3db97f444a0c05fc5425db430&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_ef8916e3db97f444a0c05fc5425db430&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-000f4e5a520a10ac3ebaba19bf2a65e9" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-000f4e5a520a10ac3ebaba19bf2a65e9"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_000f4e5a520a10ac3ebaba19bf2a65e9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_000f4e5a520a10ac3ebaba19bf2a65e9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-fdb5fee4d3e733bbfc3db9c35163d2af" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-fdb5fee4d3e733bbfc3db9c35163d2af"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_fdb5fee4d3e733bbfc3db9c35163d2af&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_fdb5fee4d3e733bbfc3db9c35163d2af&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-dc70758361f9d984c7cf95f24c605334" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-dc70758361f9d984c7cf95f24c605334"><span><code>BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_dc70758361f9d984c7cf95f24c605334&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnFallOnTrigger&gt;::buildSchema::__l2::&lt;lambda_dc70758361f9d984c7cf95f24c605334&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnInteractTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnInteractTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-a33df2b205b85b239e63f61267080c4a" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-a33df2b205b85b239e63f61267080c4a"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_a33df2b205b85b239e63f61267080c4a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_a33df2b205b85b239e63f61267080c4a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-076c3050c0e5f5733483d25f92b40f6a" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-076c3050c0e5f5733483d25f92b40f6a"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_076c3050c0e5f5733483d25f92b40f6a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_076c3050c0e5f5733483d25f92b40f6a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-9ced8916369862ecd1f019fbfcf13823" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-9ced8916369862ecd1f019fbfcf13823"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_9ced8916369862ecd1f019fbfcf13823&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_9ced8916369862ecd1f019fbfcf13823&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-d814003a632a6cbdb9671d6311392b8f" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-d814003a632a6cbdb9671d6311392b8f"><span><code>BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_d814003a632a6cbdb9671d6311392b8f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnInteractTrigger&gt;::buildSchema::__l2::&lt;lambda_d814003a632a6cbdb9671d6311392b8f&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnPlacedTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnPlacedTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-e8215986e7b31d8dd963ccb19f24bc1c" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-e8215986e7b31d8dd963ccb19f24bc1c"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_e8215986e7b31d8dd963ccb19f24bc1c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_e8215986e7b31d8dd963ccb19f24bc1c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-f48aa65c4d65cdf0f0fa0766d3dcb3ad" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-f48aa65c4d65cdf0f0fa0766d3dcb3ad"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_f48aa65c4d65cdf0f0fa0766d3dcb3ad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_f48aa65c4d65cdf0f0fa0766d3dcb3ad&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-4a014553b7ffe83cbe45da2192597e7b" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-4a014553b7ffe83cbe45da2192597e7b"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_4a014553b7ffe83cbe45da2192597e7b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_4a014553b7ffe83cbe45da2192597e7b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-47afbc0fcbee03dec64a6d7f55c9abb0" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-47afbc0fcbee03dec64a6d7f55c9abb0"><span><code>BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_47afbc0fcbee03dec64a6d7f55c9abb0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlacedTrigger&gt;::buildSchema::__l2::&lt;lambda_47afbc0fcbee03dec64a6d7f55c9abb0&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-435ed67ca33cdf6ce3551e627dde545b" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-435ed67ca33cdf6ce3551e627dde545b"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_435ed67ca33cdf6ce3551e627dde545b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_435ed67ca33cdf6ce3551e627dde545b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-e78fbccb97a8276bca1647984fa77f23" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-e78fbccb97a8276bca1647984fa77f23"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_e78fbccb97a8276bca1647984fa77f23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_e78fbccb97a8276bca1647984fa77f23&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-1e4e182aec1b3e1d24d6fba3cdf70c50" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-1e4e182aec1b3e1d24d6fba3cdf70c50"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_1e4e182aec1b3e1d24d6fba3cdf70c50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_1e4e182aec1b3e1d24d6fba3cdf70c50&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-4b99d462895d28d49e43325b4a39a5dd" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-4b99d462895d28d49e43325b4a39a5dd"><span><code>BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_4b99d462895d28d49e43325b4a39a5dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerDestroyedTrigger&gt;::buildSchema::__l2::&lt;lambda_4b99d462895d28d49e43325b4a39a5dd&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-027de81471dbda20b20e86eedbf98df7" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-027de81471dbda20b20e86eedbf98df7"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_027de81471dbda20b20e86eedbf98df7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_027de81471dbda20b20e86eedbf98df7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-f0f38f51c88a5b42b90f6d3fc2ad3143" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-f0f38f51c88a5b42b90f6d3fc2ad3143"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_f0f38f51c88a5b42b90f6d3fc2ad3143&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_f0f38f51c88a5b42b90f6d3fc2ad3143&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-ebe4b9d77c2a0e21773e7548a78153ea" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-ebe4b9d77c2a0e21773e7548a78153ea"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_ebe4b9d77c2a0e21773e7548a78153ea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_ebe4b9d77c2a0e21773e7548a78153ea&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-833337504ddb4f2a526e6da5743fc5c8" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-833337504ddb4f2a526e6da5743fc5c8"><span><code>BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_833337504ddb4f2a526e6da5743fc5c8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnPlayerPlacingTrigger&gt;::buildSchema::__l2::&lt;lambda_833337504ddb4f2a526e6da5743fc5c8&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnStepOnTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnStepOnTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockTriggerDescription&lt;OnStepOffTrigger&gt; : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mType;</span>
<span class="line">  std::string mCondition;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger-vtbl" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger-vtbl"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockTriggerDescription&lt;OnStepOffTrigger&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-838ec938e898e7fb3a589c9f550675b7" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-838ec938e898e7fb3a589c9f550675b7"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_838ec938e898e7fb3a589c9f550675b7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_838ec938e898e7fb3a589c9f550675b7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-8b344d19ff57fad5d3756f55b27cd212" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-8b344d19ff57fad5d3756f55b27cd212"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_8b344d19ff57fad5d3756f55b27cd212&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_8b344d19ff57fad5d3756f55b27cd212&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-25314afb71d3d21539214ab6b84d06e6" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-25314afb71d3d21539214ab6b84d06e6"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_25314afb71d3d21539214ab6b84d06e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_25314afb71d3d21539214ab6b84d06e6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-b50379f0dbf3bd5c47b0a110b58ddceb" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-b50379f0dbf3bd5c47b0a110b58ddceb"><span><code>BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_b50379f0dbf3bd5c47b0a110b58ddceb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOnTrigger&gt;::buildSchema::__l2::&lt;lambda_b50379f0dbf3bd5c47b0a110b58ddceb&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e2c75ed82a16fa8196b889610cdebfc3" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e2c75ed82a16fa8196b889610cdebfc3"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_e2c75ed82a16fa8196b889610cdebfc3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_e2c75ed82a16fa8196b889610cdebfc3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-751a230ba8aa7b7ae9f90fb86eaecaa4" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-751a230ba8aa7b7ae9f90fb86eaecaa4"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_751a230ba8aa7b7ae9f90fb86eaecaa4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_751a230ba8aa7b7ae9f90fb86eaecaa4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e702ff7c6ebe41cd2656da0166ab18d5" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e702ff7c6ebe41cd2656da0166ab18d5"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_e702ff7c6ebe41cd2656da0166ab18d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_e702ff7c6ebe41cd2656da0166ab18d5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-ba303f0246cd6fbc9f8024e4d67a8b23" tabindex="-1"><a class="header-anchor" href="#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-ba303f0246cd6fbc9f8024e4d67a8b23"><span><code>BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_ba303f0246cd6fbc9f8024e4d67a8b23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTriggerDescription&lt;OnStepOffTrigger&gt;::buildSchema::__l2::&lt;lambda_ba303f0246cd6fbc9f8024e4d67a8b23&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-nonownerpointer-dimension" tabindex="-1"><a class="header-anchor" href="#bedrock-nonownerpointer-dimension"><span><code>Bedrock::NonOwnerPointer&lt;Dimension&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::NonOwnerPointer&lt;Dimension&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Bedrock::EnableNonOwnerReferences::ControlBlock&gt; mControlBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockselector-vtbl" tabindex="-1"><a class="header-anchor" href="#blockselector-vtbl"><span><code>BlockSelector_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockSelector_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSelector)(BlockSelector *this);</span>
<span class="line">  const Block *(__fastcall *next)(BlockSelector *this, Random *, int, int, int, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bastionpiece" tabindex="-1"><a class="header-anchor" href="#bastionpiece"><span><code>BastionPiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BastionPiece : PoolElementStructurePiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bastionpiece-addpieces-l16-lambda-c6c2cc063f3e8775940af7b1bdaadfd2" tabindex="-1"><a class="header-anchor" href="#bastionpiece-addpieces-l16-lambda-c6c2cc063f3e8775940af7b1bdaadfd2"><span><code>BastionPiece::addPieces::__l16::&lt;lambda_c6c2cc063f3e8775940af7b1bdaadfd2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BastionPiece::addPieces::__l16::&lt;lambda_c6c2cc063f3e8775940af7b1bdaadfd2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-enum-particletype-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-enum-particletype-std-string"><span><code>BidirectionalUnorderedMap&lt;enum ParticleType,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BidirectionalUnorderedMap&lt;enum ParticleType,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum ParticleType,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,enum ParticleType&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-platformbootstrap" tabindex="-1"><a class="header-anchor" href="#bedrock-platformbootstrap"><span><code>Bedrock::PlatformBootstrap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::PlatformBootstrap</span>
<span class="line">{</span>
<span class="line">  Bedrock::PlatformBootstrap_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-platformbootstrap-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-platformbootstrap-vtbl"><span><code>Bedrock::PlatformBootstrap_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::PlatformBootstrap_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PlatformBootstrap)(Bedrock::PlatformBootstrap *this);</span>
<span class="line">  void (__fastcall *initialize)(Bedrock::PlatformBootstrap *this);</span>
<span class="line">  const char *(__fastcall *getDataRoot)(Bedrock::PlatformBootstrap *this, unsigned __int64 *);</span>
<span class="line">  unsigned __int64 (__fastcall *rawLoadAssetFile)(Bedrock::PlatformBootstrap *this, char *, unsigned __int64, const char *, char *, unsigned __int64);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonabledefinition" tabindex="-1"><a class="header-anchor" href="#balloonabledefinition"><span><code>BalloonableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableDefinition</span>
<span class="line">{</span>
<span class="line">  float mSoftDistance;</span>
<span class="line">  float mMaxDistance;</span>
<span class="line">  float mInvMass;</span>
<span class="line">  DefinitionTrigger mOnBalloon;</span>
<span class="line">  DefinitionTrigger mOnUnballoon;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonablecomponent" tabindex="-1"><a class="header-anchor" href="#balloonablecomponent"><span><code>BalloonableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ballooncomponent" tabindex="-1"><a class="header-anchor" href="#ballooncomponent"><span><code>BalloonComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) BalloonComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID mAttachedID;</span>
<span class="line">  float mMaxHeight;</span>
<span class="line">  bool mShouldDropAttached;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloondefinition" tabindex="-1"><a class="header-anchor" href="#balloondefinition"><span><code>BalloonDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonDefinition</span>
<span class="line">{</span>
<span class="line">  Vec3 mLiftForce;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-void" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-void"><span><code>BehaviorData::Data&lt;void *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;void *&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  void *mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-void-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-void-vtbl"><span><code>BehaviorData::Data&lt;void *&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;void *&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklisteventmap" tabindex="-1"><a class="header-anchor" href="#blocklisteventmap"><span><code>BlockListEventMap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockListEventMap</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mBlockDescriptors;</span>
<span class="line">  std::string mEventName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensordefinition" tabindex="-1"><a class="header-anchor" href="#blockbreaksensordefinition"><span><code>BlockBreakSensorDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreakSensorDefinition</span>
<span class="line">{</span>
<span class="line">  float mSensorRadius;</span>
<span class="line">  std::vector&lt;BlockListEventMap&gt; mBlockSets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostitem" tabindex="-1"><a class="header-anchor" href="#boostitem"><span><code>BoostItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BoostItem</span>
<span class="line">{</span>
<span class="line">  ItemDescriptor mItemDescriptor;</span>
<span class="line">  ItemDescriptor mReplacementItemDescriptor;</span>
<span class="line">  int mDamageAmount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostabledefinition" tabindex="-1"><a class="header-anchor" href="#boostabledefinition"><span><code>BoostableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BoostableDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BoostItem&gt; mBoostItems;</span>
<span class="line">  float mMaxBoostTime;</span>
<span class="line">  float mSpeedModifier;</span>
<span class="line">  float mFovMod;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bossdefinition" tabindex="-1"><a class="header-anchor" href="#bossdefinition"><span><code>BossDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BossDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  bool mShouldDarkenSky;</span>
<span class="line">  int mHudRange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockscomponent" tabindex="-1"><a class="header-anchor" href="#breakblockscomponent"><span><code>BreakBlocksComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlocksComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationcomponent" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationcomponent"><span><code>BreakDoorAnnotationComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorAnnotationComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  int mBreakTicks;</span>
<span class="line">  Difficulty mMinDifficulty;</span>
<span class="line">  ActorUniqueID mTargetID;</span>
<span class="line">  int mBreakingTime;</span>
<span class="line">  std::optional&lt;BlockPos&gt; mObstructionPos;</span>
<span class="line">  unsigned __int64 mLastPathIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breathabledefinition" tabindex="-1"><a class="header-anchor" href="#breathabledefinition"><span><code>BreathableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreathableDefinition</span>
<span class="line">{</span>
<span class="line">  int mTotalSupply;</span>
<span class="line">  int mSuffocateTime;</span>
<span class="line">  float mInhaleTime;</span>
<span class="line">  bool mBreathesAir;</span>
<span class="line">  bool mBreathesWater;</span>
<span class="line">  bool mBreathesLava;</span>
<span class="line">  bool mBreathesSolids;</span>
<span class="line">  bool mGeneratesBubbles;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mBreathableBlocks;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mNonBreathableBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedabledefinition" tabindex="-1"><a class="header-anchor" href="#breedabledefinition"><span><code>BreedableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BreedableDefinition</span>
<span class="line">{</span>
<span class="line">  bool mTame;</span>
<span class="line">  bool mBlendAttributes;</span>
<span class="line">  float mExtraChance;</span>
<span class="line">  float mBreedCooldownTimeSeconds;</span>
<span class="line">  bool mInheritTamed;</span>
<span class="line">  bool mAllowSitting;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mBreedItems;</span>
<span class="line">  std::vector&lt;EnvironmentRequirement&gt; mEnvironmentRequirements;</span>
<span class="line">  ActorFilterGroup mLoveFilter;</span>
<span class="line">  std::vector&lt;BreedableType&gt; mBreedTypes;</span>
<span class="line">  MutationFactorData mMutationFactors;</span>
<span class="line">  DenySameParentsVariantData mDenyParentsVariant;</span>
<span class="line">  bool mCausesPregnancy;</span>
<span class="line">  bool mRequireFullHealth;</span>
<span class="line">  int mMinNumberChildren;</span>
<span class="line">  int mMaxNumberChildren;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedablecomponent" tabindex="-1"><a class="header-anchor" href="#breedablecomponent"><span><code>BreedableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  const BreedableDefinition *mStaticData;</span>
<span class="line">  int mLoveTimer;</span>
<span class="line">  int mBreedCooldown;</span>
<span class="line">  int mBreedCooldownTime;</span>
<span class="line">  bool mInheritTamed;</span>
<span class="line">  bool mCausesPregnancy;</span>
<span class="line">  ActorUniqueID mLoveCause;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeabledefinition" tabindex="-1"><a class="header-anchor" href="#bribeabledefinition"><span><code>BribeableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BribeableDefinition</span>
<span class="line">{</span>
<span class="line">  float mBribeCooldown;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mBribeItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeablecomponent" tabindex="-1"><a class="header-anchor" href="#bribeablecomponent"><span><code>BribeableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BribeableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  const BribeableDefinition *mStaticData;</span>
<span class="line">  int mBribeTimer;</span>
<span class="line">  int mBribeCooldown;</span>
<span class="line">  int mBribeCooldownTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bucketablecomponent" tabindex="-1"><a class="header-anchor" href="#bucketablecomponent"><span><code>BucketableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BucketableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burnsindaylightdefinition" tabindex="-1"><a class="header-anchor" href="#burnsindaylightdefinition"><span><code>BurnsInDaylightDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BurnsInDaylightDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bucketablecomponent-getinteraction-l5-lambda-8e84a487e038ec80f3efce51137fd1cb" tabindex="-1"><a class="header-anchor" href="#bucketablecomponent-getinteraction-l5-lambda-8e84a487e038ec80f3efce51137fd1cb"><span><code>BucketableComponent::getInteraction::__l5::&lt;lambda_8e84a487e038ec80f3efce51137fd1cb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BucketableComponent::getInteraction::__l5::&lt;lambda_8e84a487e038ec80f3efce51137fd1cb&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *owner;</span>
<span class="line">  Player *player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeablecomponent-getinteraction-l14-lambda-1e8d22cdb9df4c9a9c784cbb7b6ea1eb" tabindex="-1"><a class="header-anchor" href="#bribeablecomponent-getinteraction-l14-lambda-1e8d22cdb9df4c9a9c784cbb7b6ea1eb"><span><code>BribeableComponent::getInteraction::__l14::&lt;lambda_1e8d22cdb9df4c9a9c784cbb7b6ea1eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BribeableComponent::getInteraction::__l14::&lt;lambda_1e8d22cdb9df4c9a9c784cbb7b6ea1eb&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *owner;</span>
<span class="line">  Player *player;</span>
<span class="line">  BribeableComponent *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeabledefinition-buildschema-l2-lambda-3ea2844f8ccdbf4ca2d8554f79132ad2" tabindex="-1"><a class="header-anchor" href="#bribeabledefinition-buildschema-l2-lambda-3ea2844f8ccdbf4ca2d8554f79132ad2"><span><code>BribeableDefinition::buildSchema::__l2::&lt;lambda_3ea2844f8ccdbf4ca2d8554f79132ad2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BribeableDefinition::buildSchema::__l2::&lt;lambda_3ea2844f8ccdbf4ca2d8554f79132ad2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedablecomponent-getinteraction-l23-lambda-0ca09d6f42b0b2725246a39b155b6d02" tabindex="-1"><a class="header-anchor" href="#breedablecomponent-getinteraction-l23-lambda-0ca09d6f42b0b2725246a39b155b6d02"><span><code>BreedableComponent::getInteraction::__l23::&lt;lambda_0ca09d6f42b0b2725246a39b155b6d02&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedableComponent::getInteraction::__l23::&lt;lambda_0ca09d6f42b0b2725246a39b155b6d02&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  Actor *owner;</span>
<span class="line">  BreedableComponent *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedabledefinition-buildschema-l2-lambda-687cb70991334864e2f4d9922259ea88" tabindex="-1"><a class="header-anchor" href="#breedabledefinition-buildschema-l2-lambda-687cb70991334864e2f4d9922259ea88"><span><code>BreedableDefinition::buildSchema::__l2::&lt;lambda_687cb70991334864e2f4d9922259ea88&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedableDefinition::buildSchema::__l2::&lt;lambda_687cb70991334864e2f4d9922259ea88&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedabledefinition-buildschema-l2-lambda-3b992a0d9419e48052bc453e3b7aa62c" tabindex="-1"><a class="header-anchor" href="#breedabledefinition-buildschema-l2-lambda-3b992a0d9419e48052bc453e3b7aa62c"><span><code>BreedableDefinition::buildSchema::__l2::&lt;lambda_3b992a0d9419e48052bc453e3b7aa62c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedableDefinition::buildSchema::__l2::&lt;lambda_3b992a0d9419e48052bc453e3b7aa62c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationcomponent-obstructioncheck-l65-lambda-29299142ebba9cf19320f4a54667acc9" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationcomponent-obstructioncheck-l65-lambda-29299142ebba9cf19320f4a54667acc9"><span><code>BreakDoorAnnotationComponent::obstructionCheck::__l65::&lt;lambda_29299142ebba9cf19320f4a54667acc9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorAnnotationComponent::obstructionCheck::__l65::&lt;lambda_29299142ebba9cf19320f4a54667acc9&gt;</span>
<span class="line">{</span>
<span class="line">  Mob *mob;</span>
<span class="line">  const Block *block;</span>
<span class="line">  const BlockPos *nodePos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockscomponent-breaknearbyblocks-l29-lambda-99cbf2916026c93342b5e87247c4b1b8" tabindex="-1"><a class="header-anchor" href="#breakblockscomponent-breaknearbyblocks-l29-lambda-99cbf2916026c93342b5e87247c4b1b8"><span><code>BreakBlocksComponent::breakNearbyBlocks::__l29::&lt;lambda_99cbf2916026c93342b5e87247c4b1b8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlocksComponent::breakNearbyBlocks::__l29::&lt;lambda_99cbf2916026c93342b5e87247c4b1b8&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *actor;</span>
<span class="line">  const Block *breakBlock;</span>
<span class="line">  const int *x;</span>
<span class="line">  const int *y;</span>
<span class="line">  const int *z;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensorcomponent-initialize-l2-lambda-1b6de276689ee3844025b88c9022f8f6" tabindex="-1"><a class="header-anchor" href="#blockbreaksensorcomponent-initialize-l2-lambda-1b6de276689ee3844025b88c9022f8f6"><span><code>BlockBreakSensorComponent::initialize::__l2::&lt;lambda_1b6de276689ee3844025b88c9022f8f6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreakSensorComponent::initialize::__l2::&lt;lambda_1b6de276689ee3844025b88c9022f8f6&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *actor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonablecomponent-getinteraction-l16-lambda-4eb329858ee62965ee9c218f5145de0f" tabindex="-1"><a class="header-anchor" href="#balloonablecomponent-getinteraction-l16-lambda-4eb329858ee62965ee9c218f5145de0f"><span><code>BalloonableComponent::getInteraction::__l16::&lt;lambda_4eb329858ee62965ee9c218f5145de0f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableComponent::getInteraction::__l16::&lt;lambda_4eb329858ee62965ee9c218f5145de0f&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  Actor *owner;</span>
<span class="line">  BalloonableComponent *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonablecomponent-getinteraction-l8-lambda-88cf98eb28c9260dfe790cfd08438e9d" tabindex="-1"><a class="header-anchor" href="#balloonablecomponent-getinteraction-l8-lambda-88cf98eb28c9260dfe790cfd08438e9d"><span><code>BalloonableComponent::getInteraction::__l8::&lt;lambda_88cf98eb28c9260dfe790cfd08438e9d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableComponent::getInteraction::__l8::&lt;lambda_88cf98eb28c9260dfe790cfd08438e9d&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *owner;</span>
<span class="line">  BalloonableComponent *const __this;</span>
<span class="line">  Actor *balloon;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonabledefinition-buildschema-l2-lambda-0d60382c8be5f5bc0dca2a0f426db4a1" tabindex="-1"><a class="header-anchor" href="#balloonabledefinition-buildschema-l2-lambda-0d60382c8be5f5bc0dca2a0f426db4a1"><span><code>BalloonableDefinition::buildSchema::__l2::&lt;lambda_0d60382c8be5f5bc0dca2a0f426db4a1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableDefinition::buildSchema::__l2::&lt;lambda_0d60382c8be5f5bc0dca2a0f426db4a1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonabledefinition-buildschema-l2-lambda-e55aca88682b256223a20f461ea159b2" tabindex="-1"><a class="header-anchor" href="#balloonabledefinition-buildschema-l2-lambda-e55aca88682b256223a20f461ea159b2"><span><code>BalloonableDefinition::buildSchema::__l2::&lt;lambda_e55aca88682b256223a20f461ea159b2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonableDefinition::buildSchema::__l2::&lt;lambda_e55aca88682b256223a20f461ea159b2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailblock" tabindex="-1"><a class="header-anchor" href="#baserailblock"><span><code>BaseRailBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BaseRailBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  const bool mUsesDataBit;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailblock-vtbl" tabindex="-1"><a class="header-anchor" href="#baserailblock-vtbl"><span><code>BaseRailBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BaseRailBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildschemaspawnactorparameters-l2-lambda-f4d58fb7fa9c4857247880a11bbd432f" tabindex="-1"><a class="header-anchor" href="#buildschemaspawnactorparameters-l2-lambda-f4d58fb7fa9c4857247880a11bbd432f"><span><code>buildSchemaSpawnActorParameters::__l2::&lt;lambda_f4d58fb7fa9c4857247880a11bbd432f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildSchemaSpawnActorParameters::__l2::&lt;lambda_f4d58fb7fa9c4857247880a11bbd432f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildschemaspawnactorparameters-l2-lambda-5f64cd3a4c891918e62801dca2a65523" tabindex="-1"><a class="header-anchor" href="#buildschemaspawnactorparameters-l2-lambda-5f64cd3a4c891918e62801dca2a65523"><span><code>buildSchemaSpawnActorParameters::__l2::&lt;lambda_5f64cd3a4c891918e62801dca2a65523&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildSchemaSpawnActorParameters::__l2::&lt;lambda_5f64cd3a4c891918e62801dca2a65523&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviorsystem" tabindex="-1"><a class="header-anchor" href="#behaviorsystem"><span><code>BehaviorSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviorsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviorsystem-vtbl"><span><code>BehaviorSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensorsystem" tabindex="-1"><a class="header-anchor" href="#blockbreaksensorsystem"><span><code>BlockBreakSensorSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreakSensorSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensorsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#blockbreaksensorsystem-vtbl"><span><code>BlockBreakSensorSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockBreakSensorSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bodycontrolcomponent" tabindex="-1"><a class="header-anchor" href="#bodycontrolcomponent"><span><code>BodyControlComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BodyControlComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; mBodyControl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bodycontrolsystem" tabindex="-1"><a class="header-anchor" href="#bodycontrolsystem"><span><code>BodyControlSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BodyControlSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bodycontrolsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#bodycontrolsystem-vtbl"><span><code>BodyControlSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BodyControlSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostablesystem" tabindex="-1"><a class="header-anchor" href="#boostablesystem"><span><code>BoostableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoostableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostablesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#boostablesystem-vtbl"><span><code>BoostableSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BoostableSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockssystem" tabindex="-1"><a class="header-anchor" href="#breakblockssystem"><span><code>BreakBlocksSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlocksSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockssystem-vtbl" tabindex="-1"><a class="header-anchor" href="#breakblockssystem-vtbl"><span><code>BreakBlocksSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreakBlocksSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationsystem" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationsystem"><span><code>BreakDoorAnnotationSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorAnnotationSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationsystem-vtbl"><span><code>BreakDoorAnnotationSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreakDoorAnnotationSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breathablesystem" tabindex="-1"><a class="header-anchor" href="#breathablesystem"><span><code>BreathableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreathableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breathablesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#breathablesystem-vtbl"><span><code>BreathableSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreathableSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadutil" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadutil"><span><code>Bedrock::Threading::ThreadUtil</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::ThreadUtil</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="batchednetworkpeer-startsendtask-l2-lambda-bd091a0e94bce2f3d40cd13870786e14" tabindex="-1"><a class="header-anchor" href="#batchednetworkpeer-startsendtask-l2-lambda-bd091a0e94bce2f3d40cd13870786e14"><span><code>BatchedNetworkPeer::_startSendTask::__l2::&lt;lambda_bd091a0e94bce2f3d40cd13870786e14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BatchedNetworkPeer::_startSendTask::__l2::&lt;lambda_bd091a0e94bce2f3d40cd13870786e14&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;std::function&lt;void __cdecl(void)&gt;&gt; &gt; sharedCallbackList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="batchednetworkpeer-startsendtask-l2-lambda-f57f9e03a6e9b4ead48e0fa8aaeaf5db" tabindex="-1"><a class="header-anchor" href="#batchednetworkpeer-startsendtask-l2-lambda-f57f9e03a6e9b4ead48e0fa8aaeaf5db"><span><code>BatchedNetworkPeer::_startSendTask::__l2::&lt;lambda_f57f9e03a6e9b4ead48e0fa8aaeaf5db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BatchedNetworkPeer::_startSendTask::__l2::&lt;lambda_f57f9e03a6e9b4ead48e0fa8aaeaf5db&gt;</span>
<span class="line">{</span>
<span class="line">  BatchedNetworkPeer *const __this;</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;std::function&lt;void __cdecl(void)&gt;&gt; &gt; sharedCallbackList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookcloningrecipe" tabindex="-1"><a class="header-anchor" href="#bookcloningrecipe"><span><code>BookCloningRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BookCloningRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookcloningrecipe-vtbl" tabindex="-1"><a class="header-anchor" href="#bookcloningrecipe-vtbl"><span><code>BookCloningRecipe_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BookCloningRecipe_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Recipe)(Recipe *this);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *assemble)(Recipe *this, CraftingContainer *);</span>
<span class="line">  int (__fastcall *getCraftingSize)(Recipe *this);</span>
<span class="line">  const RecipeIngredient *(__fastcall *getIngredient)(Recipe *this, int, int);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *getResultItem)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isShapeless)(Recipe *this);</span>
<span class="line">  bool (__fastcall *matches)(Recipe *this, CraftingContainer *, Level *);</span>
<span class="line">  int (__fastcall *size)(Recipe *this);</span>
<span class="line">  const mce::UUID *(__fastcall *getId)(Recipe *this);</span>
<span class="line">  const ItemPack *(__fastcall *getItemPack)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isMultiRecipe)(Recipe *this);</span>
<span class="line">  std::string *(__fastcall *getTypeString)(Recipe *this, std::string *result);</span>
<span class="line">  bool (__fastcall *itemValidForRecipe)(Recipe *this, const ItemDescriptor *, const ItemStack *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, int, int, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerduplicaterecipe" tabindex="-1"><a class="header-anchor" href="#bannerduplicaterecipe"><span><code>BannerDuplicateRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerDuplicateRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerduplicaterecipe-vtbl" tabindex="-1"><a class="header-anchor" href="#bannerduplicaterecipe-vtbl"><span><code>BannerDuplicateRecipe_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BannerDuplicateRecipe_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Recipe)(Recipe *this);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *assemble)(Recipe *this, CraftingContainer *);</span>
<span class="line">  int (__fastcall *getCraftingSize)(Recipe *this);</span>
<span class="line">  const RecipeIngredient *(__fastcall *getIngredient)(Recipe *this, int, int);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *getResultItem)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isShapeless)(Recipe *this);</span>
<span class="line">  bool (__fastcall *matches)(Recipe *this, CraftingContainer *, Level *);</span>
<span class="line">  int (__fastcall *size)(Recipe *this);</span>
<span class="line">  const mce::UUID *(__fastcall *getId)(Recipe *this);</span>
<span class="line">  const ItemPack *(__fastcall *getItemPack)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isMultiRecipe)(Recipe *this);</span>
<span class="line">  std::string *(__fastcall *getTypeString)(Recipe *this, std::string *result);</span>
<span class="line">  bool (__fastcall *itemValidForRecipe)(Recipe *this, const ItemDescriptor *, const ItemStack *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, int, int, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="banneraddpatternrecipe" tabindex="-1"><a class="header-anchor" href="#banneraddpatternrecipe"><span><code>BannerAddPatternRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerAddPatternRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="banneraddpatternrecipe-vtbl" tabindex="-1"><a class="header-anchor" href="#banneraddpatternrecipe-vtbl"><span><code>BannerAddPatternRecipe_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BannerAddPatternRecipe_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Recipe)(Recipe *this);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *assemble)(Recipe *this, CraftingContainer *);</span>
<span class="line">  int (__fastcall *getCraftingSize)(Recipe *this);</span>
<span class="line">  const RecipeIngredient *(__fastcall *getIngredient)(Recipe *this, int, int);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *getResultItem)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isShapeless)(Recipe *this);</span>
<span class="line">  bool (__fastcall *matches)(Recipe *this, CraftingContainer *, Level *);</span>
<span class="line">  int (__fastcall *size)(Recipe *this);</span>
<span class="line">  const mce::UUID *(__fastcall *getId)(Recipe *this);</span>
<span class="line">  const ItemPack *(__fastcall *getItemPack)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isMultiRecipe)(Recipe *this);</span>
<span class="line">  std::string *(__fastcall *getTypeString)(Recipe *this, std::string *result);</span>
<span class="line">  bool (__fastcall *itemValidForRecipe)(Recipe *this, const ItemDescriptor *, const ItemStack *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, int, int, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegamepackslices-basegameversionpack" tabindex="-1"><a class="header-anchor" href="#basegamepackslices-basegameversionpack"><span><code>BaseGamePackSlices::BaseGameVersionPack</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGamePackSlices::BaseGameVersionPack</span>
<span class="line">{</span>
<span class="line">  BaseGameVersion mBaseGameVersion;</span>
<span class="line">  ResourcePack *mPack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadlocalvalueaccessor-resourceloadmanager-resourceloadtaskgroup" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadlocalvalueaccessor-resourceloadmanager-resourceloadtaskgroup"><span><code>Bedrock::Threading::ThreadLocalValueAccessor&lt;ResourceLoadManager::ResourceLoadTaskGroup *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::ThreadLocalValueAccessor&lt;ResourceLoadManager::ResourceLoadTaskGroup *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncresult-completeresult-std-string" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncresult-completeresult-std-string"><span><code>Bedrock::Threading::AsyncResult::CompleteResult&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::AsyncResult::CompleteResult&lt;std::string &gt; : Bedrock::Threading::IAsyncResult&lt;std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::string mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncresult-completeresult-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncresult-completeresult-std-string-vtbl"><span><code>Bedrock::Threading::AsyncResult::CompleteResult&lt;std::string &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::AsyncResult::CompleteResult&lt;std::string &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::string &gt;)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::string *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this, std::string *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::string &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::string &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image"><span><code>Bedrock::Threading::AsyncDeferredResultT&lt;std::shared_ptr&lt;mce::Image&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::AsyncDeferredResultT&lt;std::shared_ptr&lt;mce::Image&gt; &gt; : Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  Bedrock::Threading::AsyncDeferredResultT&lt;std::shared_ptr&lt;mce::Image&gt; &gt;::DelayStatus mStatus;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; const &amp;)&gt;&gt; mComplete;</span>
<span class="line">  std::optional&lt;std::shared_ptr&lt;mce::Image&gt; &gt; mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image-vtbl"><span><code>Bedrock::Threading::AsyncDeferredResultT&lt;std::shared_ptr&lt;mce::Image&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::AsyncDeferredResultT&lt;std::shared_ptr&lt;mce::Image&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt;)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::shared_ptr&lt;mce::Image&gt; *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this, std::shared_ptr&lt;mce::Image&gt; *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::shared_ptr&lt;mce::Image&gt; &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string"><span><code>Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; : Bedrock::Threading::AsyncBase</span>
<span class="line">{</span>
<span class="line">  Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string-vtbl"><span><code>Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;,std::allocator&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::basic_string&lt;char,std::char_traits&lt;char)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-whenall-std-string" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-whenall-std-string"><span><code>Bedrock::Threading::WhenAll&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::WhenAll&lt;std::string &gt; : Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  Bedrock::Threading::AsyncStatus mStatus;</span>
<span class="line">  unsigned __int64 mPending;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; const &amp;)&gt;&gt; mCallbacks;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; mActions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-whenall-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-whenall-std-string-vtbl"><span><code>Bedrock::Threading::WhenAll&lt;std::string &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::WhenAll&lt;std::string &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;,std::allocator&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::basic_string&lt;char,std::char_traits&lt;char)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt;&gt; &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-whenall-std-string-initialize-l6-lambda-ea6d99b805a01534f505aa92a5af28d0" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-whenall-std-string-initialize-l6-lambda-ea6d99b805a01534f505aa92a5af28d0"><span><code>Bedrock::Threading::WhenAll&lt;std::string &gt;::initialize::__l6::&lt;lambda_ea6d99b805a01534f505aa92a5af28d0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::WhenAll&lt;std::string &gt;::initialize::__l6::&lt;lambda_ea6d99b805a01534f505aa92a5af28d0&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Bedrock::Threading::WhenAll&lt;std::string &gt; &gt; sharedThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockitems" tabindex="-1"><a class="header-anchor" href="#bedrockitems"><span><code>BedrockItems</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedrockItems</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktickingqueue-hashblocktick" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue-hashblocktick"><span><code>BlockTickingQueue::HashBlockTick</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockTickingQueue::HashBlockTick</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bossbarcommand" tabindex="-1"><a class="header-anchor" href="#bossbarcommand"><span><code>BossbarCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) BossbarCommand : Command</span>
<span class="line">{</span>
<span class="line">  BossbarCommand::BossbarAction mAction;</span>
<span class="line">  BossbarCommand::BossbarGetOption mGetOption;</span>
<span class="line">  _BYTE mSetOption[4];</span>
<span class="line">  std::string mId;</span>
<span class="line">  Json::Value mName;</span>
<span class="line">  BossBarColor mColor;</span>
<span class="line">  int mMax;</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  int mValue;</span>
<span class="line">  bool mVisible;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bossbarcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#bossbarcommand-vtbl"><span><code>BossbarCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BossbarCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-enum-itemacquisitionmethod-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-enum-itemacquisitionmethod-std-string"><span><code>BidirectionalUnorderedMap&lt;enum ItemAcquisitionMethod,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BidirectionalUnorderedMap&lt;enum ItemAcquisitionMethod,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum ItemAcquisitionMethod,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,enum ItemAcquisitionMethod&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-enum-itemusemethod-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-enum-itemusemethod-std-string"><span><code>BidirectionalUnorderedMap&lt;enum ItemUseMethod,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BidirectionalUnorderedMap&lt;enum ItemUseMethod,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum ItemUseMethod,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,enum ItemUseMethod&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklistserializer" tabindex="-1"><a class="header-anchor" href="#blocklistserializer"><span><code>BlockListSerializer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockListSerializer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="backing-store-struct" tabindex="-1"><a class="header-anchor" href="#backing-store-struct"><span><code>backing_store_struct</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct backing_store_struct</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *read_backing_store)(jpeg_common_struct *, backing_store_struct *, void *, int, int);</span>
<span class="line">  void (__fastcall *write_backing_store)(jpeg_common_struct *, backing_store_struct *, void *, int, int);</span>
<span class="line">  void (__fastcall *close_backing_store)(jpeg_common_struct *, backing_store_struct *);</span>
<span class="line">  _iobuf *temp_file;</span>
<span class="line">  char temp_name[64];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-tlsdetail-defaultconstructor-random-void" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-tlsdetail-defaultconstructor-random-void"><span><code>Bedrock::Threading::TLSDetail::DefaultConstructor&lt;Random,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::TLSDetail::DefaultConstructor&lt;Random,void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-tlsdetail-defaultconstructor-random-void-create-l2-lambda-c5e437940b24146f2fb7ba5b5af46ca8" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-tlsdetail-defaultconstructor-random-void-create-l2-lambda-c5e437940b24146f2fb7ba5b5af46ca8"><span><code>Bedrock::Threading::TLSDetail::DefaultConstructor&lt;Random,void&gt;::create::__l2::&lt;lambda_c5e437940b24146f2fb7ba5b5af46ca8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::TLSDetail::DefaultConstructor&lt;Random,void&gt;::create::__l2::&lt;lambda_c5e437940b24146f2fb7ba5b5af46ca8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-std-string-enum-actordamagecause" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-string-enum-actordamagecause"><span><code>BidirectionalUnorderedMap&lt;std::string,enum ActorDamageCause&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BidirectionalUnorderedMap&lt;std::string,enum ActorDamageCause&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,enum ActorDamageCause&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;enum ActorDamageCause,std::string&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string"><span><code>Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; : Bedrock::Threading::AsyncBase</span>
<span class="line">{</span>
<span class="line">  Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string-vtbl"><span><code>Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string"><span><code>Bedrock::Threading::AsyncDeferredResultT&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::AsyncDeferredResultT&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; : Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  Bedrock::Threading::AsyncDeferredResultT&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;::DelayStatus mStatus;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; const &amp;)&gt;&gt; mComplete;</span>
<span class="line">  std::optional&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string-vtbl"><span><code>Bedrock::Threading::AsyncDeferredResultT&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Bedrock::Threading::AsyncDeferredResultT&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt;)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::exception_ptr *result);</span>
<span class="line">  std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; *(__fastcall *getResult)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;std::pair&lt;Json::Value,Core::PathBuffer&lt;std::string &gt; &gt; &gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition"><span><code>BaseGoalDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  BaseGoalDefinition_vtbl *__vftable /*VFT*/;</span>
<span class="line">  int mPriority;</span>
<span class="line">  int mControlFlags;</span>
<span class="line">  std::string mName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-vtbl"><span><code>BaseGoalDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BaseGoalDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breatheairgoal" tabindex="-1"><a class="header-anchor" href="#breatheairgoal"><span><code>BreatheAirGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BreatheAirGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  Vec3 mWanted;</span>
<span class="line">  float mSpeedMod;</span>
<span class="line">  int mRadius;</span>
<span class="line">  int mStartBreath;</span>
<span class="line">  bool mEndsInAir;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breatheairgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#breatheairgoal-vtbl"><span><code>BreatheAirGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreatheAirGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-d8612f873e3b81f52251871d1b9a99f9" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-d8612f873e3b81f52251871d1b9a99f9"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_d8612f873e3b81f52251871d1b9a99f9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_d8612f873e3b81f52251871d1b9a99f9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-5f47e7c4535a8e8b6eb9aa52e1794f25" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-5f47e7c4535a8e8b6eb9aa52e1794f25"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_5f47e7c4535a8e8b6eb9aa52e1794f25&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_5f47e7c4535a8e8b6eb9aa52e1794f25&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-10b1270a68118e20f7f1d196815febb1" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-10b1270a68118e20f7f1d196815febb1"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_10b1270a68118e20f7f1d196815febb1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_10b1270a68118e20f7f1d196815febb1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-e7713cd94131b6e804ff7baff09e844c" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-e7713cd94131b6e804ff7baff09e844c"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_e7713cd94131b6e804ff7baff09e844c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_e7713cd94131b6e804ff7baff09e844c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-9fe4dd819da38dc1eae3af426a0fcc90" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-9fe4dd819da38dc1eae3af426a0fcc90"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_9fe4dd819da38dc1eae3af426a0fcc90&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_9fe4dd819da38dc1eae3af426a0fcc90&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegoaldefinition-buildschemabase-l2-lambda-78da3d7fc4f3f9c053018dec9b623030" tabindex="-1"><a class="header-anchor" href="#basegoaldefinition-buildschemabase-l2-lambda-78da3d7fc4f3f9c053018dec9b623030"><span><code>BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_78da3d7fc4f3f9c053018dec9b623030&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseGoalDefinition::buildSchemaBase::__l2::&lt;lambda_78da3d7fc4f3f9c053018dec9b623030&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bat" tabindex="-1"><a class="header-anchor" href="#bat"><span><code>Bat</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bat : Mob</span>
<span class="line">{</span>
<span class="line">  bool mWasResting;</span>
<span class="line">  Vec3 mTargetPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bee" tabindex="-1"><a class="header-anchor" href="#bee"><span><code>Bee</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Bee : Animal</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mNormalLoop;</span>
<span class="line">  unsigned __int64 mAggressiveLoop;</span>
<span class="line">  float mLoopSoundSpeed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bee-registerloopingsounds-l2-lambda-8b16ca835b74e115732146567a1e7f3b" tabindex="-1"><a class="header-anchor" href="#bee-registerloopingsounds-l2-lambda-8b16ca835b74e115732146567a1e7f3b"><span><code>Bee::_registerLoopingSounds::__l2::&lt;lambda_8b16ca835b74e115732146567a1e7f3b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bee::_registerLoopingSounds::__l2::&lt;lambda_8b16ca835b74e115732146567a1e7f3b&gt;</span>
<span class="line">{</span>
<span class="line">  Bee *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bee-registerloopingsounds-l2-lambda-fe84468281a4fb95c579b7348cca4739" tabindex="-1"><a class="header-anchor" href="#bee-registerloopingsounds-l2-lambda-fe84468281a4fb95c579b7348cca4739"><span><code>Bee::_registerLoopingSounds::__l2::&lt;lambda_fe84468281a4fb95c579b7348cca4739&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bee::_registerLoopingSounds::__l2::&lt;lambda_fe84468281a4fb95c579b7348cca4739&gt;</span>
<span class="line">{</span>
<span class="line">  Bee *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-int" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-int"><span><code>BehaviorData::Data&lt;int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BehaviorData::Data&lt;int&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  int mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-int-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-int-vtbl"><span><code>BehaviorData::Data&lt;int&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;int&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-float" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-float"><span><code>BehaviorData::Data&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BehaviorData::Data&lt;float&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  float mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-float-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-float-vtbl"><span><code>BehaviorData::Data&lt;float&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;float&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-bool" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-bool"><span><code>BehaviorData::Data&lt;bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BehaviorData::Data&lt;bool&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  bool mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-bool-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-bool-vtbl"><span><code>BehaviorData::Data&lt;bool&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;bool&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-blockpos" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-blockpos"><span><code>BehaviorData::Data&lt;BlockPos&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BehaviorData::Data&lt;BlockPos&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  BlockPos mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-blockpos-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-blockpos-vtbl"><span><code>BehaviorData::Data&lt;BlockPos&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;BlockPos&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-vec3" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-vec3"><span><code>BehaviorData::Data&lt;Vec3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BehaviorData::Data&lt;Vec3&gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  Vec3 mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-vec3-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-vec3-vtbl"><span><code>BehaviorData::Data&lt;Vec3&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;Vec3&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-std-string" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-std-string"><span><code>BehaviorData::Data&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;std::string &gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  std::string mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-std-string-vtbl" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-std-string-vtbl"><span><code>BehaviorData::Data&lt;std::string &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BehaviorData::Data&lt;std::string &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataProxy)(BehaviorData::DataProxy *this);</span>
<span class="line">  std::unique_ptr&lt;BehaviorData::DataProxy&gt; *(__fastcall *copy)(BehaviorData::DataProxy *this, std::unique_ptr&lt;BehaviorData::DataProxy&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblocknode" tabindex="-1"><a class="header-anchor" href="#breakblocknode"><span><code>BreakBlockNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) BreakBlockNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  int mNumTicksToBreak;</span>
<span class="line">  gsl::not_null&lt;Block const *&gt; mStartingBlock;</span>
<span class="line">  int mNumTicksBreaking;</span>
<span class="line">  bool mPreActionDone;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblocknode-vtbl" tabindex="-1"><a class="header-anchor" href="#breakblocknode-vtbl"><span><code>BreakBlockNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreakBlockNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockdefinition" tabindex="-1"><a class="header-anchor" href="#breakblockdefinition"><span><code>BreakBlockDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlockDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  std::string mBlockPosId;</span>
<span class="line">  int mNumTicksToBreak;</span>
<span class="line">  std::string mNumTicksToBreakId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#breakblockdefinition-vtbl"><span><code>BreakBlockDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BreakBlockDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildsoundeventschema-l2-lambda-83c1561f5f5169c4af75436371373e5f" tabindex="-1"><a class="header-anchor" href="#buildsoundeventschema-l2-lambda-83c1561f5f5169c4af75436371373e5f"><span><code>buildSoundEventSchema::__l2::&lt;lambda_83c1561f5f5169c4af75436371373e5f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildSoundEventSchema::__l2::&lt;lambda_83c1561f5f5169c4af75436371373e5f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildsoundeventschema-l2-lambda-dbade74c4a1f92bbca03768828a59559" tabindex="-1"><a class="header-anchor" href="#buildsoundeventschema-l2-lambda-dbade74c4a1f92bbca03768828a59559"><span><code>buildSoundEventSchema::__l2::&lt;lambda_dbade74c4a1f92bbca03768828a59559&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildSoundEventSchema::__l2::&lt;lambda_dbade74c4a1f92bbca03768828a59559&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-bf90f814d09023d3d86bbabfc91b2f2d" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-bf90f814d09023d3d86bbabfc91b2f2d"><span><code>buildParticleEventSchema::__l2::&lt;lambda_bf90f814d09023d3d86bbabfc91b2f2d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_bf90f814d09023d3d86bbabfc91b2f2d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-c0a41c51a54f56fb665624f94a8c68a4" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-c0a41c51a54f56fb665624f94a8c68a4"><span><code>buildParticleEventSchema::__l2::&lt;lambda_c0a41c51a54f56fb665624f94a8c68a4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_c0a41c51a54f56fb665624f94a8c68a4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-9d0a5b44103b9a4cd09a0f79bdc9c298" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-9d0a5b44103b9a4cd09a0f79bdc9c298"><span><code>buildParticleEventSchema::__l2::&lt;lambda_9d0a5b44103b9a4cd09a0f79bdc9c298&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_9d0a5b44103b9a4cd09a0f79bdc9c298&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-2d6eded26c009ade9068294c18061152" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-2d6eded26c009ade9068294c18061152"><span><code>buildParticleEventSchema::__l2::&lt;lambda_2d6eded26c009ade9068294c18061152&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_2d6eded26c009ade9068294c18061152&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-1f3caa22e3ae22f1f1994ba5630aee65" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-1f3caa22e3ae22f1f1994ba5630aee65"><span><code>buildParticleEventSchema::__l2::&lt;lambda_1f3caa22e3ae22f1f1994ba5630aee65&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_1f3caa22e3ae22f1f1994ba5630aee65&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-d68979437fb540ff520a765fa7266f39" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-d68979437fb540ff520a765fa7266f39"><span><code>buildParticleEventSchema::__l2::&lt;lambda_d68979437fb540ff520a765fa7266f39&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_d68979437fb540ff520a765fa7266f39&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-8fe8b599339fd8148421a1fadfa1fb50" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-8fe8b599339fd8148421a1fadfa1fb50"><span><code>buildParticleEventSchema::__l2::&lt;lambda_8fe8b599339fd8148421a1fadfa1fb50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_8fe8b599339fd8148421a1fadfa1fb50&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buildparticleeventschema-l2-lambda-09e2c5ded9e20b86bf2f8fed4ad9c667" tabindex="-1"><a class="header-anchor" href="#buildparticleeventschema-l2-lambda-09e2c5ded9e20b86bf2f8fed4ad9c667"><span><code>buildParticleEventSchema::__l2::&lt;lambda_09e2c5ded9e20b86bf2f8fed4ad9c667&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj buildParticleEventSchema::__l2::&lt;lambda_09e2c5ded9e20b86bf2f8fed4ad9c667&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpatternbuilder" tabindex="-1"><a class="header-anchor" href="#blockpatternbuilder"><span><code>BlockPatternBuilder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockPatternBuilder</span>
<span class="line">{</span>
<span class="line">  BlockSource *mRegion;</span>
<span class="line">  std::vector&lt;std::string&gt; mPattern;</span>
<span class="line">  std::map&lt;char,std::function&lt;bool __cdecl(BlockSource &amp;,BlockPos const &amp;,Block const &amp;)&gt;&gt; mLookup;</span>
<span class="line">  bool mReadyForMatch;</span>
<span class="line">  int mNumPatterns;</span>
<span class="line">  int mPatternLength;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblockactor" tabindex="-1"><a class="header-anchor" href="#brewingstandblockactor"><span><code>BrewingStandBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BrewingStandBlockActor : BlockActor, Container</span>
<span class="line">{</span>
<span class="line">  int mBrewTime;</span>
<span class="line">  int mFuelAmount;</span>
<span class="line">  int mFuelTotal;</span>
<span class="line">  bool mFinished;</span>
<span class="line">  const Item *mIngredient;</span>
<span class="line">  ItemStack mItems[5];</span>
<span class="line">  bool mNotifyPlayersOnChange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#brewingstandblockactor-vtbl"><span><code>BrewingStandBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BrewingStandBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrelblockactor" tabindex="-1"><a class="header-anchor" href="#barrelblockactor"><span><code>BarrelBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BarrelBlockActor : ChestBlockActor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloon" tabindex="-1"><a class="header-anchor" href="#balloon"><span><code>Balloon</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Balloon : PredictableProjectile</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;MovementInterpolator&gt; mInterpolator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloon-vtbl" tabindex="-1"><a class="header-anchor" href="#balloon-vtbl"><span><code>Balloon_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Balloon_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blaze" tabindex="-1"><a class="header-anchor" href="#blaze"><span><code>Blaze</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Blaze : Monster</span>
<span class="line">{</span>
<span class="line">  float mAllowedHeightOffset;</span>
<span class="line">  int mNextHeightOffsetChangeTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconpaymentcontainercontroller" tabindex="-1"><a class="header-anchor" href="#beaconpaymentcontainercontroller"><span><code>BeaconPaymentContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconPaymentContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconpaymentcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#beaconpaymentcontainercontroller-vtbl"><span><code>BeaconPaymentContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BeaconPaymentContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockreducer-vtbl" tabindex="-1"><a class="header-anchor" href="#blockreducer-vtbl"><span><code>BlockReducer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockReducer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockReducer)(BlockReducer *this);</span>
<span class="line">  void (__fastcall *_registerBlock)(BlockReducer *this, const ItemStack *, std::vector&lt;ItemStack&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-nonownerpointer-itemstackrequestactioncraftresults-deprecatedasktylaing" tabindex="-1"><a class="header-anchor" href="#bedrock-nonownerpointer-itemstackrequestactioncraftresults-deprecatedasktylaing"><span><code>Bedrock::NonOwnerPointer&lt;ItemStackRequestActionCraftResults_DEPRECATEDASKTYLAING&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::NonOwnerPointer&lt;ItemStackRequestActionCraftResults_DEPRECATEDASKTYLAING&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Bedrock::EnableNonOwnerReferences::ControlBlock&gt; mControlBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventtracker" tabindex="-1"><a class="header-anchor" href="#blockeventtracker"><span><code>BlockEventTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventTracker : BlockSourceListener</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;BlockPos,Block const &amp;&gt; mBlockChangesMap;</span>
<span class="line">  std::unordered_map&lt;BlockPos,Block const &amp;&gt; mExtraBlockChangesMap;</span>
<span class="line">  std::mutex mMapMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventtracker-vtbl" tabindex="-1"><a class="header-anchor" href="#blockeventtracker-vtbl"><span><code>BlockEventTracker_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockEventTracker_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);</span>
<span class="line">  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);</span>
<span class="line">  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);</span>
<span class="line">  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr&lt;BlockActor&gt;);</span>
<span class="line">  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);</span>
<span class="line">  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendunknownblockreceived-l2-lambda-f6f042af8191ca65bf8adc7717dcf957" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendunknownblockreceived-l2-lambda-f6f042af8191ca65bf8adc7717dcf957"><span><code>BlockEventCoordinator::sendUnknownBlockReceived::__l2::&lt;lambda_f6f042af8191ca65bf8adc7717dcf957&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockEventCoordinator::sendUnknownBlockReceived::__l2::&lt;lambda_f6f042af8191ca65bf8adc7717dcf957&gt;</span>
<span class="line">{</span>
<span class="line">  Level *level;</span>
<span class="line">  const NewBlockID *blockId;</span>
<span class="line">  unsigned __int16 data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockexploded-l2-lambda-848cdfb5e8da833dbc0dcc7f87da5a4f" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockexploded-l2-lambda-848cdfb5e8da833dbc0dcc7f87da5a4f"><span><code>BlockEventCoordinator::sendBlockExploded::__l2::&lt;lambda_848cdfb5e8da833dbc0dcc7f87da5a4f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockExploded::__l2::&lt;lambda_848cdfb5e8da833dbc0dcc7f87da5a4f&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *blockPos;</span>
<span class="line">  const Block *destroyedBlock;</span>
<span class="line">  Actor **source;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockinteractedwith-l2-lambda-a33e208c0cd2aef60e110b74b695498d" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockinteractedwith-l2-lambda-a33e208c0cd2aef60e110b74b695498d"><span><code>BlockEventCoordinator::sendBlockInteractedWith::__l2::&lt;lambda_a33e208c0cd2aef60e110b74b695498d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockInteractedWith::__l2::&lt;lambda_a33e208c0cd2aef60e110b74b695498d&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const BlockPos *blockPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockdestructionstarted-l2-lambda-45a6a2b7778b47f799f30451c24f4705" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockdestructionstarted-l2-lambda-45a6a2b7778b47f799f30451c24f4705"><span><code>BlockEventCoordinator::sendBlockDestructionStarted::__l2::&lt;lambda_45a6a2b7778b47f799f30451c24f4705&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockDestructionStarted::__l2::&lt;lambda_45a6a2b7778b47f799f30451c24f4705&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const BlockPos *blockPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockdestructionstopped-l2-lambda-b9d39bcdda4ef5e1d13e651401ee6702" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockdestructionstopped-l2-lambda-b9d39bcdda4ef5e1d13e651401ee6702"><span><code>BlockEventCoordinator::sendBlockDestructionStopped::__l2::&lt;lambda_b9d39bcdda4ef5e1d13e651401ee6702&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockDestructionStopped::__l2::&lt;lambda_b9d39bcdda4ef5e1d13e651401ee6702&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const BlockPos *blockPos;</span>
<span class="line">  int *progress;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockmovedbypiston-l2-lambda-9a6aa89b570a5b9cc497ec2fa821185c" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockmovedbypiston-l2-lambda-9a6aa89b570a5b9cc497ec2fa821185c"><span><code>BlockEventCoordinator::sendBlockMovedByPiston::__l2::&lt;lambda_9a6aa89b570a5b9cc497ec2fa821185c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockMovedByPiston::__l2::&lt;lambda_9a6aa89b570a5b9cc497ec2fa821185c&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *pistonPos;</span>
<span class="line">  const BlockPos *blockPos;</span>
<span class="line">  const PistonBlockActor::PistonState *action;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockdestroyedbyplayer-l2-lambda-b770ae23f89ec602603799970f9877a0" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockdestroyedbyplayer-l2-lambda-b770ae23f89ec602603799970f9877a0"><span><code>BlockEventCoordinator::sendBlockDestroyedByPlayer::__l2::&lt;lambda_b770ae23f89ec602603799970f9877a0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator::sendBlockDestroyedByPlayer::__l2::&lt;lambda_b770ae23f89ec602603799970f9877a0&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const std::string *destroyedBlock;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator-sendblockplacedbyplayer-l2-lambda-04b45a6d32fc9beb76aef0d7f48ebe01" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator-sendblockplacedbyplayer-l2-lambda-04b45a6d32fc9beb76aef0d7f48ebe01"><span><code>BlockEventCoordinator::sendBlockPlacedByPlayer::__l2::&lt;lambda_04b45a6d32fc9beb76aef0d7f48ebe01&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockEventCoordinator::sendBlockPlacedByPlayer::__l2::&lt;lambda_04b45a6d32fc9beb76aef0d7f48ebe01&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const Block *placedBlock;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  bool isUnderwater;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockisnametest" tabindex="-1"><a class="header-anchor" href="#blockisnametest"><span><code>BlockIsNameTest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockIsNameTest : SimpleHashStringFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockisnametest-vtbl" tabindex="-1"><a class="header-anchor" href="#blockisnametest-vtbl"><span><code>BlockIsNameTest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockIsNameTest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblockitem" tabindex="-1"><a class="header-anchor" href="#bambooblockitem"><span><code>BambooBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="banneritem" tabindex="-1"><a class="header-anchor" href="#banneritem"><span><code>BannerItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerpatternitem" tabindex="-1"><a class="header-anchor" href="#bannerpatternitem"><span><code>BannerPatternItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BannerPatternItem : Item</span>
<span class="line">{</span>
<span class="line">  BannerPatternItem::Type mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beditem" tabindex="-1"><a class="header-anchor" href="#beditem"><span><code>BedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureAtlasItem m_uvTextureItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblockitem" tabindex="-1"><a class="header-anchor" href="#bellblockitem"><span><code>BellBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BellBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblock" tabindex="-1"><a class="header-anchor" href="#bellblock"><span><code>BellBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BellBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bellblock-vtbl"><span><code>BellBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BellBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boatitem" tabindex="-1"><a class="header-anchor" href="#boatitem"><span><code>BoatItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoatItem : Item</span>
<span class="line">{</span>
<span class="line">  WoodType mWoodType;</span>
<span class="line">  TextureAtlasItem m_uvTextureItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bottleitem" tabindex="-1"><a class="header-anchor" href="#bottleitem"><span><code>BottleItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BottleItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplanteritem-useon-l8-lambda-dafc49cfe85b6ec4610f185da06c6323" tabindex="-1"><a class="header-anchor" href="#blockplanteritem-useon-l8-lambda-dafc49cfe85b6ec4610f185da06c6323"><span><code>BlockPlanterItem::_useOn::__l8::&lt;lambda_dafc49cfe85b6ec4610f185da06c6323&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlanterItem::_useOn::__l8::&lt;lambda_dafc49cfe85b6ec4610f185da06c6323&gt;</span>
<span class="line">{</span>
<span class="line">  BlockPos *pos;</span>
<span class="line">  const Block *placedBlock;</span>
<span class="line">  const CompoundTag *dataID;</span>
<span class="line">  Actor *entity;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">  bool *canceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockitem-useon-l61-lambda-3df6778bcdd597be9284d46d0b403515" tabindex="-1"><a class="header-anchor" href="#blockitem-useon-l61-lambda-3df6778bcdd597be9284d46d0b403515"><span><code>BlockItem::_useOn::__l61::&lt;lambda_3df6778bcdd597be9284d46d0b403515&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockItem::_useOn::__l61::&lt;lambda_3df6778bcdd597be9284d46d0b403515&gt;</span>
<span class="line">{</span>
<span class="line">  BlockPos *pos;</span>
<span class="line">  const Block **placedBlock;</span>
<span class="line">  const CompoundTag *dataID;</span>
<span class="line">  Actor *entity;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockitem-useon-l17-lambda-76337a7577d3a09baa0857f2aa986cfe" tabindex="-1"><a class="header-anchor" href="#blockitem-useon-l17-lambda-76337a7577d3a09baa0857f2aa986cfe"><span><code>BlockItem::_useOn::__l17::&lt;lambda_76337a7577d3a09baa0857f2aa986cfe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockItem::_useOn::__l17::&lt;lambda_76337a7577d3a09baa0857f2aa986cfe&gt;</span>
<span class="line">{</span>
<span class="line">  BlockPos *pos;</span>
<span class="line">  const Block **placedBlock;</span>
<span class="line">  const CompoundTag *dataID;</span>
<span class="line">  Actor *entity;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">  bool *canceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblockitem-useon-l44-lambda-ceb2dedadc834c479cf92b2081c39bd1" tabindex="-1"><a class="header-anchor" href="#bambooblockitem-useon-l44-lambda-ceb2dedadc834c479cf92b2081c39bd1"><span><code>BambooBlockItem::_useOn::__l44::&lt;lambda_ceb2dedadc834c479cf92b2081c39bd1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooBlockItem::_useOn::__l44::&lt;lambda_ceb2dedadc834c479cf92b2081c39bd1&gt;</span>
<span class="line">{</span>
<span class="line">  BlockPos *pos;</span>
<span class="line">  const CompoundTag *dataID;</span>
<span class="line">  Actor *entity;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">  bool *canceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bowitem" tabindex="-1"><a class="header-anchor" href="#bowitem"><span><code>BowItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BowItem : RangedWeaponItem</span>
<span class="line">{</span>
<span class="line">  TextureUVCoordinateSet mFrame[3];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bowenchant" tabindex="-1"><a class="header-anchor" href="#bowenchant"><span><code>BowEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BowEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bowenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#bowenchant-vtbl"><span><code>BowEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BowEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-2c33b9a3c940e38e331beb3951273cfb" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-2c33b9a3c940e38e331beb3951273cfb"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_2c33b9a3c940e38e331beb3951273cfb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_2c33b9a3c940e38e331beb3951273cfb&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-986ad8af33ac3ed9626d4e4c93db052f" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-986ad8af33ac3ed9626d4e4c93db052f"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_986ad8af33ac3ed9626d4e4c93db052f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_986ad8af33ac3ed9626d4e4c93db052f&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-4043dd1967c51e1afe0bf9b59d10806d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-4043dd1967c51e1afe0bf9b59d10806d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4043dd1967c51e1afe0bf9b59d10806d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4043dd1967c51e1afe0bf9b59d10806d&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-70b1c8711f1412db1910c25a69dbcc73" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-70b1c8711f1412db1910c25a69dbcc73"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_70b1c8711f1412db1910c25a69dbcc73&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_70b1c8711f1412db1910c25a69dbcc73&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-9f92eafcdd93e111d6dcc461b580b677" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-9f92eafcdd93e111d6dcc461b580b677"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_9f92eafcdd93e111d6dcc461b580b677&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_9f92eafcdd93e111d6dcc461b580b677&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-74b06c550f1d03282e6811d3a149df1d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-74b06c550f1d03282e6811d3a149df1d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_74b06c550f1d03282e6811d3a149df1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_74b06c550f1d03282e6811d3a149df1d&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-3de2852c01811dbb30ee8e9819bb06d2" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-3de2852c01811dbb30ee8e9819bb06d2"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_3de2852c01811dbb30ee8e9819bb06d2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_3de2852c01811dbb30ee8e9819bb06d2&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-47d3ebb4fbf9d771bb39ed1ef100b972" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-47d3ebb4fbf9d771bb39ed1ef100b972"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_47d3ebb4fbf9d771bb39ed1ef100b972&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_47d3ebb4fbf9d771bb39ed1ef100b972&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-0e9e988f4be8fccbf1f02bb6d99a088d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-0e9e988f4be8fccbf1f02bb6d99a088d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_0e9e988f4be8fccbf1f02bb6d99a088d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_0e9e988f4be8fccbf1f02bb6d99a088d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-a4a8160f33e1a57e394012deaba8bba7" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-a4a8160f33e1a57e394012deaba8bba7"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_a4a8160f33e1a57e394012deaba8bba7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_a4a8160f33e1a57e394012deaba8bba7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-24781fac43e82524bfe294929ffcbc02" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-24781fac43e82524bfe294929ffcbc02"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_24781fac43e82524bfe294929ffcbc02&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_24781fac43e82524bfe294929ffcbc02&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-be3876604811fcef7cc22dea8bb87277" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-be3876604811fcef7cc22dea8bb87277"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_be3876604811fcef7cc22dea8bb87277&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_be3876604811fcef7cc22dea8bb87277&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-587dadbdd7697181135b67ed601fb42d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-587dadbdd7697181135b67ed601fb42d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_587dadbdd7697181135b67ed601fb42d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_588cbba04482f56d12cfb2e5c6cae432&gt;::()::__l2::&lt;lambda_587dadbdd7697181135b67ed601fb42d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomemetadata" tabindex="-1"><a class="header-anchor" href="#biomemetadata"><span><code>BiomeMetadata</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeMetadata</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mInherits;</span>
<span class="line">  Json::Value mLocalComponents;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistrymergestrategy" tabindex="-1"><a class="header-anchor" href="#biomeregistrymergestrategy"><span><code>BiomeRegistryMergeStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistryMergeStrategy : ResourcePackMergeStrategy</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mBiomePath;</span>
<span class="line">  Json::Value *mRoot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistrymergestrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#biomeregistrymergestrategy-vtbl"><span><code>BiomeRegistryMergeStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BiomeRegistryMergeStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ResourcePackMergeStrategy)(ResourcePackMergeStrategy *this);</span>
<span class="line">  void (__fastcall *mergeFiles)(ResourcePackMergeStrategy *this, const std::vector&lt;LoadedResourceData&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomesource-vtbl" tabindex="-1"><a class="header-anchor" href="#biomesource-vtbl"><span><code>BiomeSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BiomeSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BiomeSource)(BiomeSource *this);</span>
<span class="line">  void (__fastcall *fillBiomes)(BiomeSource *this, LevelChunk *);</span>
<span class="line">  BiomeArea *(__fastcall *getBiomeArea)(BiomeSource *this, BiomeArea *result, const BoundingBox *, unsigned int);</span>
<span class="line">  bool (__fastcall *containsOnly)(BiomeSource *this, int, int, int, gsl::span&lt;int const ,-1&gt;);</span>
<span class="line">  const Biome *(__fastcall *getBiome)(BiomeSource *this, int, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-initmoddimensions-l6-lambda-1fcb4717fe6be111942f2205fbc1a668" tabindex="-1"><a class="header-anchor" href="#biomeregistry-initmoddimensions-l6-lambda-1fcb4717fe6be111942f2205fbc1a668"><span><code>BiomeRegistry::initModDimensions::__l6::&lt;lambda_1fcb4717fe6be111942f2205fbc1a668&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::initModDimensions::__l6::&lt;lambda_1fcb4717fe6be111942f2205fbc1a668&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-loadonedimension-l2-lambda-c1d36d2c0e755f6d6cc7f448cdf58979" tabindex="-1"><a class="header-anchor" href="#biomeregistry-loadonedimension-l2-lambda-c1d36d2c0e755f6d6cc7f448cdf58979"><span><code>BiomeRegistry::_loadOneDimension::__l2::&lt;lambda_c1d36d2c0e755f6d6cc7f448cdf58979&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::_loadOneDimension::__l2::&lt;lambda_c1d36d2c0e755f6d6cc7f448cdf58979&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; *biomesToLoad;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-initserverfrominheritancetree-l2-lambda-6c6a66314c67757f5c65376080a34747" tabindex="-1"><a class="header-anchor" href="#biomeregistry-initserverfrominheritancetree-l2-lambda-6c6a66314c67757f5c65376080a34747"><span><code>BiomeRegistry::_initServerFromInheritanceTree::__l2::&lt;lambda_6c6a66314c67757f5c65376080a34747&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::_initServerFromInheritanceTree::__l2::&lt;lambda_6c6a66314c67757f5c65376080a34747&gt;</span>
<span class="line">{</span>
<span class="line">  BiomeRegistry *const __this;</span>
<span class="line">  InheritanceTree&lt;BiomeRegistry::BiomeParent&gt; *inheritance;</span>
<span class="line">  IWorldRegistriesProvider *worldRegistries;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-mergedatainheritance-l5-lambda-2aa0ea63de42f370212b65a4b11b230e" tabindex="-1"><a class="header-anchor" href="#biomeregistry-mergedatainheritance-l5-lambda-2aa0ea63de42f370212b65a4b11b230e"><span><code>BiomeRegistry::_mergeDataInheritance::__l5::&lt;lambda_2aa0ea63de42f370212b65a4b11b230e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::_mergeDataInheritance::__l5::&lt;lambda_2aa0ea63de42f370212b65a4b11b230e&gt;</span>
<span class="line">{</span>
<span class="line">  BiomeRegistry *const __this;</span>
<span class="line">  Json::Value *mergeInto;</span>
<span class="line">  InheritanceTree&lt;BiomeRegistry::BiomeParent&gt; *inheritance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-buildinheritancetree-l4-lambda-0d4594063b6df1dd593fd643071b49c0" tabindex="-1"><a class="header-anchor" href="#biomeregistry-buildinheritancetree-l4-lambda-0d4594063b6df1dd593fd643071b49c0"><span><code>BiomeRegistry::_buildInheritanceTree::__l4::&lt;lambda_0d4594063b6df1dd593fd643071b49c0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::_buildInheritanceTree::__l4::&lt;lambda_0d4594063b6df1dd593fd643071b49c0&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; *biomesToLoad;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-buildinheritancetree-l2-lambda-3891362f1148dfaff1fd5eb8cc4a95f6" tabindex="-1"><a class="header-anchor" href="#biomeregistry-buildinheritancetree-l2-lambda-3891362f1148dfaff1fd5eb8cc4a95f6"><span><code>BiomeRegistry::_buildInheritanceTree::__l2::&lt;lambda_3891362f1148dfaff1fd5eb8cc4a95f6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::_buildInheritanceTree::__l2::&lt;lambda_3891362f1148dfaff1fd5eb8cc4a95f6&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; *biomesToLoad;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-initclientfrompacks-l16-lambda-12d4c7037bf9214c92b1365a74424493" tabindex="-1"><a class="header-anchor" href="#biomeregistry-initclientfrompacks-l16-lambda-12d4c7037bf9214c92b1365a74424493"><span><code>BiomeRegistry::initClientFromPacks::__l16::&lt;lambda_12d4c7037bf9214c92b1365a74424493&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::initClientFromPacks::__l16::&lt;lambda_12d4c7037bf9214c92b1365a74424493&gt;</span>
<span class="line">{</span>
<span class="line">  const Json::Value *root;</span>
<span class="line">  const Json::Value *defaultJson;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;FogDefinitionRegistry&gt; &gt; *fogRegistry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-getmergestrategy-l2-lambda-a54dc79f09743eeb2de26dc51679844e" tabindex="-1"><a class="header-anchor" href="#biomeregistry-getmergestrategy-l2-lambda-a54dc79f09743eeb2de26dc51679844e"><span><code>BiomeRegistry::getMergeStrategy::__l2::&lt;lambda_a54dc79f09743eeb2de26dc51679844e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry::getMergeStrategy::__l2::&lt;lambda_a54dc79f09743eeb2de26dc51679844e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentfactory-registrationfinished-l2-lambda-14fdba31cb0ef81d6cd5c2760c9d1928" tabindex="-1"><a class="header-anchor" href="#biomecomponentfactory-registrationfinished-l2-lambda-14fdba31cb0ef81d6cd5c2760c9d1928"><span><code>BiomeComponentFactory::registrationFinished::__l2::&lt;lambda_14fdba31cb0ef81d6cd5c2760c9d1928&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentFactory::registrationFinished::__l2::&lt;lambda_14fdba31cb0ef81d6cd5c2760c9d1928&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-9cae496891550c5a044677317c96b590" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-9cae496891550c5a044677317c96b590"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_9cae496891550c5a044677317c96b590&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_9cae496891550c5a044677317c96b590&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenMultiNoiseClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-31f6d7ef5e86b9004496c6c5438bebc3" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-31f6d7ef5e86b9004496c6c5438bebc3"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_31f6d7ef5e86b9004496c6c5438bebc3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_31f6d7ef5e86b9004496c6c5438bebc3&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenMultiNoiseClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-d5c8386347dd70773df6f7b0e51aa0f4" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-d5c8386347dd70773df6f7b0e51aa0f4"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_d5c8386347dd70773df6f7b0e51aa0f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_d5c8386347dd70773df6f7b0e51aa0f4&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenMultiNoiseClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-e62c1925c1af6d050260328ca3a20417" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-e62c1925c1af6d050260328ca3a20417"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_e62c1925c1af6d050260328ca3a20417&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_e62c1925c1af6d050260328ca3a20417&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenMultiNoiseClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-fdb3f7f0568767171627b654bfa20245" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-fdb3f7f0568767171627b654bfa20245"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_fdb3f7f0568767171627b654bfa20245&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_fdb3f7f0568767171627b654bfa20245&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenMultiNoiseClimateAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-00c3dfeb26715b95f766f45ae45a4b8a" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-00c3dfeb26715b95f766f45ae45a4b8a"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_00c3dfeb26715b95f766f45ae45a4b8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_00c3dfeb26715b95f766f45ae45a4b8a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-1c9a498ad1009e5bb757ec0164b4df00" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-1c9a498ad1009e5bb757ec0164b4df00"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1c9a498ad1009e5bb757ec0164b4df00&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1c9a498ad1009e5bb757ec0164b4df00&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-4b8343632b080be1f205b1998080acc9" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-4b8343632b080be1f205b1998080acc9"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4b8343632b080be1f205b1998080acc9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_4b8343632b080be1f205b1998080acc9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-de44ce577397417461fc346b323847d9" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-de44ce577397417461fc346b323847d9"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_de44ce577397417461fc346b323847d9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_de44ce577397417461fc346b323847d9&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;WorldGenClimateMappingAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-a7b07a0bb8678bcc8099e3b5561ab8de" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-a7b07a0bb8678bcc8099e3b5561ab8de"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_a7b07a0bb8678bcc8099e3b5561ab8de&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_a7b07a0bb8678bcc8099e3b5561ab8de&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;OverworldHeightAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-6f5dd31b8d509c3ea58a2e27e5121198" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-6f5dd31b8d509c3ea58a2e27e5121198"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_6f5dd31b8d509c3ea58a2e27e5121198&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_6f5dd31b8d509c3ea58a2e27e5121198&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;OverworldHeightAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-647b9dafc48ef4fe7d2bc246cd3fa37f" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-647b9dafc48ef4fe7d2bc246cd3fa37f"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_647b9dafc48ef4fe7d2bc246cd3fa37f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_647b9dafc48ef4fe7d2bc246cd3fa37f&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;OverworldHeightAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-071d75551199967bfd308b1ccaeba427" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-071d75551199967bfd308b1ccaeba427"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_071d75551199967bfd308b1ccaeba427&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_071d75551199967bfd308b1ccaeba427&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;OverworldHeightAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-13fcf2973c4f4959793e47b98a4fe16d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-13fcf2973c4f4959793e47b98a4fe16d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_13fcf2973c4f4959793e47b98a4fe16d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_13fcf2973c4f4959793e47b98a4fe16d&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-ebf5a741828bce024289db8a9317073c" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-ebf5a741828bce024289db8a9317073c"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ebf5a741828bce024289db8a9317073c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ebf5a741828bce024289db8a9317073c&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-6702ad38bcdce54fbd866d895e5bdde3" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-6702ad38bcdce54fbd866d895e5bdde3"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_6702ad38bcdce54fbd866d895e5bdde3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_6702ad38bcdce54fbd866d895e5bdde3&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-7c35618b9151048fb5f40c044803f09b" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-7c35618b9151048fb5f40c044803f09b"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c35618b9151048fb5f40c044803f09b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c35618b9151048fb5f40c044803f09b&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-5573650260b13fa6c75ed850cb3b791d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-5573650260b13fa6c75ed850cb3b791d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_5573650260b13fa6c75ed850cb3b791d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_5573650260b13fa6c75ed850cb3b791d&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-079223d09d7929335bbdc5ee3051db02" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-079223d09d7929335bbdc5ee3051db02"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_079223d09d7929335bbdc5ee3051db02&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_079223d09d7929335bbdc5ee3051db02&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-317f0cb0ca88680b14d95e0d23e2b481" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-317f0cb0ca88680b14d95e0d23e2b481"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_317f0cb0ca88680b14d95e0d23e2b481&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_317f0cb0ca88680b14d95e0d23e2b481&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-521c942abe59445dc605c74e5770790b" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-521c942abe59445dc605c74e5770790b"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_521c942abe59445dc605c74e5770790b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_521c942abe59445dc605c74e5770790b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-14139a2735e3e592c1254ac860a3050e" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-14139a2735e3e592c1254ac860a3050e"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_14139a2735e3e592c1254ac860a3050e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_14139a2735e3e592c1254ac860a3050e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-79909220629f22558cb770a16046cdb7" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-79909220629f22558cb770a16046cdb7"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_79909220629f22558cb770a16046cdb7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_79909220629f22558cb770a16046cdb7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-f88a4512ffe5a7d91ed9ab1ed8900771" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-f88a4512ffe5a7d91ed9ab1ed8900771"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f88a4512ffe5a7d91ed9ab1ed8900771&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f88a4512ffe5a7d91ed9ab1ed8900771&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-aa5cfd92a64dfd72bd49549d0bd77884" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-aa5cfd92a64dfd72bd49549d0bd77884"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_aa5cfd92a64dfd72bd49549d0bd77884&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_aa5cfd92a64dfd72bd49549d0bd77884&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-7c49cd51b0ff49fc379b3c623d7100e7" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-7c49cd51b0ff49fc379b3c623d7100e7"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c49cd51b0ff49fc379b3c623d7100e7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c49cd51b0ff49fc379b3c623d7100e7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-8ade96da80901bc7101fd7b815724e12" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-8ade96da80901bc7101fd7b815724e12"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_8ade96da80901bc7101fd7b815724e12&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_8ade96da80901bc7101fd7b815724e12&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-0f0f789fcabd05839a8f4072bdd5b7a1" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-0f0f789fcabd05839a8f4072bdd5b7a1"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_0f0f789fcabd05839a8f4072bdd5b7a1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_0f0f789fcabd05839a8f4072bdd5b7a1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-7c0b138f98f9658636c148b465c6d818" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-7c0b138f98f9658636c148b465c6d818"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c0b138f98f9658636c148b465c6d818&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_7c0b138f98f9658636c148b465c6d818&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-12f9dbe7b6fca75e36a0974e7b639bd6" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-12f9dbe7b6fca75e36a0974e7b639bd6"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_12f9dbe7b6fca75e36a0974e7b639bd6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_12f9dbe7b6fca75e36a0974e7b639bd6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-1958774ba91c2a8a8e7c0da9e5e1d4fa" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-1958774ba91c2a8a8e7c0da9e5e1d4fa"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1958774ba91c2a8a8e7c0da9e5e1d4fa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1958774ba91c2a8a8e7c0da9e5e1d4fa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-1a7595583583d62ba48aea65aa95d936" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-1a7595583583d62ba48aea65aa95d936"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1a7595583583d62ba48aea65aa95d936&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_1a7595583583d62ba48aea65aa95d936&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-bea0759ff1a264047c5afddfde4ec3fd" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-bea0759ff1a264047c5afddfde4ec3fd"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_bea0759ff1a264047c5afddfde4ec3fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_bea0759ff1a264047c5afddfde4ec3fd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-f2ce1ff6ee67b84720bcb09ebf7fea04" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-f2ce1ff6ee67b84720bcb09ebf7fea04"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f2ce1ff6ee67b84720bcb09ebf7fea04&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f2ce1ff6ee67b84720bcb09ebf7fea04&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-225167b354dd44524961a932de0b7a51" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-225167b354dd44524961a932de0b7a51"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_225167b354dd44524961a932de0b7a51&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_225167b354dd44524961a932de0b7a51&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;SurfaceMaterialAdjustmentAttributes &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; componentAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-971455b9357b3536ff5dad3d9c75c370" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-971455b9357b3536ff5dad3d9c75c370"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_971455b9357b3536ff5dad3d9c75c370&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_971455b9357b3536ff5dad3d9c75c370&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-100aefda7a177bed57c3ee89f1a167b9" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-100aefda7a177bed57c3ee89f1a167b9"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_100aefda7a177bed57c3ee89f1a167b9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_100aefda7a177bed57c3ee89f1a167b9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-ec658f3ed0ee9fcb77be3770ebe27063" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-ec658f3ed0ee9fcb77be3770ebe27063"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ec658f3ed0ee9fcb77be3770ebe27063&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_ec658f3ed0ee9fcb77be3770ebe27063&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-f5b63f54e8163365fbc4fd41abd61dbc" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-f5b63f54e8163365fbc4fd41abd61dbc"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f5b63f54e8163365fbc4fd41abd61dbc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_f5b63f54e8163365fbc4fd41abd61dbc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-c3bd4d2c9b8db0215a27d95f588f01dd" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-c3bd4d2c9b8db0215a27d95f588f01dd"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_c3bd4d2c9b8db0215a27d95f588f01dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_c3bd4d2c9b8db0215a27d95f588f01dd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-8cc184e2f1c5afd59ee37440bc7e558d" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-8cc184e2f1c5afd59ee37440bc7e558d"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_8cc184e2f1c5afd59ee37440bc7e558d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_8cc184e2f1c5afd59ee37440bc7e558d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-d2561560f3ee380d0ec045cd18e2c99f" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-d2561560f3ee380d0ec045cd18e2c99f"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_d2561560f3ee380d0ec045cd18e2c99f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_d2561560f3ee380d0ec045cd18e2c99f&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;std::vector&lt;std::pair&lt;Biome *,unsigned int&gt;&gt; &amp; __cdecl(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt; biomeVectorAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-buildschema-l2-lambda-909cc6b1dd127ca9c80909ce62807b61" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-l2-lambda-909cc6b1dd127ca9c80909ce62807b61"><span><code>BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_909cc6b1dd127ca9c80909ce62807b61&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeComponentLoading::_buildSchema::__l2::&lt;lambda_909cc6b1dd127ca9c80909ce62807b61&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomedecorationattributes-consolidatedfeatures" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-consolidatedfeatures"><span><code>BiomeDecorationAttributes&lt;ConsolidatedFeatures&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeDecorationAttributes&lt;ConsolidatedFeatures&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BiomeDecorationFeature *&gt; mFeatures;</span>
<span class="line">  std::unordered_set&lt;HashedString&gt; mFeatureRuleNameSet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomedecorationattributes-implicitfeatures" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-implicitfeatures"><span><code>BiomeDecorationAttributes&lt;ImplicitFeatures&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeDecorationAttributes&lt;ImplicitFeatures&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BiomeDecorationFeature *&gt; mFeatures;</span>
<span class="line">  std::unordered_set&lt;HashedString&gt; mFeatureRuleNameSet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailtransporter" tabindex="-1"><a class="header-anchor" href="#baserailtransporter"><span><code>BaseRailTransporter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BaseRailTransporter : BaseCircuitComponent</span>
<span class="line">{</span>
<span class="line">  BaseRailTransporter::RailType mRailType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailtransporter-vtbl" tabindex="-1"><a class="header-anchor" href="#baserailtransporter-vtbl"><span><code>BaseRailTransporter_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BaseRailTransporter_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getStrength)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getDirection)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);</span>
<span class="line">  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);</span>
<span class="line">  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);</span>
<span class="line">  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);</span>
<span class="line">  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);</span>
<span class="line">  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomedecorationsystem-consolidatedecorationfeatures-l2-lambda-931762908d800d263659cffde2a0977f" tabindex="-1"><a class="header-anchor" href="#biomedecorationsystem-consolidatedecorationfeatures-l2-lambda-931762908d800d263659cffde2a0977f"><span><code>BiomeDecorationSystem::consolidateDecorationFeatures::__l2::&lt;lambda_931762908d800d263659cffde2a0977f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeDecorationSystem::consolidateDecorationFeatures::__l2::&lt;lambda_931762908d800d263659cffde2a0977f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrelblock" tabindex="-1"><a class="header-anchor" href="#barrelblock"><span><code>BarrelBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BarrelBlock : FaceDirectionalBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrelblock-vtbl" tabindex="-1"><a class="header-anchor" href="#barrelblock-vtbl"><span><code>BarrelBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BarrelBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblockactor" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblockactor"><span><code>BlastFurnaceBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlastFurnaceBlockActor : FurnaceBlockActor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblockactor-vtbl"><span><code>BlastFurnaceBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlastFurnaceBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorfactory" tabindex="-1"><a class="header-anchor" href="#blockactorfactory"><span><code>BlockActorFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockActorFactory</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beehiveblockactor-tick-l2-lambda-b392b9a4f8c12bc74b03b27e80b70a94" tabindex="-1"><a class="header-anchor" href="#beehiveblockactor-tick-l2-lambda-b392b9a4f8c12bc74b03b27e80b70a94"><span><code>BeehiveBlockActor::tick::__l2::&lt;lambda_b392b9a4f8c12bc74b03b27e80b70a94&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeehiveBlockActor::tick::__l2::&lt;lambda_b392b9a4f8c12bc74b03b27e80b70a94&gt;</span>
<span class="line">{</span>
<span class="line">  BeehiveBlockActor *const __this;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblockactor-applyeffects-l14-lambda-b5cf0b164fc3fb877a74bed916b0b10e" tabindex="-1"><a class="header-anchor" href="#beaconblockactor-applyeffects-l14-lambda-b5cf0b164fc3fb877a74bed916b0b10e"><span><code>BeaconBlockActor::_applyEffects::__l14::&lt;lambda_b5cf0b164fc3fb877a74bed916b0b10e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlockActor::_applyEffects::__l14::&lt;lambda_b5cf0b164fc3fb877a74bed916b0b10e&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 *posBeacon;</span>
<span class="line">  const float *halfExtent;</span>
<span class="line">  std::vector&lt;Player *&gt; *playersInRange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblockactor-checkshapeandachievement-l20-lambda-36931bbf3f3b12ac54c465f8cbab0fe5" tabindex="-1"><a class="header-anchor" href="#beaconblockactor-checkshapeandachievement-l20-lambda-36931bbf3f3b12ac54c465f8cbab0fe5"><span><code>BeaconBlockActor::checkShapeAndAchievement::__l20::&lt;lambda_36931bbf3f3b12ac54c465f8cbab0fe5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlockActor::checkShapeAndAchievement::__l20::&lt;lambda_36931bbf3f3b12ac54c465f8cbab0fe5&gt;</span>
<span class="line">{</span>
<span class="line">  AABB *area;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblockactor-onupdatepacket-l5-lambda-41531286337530fe5a4ae271b716e292" tabindex="-1"><a class="header-anchor" href="#beaconblockactor-onupdatepacket-l5-lambda-41531286337530fe5a4ae271b716e292"><span><code>BeaconBlockActor::_onUpdatePacket::__l5::&lt;lambda_41531286337530fe5a4ae271b716e292&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlockActor::_onUpdatePacket::__l5::&lt;lambda_41531286337530fe5a4ae271b716e292&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burstreactioncomponent" tabindex="-1"><a class="header-anchor" href="#burstreactioncomponent"><span><code>BurstReactionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) BurstReactionComponent : LabTableReactionComponent</span>
<span class="line">{</span>
<span class="line">  ParticleType mParticleType;</span>
<span class="line">  HashedString mNewParticleType;</span>
<span class="line">  Vec3 mDims;</span>
<span class="line">  Vec3 mDirRange;</span>
<span class="line">  int mCount;</span>
<span class="line">  int mDataMin;</span>
<span class="line">  int mDataMax;</span>
<span class="line">  bool mDirOneWay;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burstreactioncomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#burstreactioncomponent-vtbl"><span><code>BurstReactionComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BurstReactionComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LabTableReactionComponent)(LabTableReactionComponent *this);</span>
<span class="line">  void (__fastcall *_onStart)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">  void (__fastcall *_onTick)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">  void (__fastcall *_onEnd)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblock" tabindex="-1"><a class="header-anchor" href="#bambooblock"><span><code>BambooBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bambooblock-vtbl"><span><code>BambooBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BambooBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bamboosapling" tabindex="-1"><a class="header-anchor" href="#bamboosapling"><span><code>BambooSapling</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooSapling : Sapling</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bamboosapling-vtbl" tabindex="-1"><a class="header-anchor" href="#bamboosapling-vtbl"><span><code>BambooSapling_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BambooSapling_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerblock" tabindex="-1"><a class="header-anchor" href="#bannerblock"><span><code>BannerBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BannerBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  bool mOnGround;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bannerblock-vtbl"><span><code>BannerBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BannerBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrierblock" tabindex="-1"><a class="header-anchor" href="#barrierblock"><span><code>BarrierBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BarrierBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrierblock-vtbl" tabindex="-1"><a class="header-anchor" href="#barrierblock-vtbl"><span><code>BarrierBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BarrierBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basepressureplateblock" tabindex="-1"><a class="header-anchor" href="#basepressureplateblock"><span><code>BasePressurePlateBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BasePressurePlateBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  std::string texture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basepressureplateblock-vtbl" tabindex="-1"><a class="header-anchor" href="#basepressureplateblock-vtbl"><span><code>BasePressurePlateBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BasePressurePlateBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  int (__fastcall *getTickDelay)(BasePressurePlateBlock *this);</span>
<span class="line">  int (__fastcall *getSignalStrength)(BasePressurePlateBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getSignalForData)(BasePressurePlateBlock *this, int);</span>
<span class="line">  int (__fastcall *getRedstoneSignal)(BasePressurePlateBlock *this, int);</span>
<span class="line">  const AABB *(__fastcall *getSensitiveAABB)(BasePressurePlateBlock *this, const AABB *result, const BlockPos *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblock" tabindex="-1"><a class="header-anchor" href="#beaconblock"><span><code>BeaconBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblock-vtbl" tabindex="-1"><a class="header-anchor" href="#beaconblock-vtbl"><span><code>BeaconBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BeaconBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basepressureplateblock-entityinside-l17-lambda-e218216a8f7135fcc6348d1cf3645f7b" tabindex="-1"><a class="header-anchor" href="#basepressureplateblock-entityinside-l17-lambda-e218216a8f7135fcc6348d1cf3645f7b"><span><code>BasePressurePlateBlock::entityInside::__l17::&lt;lambda_e218216a8f7135fcc6348d1cf3645f7b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BasePressurePlateBlock::entityInside::__l17::&lt;lambda_e218216a8f7135fcc6348d1cf3645f7b&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *entity;</span>
<span class="line">  const BasePressurePlateBlock *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockblock" tabindex="-1"><a class="header-anchor" href="#bedrockblock"><span><code>BedrockBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedrockBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bedrockblock-vtbl"><span><code>BedrockBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BedrockBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beetrootblock" tabindex="-1"><a class="header-anchor" href="#beetrootblock"><span><code>BeetrootBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeetrootBlock : CropBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beetrootblock-vtbl" tabindex="-1"><a class="header-anchor" href="#beetrootblock-vtbl"><span><code>BeetrootBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BeetrootBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseSeed)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseCrop)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  int (__fastcall *getSeedNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">  int (__fastcall *getCropNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblock" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblock"><span><code>BlastFurnaceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlastFurnaceBlock : FurnaceBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblock-vtbl"><span><code>BlastFurnaceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlastFurnaceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorcomponentdescription" tabindex="-1"><a class="header-anchor" href="#blockactorcomponentdescription"><span><code>BlockActorComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlockActorComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mListenTick;</span>
<span class="line">  bool mIsMovable;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorcomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#blockactorcomponentdescription-vtbl"><span><code>BlockActorComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlockActorComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorcomponent" tabindex="-1"><a class="header-anchor" href="#blockactorcomponent"><span><code>BlockActorComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockActorComponent</span>
<span class="line">{</span>
<span class="line">  bool mListenTick;</span>
<span class="line">  bool mIsMovable;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6fdc15de22a520ca156369c24e880172" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6fdc15de22a520ca156369c24e880172"><span><code>BlockSerializationUtils::&lt;lambda_6fdc15de22a520ca156369c24e880172&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6fdc15de22a520ca156369c24e880172&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-eec5f314ab07ecb90fdbd203ea1346af" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-eec5f314ab07ecb90fdbd203ea1346af"><span><code>BlockSerializationUtils::&lt;lambda_eec5f314ab07ecb90fdbd203ea1346af&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_eec5f314ab07ecb90fdbd203ea1346af&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a1110cc62a51982954179bd25bf77129" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a1110cc62a51982954179bd25bf77129"><span><code>BlockSerializationUtils::&lt;lambda_a1110cc62a51982954179bd25bf77129&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a1110cc62a51982954179bd25bf77129&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d0a6215a0f7bc9986b97d84c5e60ffac" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d0a6215a0f7bc9986b97d84c5e60ffac"><span><code>BlockSerializationUtils::&lt;lambda_d0a6215a0f7bc9986b97d84c5e60ffac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d0a6215a0f7bc9986b97d84c5e60ffac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-983915c06c07d38b7eeb9b007ba5973c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-983915c06c07d38b7eeb9b007ba5973c"><span><code>BlockSerializationUtils::&lt;lambda_983915c06c07d38b7eeb9b007ba5973c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_983915c06c07d38b7eeb9b007ba5973c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c4f1d652ffa81f41c47c703fce7f06f9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c4f1d652ffa81f41c47c703fce7f06f9"><span><code>BlockSerializationUtils::&lt;lambda_c4f1d652ffa81f41c47c703fce7f06f9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c4f1d652ffa81f41c47c703fce7f06f9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7523242e50f57937d64b42feb6b56a14" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7523242e50f57937d64b42feb6b56a14"><span><code>BlockSerializationUtils::&lt;lambda_7523242e50f57937d64b42feb6b56a14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7523242e50f57937d64b42feb6b56a14&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-74a5a603128082ca82f2f8d0cd88766a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-74a5a603128082ca82f2f8d0cd88766a"><span><code>BlockSerializationUtils::&lt;lambda_74a5a603128082ca82f2f8d0cd88766a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_74a5a603128082ca82f2f8d0cd88766a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-32e40a35da8c3294f43732418fde296e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-32e40a35da8c3294f43732418fde296e"><span><code>BlockSerializationUtils::&lt;lambda_32e40a35da8c3294f43732418fde296e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_32e40a35da8c3294f43732418fde296e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-bb35ed5f5ef5cb1ffbbfa69a4d3c6326" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-bb35ed5f5ef5cb1ffbbfa69a4d3c6326"><span><code>BlockSerializationUtils::&lt;lambda_bb35ed5f5ef5cb1ffbbfa69a4d3c6326&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_bb35ed5f5ef5cb1ffbbfa69a4d3c6326&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f0cc804bef9fa0dd72b808dfae7386bd" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f0cc804bef9fa0dd72b808dfae7386bd"><span><code>BlockSerializationUtils::&lt;lambda_f0cc804bef9fa0dd72b808dfae7386bd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f0cc804bef9fa0dd72b808dfae7386bd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4e3010ef0db32b85e6ee2e6852546fdf" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4e3010ef0db32b85e6ee2e6852546fdf"><span><code>BlockSerializationUtils::&lt;lambda_4e3010ef0db32b85e6ee2e6852546fdf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4e3010ef0db32b85e6ee2e6852546fdf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-33409d97eef6295cc053556720fcdef0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-33409d97eef6295cc053556720fcdef0"><span><code>BlockSerializationUtils::&lt;lambda_33409d97eef6295cc053556720fcdef0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_33409d97eef6295cc053556720fcdef0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b671c635c1771fef52af19473cfe7ad9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b671c635c1771fef52af19473cfe7ad9"><span><code>BlockSerializationUtils::&lt;lambda_b671c635c1771fef52af19473cfe7ad9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b671c635c1771fef52af19473cfe7ad9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6e2477e4b65052724097b3043b39f74e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6e2477e4b65052724097b3043b39f74e"><span><code>BlockSerializationUtils::&lt;lambda_6e2477e4b65052724097b3043b39f74e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6e2477e4b65052724097b3043b39f74e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-44c104413fc5ea03e5c27b8a7b40cff9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-44c104413fc5ea03e5c27b8a7b40cff9"><span><code>BlockSerializationUtils::&lt;lambda_44c104413fc5ea03e5c27b8a7b40cff9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_44c104413fc5ea03e5c27b8a7b40cff9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2793c93a8f04d82b30d40cd963fb3419" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2793c93a8f04d82b30d40cd963fb3419"><span><code>BlockSerializationUtils::&lt;lambda_2793c93a8f04d82b30d40cd963fb3419&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2793c93a8f04d82b30d40cd963fb3419&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d58fa707dc3a10518dac5dcb7ddbe677" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d58fa707dc3a10518dac5dcb7ddbe677"><span><code>BlockSerializationUtils::&lt;lambda_d58fa707dc3a10518dac5dcb7ddbe677&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d58fa707dc3a10518dac5dcb7ddbe677&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-ab5229346ce48dd02810d3cfb2d04c26" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-ab5229346ce48dd02810d3cfb2d04c26"><span><code>BlockSerializationUtils::&lt;lambda_ab5229346ce48dd02810d3cfb2d04c26&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_ab5229346ce48dd02810d3cfb2d04c26&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1af544942bf3d7d818e66af9eb8cdff1" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1af544942bf3d7d818e66af9eb8cdff1"><span><code>BlockSerializationUtils::&lt;lambda_1af544942bf3d7d818e66af9eb8cdff1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1af544942bf3d7d818e66af9eb8cdff1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-85712aad558f95b090474f511201e2e7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-85712aad558f95b090474f511201e2e7"><span><code>BlockSerializationUtils::&lt;lambda_85712aad558f95b090474f511201e2e7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_85712aad558f95b090474f511201e2e7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1cd52a4d357ff67d3c4df9b88d9fd919" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1cd52a4d357ff67d3c4df9b88d9fd919"><span><code>BlockSerializationUtils::&lt;lambda_1cd52a4d357ff67d3c4df9b88d9fd919&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1cd52a4d357ff67d3c4df9b88d9fd919&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4886fcdffb1232a180350714b5ae36ed" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4886fcdffb1232a180350714b5ae36ed"><span><code>BlockSerializationUtils::&lt;lambda_4886fcdffb1232a180350714b5ae36ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4886fcdffb1232a180350714b5ae36ed&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-649f988dd6e7f09896e7d241a734c864" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-649f988dd6e7f09896e7d241a734c864"><span><code>BlockSerializationUtils::&lt;lambda_649f988dd6e7f09896e7d241a734c864&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_649f988dd6e7f09896e7d241a734c864&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5991a7d46158b816eea851b55503ad9b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5991a7d46158b816eea851b55503ad9b"><span><code>BlockSerializationUtils::&lt;lambda_5991a7d46158b816eea851b55503ad9b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5991a7d46158b816eea851b55503ad9b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d7206e335b67aeba01b09fed7d5611a0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d7206e335b67aeba01b09fed7d5611a0"><span><code>BlockSerializationUtils::&lt;lambda_d7206e335b67aeba01b09fed7d5611a0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d7206e335b67aeba01b09fed7d5611a0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2cf8b0d99804c4cd0fc88a4a5d905a1d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2cf8b0d99804c4cd0fc88a4a5d905a1d"><span><code>BlockSerializationUtils::&lt;lambda_2cf8b0d99804c4cd0fc88a4a5d905a1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2cf8b0d99804c4cd0fc88a4a5d905a1d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-ac8200090f7b5a7b0d59a74faff7340e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-ac8200090f7b5a7b0d59a74faff7340e"><span><code>BlockSerializationUtils::&lt;lambda_ac8200090f7b5a7b0d59a74faff7340e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_ac8200090f7b5a7b0d59a74faff7340e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-baf6a5dfea72ac67a7eaf2b0c7ad75ba" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-baf6a5dfea72ac67a7eaf2b0c7ad75ba"><span><code>BlockSerializationUtils::&lt;lambda_baf6a5dfea72ac67a7eaf2b0c7ad75ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_baf6a5dfea72ac67a7eaf2b0c7ad75ba&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f829a2f0efcb053c6a1a24e77a7adabc" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f829a2f0efcb053c6a1a24e77a7adabc"><span><code>BlockSerializationUtils::&lt;lambda_f829a2f0efcb053c6a1a24e77a7adabc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f829a2f0efcb053c6a1a24e77a7adabc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cf5f9de946c2870c5eb438da65e83ff5" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cf5f9de946c2870c5eb438da65e83ff5"><span><code>BlockSerializationUtils::&lt;lambda_cf5f9de946c2870c5eb438da65e83ff5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cf5f9de946c2870c5eb438da65e83ff5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2c607cc9cce0494718d74689c2e81e23" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2c607cc9cce0494718d74689c2e81e23"><span><code>BlockSerializationUtils::&lt;lambda_2c607cc9cce0494718d74689c2e81e23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2c607cc9cce0494718d74689c2e81e23&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-11801299155af1503d46179ae9105a8c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-11801299155af1503d46179ae9105a8c"><span><code>BlockSerializationUtils::&lt;lambda_11801299155af1503d46179ae9105a8c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_11801299155af1503d46179ae9105a8c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8aeaa4b2dbbc370eb42715c4738e9776" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8aeaa4b2dbbc370eb42715c4738e9776"><span><code>BlockSerializationUtils::&lt;lambda_8aeaa4b2dbbc370eb42715c4738e9776&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8aeaa4b2dbbc370eb42715c4738e9776&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9162d39776f698a2f0ba606e4e270ec7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9162d39776f698a2f0ba606e4e270ec7"><span><code>BlockSerializationUtils::&lt;lambda_9162d39776f698a2f0ba606e4e270ec7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9162d39776f698a2f0ba606e4e270ec7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2803c18f812d4f4b2b92030797283b5f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2803c18f812d4f4b2b92030797283b5f"><span><code>BlockSerializationUtils::&lt;lambda_2803c18f812d4f4b2b92030797283b5f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2803c18f812d4f4b2b92030797283b5f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-32f5ac5757bf39bcc1afe354ef82f89d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-32f5ac5757bf39bcc1afe354ef82f89d"><span><code>BlockSerializationUtils::&lt;lambda_32f5ac5757bf39bcc1afe354ef82f89d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_32f5ac5757bf39bcc1afe354ef82f89d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b2a8a73e6cc8989dc74ab8201791eda0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b2a8a73e6cc8989dc74ab8201791eda0"><span><code>BlockSerializationUtils::&lt;lambda_b2a8a73e6cc8989dc74ab8201791eda0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b2a8a73e6cc8989dc74ab8201791eda0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7b1eb2b2353b7ab47b5165a14bc7e71b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7b1eb2b2353b7ab47b5165a14bc7e71b"><span><code>BlockSerializationUtils::&lt;lambda_7b1eb2b2353b7ab47b5165a14bc7e71b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7b1eb2b2353b7ab47b5165a14bc7e71b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-de5cb65c165db3ab320bde30c00532ab" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-de5cb65c165db3ab320bde30c00532ab"><span><code>BlockSerializationUtils::&lt;lambda_de5cb65c165db3ab320bde30c00532ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_de5cb65c165db3ab320bde30c00532ab&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-463e99393e64e816cb77ba56aadd83ba" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-463e99393e64e816cb77ba56aadd83ba"><span><code>BlockSerializationUtils::&lt;lambda_463e99393e64e816cb77ba56aadd83ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_463e99393e64e816cb77ba56aadd83ba&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5f5d23befb5501f9de8b466b56e153c4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5f5d23befb5501f9de8b466b56e153c4"><span><code>BlockSerializationUtils::&lt;lambda_5f5d23befb5501f9de8b466b56e153c4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5f5d23befb5501f9de8b466b56e153c4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b9900bd6cdf5f758cf670f56b0b537e6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b9900bd6cdf5f758cf670f56b0b537e6"><span><code>BlockSerializationUtils::&lt;lambda_b9900bd6cdf5f758cf670f56b0b537e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b9900bd6cdf5f758cf670f56b0b537e6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a359a906504ea464babfa36eb3058d03" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a359a906504ea464babfa36eb3058d03"><span><code>BlockSerializationUtils::&lt;lambda_a359a906504ea464babfa36eb3058d03&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a359a906504ea464babfa36eb3058d03&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-caed70072474ed1910ab2bfbc542a6ce" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-caed70072474ed1910ab2bfbc542a6ce"><span><code>BlockSerializationUtils::&lt;lambda_caed70072474ed1910ab2bfbc542a6ce&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_caed70072474ed1910ab2bfbc542a6ce&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f55516643c745c324938ddfd0a1a863b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f55516643c745c324938ddfd0a1a863b"><span><code>BlockSerializationUtils::&lt;lambda_f55516643c745c324938ddfd0a1a863b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f55516643c745c324938ddfd0a1a863b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f8c7dadd1bbef2461d5dd674e68da0e6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f8c7dadd1bbef2461d5dd674e68da0e6"><span><code>BlockSerializationUtils::&lt;lambda_f8c7dadd1bbef2461d5dd674e68da0e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f8c7dadd1bbef2461d5dd674e68da0e6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c96f7ac2a43505e3d39aa02f59be8b9a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c96f7ac2a43505e3d39aa02f59be8b9a"><span><code>BlockSerializationUtils::&lt;lambda_c96f7ac2a43505e3d39aa02f59be8b9a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c96f7ac2a43505e3d39aa02f59be8b9a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a4526e648df3660ceab1a72087cd2fac" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a4526e648df3660ceab1a72087cd2fac"><span><code>BlockSerializationUtils::&lt;lambda_a4526e648df3660ceab1a72087cd2fac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a4526e648df3660ceab1a72087cd2fac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-aa1b013aa4c6322f14796cd81f42b5cd" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-aa1b013aa4c6322f14796cd81f42b5cd"><span><code>BlockSerializationUtils::&lt;lambda_aa1b013aa4c6322f14796cd81f42b5cd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_aa1b013aa4c6322f14796cd81f42b5cd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-86b2c16786202c2a0126cc0817bbf393" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-86b2c16786202c2a0126cc0817bbf393"><span><code>BlockSerializationUtils::&lt;lambda_86b2c16786202c2a0126cc0817bbf393&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_86b2c16786202c2a0126cc0817bbf393&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-fd524c11c78dee318673618cf6d1bedb" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-fd524c11c78dee318673618cf6d1bedb"><span><code>BlockSerializationUtils::&lt;lambda_fd524c11c78dee318673618cf6d1bedb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_fd524c11c78dee318673618cf6d1bedb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-bd0c6af5812dd5f22c4cf33464b05ca8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-bd0c6af5812dd5f22c4cf33464b05ca8"><span><code>BlockSerializationUtils::&lt;lambda_bd0c6af5812dd5f22c4cf33464b05ca8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_bd0c6af5812dd5f22c4cf33464b05ca8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-120724d97a1a0b780536216a55a12907" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-120724d97a1a0b780536216a55a12907"><span><code>BlockSerializationUtils::&lt;lambda_120724d97a1a0b780536216a55a12907&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_120724d97a1a0b780536216a55a12907&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-afe3986df72b54efdd35597efee6368a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-afe3986df72b54efdd35597efee6368a"><span><code>BlockSerializationUtils::&lt;lambda_afe3986df72b54efdd35597efee6368a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_afe3986df72b54efdd35597efee6368a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6fa0e5e321ce32175536bef513af4097" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6fa0e5e321ce32175536bef513af4097"><span><code>BlockSerializationUtils::&lt;lambda_6fa0e5e321ce32175536bef513af4097&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6fa0e5e321ce32175536bef513af4097&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-356e117505dc1c8c0527834f0213d4d4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-356e117505dc1c8c0527834f0213d4d4"><span><code>BlockSerializationUtils::&lt;lambda_356e117505dc1c8c0527834f0213d4d4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_356e117505dc1c8c0527834f0213d4d4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f58139ce1a15611cdb8d24fb5f331dfc" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f58139ce1a15611cdb8d24fb5f331dfc"><span><code>BlockSerializationUtils::&lt;lambda_f58139ce1a15611cdb8d24fb5f331dfc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f58139ce1a15611cdb8d24fb5f331dfc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-bfd98adef72dec2bcf0c23e534b4cc5c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-bfd98adef72dec2bcf0c23e534b4cc5c"><span><code>BlockSerializationUtils::&lt;lambda_bfd98adef72dec2bcf0c23e534b4cc5c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_bfd98adef72dec2bcf0c23e534b4cc5c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1a3286eb4837fe9da6660a6f6b9fe35e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1a3286eb4837fe9da6660a6f6b9fe35e"><span><code>BlockSerializationUtils::&lt;lambda_1a3286eb4837fe9da6660a6f6b9fe35e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1a3286eb4837fe9da6660a6f6b9fe35e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0286863a89754b1ddff522b25ac0a1c5" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0286863a89754b1ddff522b25ac0a1c5"><span><code>BlockSerializationUtils::&lt;lambda_0286863a89754b1ddff522b25ac0a1c5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0286863a89754b1ddff522b25ac0a1c5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-482394891ab632a56cf0ec6d92adbde4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-482394891ab632a56cf0ec6d92adbde4"><span><code>BlockSerializationUtils::&lt;lambda_482394891ab632a56cf0ec6d92adbde4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_482394891ab632a56cf0ec6d92adbde4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-952fab1cdca066de4ac0daeda27ce3e3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-952fab1cdca066de4ac0daeda27ce3e3"><span><code>BlockSerializationUtils::&lt;lambda_952fab1cdca066de4ac0daeda27ce3e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_952fab1cdca066de4ac0daeda27ce3e3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6536a8fa2b2fdbd0c5c7a184201b2549" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6536a8fa2b2fdbd0c5c7a184201b2549"><span><code>BlockSerializationUtils::&lt;lambda_6536a8fa2b2fdbd0c5c7a184201b2549&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6536a8fa2b2fdbd0c5c7a184201b2549&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-deb10ec0c7a9ddefde8ab21d2c35c767" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-deb10ec0c7a9ddefde8ab21d2c35c767"><span><code>BlockSerializationUtils::&lt;lambda_deb10ec0c7a9ddefde8ab21d2c35c767&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_deb10ec0c7a9ddefde8ab21d2c35c767&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-49dcdd42820e764c1f2b338ba8b16de8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-49dcdd42820e764c1f2b338ba8b16de8"><span><code>BlockSerializationUtils::&lt;lambda_49dcdd42820e764c1f2b338ba8b16de8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_49dcdd42820e764c1f2b338ba8b16de8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-961f66577b3125927f56c21e1f6a4f9a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-961f66577b3125927f56c21e1f6a4f9a"><span><code>BlockSerializationUtils::&lt;lambda_961f66577b3125927f56c21e1f6a4f9a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_961f66577b3125927f56c21e1f6a4f9a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a11d431fef459d3df413f4eb2617c8b7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a11d431fef459d3df413f4eb2617c8b7"><span><code>BlockSerializationUtils::&lt;lambda_a11d431fef459d3df413f4eb2617c8b7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a11d431fef459d3df413f4eb2617c8b7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1c707fa07b1ff7c717e025eea5542e5d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1c707fa07b1ff7c717e025eea5542e5d"><span><code>BlockSerializationUtils::&lt;lambda_1c707fa07b1ff7c717e025eea5542e5d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1c707fa07b1ff7c717e025eea5542e5d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-76c28052043f4402e41e4506e9833791" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-76c28052043f4402e41e4506e9833791"><span><code>BlockSerializationUtils::&lt;lambda_76c28052043f4402e41e4506e9833791&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_76c28052043f4402e41e4506e9833791&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2504fee695490b12d4af8f1e10410d9e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2504fee695490b12d4af8f1e10410d9e"><span><code>BlockSerializationUtils::&lt;lambda_2504fee695490b12d4af8f1e10410d9e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2504fee695490b12d4af8f1e10410d9e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1364fa5bf15868d8c11c786949cf3cb7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1364fa5bf15868d8c11c786949cf3cb7"><span><code>BlockSerializationUtils::&lt;lambda_1364fa5bf15868d8c11c786949cf3cb7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1364fa5bf15868d8c11c786949cf3cb7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-688d1708202b2c1b91ad3445756d1731" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-688d1708202b2c1b91ad3445756d1731"><span><code>BlockSerializationUtils::&lt;lambda_688d1708202b2c1b91ad3445756d1731&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_688d1708202b2c1b91ad3445756d1731&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f9a2a48e95ae986b8f1f31d8b4b07007" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f9a2a48e95ae986b8f1f31d8b4b07007"><span><code>BlockSerializationUtils::&lt;lambda_f9a2a48e95ae986b8f1f31d8b4b07007&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f9a2a48e95ae986b8f1f31d8b4b07007&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e3ed33be2a558f2791743a8a07f27c1a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e3ed33be2a558f2791743a8a07f27c1a"><span><code>BlockSerializationUtils::&lt;lambda_e3ed33be2a558f2791743a8a07f27c1a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e3ed33be2a558f2791743a8a07f27c1a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2f4365bdc54b6da9acdb3bde1fadef86" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2f4365bdc54b6da9acdb3bde1fadef86"><span><code>BlockSerializationUtils::&lt;lambda_2f4365bdc54b6da9acdb3bde1fadef86&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2f4365bdc54b6da9acdb3bde1fadef86&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8c60ea3a92969cc1c0b6a6899ca2a32e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8c60ea3a92969cc1c0b6a6899ca2a32e"><span><code>BlockSerializationUtils::&lt;lambda_8c60ea3a92969cc1c0b6a6899ca2a32e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8c60ea3a92969cc1c0b6a6899ca2a32e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-726975e58168013c5385d2e7610013e5" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-726975e58168013c5385d2e7610013e5"><span><code>BlockSerializationUtils::&lt;lambda_726975e58168013c5385d2e7610013e5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_726975e58168013c5385d2e7610013e5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9d3dbb6d6bce2cb555178c19c453a08b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9d3dbb6d6bce2cb555178c19c453a08b"><span><code>BlockSerializationUtils::&lt;lambda_9d3dbb6d6bce2cb555178c19c453a08b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9d3dbb6d6bce2cb555178c19c453a08b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0fe75d0e25cee86e8ff52a8713ef77ae" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0fe75d0e25cee86e8ff52a8713ef77ae"><span><code>BlockSerializationUtils::&lt;lambda_0fe75d0e25cee86e8ff52a8713ef77ae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0fe75d0e25cee86e8ff52a8713ef77ae&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2c03e7c8e15d88d893cd88bdbf82f8ca" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2c03e7c8e15d88d893cd88bdbf82f8ca"><span><code>BlockSerializationUtils::&lt;lambda_2c03e7c8e15d88d893cd88bdbf82f8ca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2c03e7c8e15d88d893cd88bdbf82f8ca&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-909dcd7ce6d171f2544da41d7f521cbe" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-909dcd7ce6d171f2544da41d7f521cbe"><span><code>BlockSerializationUtils::&lt;lambda_909dcd7ce6d171f2544da41d7f521cbe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_909dcd7ce6d171f2544da41d7f521cbe&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2861872706d1618ff6c5540b9522c333" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2861872706d1618ff6c5540b9522c333"><span><code>BlockSerializationUtils::&lt;lambda_2861872706d1618ff6c5540b9522c333&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2861872706d1618ff6c5540b9522c333&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9c81cca2bc07f493f58b7ad575637daa" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9c81cca2bc07f493f58b7ad575637daa"><span><code>BlockSerializationUtils::&lt;lambda_9c81cca2bc07f493f58b7ad575637daa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9c81cca2bc07f493f58b7ad575637daa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e4ffe1915cdb08948830b8ae67eddf8c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e4ffe1915cdb08948830b8ae67eddf8c"><span><code>BlockSerializationUtils::&lt;lambda_e4ffe1915cdb08948830b8ae67eddf8c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e4ffe1915cdb08948830b8ae67eddf8c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8f95b6dcff13443a45b56973d05613ad" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8f95b6dcff13443a45b56973d05613ad"><span><code>BlockSerializationUtils::&lt;lambda_8f95b6dcff13443a45b56973d05613ad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8f95b6dcff13443a45b56973d05613ad&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9bf14eafc7038d1e8115f55f6616c527" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9bf14eafc7038d1e8115f55f6616c527"><span><code>BlockSerializationUtils::&lt;lambda_9bf14eafc7038d1e8115f55f6616c527&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9bf14eafc7038d1e8115f55f6616c527&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-08de8f02cd1235cb91db8d72b5330a40" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-08de8f02cd1235cb91db8d72b5330a40"><span><code>BlockSerializationUtils::&lt;lambda_08de8f02cd1235cb91db8d72b5330a40&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_08de8f02cd1235cb91db8d72b5330a40&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-989a564efee623cd3ddd0f72bf988e57" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-989a564efee623cd3ddd0f72bf988e57"><span><code>BlockSerializationUtils::&lt;lambda_989a564efee623cd3ddd0f72bf988e57&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_989a564efee623cd3ddd0f72bf988e57&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-50edb6a334ed8e799210e99afd191fc6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-50edb6a334ed8e799210e99afd191fc6"><span><code>BlockSerializationUtils::&lt;lambda_50edb6a334ed8e799210e99afd191fc6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_50edb6a334ed8e799210e99afd191fc6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a228982349169ce148712dfe490ae519" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a228982349169ce148712dfe490ae519"><span><code>BlockSerializationUtils::&lt;lambda_a228982349169ce148712dfe490ae519&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a228982349169ce148712dfe490ae519&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c51626a2d86135e2ac70650eee7fe552" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c51626a2d86135e2ac70650eee7fe552"><span><code>BlockSerializationUtils::&lt;lambda_c51626a2d86135e2ac70650eee7fe552&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c51626a2d86135e2ac70650eee7fe552&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2bfa752f547e87ed344ce74e19fecb96" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2bfa752f547e87ed344ce74e19fecb96"><span><code>BlockSerializationUtils::&lt;lambda_2bfa752f547e87ed344ce74e19fecb96&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2bfa752f547e87ed344ce74e19fecb96&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-896cd9dcb0f02b56f1ad2efb8a567ff0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-896cd9dcb0f02b56f1ad2efb8a567ff0"><span><code>BlockSerializationUtils::&lt;lambda_896cd9dcb0f02b56f1ad2efb8a567ff0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_896cd9dcb0f02b56f1ad2efb8a567ff0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d113438834d0614839bba2c528b53b3f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d113438834d0614839bba2c528b53b3f"><span><code>BlockSerializationUtils::&lt;lambda_d113438834d0614839bba2c528b53b3f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d113438834d0614839bba2c528b53b3f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d55872600daa00ea84d46752f8149052" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d55872600daa00ea84d46752f8149052"><span><code>BlockSerializationUtils::&lt;lambda_d55872600daa00ea84d46752f8149052&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d55872600daa00ea84d46752f8149052&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b59cc2a447e78643ca0b4d0215f568ee" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b59cc2a447e78643ca0b4d0215f568ee"><span><code>BlockSerializationUtils::&lt;lambda_b59cc2a447e78643ca0b4d0215f568ee&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b59cc2a447e78643ca0b4d0215f568ee&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7efda1a3afc251a60489e70e6fee043a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7efda1a3afc251a60489e70e6fee043a"><span><code>BlockSerializationUtils::&lt;lambda_7efda1a3afc251a60489e70e6fee043a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7efda1a3afc251a60489e70e6fee043a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a8aea26d4affce3a7cff8c83479a984e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a8aea26d4affce3a7cff8c83479a984e"><span><code>BlockSerializationUtils::&lt;lambda_a8aea26d4affce3a7cff8c83479a984e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a8aea26d4affce3a7cff8c83479a984e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7c111c639de802ed8f3f595c199786b1" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7c111c639de802ed8f3f595c199786b1"><span><code>BlockSerializationUtils::&lt;lambda_7c111c639de802ed8f3f595c199786b1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7c111c639de802ed8f3f595c199786b1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-78e8ca433d9f14fb7e86c1b77a21e900" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-78e8ca433d9f14fb7e86c1b77a21e900"><span><code>BlockSerializationUtils::&lt;lambda_78e8ca433d9f14fb7e86c1b77a21e900&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_78e8ca433d9f14fb7e86c1b77a21e900&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8257867c58fed36c81b682f912a6b281" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8257867c58fed36c81b682f912a6b281"><span><code>BlockSerializationUtils::&lt;lambda_8257867c58fed36c81b682f912a6b281&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8257867c58fed36c81b682f912a6b281&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dc56b327c9e0705d4ad5ef7abc2b1cf2" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dc56b327c9e0705d4ad5ef7abc2b1cf2"><span><code>BlockSerializationUtils::&lt;lambda_dc56b327c9e0705d4ad5ef7abc2b1cf2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dc56b327c9e0705d4ad5ef7abc2b1cf2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4d325f6d56fc641a1e1f6102241f9213" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4d325f6d56fc641a1e1f6102241f9213"><span><code>BlockSerializationUtils::&lt;lambda_4d325f6d56fc641a1e1f6102241f9213&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4d325f6d56fc641a1e1f6102241f9213&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-fa3600bd56a1534f63666da7b3cfbd7b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-fa3600bd56a1534f63666da7b3cfbd7b"><span><code>BlockSerializationUtils::&lt;lambda_fa3600bd56a1534f63666da7b3cfbd7b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_fa3600bd56a1534f63666da7b3cfbd7b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-244ef704eea5aa63cb1f9d18883bc534" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-244ef704eea5aa63cb1f9d18883bc534"><span><code>BlockSerializationUtils::&lt;lambda_244ef704eea5aa63cb1f9d18883bc534&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_244ef704eea5aa63cb1f9d18883bc534&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d91658c8cc09b0339182c5a1a9e87015" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d91658c8cc09b0339182c5a1a9e87015"><span><code>BlockSerializationUtils::&lt;lambda_d91658c8cc09b0339182c5a1a9e87015&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d91658c8cc09b0339182c5a1a9e87015&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4a62419ca4a02c449b017cd0fce13986" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4a62419ca4a02c449b017cd0fce13986"><span><code>BlockSerializationUtils::&lt;lambda_4a62419ca4a02c449b017cd0fce13986&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4a62419ca4a02c449b017cd0fce13986&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e778efc78cc8ddf4d370f7912963d6eb" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e778efc78cc8ddf4d370f7912963d6eb"><span><code>BlockSerializationUtils::&lt;lambda_e778efc78cc8ddf4d370f7912963d6eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e778efc78cc8ddf4d370f7912963d6eb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-886224d4082bdf8c086dd2f61e422482" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-886224d4082bdf8c086dd2f61e422482"><span><code>BlockSerializationUtils::&lt;lambda_886224d4082bdf8c086dd2f61e422482&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_886224d4082bdf8c086dd2f61e422482&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5904a2917e55a67f8a253b60b6f8fd36" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5904a2917e55a67f8a253b60b6f8fd36"><span><code>BlockSerializationUtils::&lt;lambda_5904a2917e55a67f8a253b60b6f8fd36&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5904a2917e55a67f8a253b60b6f8fd36&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f1ed6f48f9a7b639a231f501856d019f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f1ed6f48f9a7b639a231f501856d019f"><span><code>BlockSerializationUtils::&lt;lambda_f1ed6f48f9a7b639a231f501856d019f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f1ed6f48f9a7b639a231f501856d019f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2ef117843c80acd549be97116c8dde90" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2ef117843c80acd549be97116c8dde90"><span><code>BlockSerializationUtils::&lt;lambda_2ef117843c80acd549be97116c8dde90&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2ef117843c80acd549be97116c8dde90&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-213dc2d94875495d5097ea3dd15d9a1e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-213dc2d94875495d5097ea3dd15d9a1e"><span><code>BlockSerializationUtils::&lt;lambda_213dc2d94875495d5097ea3dd15d9a1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_213dc2d94875495d5097ea3dd15d9a1e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-417d1e96c37e1ca48f2dafb6a9c6228d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-417d1e96c37e1ca48f2dafb6a9c6228d"><span><code>BlockSerializationUtils::&lt;lambda_417d1e96c37e1ca48f2dafb6a9c6228d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_417d1e96c37e1ca48f2dafb6a9c6228d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2f9e6b501bab06c9271a912361d42fed" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2f9e6b501bab06c9271a912361d42fed"><span><code>BlockSerializationUtils::&lt;lambda_2f9e6b501bab06c9271a912361d42fed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2f9e6b501bab06c9271a912361d42fed&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-67a63e26aa15305377f26047eb0a56df" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-67a63e26aa15305377f26047eb0a56df"><span><code>BlockSerializationUtils::&lt;lambda_67a63e26aa15305377f26047eb0a56df&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_67a63e26aa15305377f26047eb0a56df&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9f43e194fb0ac5e519d42e530b4e9b8f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9f43e194fb0ac5e519d42e530b4e9b8f"><span><code>BlockSerializationUtils::&lt;lambda_9f43e194fb0ac5e519d42e530b4e9b8f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9f43e194fb0ac5e519d42e530b4e9b8f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-798a04fd2847211a026b83a1d7a042d8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-798a04fd2847211a026b83a1d7a042d8"><span><code>BlockSerializationUtils::&lt;lambda_798a04fd2847211a026b83a1d7a042d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_798a04fd2847211a026b83a1d7a042d8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-62546bb4a527560d6418061ae8df526d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-62546bb4a527560d6418061ae8df526d"><span><code>BlockSerializationUtils::&lt;lambda_62546bb4a527560d6418061ae8df526d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_62546bb4a527560d6418061ae8df526d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-132571df59eb34a18f760a98fba05206" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-132571df59eb34a18f760a98fba05206"><span><code>BlockSerializationUtils::&lt;lambda_132571df59eb34a18f760a98fba05206&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_132571df59eb34a18f760a98fba05206&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0c468b720adc7c9254e30817f3890b7a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0c468b720adc7c9254e30817f3890b7a"><span><code>BlockSerializationUtils::&lt;lambda_0c468b720adc7c9254e30817f3890b7a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0c468b720adc7c9254e30817f3890b7a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e7120cd4e9b688165b9aa1e73b0f809f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e7120cd4e9b688165b9aa1e73b0f809f"><span><code>BlockSerializationUtils::&lt;lambda_e7120cd4e9b688165b9aa1e73b0f809f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e7120cd4e9b688165b9aa1e73b0f809f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-52d008f53c49bd081219984e761fb544" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-52d008f53c49bd081219984e761fb544"><span><code>BlockSerializationUtils::&lt;lambda_52d008f53c49bd081219984e761fb544&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_52d008f53c49bd081219984e761fb544&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9f343462091d01c098a6fa28e542a2bf" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9f343462091d01c098a6fa28e542a2bf"><span><code>BlockSerializationUtils::&lt;lambda_9f343462091d01c098a6fa28e542a2bf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9f343462091d01c098a6fa28e542a2bf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-17da692630b94393008544e8f2c1073e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-17da692630b94393008544e8f2c1073e"><span><code>BlockSerializationUtils::&lt;lambda_17da692630b94393008544e8f2c1073e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_17da692630b94393008544e8f2c1073e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-58c3360145a5c1ffbc17058e4903fce0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-58c3360145a5c1ffbc17058e4903fce0"><span><code>BlockSerializationUtils::&lt;lambda_58c3360145a5c1ffbc17058e4903fce0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_58c3360145a5c1ffbc17058e4903fce0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6d291b38ad7503b1063a69c4c4a0d373" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6d291b38ad7503b1063a69c4c4a0d373"><span><code>BlockSerializationUtils::&lt;lambda_6d291b38ad7503b1063a69c4c4a0d373&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6d291b38ad7503b1063a69c4c4a0d373&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-77b3bba338ba37df6b8f39abb11f2e84" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-77b3bba338ba37df6b8f39abb11f2e84"><span><code>BlockSerializationUtils::&lt;lambda_77b3bba338ba37df6b8f39abb11f2e84&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_77b3bba338ba37df6b8f39abb11f2e84&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9c8777d21e42fef9d68ac5391cb9bece" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9c8777d21e42fef9d68ac5391cb9bece"><span><code>BlockSerializationUtils::&lt;lambda_9c8777d21e42fef9d68ac5391cb9bece&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9c8777d21e42fef9d68ac5391cb9bece&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-83daccaee1122b8327ff046e252a2042" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-83daccaee1122b8327ff046e252a2042"><span><code>BlockSerializationUtils::&lt;lambda_83daccaee1122b8327ff046e252a2042&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_83daccaee1122b8327ff046e252a2042&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f7c3c8206c88a2520e27451ff1392891" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f7c3c8206c88a2520e27451ff1392891"><span><code>BlockSerializationUtils::&lt;lambda_f7c3c8206c88a2520e27451ff1392891&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f7c3c8206c88a2520e27451ff1392891&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-25a90d9c4ebba7333b67781be8b3c122" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-25a90d9c4ebba7333b67781be8b3c122"><span><code>BlockSerializationUtils::&lt;lambda_25a90d9c4ebba7333b67781be8b3c122&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_25a90d9c4ebba7333b67781be8b3c122&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dfe2b161b80c37784e81cfdd60a64fd7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dfe2b161b80c37784e81cfdd60a64fd7"><span><code>BlockSerializationUtils::&lt;lambda_dfe2b161b80c37784e81cfdd60a64fd7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dfe2b161b80c37784e81cfdd60a64fd7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e8b6d3924e6395d5c61e9f6a88daff3a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e8b6d3924e6395d5c61e9f6a88daff3a"><span><code>BlockSerializationUtils::&lt;lambda_e8b6d3924e6395d5c61e9f6a88daff3a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e8b6d3924e6395d5c61e9f6a88daff3a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e1b39284fb325a9fc5fee4db216ede87" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e1b39284fb325a9fc5fee4db216ede87"><span><code>BlockSerializationUtils::&lt;lambda_e1b39284fb325a9fc5fee4db216ede87&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e1b39284fb325a9fc5fee4db216ede87&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-514eaf3e167c4cc40851d43fedcdc402" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-514eaf3e167c4cc40851d43fedcdc402"><span><code>BlockSerializationUtils::&lt;lambda_514eaf3e167c4cc40851d43fedcdc402&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_514eaf3e167c4cc40851d43fedcdc402&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4870085a47b514f0533913c903dcd1a9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4870085a47b514f0533913c903dcd1a9"><span><code>BlockSerializationUtils::&lt;lambda_4870085a47b514f0533913c903dcd1a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4870085a47b514f0533913c903dcd1a9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5ed417f39bd98751db56e791ece7cb10" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5ed417f39bd98751db56e791ece7cb10"><span><code>BlockSerializationUtils::&lt;lambda_5ed417f39bd98751db56e791ece7cb10&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5ed417f39bd98751db56e791ece7cb10&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-633bd25265605641a8f9cb5d1ccab560" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-633bd25265605641a8f9cb5d1ccab560"><span><code>BlockSerializationUtils::&lt;lambda_633bd25265605641a8f9cb5d1ccab560&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_633bd25265605641a8f9cb5d1ccab560&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-39fbcccb7c7bf029cb18111282f8c368" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-39fbcccb7c7bf029cb18111282f8c368"><span><code>BlockSerializationUtils::&lt;lambda_39fbcccb7c7bf029cb18111282f8c368&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_39fbcccb7c7bf029cb18111282f8c368&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f7865132b42f5c8f7cf98bddaf9fc08c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f7865132b42f5c8f7cf98bddaf9fc08c"><span><code>BlockSerializationUtils::&lt;lambda_f7865132b42f5c8f7cf98bddaf9fc08c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f7865132b42f5c8f7cf98bddaf9fc08c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5a919aa231f9ba1f4b63a9263fce778d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5a919aa231f9ba1f4b63a9263fce778d"><span><code>BlockSerializationUtils::&lt;lambda_5a919aa231f9ba1f4b63a9263fce778d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5a919aa231f9ba1f4b63a9263fce778d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4acab81f8277b78b0d65320d8303db54" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4acab81f8277b78b0d65320d8303db54"><span><code>BlockSerializationUtils::&lt;lambda_4acab81f8277b78b0d65320d8303db54&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4acab81f8277b78b0d65320d8303db54&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9dc5fe5c9fa7b26ea354e190fe5ee983" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9dc5fe5c9fa7b26ea354e190fe5ee983"><span><code>BlockSerializationUtils::&lt;lambda_9dc5fe5c9fa7b26ea354e190fe5ee983&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9dc5fe5c9fa7b26ea354e190fe5ee983&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7c4774d03f6bdfef7d3c09c34cb90361" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7c4774d03f6bdfef7d3c09c34cb90361"><span><code>BlockSerializationUtils::&lt;lambda_7c4774d03f6bdfef7d3c09c34cb90361&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7c4774d03f6bdfef7d3c09c34cb90361&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-87e3ca8383c2e6c0d80d8f86a30404a3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-87e3ca8383c2e6c0d80d8f86a30404a3"><span><code>BlockSerializationUtils::&lt;lambda_87e3ca8383c2e6c0d80d8f86a30404a3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_87e3ca8383c2e6c0d80d8f86a30404a3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8ee582a5d5ef889ae713440f7b568db1" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8ee582a5d5ef889ae713440f7b568db1"><span><code>BlockSerializationUtils::&lt;lambda_8ee582a5d5ef889ae713440f7b568db1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8ee582a5d5ef889ae713440f7b568db1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8f3aec30a2b85700b60a88197cc2c0d7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8f3aec30a2b85700b60a88197cc2c0d7"><span><code>BlockSerializationUtils::&lt;lambda_8f3aec30a2b85700b60a88197cc2c0d7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8f3aec30a2b85700b60a88197cc2c0d7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-37374d23cdd4b05e89d1f8c2ab538dc6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-37374d23cdd4b05e89d1f8c2ab538dc6"><span><code>BlockSerializationUtils::&lt;lambda_37374d23cdd4b05e89d1f8c2ab538dc6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_37374d23cdd4b05e89d1f8c2ab538dc6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b69e0b83aa82a8115c8a8f6395157c66" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b69e0b83aa82a8115c8a8f6395157c66"><span><code>BlockSerializationUtils::&lt;lambda_b69e0b83aa82a8115c8a8f6395157c66&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b69e0b83aa82a8115c8a8f6395157c66&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-92cbd13327c65817b8da5515f319827f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-92cbd13327c65817b8da5515f319827f"><span><code>BlockSerializationUtils::&lt;lambda_92cbd13327c65817b8da5515f319827f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_92cbd13327c65817b8da5515f319827f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-fc03a6576434cddee2bbf3252d500c7c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-fc03a6576434cddee2bbf3252d500c7c"><span><code>BlockSerializationUtils::&lt;lambda_fc03a6576434cddee2bbf3252d500c7c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_fc03a6576434cddee2bbf3252d500c7c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-46dec10d01150c8df455d6443728e9e9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-46dec10d01150c8df455d6443728e9e9"><span><code>BlockSerializationUtils::&lt;lambda_46dec10d01150c8df455d6443728e9e9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_46dec10d01150c8df455d6443728e9e9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cc2ff158363c3e4cad7786e84d0574c9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cc2ff158363c3e4cad7786e84d0574c9"><span><code>BlockSerializationUtils::&lt;lambda_cc2ff158363c3e4cad7786e84d0574c9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cc2ff158363c3e4cad7786e84d0574c9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0da51c364bdadd59bc27fa537a15e0d4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0da51c364bdadd59bc27fa537a15e0d4"><span><code>BlockSerializationUtils::&lt;lambda_0da51c364bdadd59bc27fa537a15e0d4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0da51c364bdadd59bc27fa537a15e0d4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-ea10f2191d60813c2f7f96b0b907e7dd" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-ea10f2191d60813c2f7f96b0b907e7dd"><span><code>BlockSerializationUtils::&lt;lambda_ea10f2191d60813c2f7f96b0b907e7dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_ea10f2191d60813c2f7f96b0b907e7dd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4fb3118920b9164aaf8908c5eb1b951a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4fb3118920b9164aaf8908c5eb1b951a"><span><code>BlockSerializationUtils::&lt;lambda_4fb3118920b9164aaf8908c5eb1b951a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4fb3118920b9164aaf8908c5eb1b951a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-894121c1bdb7e464b30645e16073fd2b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-894121c1bdb7e464b30645e16073fd2b"><span><code>BlockSerializationUtils::&lt;lambda_894121c1bdb7e464b30645e16073fd2b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_894121c1bdb7e464b30645e16073fd2b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-21f90e89907a39f26e33d0138efabc5f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-21f90e89907a39f26e33d0138efabc5f"><span><code>BlockSerializationUtils::&lt;lambda_21f90e89907a39f26e33d0138efabc5f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_21f90e89907a39f26e33d0138efabc5f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-bfb1de0b875d4d43bf37f438dbee6a4e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-bfb1de0b875d4d43bf37f438dbee6a4e"><span><code>BlockSerializationUtils::&lt;lambda_bfb1de0b875d4d43bf37f438dbee6a4e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_bfb1de0b875d4d43bf37f438dbee6a4e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7541b4dfa2ac6a7db09ac2e8a7eecb0e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7541b4dfa2ac6a7db09ac2e8a7eecb0e"><span><code>BlockSerializationUtils::&lt;lambda_7541b4dfa2ac6a7db09ac2e8a7eecb0e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7541b4dfa2ac6a7db09ac2e8a7eecb0e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a89591253bb4bab0ca5c6b449e90dc86" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a89591253bb4bab0ca5c6b449e90dc86"><span><code>BlockSerializationUtils::&lt;lambda_a89591253bb4bab0ca5c6b449e90dc86&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a89591253bb4bab0ca5c6b449e90dc86&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cec701a19c5f9f5bc36dfdf03c642ceb" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cec701a19c5f9f5bc36dfdf03c642ceb"><span><code>BlockSerializationUtils::&lt;lambda_cec701a19c5f9f5bc36dfdf03c642ceb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cec701a19c5f9f5bc36dfdf03c642ceb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c9d612fbfad9699669f760f0160a02db" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c9d612fbfad9699669f760f0160a02db"><span><code>BlockSerializationUtils::&lt;lambda_c9d612fbfad9699669f760f0160a02db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c9d612fbfad9699669f760f0160a02db&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-956cdab44be66d5197e22c3a855e5b69" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-956cdab44be66d5197e22c3a855e5b69"><span><code>BlockSerializationUtils::&lt;lambda_956cdab44be66d5197e22c3a855e5b69&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_956cdab44be66d5197e22c3a855e5b69&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b5ec29e6aa1a63684dd74e8901379a71" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b5ec29e6aa1a63684dd74e8901379a71"><span><code>BlockSerializationUtils::&lt;lambda_b5ec29e6aa1a63684dd74e8901379a71&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b5ec29e6aa1a63684dd74e8901379a71&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7a4b7ad1b18e5ad29c5dcd63724ec623" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7a4b7ad1b18e5ad29c5dcd63724ec623"><span><code>BlockSerializationUtils::&lt;lambda_7a4b7ad1b18e5ad29c5dcd63724ec623&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7a4b7ad1b18e5ad29c5dcd63724ec623&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-953f8970144e1c7e010b1bf50aceb858" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-953f8970144e1c7e010b1bf50aceb858"><span><code>BlockSerializationUtils::&lt;lambda_953f8970144e1c7e010b1bf50aceb858&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_953f8970144e1c7e010b1bf50aceb858&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3be53f580cd60341de483f3b38e95be4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3be53f580cd60341de483f3b38e95be4"><span><code>BlockSerializationUtils::&lt;lambda_3be53f580cd60341de483f3b38e95be4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3be53f580cd60341de483f3b38e95be4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-072e20da3c3546077ad9fac18aff268f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-072e20da3c3546077ad9fac18aff268f"><span><code>BlockSerializationUtils::&lt;lambda_072e20da3c3546077ad9fac18aff268f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_072e20da3c3546077ad9fac18aff268f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c33fa34117d50e6d84953ee6ac15f21f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c33fa34117d50e6d84953ee6ac15f21f"><span><code>BlockSerializationUtils::&lt;lambda_c33fa34117d50e6d84953ee6ac15f21f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c33fa34117d50e6d84953ee6ac15f21f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3ba8d13556d0208451be9f301b20488f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3ba8d13556d0208451be9f301b20488f"><span><code>BlockSerializationUtils::&lt;lambda_3ba8d13556d0208451be9f301b20488f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3ba8d13556d0208451be9f301b20488f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-ad220bcab3fa600f37cd234a06c2f562" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-ad220bcab3fa600f37cd234a06c2f562"><span><code>BlockSerializationUtils::&lt;lambda_ad220bcab3fa600f37cd234a06c2f562&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_ad220bcab3fa600f37cd234a06c2f562&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-55a996f326e9bd25d76cd6345f632a7a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-55a996f326e9bd25d76cd6345f632a7a"><span><code>BlockSerializationUtils::&lt;lambda_55a996f326e9bd25d76cd6345f632a7a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_55a996f326e9bd25d76cd6345f632a7a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-846c4b8abb6ba7fcac664aa7377aa006" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-846c4b8abb6ba7fcac664aa7377aa006"><span><code>BlockSerializationUtils::&lt;lambda_846c4b8abb6ba7fcac664aa7377aa006&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_846c4b8abb6ba7fcac664aa7377aa006&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8f29401e704da5e05ec9734a207f563b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8f29401e704da5e05ec9734a207f563b"><span><code>BlockSerializationUtils::&lt;lambda_8f29401e704da5e05ec9734a207f563b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8f29401e704da5e05ec9734a207f563b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-004be5b6fa5b78c9b8adeaf94069d601" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-004be5b6fa5b78c9b8adeaf94069d601"><span><code>BlockSerializationUtils::&lt;lambda_004be5b6fa5b78c9b8adeaf94069d601&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_004be5b6fa5b78c9b8adeaf94069d601&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-19eaaaa315c8a15378bed5bb1897da50" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-19eaaaa315c8a15378bed5bb1897da50"><span><code>BlockSerializationUtils::&lt;lambda_19eaaaa315c8a15378bed5bb1897da50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_19eaaaa315c8a15378bed5bb1897da50&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b86e514372db9652b8fa3805b0df3a1e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b86e514372db9652b8fa3805b0df3a1e"><span><code>BlockSerializationUtils::&lt;lambda_b86e514372db9652b8fa3805b0df3a1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b86e514372db9652b8fa3805b0df3a1e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a8fca6a99b2e989d529019f6a8656001" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a8fca6a99b2e989d529019f6a8656001"><span><code>BlockSerializationUtils::&lt;lambda_a8fca6a99b2e989d529019f6a8656001&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a8fca6a99b2e989d529019f6a8656001&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-bbd8a0dea13b4a27264cab0ddabc331c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-bbd8a0dea13b4a27264cab0ddabc331c"><span><code>BlockSerializationUtils::&lt;lambda_bbd8a0dea13b4a27264cab0ddabc331c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_bbd8a0dea13b4a27264cab0ddabc331c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7238f1484e2fe70ac6df34442375cd94" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7238f1484e2fe70ac6df34442375cd94"><span><code>BlockSerializationUtils::&lt;lambda_7238f1484e2fe70ac6df34442375cd94&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7238f1484e2fe70ac6df34442375cd94&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-77a9d01c9329a5b267133cb97b47b40b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-77a9d01c9329a5b267133cb97b47b40b"><span><code>BlockSerializationUtils::&lt;lambda_77a9d01c9329a5b267133cb97b47b40b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_77a9d01c9329a5b267133cb97b47b40b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-38a9b0207bb3fc83a8770b5470c79eec" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-38a9b0207bb3fc83a8770b5470c79eec"><span><code>BlockSerializationUtils::&lt;lambda_38a9b0207bb3fc83a8770b5470c79eec&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_38a9b0207bb3fc83a8770b5470c79eec&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f8ef20131a7fca5fb97d6e361fc3943f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f8ef20131a7fca5fb97d6e361fc3943f"><span><code>BlockSerializationUtils::&lt;lambda_f8ef20131a7fca5fb97d6e361fc3943f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f8ef20131a7fca5fb97d6e361fc3943f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-004685af1a11991fd7dfcf021cdaa64d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-004685af1a11991fd7dfcf021cdaa64d"><span><code>BlockSerializationUtils::&lt;lambda_004685af1a11991fd7dfcf021cdaa64d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_004685af1a11991fd7dfcf021cdaa64d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dcea529a71bef71f14749d8c90f399b2" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dcea529a71bef71f14749d8c90f399b2"><span><code>BlockSerializationUtils::&lt;lambda_dcea529a71bef71f14749d8c90f399b2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dcea529a71bef71f14749d8c90f399b2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3b9d5e9eacb1a1a865c43b51fed2a2e3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3b9d5e9eacb1a1a865c43b51fed2a2e3"><span><code>BlockSerializationUtils::&lt;lambda_3b9d5e9eacb1a1a865c43b51fed2a2e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3b9d5e9eacb1a1a865c43b51fed2a2e3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d091ef4edf66be00a00642c2bd2a97f0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d091ef4edf66be00a00642c2bd2a97f0"><span><code>BlockSerializationUtils::&lt;lambda_d091ef4edf66be00a00642c2bd2a97f0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d091ef4edf66be00a00642c2bd2a97f0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-48bdc52667a74a9cba6ac48bb060c4e7" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-48bdc52667a74a9cba6ac48bb060c4e7"><span><code>BlockSerializationUtils::&lt;lambda_48bdc52667a74a9cba6ac48bb060c4e7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_48bdc52667a74a9cba6ac48bb060c4e7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3d9136b72324b1c1e85620fb476ccb3f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3d9136b72324b1c1e85620fb476ccb3f"><span><code>BlockSerializationUtils::&lt;lambda_3d9136b72324b1c1e85620fb476ccb3f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3d9136b72324b1c1e85620fb476ccb3f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-79d10e13b89dd9fab80a33352fdb1e3b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-79d10e13b89dd9fab80a33352fdb1e3b"><span><code>BlockSerializationUtils::&lt;lambda_79d10e13b89dd9fab80a33352fdb1e3b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_79d10e13b89dd9fab80a33352fdb1e3b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-77c84c148e95142eb75c7826f6649bc0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-77c84c148e95142eb75c7826f6649bc0"><span><code>BlockSerializationUtils::&lt;lambda_77c84c148e95142eb75c7826f6649bc0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_77c84c148e95142eb75c7826f6649bc0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d6987d7bf7fd30400e4b9256bf31af66" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d6987d7bf7fd30400e4b9256bf31af66"><span><code>BlockSerializationUtils::&lt;lambda_d6987d7bf7fd30400e4b9256bf31af66&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d6987d7bf7fd30400e4b9256bf31af66&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-52a9006590c0e7dda0c284315f59f3e1" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-52a9006590c0e7dda0c284315f59f3e1"><span><code>BlockSerializationUtils::&lt;lambda_52a9006590c0e7dda0c284315f59f3e1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_52a9006590c0e7dda0c284315f59f3e1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a13fe0e459ff7fe0ecc915115cb98f36" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a13fe0e459ff7fe0ecc915115cb98f36"><span><code>BlockSerializationUtils::&lt;lambda_a13fe0e459ff7fe0ecc915115cb98f36&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a13fe0e459ff7fe0ecc915115cb98f36&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a77974a6853122b76d5c74fd39c59957" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a77974a6853122b76d5c74fd39c59957"><span><code>BlockSerializationUtils::&lt;lambda_a77974a6853122b76d5c74fd39c59957&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a77974a6853122b76d5c74fd39c59957&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6ea1eca1adcae043c74a11f68b3da135" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6ea1eca1adcae043c74a11f68b3da135"><span><code>BlockSerializationUtils::&lt;lambda_6ea1eca1adcae043c74a11f68b3da135&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6ea1eca1adcae043c74a11f68b3da135&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e2859667c953321c444c777bdef35622" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e2859667c953321c444c777bdef35622"><span><code>BlockSerializationUtils::&lt;lambda_e2859667c953321c444c777bdef35622&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e2859667c953321c444c777bdef35622&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a92e69a4c04f92cbf1e8e19b0c12fa2d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a92e69a4c04f92cbf1e8e19b0c12fa2d"><span><code>BlockSerializationUtils::&lt;lambda_a92e69a4c04f92cbf1e8e19b0c12fa2d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a92e69a4c04f92cbf1e8e19b0c12fa2d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8428118b34244b71b887a59143e7a9fa" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8428118b34244b71b887a59143e7a9fa"><span><code>BlockSerializationUtils::&lt;lambda_8428118b34244b71b887a59143e7a9fa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8428118b34244b71b887a59143e7a9fa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6cf682a8d95c29558beca2661793f8ed" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6cf682a8d95c29558beca2661793f8ed"><span><code>BlockSerializationUtils::&lt;lambda_6cf682a8d95c29558beca2661793f8ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6cf682a8d95c29558beca2661793f8ed&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d8fa2f79c98b9dc97e1d575cb7c91879" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d8fa2f79c98b9dc97e1d575cb7c91879"><span><code>BlockSerializationUtils::&lt;lambda_d8fa2f79c98b9dc97e1d575cb7c91879&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d8fa2f79c98b9dc97e1d575cb7c91879&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c9e8b0aa6a78d42c6312471d06b8516c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c9e8b0aa6a78d42c6312471d06b8516c"><span><code>BlockSerializationUtils::&lt;lambda_c9e8b0aa6a78d42c6312471d06b8516c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c9e8b0aa6a78d42c6312471d06b8516c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4cf77149a2917fde5bfaeb7a88f03e29" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4cf77149a2917fde5bfaeb7a88f03e29"><span><code>BlockSerializationUtils::&lt;lambda_4cf77149a2917fde5bfaeb7a88f03e29&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4cf77149a2917fde5bfaeb7a88f03e29&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-46501efeb038e1117703698f94186212" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-46501efeb038e1117703698f94186212"><span><code>BlockSerializationUtils::&lt;lambda_46501efeb038e1117703698f94186212&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_46501efeb038e1117703698f94186212&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d3ae9a9d053e9156ececa7b5569c3736" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d3ae9a9d053e9156ececa7b5569c3736"><span><code>BlockSerializationUtils::&lt;lambda_d3ae9a9d053e9156ececa7b5569c3736&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d3ae9a9d053e9156ececa7b5569c3736&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0730084efe72c8be9d237570b2a7fcc3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0730084efe72c8be9d237570b2a7fcc3"><span><code>BlockSerializationUtils::&lt;lambda_0730084efe72c8be9d237570b2a7fcc3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0730084efe72c8be9d237570b2a7fcc3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-f33152037d93e168ee2daf602f847cbf" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-f33152037d93e168ee2daf602f847cbf"><span><code>BlockSerializationUtils::&lt;lambda_f33152037d93e168ee2daf602f847cbf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_f33152037d93e168ee2daf602f847cbf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dbb7c86e78cb4d856820de1cdef3d9ad" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dbb7c86e78cb4d856820de1cdef3d9ad"><span><code>BlockSerializationUtils::&lt;lambda_dbb7c86e78cb4d856820de1cdef3d9ad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dbb7c86e78cb4d856820de1cdef3d9ad&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-65363a572086fb22ab5ec06a3afe3853" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-65363a572086fb22ab5ec06a3afe3853"><span><code>BlockSerializationUtils::&lt;lambda_65363a572086fb22ab5ec06a3afe3853&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_65363a572086fb22ab5ec06a3afe3853&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b83d5145f9711a48958f86f683c3e703" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b83d5145f9711a48958f86f683c3e703"><span><code>BlockSerializationUtils::&lt;lambda_b83d5145f9711a48958f86f683c3e703&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b83d5145f9711a48958f86f683c3e703&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6bb229817dc72b323ebfe9ff605e00b8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6bb229817dc72b323ebfe9ff605e00b8"><span><code>BlockSerializationUtils::&lt;lambda_6bb229817dc72b323ebfe9ff605e00b8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6bb229817dc72b323ebfe9ff605e00b8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-537f727195b63c5e49d00b56a3af7cc6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-537f727195b63c5e49d00b56a3af7cc6"><span><code>BlockSerializationUtils::&lt;lambda_537f727195b63c5e49d00b56a3af7cc6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_537f727195b63c5e49d00b56a3af7cc6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9dd905b5dcc2c2ce02cf416f0354ae2a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9dd905b5dcc2c2ce02cf416f0354ae2a"><span><code>BlockSerializationUtils::&lt;lambda_9dd905b5dcc2c2ce02cf416f0354ae2a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9dd905b5dcc2c2ce02cf416f0354ae2a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cd9dafb2469335aa35b0b5f5aeac25b9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cd9dafb2469335aa35b0b5f5aeac25b9"><span><code>BlockSerializationUtils::&lt;lambda_cd9dafb2469335aa35b0b5f5aeac25b9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cd9dafb2469335aa35b0b5f5aeac25b9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a39287cc5453d8bd8270c603aa4a2ed4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a39287cc5453d8bd8270c603aa4a2ed4"><span><code>BlockSerializationUtils::&lt;lambda_a39287cc5453d8bd8270c603aa4a2ed4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a39287cc5453d8bd8270c603aa4a2ed4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-880eb1662c280a9a54fc30e52c108db1" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-880eb1662c280a9a54fc30e52c108db1"><span><code>BlockSerializationUtils::&lt;lambda_880eb1662c280a9a54fc30e52c108db1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_880eb1662c280a9a54fc30e52c108db1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c1930eb8f1d3d87d6c21d78c5b5af506" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c1930eb8f1d3d87d6c21d78c5b5af506"><span><code>BlockSerializationUtils::&lt;lambda_c1930eb8f1d3d87d6c21d78c5b5af506&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c1930eb8f1d3d87d6c21d78c5b5af506&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9b6ae55357330423f18f3e6ff446dd1c" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9b6ae55357330423f18f3e6ff446dd1c"><span><code>BlockSerializationUtils::&lt;lambda_9b6ae55357330423f18f3e6ff446dd1c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9b6ae55357330423f18f3e6ff446dd1c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2f0f08543c10cb0afdfa867616f57f57" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2f0f08543c10cb0afdfa867616f57f57"><span><code>BlockSerializationUtils::&lt;lambda_2f0f08543c10cb0afdfa867616f57f57&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2f0f08543c10cb0afdfa867616f57f57&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5c7b3f99b943689ca2cd428c9fbd4bea" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5c7b3f99b943689ca2cd428c9fbd4bea"><span><code>BlockSerializationUtils::&lt;lambda_5c7b3f99b943689ca2cd428c9fbd4bea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5c7b3f99b943689ca2cd428c9fbd4bea&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0cf65595139336f3e89cbbf78e78c9b0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0cf65595139336f3e89cbbf78e78c9b0"><span><code>BlockSerializationUtils::&lt;lambda_0cf65595139336f3e89cbbf78e78c9b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0cf65595139336f3e89cbbf78e78c9b0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0a6f5383d730dd8b92e1159be66ec376" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0a6f5383d730dd8b92e1159be66ec376"><span><code>BlockSerializationUtils::&lt;lambda_0a6f5383d730dd8b92e1159be66ec376&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0a6f5383d730dd8b92e1159be66ec376&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6d9740f9d85b8fe0fe2fcd3ac015d095" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6d9740f9d85b8fe0fe2fcd3ac015d095"><span><code>BlockSerializationUtils::&lt;lambda_6d9740f9d85b8fe0fe2fcd3ac015d095&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6d9740f9d85b8fe0fe2fcd3ac015d095&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e81423d5a7ebefcd0e55b180efc99dd4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e81423d5a7ebefcd0e55b180efc99dd4"><span><code>BlockSerializationUtils::&lt;lambda_e81423d5a7ebefcd0e55b180efc99dd4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e81423d5a7ebefcd0e55b180efc99dd4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-976efd94a5f0085b9dad031f49cf7e0e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-976efd94a5f0085b9dad031f49cf7e0e"><span><code>BlockSerializationUtils::&lt;lambda_976efd94a5f0085b9dad031f49cf7e0e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_976efd94a5f0085b9dad031f49cf7e0e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e7edf058f6cdd8704ff56c1b7651c98b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e7edf058f6cdd8704ff56c1b7651c98b"><span><code>BlockSerializationUtils::&lt;lambda_e7edf058f6cdd8704ff56c1b7651c98b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e7edf058f6cdd8704ff56c1b7651c98b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-de1b9469f49bd9cbf443affd2dce3bfc" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-de1b9469f49bd9cbf443affd2dce3bfc"><span><code>BlockSerializationUtils::&lt;lambda_de1b9469f49bd9cbf443affd2dce3bfc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_de1b9469f49bd9cbf443affd2dce3bfc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9ad0876a6b34d7d84a87821c07ad588f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9ad0876a6b34d7d84a87821c07ad588f"><span><code>BlockSerializationUtils::&lt;lambda_9ad0876a6b34d7d84a87821c07ad588f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9ad0876a6b34d7d84a87821c07ad588f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8c29a74f21ea5c343fef298b3f2b0872" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8c29a74f21ea5c343fef298b3f2b0872"><span><code>BlockSerializationUtils::&lt;lambda_8c29a74f21ea5c343fef298b3f2b0872&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8c29a74f21ea5c343fef298b3f2b0872&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7af4031d2b0a9e035cd44eb97fc216ce" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7af4031d2b0a9e035cd44eb97fc216ce"><span><code>BlockSerializationUtils::&lt;lambda_7af4031d2b0a9e035cd44eb97fc216ce&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7af4031d2b0a9e035cd44eb97fc216ce&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3f5b2342cf87bbafc2a8943847a51b18" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3f5b2342cf87bbafc2a8943847a51b18"><span><code>BlockSerializationUtils::&lt;lambda_3f5b2342cf87bbafc2a8943847a51b18&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3f5b2342cf87bbafc2a8943847a51b18&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9fa357ecc7ef5bef6d2d0ff4eea8f1ac" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9fa357ecc7ef5bef6d2d0ff4eea8f1ac"><span><code>BlockSerializationUtils::&lt;lambda_9fa357ecc7ef5bef6d2d0ff4eea8f1ac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9fa357ecc7ef5bef6d2d0ff4eea8f1ac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-51c4cccda65e8f8640e0a6cda2f5a5a2" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-51c4cccda65e8f8640e0a6cda2f5a5a2"><span><code>BlockSerializationUtils::&lt;lambda_51c4cccda65e8f8640e0a6cda2f5a5a2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_51c4cccda65e8f8640e0a6cda2f5a5a2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e0dac7234f50d867291491a20b5d2f14" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e0dac7234f50d867291491a20b5d2f14"><span><code>BlockSerializationUtils::&lt;lambda_e0dac7234f50d867291491a20b5d2f14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e0dac7234f50d867291491a20b5d2f14&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dd23a837fd20abc0d0c0c8deba79c056" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dd23a837fd20abc0d0c0c8deba79c056"><span><code>BlockSerializationUtils::&lt;lambda_dd23a837fd20abc0d0c0c8deba79c056&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dd23a837fd20abc0d0c0c8deba79c056&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7084b57e619eb27e60cacefd434af631" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7084b57e619eb27e60cacefd434af631"><span><code>BlockSerializationUtils::&lt;lambda_7084b57e619eb27e60cacefd434af631&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7084b57e619eb27e60cacefd434af631&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8ace8b70b8924be52d731e7bcb93ce54" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8ace8b70b8924be52d731e7bcb93ce54"><span><code>BlockSerializationUtils::&lt;lambda_8ace8b70b8924be52d731e7bcb93ce54&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8ace8b70b8924be52d731e7bcb93ce54&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-395376adf60bee2159de113e8b4d30e2" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-395376adf60bee2159de113e8b4d30e2"><span><code>BlockSerializationUtils::&lt;lambda_395376adf60bee2159de113e8b4d30e2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_395376adf60bee2159de113e8b4d30e2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-153d23d352602ec24cff82763dab3f73" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-153d23d352602ec24cff82763dab3f73"><span><code>BlockSerializationUtils::&lt;lambda_153d23d352602ec24cff82763dab3f73&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_153d23d352602ec24cff82763dab3f73&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-992b07d152f9524e793f0ee752eaf4db" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-992b07d152f9524e793f0ee752eaf4db"><span><code>BlockSerializationUtils::&lt;lambda_992b07d152f9524e793f0ee752eaf4db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_992b07d152f9524e793f0ee752eaf4db&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d9a3a0f3e48e5c4dd98e17e014eb08c0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d9a3a0f3e48e5c4dd98e17e014eb08c0"><span><code>BlockSerializationUtils::&lt;lambda_d9a3a0f3e48e5c4dd98e17e014eb08c0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d9a3a0f3e48e5c4dd98e17e014eb08c0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7095affb4e5945ed9f44bd67398d0cf0" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7095affb4e5945ed9f44bd67398d0cf0"><span><code>BlockSerializationUtils::&lt;lambda_7095affb4e5945ed9f44bd67398d0cf0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7095affb4e5945ed9f44bd67398d0cf0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cc9497af8781284fa59c10670c38f11a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cc9497af8781284fa59c10670c38f11a"><span><code>BlockSerializationUtils::&lt;lambda_cc9497af8781284fa59c10670c38f11a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cc9497af8781284fa59c10670c38f11a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3cef73b50357c121285c3a6191b13e25" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3cef73b50357c121285c3a6191b13e25"><span><code>BlockSerializationUtils::&lt;lambda_3cef73b50357c121285c3a6191b13e25&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3cef73b50357c121285c3a6191b13e25&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6bdae7ef3ade7d293d80a28ff70aef7e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6bdae7ef3ade7d293d80a28ff70aef7e"><span><code>BlockSerializationUtils::&lt;lambda_6bdae7ef3ade7d293d80a28ff70aef7e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6bdae7ef3ade7d293d80a28ff70aef7e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-910d614436e4bc1f78188f9f3dfe3b3a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-910d614436e4bc1f78188f9f3dfe3b3a"><span><code>BlockSerializationUtils::&lt;lambda_910d614436e4bc1f78188f9f3dfe3b3a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_910d614436e4bc1f78188f9f3dfe3b3a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0d92256ccb9d888aa7cb78ecfd5bb865" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0d92256ccb9d888aa7cb78ecfd5bb865"><span><code>BlockSerializationUtils::&lt;lambda_0d92256ccb9d888aa7cb78ecfd5bb865&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0d92256ccb9d888aa7cb78ecfd5bb865&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-519a254294a692c54630dcea2ba973c4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-519a254294a692c54630dcea2ba973c4"><span><code>BlockSerializationUtils::&lt;lambda_519a254294a692c54630dcea2ba973c4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_519a254294a692c54630dcea2ba973c4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-079767928ff9a283b9b7705874e4ecbd" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-079767928ff9a283b9b7705874e4ecbd"><span><code>BlockSerializationUtils::&lt;lambda_079767928ff9a283b9b7705874e4ecbd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_079767928ff9a283b9b7705874e4ecbd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-2f9df7967aa8d6f004fd5c3bff3ea19e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-2f9df7967aa8d6f004fd5c3bff3ea19e"><span><code>BlockSerializationUtils::&lt;lambda_2f9df7967aa8d6f004fd5c3bff3ea19e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_2f9df7967aa8d6f004fd5c3bff3ea19e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-fbedc31c5d4c0956f04251234851414e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-fbedc31c5d4c0956f04251234851414e"><span><code>BlockSerializationUtils::&lt;lambda_fbedc31c5d4c0956f04251234851414e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_fbedc31c5d4c0956f04251234851414e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6872e4b36780ab15bb3ab0e34f56849a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6872e4b36780ab15bb3ab0e34f56849a"><span><code>BlockSerializationUtils::&lt;lambda_6872e4b36780ab15bb3ab0e34f56849a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6872e4b36780ab15bb3ab0e34f56849a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8085dcaef47b52aa22ab669ad03399e9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8085dcaef47b52aa22ab669ad03399e9"><span><code>BlockSerializationUtils::&lt;lambda_8085dcaef47b52aa22ab669ad03399e9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8085dcaef47b52aa22ab669ad03399e9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e147176d4a2f90ea786d5c583afa519f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e147176d4a2f90ea786d5c583afa519f"><span><code>BlockSerializationUtils::&lt;lambda_e147176d4a2f90ea786d5c583afa519f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e147176d4a2f90ea786d5c583afa519f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-dd137991a6886a22c6644ffc6c55af1d" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-dd137991a6886a22c6644ffc6c55af1d"><span><code>BlockSerializationUtils::&lt;lambda_dd137991a6886a22c6644ffc6c55af1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_dd137991a6886a22c6644ffc6c55af1d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-078e28398be7c95fdde00677d660e3b6" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-078e28398be7c95fdde00677d660e3b6"><span><code>BlockSerializationUtils::&lt;lambda_078e28398be7c95fdde00677d660e3b6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_078e28398be7c95fdde00677d660e3b6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-53b3394ae5179fecc6a12c1fd473e4e8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-53b3394ae5179fecc6a12c1fd473e4e8"><span><code>BlockSerializationUtils::&lt;lambda_53b3394ae5179fecc6a12c1fd473e4e8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_53b3394ae5179fecc6a12c1fd473e4e8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1b31d9c8eb125087f2302b69f119f287" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1b31d9c8eb125087f2302b69f119f287"><span><code>BlockSerializationUtils::&lt;lambda_1b31d9c8eb125087f2302b69f119f287&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1b31d9c8eb125087f2302b69f119f287&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-b2a67c9e23dd0e630f7d8fbb6b480293" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-b2a67c9e23dd0e630f7d8fbb6b480293"><span><code>BlockSerializationUtils::&lt;lambda_b2a67c9e23dd0e630f7d8fbb6b480293&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_b2a67c9e23dd0e630f7d8fbb6b480293&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1c94a60dbf2a625ac0033030fda0ba05" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1c94a60dbf2a625ac0033030fda0ba05"><span><code>BlockSerializationUtils::&lt;lambda_1c94a60dbf2a625ac0033030fda0ba05&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1c94a60dbf2a625ac0033030fda0ba05&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-5a68674f1a3517c6c0fcd038bd5fe6e4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-5a68674f1a3517c6c0fcd038bd5fe6e4"><span><code>BlockSerializationUtils::&lt;lambda_5a68674f1a3517c6c0fcd038bd5fe6e4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_5a68674f1a3517c6c0fcd038bd5fe6e4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d3eed8840205e457507d8b28b4bdcfd9" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d3eed8840205e457507d8b28b4bdcfd9"><span><code>BlockSerializationUtils::&lt;lambda_d3eed8840205e457507d8b28b4bdcfd9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d3eed8840205e457507d8b28b4bdcfd9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-40789fddd04686ba9830e71fa2bd92c3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-40789fddd04686ba9830e71fa2bd92c3"><span><code>BlockSerializationUtils::&lt;lambda_40789fddd04686ba9830e71fa2bd92c3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_40789fddd04686ba9830e71fa2bd92c3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c6e007ebb1adb882ad51375fc56095fb" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c6e007ebb1adb882ad51375fc56095fb"><span><code>BlockSerializationUtils::&lt;lambda_c6e007ebb1adb882ad51375fc56095fb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c6e007ebb1adb882ad51375fc56095fb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-95079b4ec55f954c0b7558155e6c9aa5" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-95079b4ec55f954c0b7558155e6c9aa5"><span><code>BlockSerializationUtils::&lt;lambda_95079b4ec55f954c0b7558155e6c9aa5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_95079b4ec55f954c0b7558155e6c9aa5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3f3d2908ded9142320b8159948eefa96" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3f3d2908ded9142320b8159948eefa96"><span><code>BlockSerializationUtils::&lt;lambda_3f3d2908ded9142320b8159948eefa96&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3f3d2908ded9142320b8159948eefa96&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1cc70504779daa11198f8918a7f05f0a" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1cc70504779daa11198f8918a7f05f0a"><span><code>BlockSerializationUtils::&lt;lambda_1cc70504779daa11198f8918a7f05f0a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1cc70504779daa11198f8918a7f05f0a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a86ba1034d7be72cffab510bd562b738" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a86ba1034d7be72cffab510bd562b738"><span><code>BlockSerializationUtils::&lt;lambda_a86ba1034d7be72cffab510bd562b738&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a86ba1034d7be72cffab510bd562b738&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-94b388d3e55ad1773f279a5246e39d6b" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-94b388d3e55ad1773f279a5246e39d6b"><span><code>BlockSerializationUtils::&lt;lambda_94b388d3e55ad1773f279a5246e39d6b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_94b388d3e55ad1773f279a5246e39d6b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-3df30e04482179476cce1b4994a8bdda" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-3df30e04482179476cce1b4994a8bdda"><span><code>BlockSerializationUtils::&lt;lambda_3df30e04482179476cce1b4994a8bdda&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_3df30e04482179476cce1b4994a8bdda&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-ba18e5cb7301b95f93caf86de1c7bc2f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-ba18e5cb7301b95f93caf86de1c7bc2f"><span><code>BlockSerializationUtils::&lt;lambda_ba18e5cb7301b95f93caf86de1c7bc2f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_ba18e5cb7301b95f93caf86de1c7bc2f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-6c52f7f4cb6c8f798fbeda07f28bd1e5" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-6c52f7f4cb6c8f798fbeda07f28bd1e5"><span><code>BlockSerializationUtils::&lt;lambda_6c52f7f4cb6c8f798fbeda07f28bd1e5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_6c52f7f4cb6c8f798fbeda07f28bd1e5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-c4d2a6f1190fa0fb976b7655c0ee6dd2" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-c4d2a6f1190fa0fb976b7655c0ee6dd2"><span><code>BlockSerializationUtils::&lt;lambda_c4d2a6f1190fa0fb976b7655c0ee6dd2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_c4d2a6f1190fa0fb976b7655c0ee6dd2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-1ff600a0163b53a0c3aacd7cadc86776" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-1ff600a0163b53a0c3aacd7cadc86776"><span><code>BlockSerializationUtils::&lt;lambda_1ff600a0163b53a0c3aacd7cadc86776&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_1ff600a0163b53a0c3aacd7cadc86776&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-286029a71ffa1f14653bacf7c0697e4f" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-286029a71ffa1f14653bacf7c0697e4f"><span><code>BlockSerializationUtils::&lt;lambda_286029a71ffa1f14653bacf7c0697e4f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_286029a71ffa1f14653bacf7c0697e4f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-9cd28e0f75edbdae525cf70c55f2db89" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-9cd28e0f75edbdae525cf70c55f2db89"><span><code>BlockSerializationUtils::&lt;lambda_9cd28e0f75edbdae525cf70c55f2db89&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_9cd28e0f75edbdae525cf70c55f2db89&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-e8b4f668f54201cd3709a54bdaf9c430" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-e8b4f668f54201cd3709a54bdaf9c430"><span><code>BlockSerializationUtils::&lt;lambda_e8b4f668f54201cd3709a54bdaf9c430&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_e8b4f668f54201cd3709a54bdaf9c430&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-69f4c8651dedfd511daccf8814a6e210" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-69f4c8651dedfd511daccf8814a6e210"><span><code>BlockSerializationUtils::&lt;lambda_69f4c8651dedfd511daccf8814a6e210&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_69f4c8651dedfd511daccf8814a6e210&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0db45da1a1eb846d9bfc1b0e1fa7e06e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0db45da1a1eb846d9bfc1b0e1fa7e06e"><span><code>BlockSerializationUtils::&lt;lambda_0db45da1a1eb846d9bfc1b0e1fa7e06e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0db45da1a1eb846d9bfc1b0e1fa7e06e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-aa672cd002332cdb0211e3d1501f8231" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-aa672cd002332cdb0211e3d1501f8231"><span><code>BlockSerializationUtils::&lt;lambda_aa672cd002332cdb0211e3d1501f8231&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_aa672cd002332cdb0211e3d1501f8231&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-8fe8d9c20f8b73440c650b54cdfc8b49" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-8fe8d9c20f8b73440c650b54cdfc8b49"><span><code>BlockSerializationUtils::&lt;lambda_8fe8d9c20f8b73440c650b54cdfc8b49&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_8fe8d9c20f8b73440c650b54cdfc8b49&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-829aafbfc7349c3b12733f2fcdb1b440" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-829aafbfc7349c3b12733f2fcdb1b440"><span><code>BlockSerializationUtils::&lt;lambda_829aafbfc7349c3b12733f2fcdb1b440&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_829aafbfc7349c3b12733f2fcdb1b440&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-7f72b5723c115bb2f4ac0b7c17989e02" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-7f72b5723c115bb2f4ac0b7c17989e02"><span><code>BlockSerializationUtils::&lt;lambda_7f72b5723c115bb2f4ac0b7c17989e02&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_7f72b5723c115bb2f4ac0b7c17989e02&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-28bce0213573e981d8496bc59ef25a39" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-28bce0213573e981d8496bc59ef25a39"><span><code>BlockSerializationUtils::&lt;lambda_28bce0213573e981d8496bc59ef25a39&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_28bce0213573e981d8496bc59ef25a39&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a7b5eff23447e9db48b1aca54c835b5e" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a7b5eff23447e9db48b1aca54c835b5e"><span><code>BlockSerializationUtils::&lt;lambda_a7b5eff23447e9db48b1aca54c835b5e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a7b5eff23447e9db48b1aca54c835b5e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-4b32584e5a89e19541299f9bfd397ca8" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-4b32584e5a89e19541299f9bfd397ca8"><span><code>BlockSerializationUtils::&lt;lambda_4b32584e5a89e19541299f9bfd397ca8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_4b32584e5a89e19541299f9bfd397ca8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-d4498dd8704ab60c900bcedbd359c5ff" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-d4498dd8704ab60c900bcedbd359c5ff"><span><code>BlockSerializationUtils::&lt;lambda_d4498dd8704ab60c900bcedbd359c5ff&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_d4498dd8704ab60c900bcedbd359c5ff&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-cc0b8eeee0034935b8cc7bfa61369244" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-cc0b8eeee0034935b8cc7bfa61369244"><span><code>BlockSerializationUtils::&lt;lambda_cc0b8eeee0034935b8cc7bfa61369244&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_cc0b8eeee0034935b8cc7bfa61369244&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-50d6bdbae09ef7526f42e04802e3d9ce" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-50d6bdbae09ef7526f42e04802e3d9ce"><span><code>BlockSerializationUtils::&lt;lambda_50d6bdbae09ef7526f42e04802e3d9ce&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_50d6bdbae09ef7526f42e04802e3d9ce&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-65d8bf2a47d12c2db3557340b5b507dd" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-65d8bf2a47d12c2db3557340b5b507dd"><span><code>BlockSerializationUtils::&lt;lambda_65d8bf2a47d12c2db3557340b5b507dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_65d8bf2a47d12c2db3557340b5b507dd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-a74442faabc957bf146f5e75908b39f4" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-a74442faabc957bf146f5e75908b39f4"><span><code>BlockSerializationUtils::&lt;lambda_a74442faabc957bf146f5e75908b39f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_a74442faabc957bf146f5e75908b39f4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-0b380bf2d0055ddea198adcf459af685" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-0b380bf2d0055ddea198adcf459af685"><span><code>BlockSerializationUtils::&lt;lambda_0b380bf2d0055ddea198adcf459af685&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_0b380bf2d0055ddea198adcf459af685&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationutils-lambda-93133e4ec108c7abdd10c4236b87cbf3" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-lambda-93133e4ec108c7abdd10c4236b87cbf3"><span><code>BlockSerializationUtils::&lt;lambda_93133e4ec108c7abdd10c4236b87cbf3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockSerializationUtils::&lt;lambda_93133e4ec108c7abdd10c4236b87cbf3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacy-onremove-l8-lambda-7800bbdc4cb23d1438ff620c65b45a41" tabindex="-1"><a class="header-anchor" href="#blocklegacy-onremove-l8-lambda-7800bbdc4cb23d1438ff620c65b45a41"><span><code>BlockLegacy::onRemove::__l8::&lt;lambda_7800bbdc4cb23d1438ff620c65b45a41&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLegacy::onRemove::__l8::&lt;lambda_7800bbdc4cb23d1438ff620c65b45a41&gt;</span>
<span class="line">{</span>
<span class="line">  BlockSource *region;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  const BlockLegacy *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklegacy-deprecatedcallongraphicsmodechanged-l2-lambda-18b6b7d71f34cb1c3cabd20e7fb6e537" tabindex="-1"><a class="header-anchor" href="#blocklegacy-deprecatedcallongraphicsmodechanged-l2-lambda-18b6b7d71f34cb1c3cabd20e7fb6e537"><span><code>BlockLegacy::DEPRECATEDcallOnGraphicsModeChanged::__l2::&lt;lambda_18b6b7d71f34cb1c3cabd20e7fb6e537&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLegacy::DEPRECATEDcallOnGraphicsModeChanged::__l2::&lt;lambda_18b6b7d71f34cb1c3cabd20e7fb6e537&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockGraphicsModeChangeContext *context;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-sendshearsdestoryclienteventandreturnwhethercancel-l2-lambda-9a411960c4f05cc7270251b3a7552d4c" tabindex="-1"><a class="header-anchor" href="#block-sendshearsdestoryclienteventandreturnwhethercancel-l2-lambda-9a411960c4f05cc7270251b3a7552d4c"><span><code>Block::sendShearsDestoryClientEventAndReturnWhetherCancel::__l2::&lt;lambda_9a411960c4f05cc7270251b3a7552d4c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::sendShearsDestoryClientEventAndReturnWhetherCancel::__l2::&lt;lambda_9a411960c4f05cc7270251b3a7552d4c&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const std::string *dropName;</span>
<span class="line">  const int *dropCount;</span>
<span class="line">  const Player *player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-sendshearsdestoryeventandreturnwhethercancel-l2-lambda-7f82bfb32741affe50ae92294b4b4459" tabindex="-1"><a class="header-anchor" href="#block-sendshearsdestoryeventandreturnwhethercancel-l2-lambda-7f82bfb32741affe50ae92294b4b4459"><span><code>Block::sendShearsDestoryEventAndReturnWhetherCancel::__l2::&lt;lambda_7f82bfb32741affe50ae92294b4b4459&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::sendShearsDestoryEventAndReturnWhetherCancel::__l2::&lt;lambda_7f82bfb32741affe50ae92294b4b4459&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const std::string *dropName;</span>
<span class="line">  const int *dropCount;</span>
<span class="line">  const Player *player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-sendshearsuseeventandreturnwhethercancel-l2-lambda-4aea5b65e5091f5d8b1b0bc41688f382" tabindex="-1"><a class="header-anchor" href="#block-sendshearsuseeventandreturnwhethercancel-l2-lambda-4aea5b65e5091f5d8b1b0bc41688f382"><span><code>Block::sendShearsUseEventAndReturnWhetherCancel::__l2::&lt;lambda_4aea5b65e5091f5d8b1b0bc41688f382&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::sendShearsUseEventAndReturnWhetherCancel::__l2::&lt;lambda_4aea5b65e5091f5d8b1b0bc41688f382&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const std::string *dropName;</span>
<span class="line">  const int *dropCount;</span>
<span class="line">  const Actor *entity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-use-l28-lambda-f0190cd8f8393a15d907c1657001ce97" tabindex="-1"><a class="header-anchor" href="#block-use-l28-lambda-f0190cd8f8393a15d907c1657001ce97"><span><code>Block::use::__l28::&lt;lambda_f0190cd8f8393a15d907c1657001ce97&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::use::__l28::&lt;lambda_f0190cd8f8393a15d907c1657001ce97&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  bool *cancel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-use-l20-lambda-d1e2ab651db4318ad3859856883ccd8a" tabindex="-1"><a class="header-anchor" href="#block-use-l20-lambda-d1e2ab651db4318ad3859856883ccd8a"><span><code>Block::use::__l20::&lt;lambda_d1e2ab651db4318ad3859856883ccd8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::use::__l20::&lt;lambda_d1e2ab651db4318ad3859856883ccd8a&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  bool *cancel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-use-l8-lambda-7422f341742097701f32fd419aa24ddf" tabindex="-1"><a class="header-anchor" href="#block-use-l8-lambda-7422f341742097701f32fd419aa24ddf"><span><code>Block::use::__l8::&lt;lambda_7422f341742097701f32fd419aa24ddf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::use::__l8::&lt;lambda_7422f341742097701f32fd419aa24ddf&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  bool *cancel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block-tickinternal-l8-lambda-7d31a6c885ce46283e31ada2fbdac636" tabindex="-1"><a class="header-anchor" href="#block-tickinternal-l8-lambda-7d31a6c885ce46283e31ada2fbdac636"><span><code>Block::tickInternal::__l8::&lt;lambda_7d31a6c885ce46283e31ada2fbdac636&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Block::tickInternal::__l8::&lt;lambda_7d31a6c885ce46283e31ada2fbdac636&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  const Block *const __this;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedblock-use-l20-lambda-0949a301607bf01f6b80e2a23970522f" tabindex="-1"><a class="header-anchor" href="#bedblock-use-l20-lambda-0949a301607bf01f6b80e2a23970522f"><span><code>BedBlock::use::__l20::&lt;lambda_0949a301607bf01f6b80e2a23970522f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedBlock::use::__l20::&lt;lambda_0949a301607bf01f6b80e2a23970522f&gt;</span>
<span class="line">{</span>
<span class="line">  Player **sleepingPlayer;</span>
<span class="line">  BlockPos *offset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bluefireblock" tabindex="-1"><a class="header-anchor" href="#bluefireblock"><span><code>BlueFireBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BlueFireBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  AABB mAabb;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bluefireblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bluefireblock-vtbl"><span><code>BlueFireBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlueFireBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blueiceblock" tabindex="-1"><a class="header-anchor" href="#blueiceblock"><span><code>BlueIceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlueIceBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blueiceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#blueiceblock-vtbl"><span><code>BlueIceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BlueIceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookshelfblock" tabindex="-1"><a class="header-anchor" href="#bookshelfblock"><span><code>BookshelfBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BookshelfBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookshelfblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bookshelfblock-vtbl"><span><code>BookshelfBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BookshelfBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="borderblock" tabindex="-1"><a class="header-anchor" href="#borderblock"><span><code>BorderBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BorderBlock : WallBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="borderblock-vtbl" tabindex="-1"><a class="header-anchor" href="#borderblock-vtbl"><span><code>BorderBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BorderBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblock" tabindex="-1"><a class="header-anchor" href="#brewingstandblock"><span><code>BrewingStandBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblock-vtbl" tabindex="-1"><a class="header-anchor" href="#brewingstandblock-vtbl"><span><code>BrewingStandBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BrewingStandBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bubblecolumnblock" tabindex="-1"><a class="header-anchor" href="#bubblecolumnblock"><span><code>BubbleColumnBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) BubbleColumnBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  bool mFancyBubbles;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bubblecolumnblock-vtbl" tabindex="-1"><a class="header-anchor" href="#bubblecolumnblock-vtbl"><span><code>BubbleColumnBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ BubbleColumnBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1535),c=[i];function t(d,o){return l(),s("div",null,c)}const b=a(n,[["render",t],["__file","B~1.html.vue"]]),p=JSON.parse('{"path":"/1.16.201/structure/B~1.html","title":"B~1","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Bedrock::Threading::AsyncDeferredResultT<bool>_vtbl","slug":"bedrock-threading-asyncdeferredresultt-bool-vtbl","link":"#bedrock-threading-asyncdeferredresultt-bool-vtbl","children":[]},{"level":3,"title":"BatchWorker<PackStorage::PendingTask>::_tryQueueWorker::__l9::<lambda_af25b8745a49294668e7e18ef98137e4>","slug":"batchworker-packstorage-pendingtask-tryqueueworker-l9-lambda-af25b8745a49294668e7e18ef98137e4","link":"#batchworker-packstorage-pendingtask-tryqueueworker-l9-lambda-af25b8745a49294668e7e18ef98137e4","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadLocalObjectImplementation<MolangEvalParams,std::allocator<MolangEvalParams> >","slug":"bedrock-threading-threadlocalobjectimplementation-molangevalparams-std-allocator-molangevalparams","link":"#bedrock-threading-threadlocalobjectimplementation-molangevalparams-std-allocator-molangevalparams","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadLocalObject<MolangEvalParams,std::allocator<MolangEvalParams> >","slug":"bedrock-threading-threadlocalobject-molangevalparams-std-allocator-molangevalparams","link":"#bedrock-threading-threadlocalobject-molangevalparams-std-allocator-molangevalparams","children":[]},{"level":3,"title":"Bedrock::Threading::TLSDetail::DefaultConstructor<MolangEvalParams,void>","slug":"bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void","link":"#bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void","children":[]},{"level":3,"title":"Bedrock::Threading::TLSDetail::DefaultConstructor<MolangEvalParams,void>::create::__l2::<lambda_958a58132a7af05cc0661d2aecfa4548>","slug":"bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void-create-l2-lambda-958a58132a7af05cc0661d2aecfa4548","link":"#bedrock-threading-tlsdetail-defaultconstructor-molangevalparams-void-create-l2-lambda-958a58132a7af05cc0661d2aecfa4548","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<enum ItemStackNetResult,std::string >","slug":"bidirectionalunorderedmap-enum-itemstacknetresult-std-string","link":"#bidirectionalunorderedmap-enum-itemstacknetresult-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadLocalValueAccessor<ComponentItem *>","slug":"bedrock-threading-threadlocalvalueaccessor-componentitem","link":"#bedrock-threading-threadlocalvalueaccessor-componentitem","children":[]},{"level":3,"title":"BoostableComponent","slug":"boostablecomponent","link":"#boostablecomponent","children":[]},{"level":3,"title":"BlockItem","slug":"blockitem","link":"#blockitem","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_4e7611f2c774939b21bda2cfa4f46e40>","slug":"biomecomponentloading-buildschema-l2-lambda-4e7611f2c774939b21bda2cfa4f46e40","link":"#biomecomponentloading-buildschema-l2-lambda-4e7611f2c774939b21bda2cfa4f46e40","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_01b284e148679bd63bab12b0717db626>","slug":"biomecomponentloading-buildschema-l2-lambda-01b284e148679bd63bab12b0717db626","link":"#biomecomponentloading-buildschema-l2-lambda-01b284e148679bd63bab12b0717db626","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_0f779d43536bc104e122b0d74a889027>","slug":"biomecomponentloading-buildschema-l2-lambda-0f779d43536bc104e122b0d74a889027","link":"#biomecomponentloading-buildschema-l2-lambda-0f779d43536bc104e122b0d74a889027","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_b059eddd1b406bfce4b57442217ab1b3>","slug":"biomecomponentloading-buildschema-l2-lambda-b059eddd1b406bfce4b57442217ab1b3","link":"#biomecomponentloading-buildschema-l2-lambda-b059eddd1b406bfce4b57442217ab1b3","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_a41f431bfd368896c55b381baacd11ba>","slug":"biomecomponentloading-buildschema-l2-lambda-a41f431bfd368896c55b381baacd11ba","link":"#biomecomponentloading-buildschema-l2-lambda-a41f431bfd368896c55b381baacd11ba","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_cea596d8301ad7333b74eecd38417d3c>","slug":"biomecomponentloading-buildschema-l2-lambda-cea596d8301ad7333b74eecd38417d3c","link":"#biomecomponentloading-buildschema-l2-lambda-cea596d8301ad7333b74eecd38417d3c","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_e084b3da421e0a056d83c37c8ebf2c09>","slug":"biomecomponentloading-buildschema-l2-lambda-e084b3da421e0a056d83c37c8ebf2c09","link":"#biomecomponentloading-buildschema-l2-lambda-e084b3da421e0a056d83c37c8ebf2c09","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_201c44a5279f845d9ef54bb2268fc08b>","slug":"biomecomponentloading-buildschema-l2-lambda-201c44a5279f845d9ef54bb2268fc08b","link":"#biomecomponentloading-buildschema-l2-lambda-201c44a5279f845d9ef54bb2268fc08b","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_ae3f9c725f64bdda2a0fe8a5292f5adc>","slug":"biomecomponentloading-buildschema-l2-lambda-ae3f9c725f64bdda2a0fe8a5292f5adc","link":"#biomecomponentloading-buildschema-l2-lambda-ae3f9c725f64bdda2a0fe8a5292f5adc","children":[]},{"level":3,"title":"BlockBreathabilityDescription","slug":"blockbreathabilitydescription","link":"#blockbreathabilitydescription","children":[]},{"level":3,"title":"BlockBreathabilityDescription_vtbl","slug":"blockbreathabilitydescription-vtbl","link":"#blockbreathabilitydescription-vtbl","children":[]},{"level":3,"title":"BlockBreathabilityComponent","slug":"blockbreathabilitycomponent","link":"#blockbreathabilitycomponent","children":[]},{"level":3,"title":"BlockBreathabilityDescription::buildSchema::__l2::<lambda_4c61f8557da081b1c8c2a22b9346d104>","slug":"blockbreathabilitydescription-buildschema-l2-lambda-4c61f8557da081b1c8c2a22b9346d104","link":"#blockbreathabilitydescription-buildschema-l2-lambda-4c61f8557da081b1c8c2a22b9346d104","children":[]},{"level":3,"title":"BlockCollisionComponentDescription","slug":"blockcollisioncomponentdescription","link":"#blockcollisioncomponentdescription","children":[]},{"level":3,"title":"BlockCollisionComponentDescription_vtbl","slug":"blockcollisioncomponentdescription-vtbl","link":"#blockcollisioncomponentdescription-vtbl","children":[]},{"level":3,"title":"BlockRaycastComponentDescription","slug":"blockraycastcomponentdescription","link":"#blockraycastcomponentdescription","children":[]},{"level":3,"title":"BlockRaycastComponentDescription_vtbl","slug":"blockraycastcomponentdescription-vtbl","link":"#blockraycastcomponentdescription-vtbl","children":[]},{"level":3,"title":"BlockCollisionComponent","slug":"blockcollisioncomponent","link":"#blockcollisioncomponent","children":[]},{"level":3,"title":"BlockCollisionComponentProcessor","slug":"blockcollisioncomponentprocessor","link":"#blockcollisioncomponentprocessor","children":[]},{"level":3,"title":"BlockCollisionComponentProcessor::getProcessor::__l2::<lambda_d50d369ffbd5602eccd1ecd87abe7ddc>","slug":"blockcollisioncomponentprocessor-getprocessor-l2-lambda-d50d369ffbd5602eccd1ecd87abe7ddc","link":"#blockcollisioncomponentprocessor-getprocessor-l2-lambda-d50d369ffbd5602eccd1ecd87abe7ddc","children":[]},{"level":3,"title":"BlockCollisionComponentDescription::buildSchema::__l2::<lambda_4b812ccf5071d0acd944581760f037ef>","slug":"blockcollisioncomponentdescription-buildschema-l2-lambda-4b812ccf5071d0acd944581760f037ef","link":"#blockcollisioncomponentdescription-buildschema-l2-lambda-4b812ccf5071d0acd944581760f037ef","children":[]},{"level":3,"title":"BlockCollisionComponentDescription::buildSchema::__l2::<lambda_6878f6579073ac5e14ce6c03b3c5937f>","slug":"blockcollisioncomponentdescription-buildschema-l2-lambda-6878f6579073ac5e14ce6c03b3c5937f","link":"#blockcollisioncomponentdescription-buildschema-l2-lambda-6878f6579073ac5e14ce6c03b3c5937f","children":[]},{"level":3,"title":"BlockCollisionComponentDescription::buildSchema::__l2::<lambda_dc89933ad8a520e005190a29280cbde2>","slug":"blockcollisioncomponentdescription-buildschema-l2-lambda-dc89933ad8a520e005190a29280cbde2","link":"#blockcollisioncomponentdescription-buildschema-l2-lambda-dc89933ad8a520e005190a29280cbde2","children":[]},{"level":3,"title":"BlockCollisionComponentDescription::buildSchema::__l2::<lambda_c14de7537c04cb6c24d0e6d8a11adb99>","slug":"blockcollisioncomponentdescription-buildschema-l2-lambda-c14de7537c04cb6c24d0e6d8a11adb99","link":"#blockcollisioncomponentdescription-buildschema-l2-lambda-c14de7537c04cb6c24d0e6d8a11adb99","children":[]},{"level":3,"title":"BlockDestroyTimeDescription","slug":"blockdestroytimedescription","link":"#blockdestroytimedescription","children":[]},{"level":3,"title":"BlockDestroyTimeDescription_vtbl","slug":"blockdestroytimedescription-vtbl","link":"#blockdestroytimedescription-vtbl","children":[]},{"level":3,"title":"BlockDestroyTimeComponent","slug":"blockdestroytimecomponent","link":"#blockdestroytimecomponent","children":[]},{"level":3,"title":"BlockDestroyTimeDescription::buildSchema::__l2::<lambda_d1e3a537cd9a75624f45c10c16433a09>","slug":"blockdestroytimedescription-buildschema-l2-lambda-d1e3a537cd9a75624f45c10c16433a09","link":"#blockdestroytimedescription-buildschema-l2-lambda-d1e3a537cd9a75624f45c10c16433a09","children":[]},{"level":3,"title":"BlockDisplayNameDescription","slug":"blockdisplaynamedescription","link":"#blockdisplaynamedescription","children":[]},{"level":3,"title":"BlockDisplayNameDescription_vtbl","slug":"blockdisplaynamedescription-vtbl","link":"#blockdisplaynamedescription-vtbl","children":[]},{"level":3,"title":"BlockDisplayNameDescription::buildSchema::__l2::<lambda_c46f60d3a9697599df883587d19d6273>","slug":"blockdisplaynamedescription-buildschema-l2-lambda-c46f60d3a9697599df883587d19d6273","link":"#blockdisplaynamedescription-buildschema-l2-lambda-c46f60d3a9697599df883587d19d6273","children":[]},{"level":3,"title":"BlockExplodeableDescription","slug":"blockexplodeabledescription","link":"#blockexplodeabledescription","children":[]},{"level":3,"title":"BlockExplodeableDescription_vtbl","slug":"blockexplodeabledescription-vtbl","link":"#blockexplodeabledescription-vtbl","children":[]},{"level":3,"title":"BlockExplodeableComponent","slug":"blockexplodeablecomponent","link":"#blockexplodeablecomponent","children":[]},{"level":3,"title":"BlockExplodeableDescription::buildSchema::__l2::<lambda_daebb62fbd57786a9760bf50be0a77d9>","slug":"blockexplodeabledescription-buildschema-l2-lambda-daebb62fbd57786a9760bf50be0a77d9","link":"#blockexplodeabledescription-buildschema-l2-lambda-daebb62fbd57786a9760bf50be0a77d9","children":[]},{"level":3,"title":"BlockFlammableDescription","slug":"blockflammabledescription","link":"#blockflammabledescription","children":[]},{"level":3,"title":"BlockFlammableDescription_vtbl","slug":"blockflammabledescription-vtbl","link":"#blockflammabledescription-vtbl","children":[]},{"level":3,"title":"BlockFlammableComponent","slug":"blockflammablecomponent","link":"#blockflammablecomponent","children":[]},{"level":3,"title":"BlockFlammableDescription::buildSchema::__l2::<lambda_c59bc263b6294a6e6f39b8d0e04877f0>","slug":"blockflammabledescription-buildschema-l2-lambda-c59bc263b6294a6e6f39b8d0e04877f0","link":"#blockflammabledescription-buildschema-l2-lambda-c59bc263b6294a6e6f39b8d0e04877f0","children":[]},{"level":3,"title":"BlockFlammableDescription::buildSchema::__l2::<lambda_a96b44a40c7e60e12ae13262d5bca2e7>","slug":"blockflammabledescription-buildschema-l2-lambda-a96b44a40c7e60e12ae13262d5bca2e7","link":"#blockflammabledescription-buildschema-l2-lambda-a96b44a40c7e60e12ae13262d5bca2e7","children":[]},{"level":3,"title":"BlockFlammableDescription::buildSchema::__l2::<lambda_57c47e0013d9103b49b0606920551b9d>","slug":"blockflammabledescription-buildschema-l2-lambda-57c47e0013d9103b49b0606920551b9d","link":"#blockflammabledescription-buildschema-l2-lambda-57c47e0013d9103b49b0606920551b9d","children":[]},{"level":3,"title":"BlockFrictionDescription","slug":"blockfrictiondescription","link":"#blockfrictiondescription","children":[]},{"level":3,"title":"BlockFrictionDescription_vtbl","slug":"blockfrictiondescription-vtbl","link":"#blockfrictiondescription-vtbl","children":[]},{"level":3,"title":"BlockFrictionDescription::buildSchema::__l2::<lambda_c69e137bc810408b918b6f7d7307713f>","slug":"blockfrictiondescription-buildschema-l2-lambda-c69e137bc810408b918b6f7d7307713f","link":"#blockfrictiondescription-buildschema-l2-lambda-c69e137bc810408b918b6f7d7307713f","children":[]},{"level":3,"title":"BlockGeometryDescription::buildSchema::__l2::<lambda_ce6722aba34e352d0154f0dda9737a1e>","slug":"blockgeometrydescription-buildschema-l2-lambda-ce6722aba34e352d0154f0dda9737a1e","link":"#blockgeometrydescription-buildschema-l2-lambda-ce6722aba34e352d0154f0dda9737a1e","children":[]},{"level":3,"title":"BlockLegacyComponent","slug":"blocklegacycomponent","link":"#blocklegacycomponent","children":[]},{"level":3,"title":"BlockLegacyComponentDescription","slug":"blocklegacycomponentdescription","link":"#blocklegacycomponentdescription","children":[]},{"level":3,"title":"BlockLegacyComponentDescription_vtbl","slug":"blocklegacycomponentdescription-vtbl","link":"#blocklegacycomponentdescription-vtbl","children":[]},{"level":3,"title":"BlockLegacyComponentDescription::buildSchema::__l2::<lambda_27204d2f2a39d85660d61256896bff1b>","slug":"blocklegacycomponentdescription-buildschema-l2-lambda-27204d2f2a39d85660d61256896bff1b","link":"#blocklegacycomponentdescription-buildschema-l2-lambda-27204d2f2a39d85660d61256896bff1b","children":[]},{"level":3,"title":"BlockLightDescription","slug":"blocklightdescription","link":"#blocklightdescription","children":[]},{"level":3,"title":"BlockLightDescription_vtbl","slug":"blocklightdescription-vtbl","link":"#blocklightdescription-vtbl","children":[]},{"level":3,"title":"BlockLightComponent","slug":"blocklightcomponent","link":"#blocklightcomponent","children":[]},{"level":3,"title":"BlockLightDescription::buildSchema::__l2::<lambda_d71761e05246a34376364883fdb7208e>","slug":"blocklightdescription-buildschema-l2-lambda-d71761e05246a34376364883fdb7208e","link":"#blocklightdescription-buildschema-l2-lambda-d71761e05246a34376364883fdb7208e","children":[]},{"level":3,"title":"BlockLightEmissionDescription","slug":"blocklightemissiondescription","link":"#blocklightemissiondescription","children":[]},{"level":3,"title":"BlockLightEmissionDescription_vtbl","slug":"blocklightemissiondescription-vtbl","link":"#blocklightemissiondescription-vtbl","children":[]},{"level":3,"title":"BlockLightEmissionDescription::buildSchema::__l2::<lambda_1f9e1aeaf46d2eac21fea725a5f02ba0>","slug":"blocklightemissiondescription-buildschema-l2-lambda-1f9e1aeaf46d2eac21fea725a5f02ba0","link":"#blocklightemissiondescription-buildschema-l2-lambda-1f9e1aeaf46d2eac21fea725a5f02ba0","children":[]},{"level":3,"title":"BlockMapColorDescription","slug":"blockmapcolordescription","link":"#blockmapcolordescription","children":[]},{"level":3,"title":"BlockMapColorDescription_vtbl","slug":"blockmapcolordescription-vtbl","link":"#blockmapcolordescription-vtbl","children":[]},{"level":3,"title":"BlockMapColorComponent","slug":"blockmapcolorcomponent","link":"#blockmapcolorcomponent","children":[]},{"level":3,"title":"BlockMapColorDescription::buildSchema::__l2::<lambda_08f7f2a483b2ce2d8ae180541a033fbf>","slug":"blockmapcolordescription-buildschema-l2-lambda-08f7f2a483b2ce2d8ae180541a033fbf","link":"#blockmapcolordescription-buildschema-l2-lambda-08f7f2a483b2ce2d8ae180541a033fbf","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_ba98cf8c091c5275fe54b54a6fd1fa64>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-ba98cf8c091c5275fe54b54a6fd1fa64","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-ba98cf8c091c5275fe54b54a6fd1fa64","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_06f55dbee568ee03701593fa00d64316>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-06f55dbee568ee03701593fa00d64316","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-06f55dbee568ee03701593fa00d64316","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_573d2fb4ea2eda602f92a6079ece291a>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-573d2fb4ea2eda602f92a6079ece291a","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-573d2fb4ea2eda602f92a6079ece291a","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_12efd0823a81885ff5970a7012bb91e8>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-12efd0823a81885ff5970a7012bb91e8","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-12efd0823a81885ff5970a7012bb91e8","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_db0e7cbf50b78f865c00e20c1e7ca2f2>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-db0e7cbf50b78f865c00e20c1e7ca2f2","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-db0e7cbf50b78f865c00e20c1e7ca2f2","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_44ff594e168fc93ea3851ee9be5d388a>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-44ff594e168fc93ea3851ee9be5d388a","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-44ff594e168fc93ea3851ee9be5d388a","children":[]},{"level":3,"title":"BlockMaterialInstancesDescription::buildSchema::__l2::<lambda_89c1e1e1679be2065bf56004cfe846be>","slug":"blockmaterialinstancesdescription-buildschema-l2-lambda-89c1e1e1679be2065bf56004cfe846be","link":"#blockmaterialinstancesdescription-buildschema-l2-lambda-89c1e1e1679be2065bf56004cfe846be","children":[]},{"level":3,"title":"BlockPlacementFilterDescription","slug":"blockplacementfilterdescription","link":"#blockplacementfilterdescription","children":[]},{"level":3,"title":"BlockPlacementFilterDescription_vtbl","slug":"blockplacementfilterdescription-vtbl","link":"#blockplacementfilterdescription-vtbl","children":[]},{"level":3,"title":"BlockPlacementFilterDescription::buildSchema::__l4::<lambda_e8ce4e56bf378dc7388d7d765e0865c1>","slug":"blockplacementfilterdescription-buildschema-l4-lambda-e8ce4e56bf378dc7388d7d765e0865c1","link":"#blockplacementfilterdescription-buildschema-l4-lambda-e8ce4e56bf378dc7388d7d765e0865c1","children":[]},{"level":3,"title":"BlockPlacementFilterDescription::buildSchema::__l3::<lambda_9da8bab70b5a357e6f6558be61f31a37>","slug":"blockplacementfilterdescription-buildschema-l3-lambda-9da8bab70b5a357e6f6558be61f31a37","link":"#blockplacementfilterdescription-buildschema-l3-lambda-9da8bab70b5a357e6f6558be61f31a37","children":[]},{"level":3,"title":"BlockPlacementFilterDescription::buildSchema::__l3::<lambda_3929d7bdc0012c1d5b5d07211a568962>","slug":"blockplacementfilterdescription-buildschema-l3-lambda-3929d7bdc0012c1d5b5d07211a568962","link":"#blockplacementfilterdescription-buildschema-l3-lambda-3929d7bdc0012c1d5b5d07211a568962","children":[]},{"level":3,"title":"BlockPlacementFilterDescription::buildSchema::__l3::<lambda_48a2c92454dca1b1eb86708c0cb6f245>","slug":"blockplacementfilterdescription-buildschema-l3-lambda-48a2c92454dca1b1eb86708c0cb6f245","link":"#blockplacementfilterdescription-buildschema-l3-lambda-48a2c92454dca1b1eb86708c0cb6f245","children":[]},{"level":3,"title":"BlockPlacementFilterDescription::buildSchema::__l2::<lambda_cb0824acb19a6926bc16ae918b367222>","slug":"blockplacementfilterdescription-buildschema-l2-lambda-cb0824acb19a6926bc16ae918b367222","link":"#blockplacementfilterdescription-buildschema-l2-lambda-cb0824acb19a6926bc16ae918b367222","children":[]},{"level":3,"title":"BlockUnwalkableDescription","slug":"blockunwalkabledescription","link":"#blockunwalkabledescription","children":[]},{"level":3,"title":"BlockUnwalkableDescription_vtbl","slug":"blockunwalkabledescription-vtbl","link":"#blockunwalkabledescription-vtbl","children":[]},{"level":3,"title":"BlockPreventsJumpingDescription","slug":"blockpreventsjumpingdescription","link":"#blockpreventsjumpingdescription","children":[]},{"level":3,"title":"BlockPreventsJumpingDescription_vtbl","slug":"blockpreventsjumpingdescription-vtbl","link":"#blockpreventsjumpingdescription-vtbl","children":[]},{"level":3,"title":"BlockImmovableDescription","slug":"blockimmovabledescription","link":"#blockimmovabledescription","children":[]},{"level":3,"title":"BlockImmovableDescription_vtbl","slug":"blockimmovabledescription-vtbl","link":"#blockimmovabledescription-vtbl","children":[]},{"level":3,"title":"BlockBreakOnPushDescription","slug":"blockbreakonpushdescription","link":"#blockbreakonpushdescription","children":[]},{"level":3,"title":"BlockBreakOnPushDescription_vtbl","slug":"blockbreakonpushdescription-vtbl","link":"#blockbreakonpushdescription-vtbl","children":[]},{"level":3,"title":"BlockOnlyPistonPushDescription","slug":"blockonlypistonpushdescription","link":"#blockonlypistonpushdescription","children":[]},{"level":3,"title":"BlockOnlyPistonPushDescription_vtbl","slug":"blockonlypistonpushdescription-vtbl","link":"#blockonlypistonpushdescription-vtbl","children":[]},{"level":3,"title":"BlockBreaksWhenHitByArrowDescription","slug":"blockbreakswhenhitbyarrowdescription","link":"#blockbreakswhenhitbyarrowdescription","children":[]},{"level":3,"title":"BlockBreaksWhenHitByArrowDescription_vtbl","slug":"blockbreakswhenhitbyarrowdescription-vtbl","link":"#blockbreakswhenhitbyarrowdescription-vtbl","children":[]},{"level":3,"title":"BlockPropertyComponent","slug":"blockpropertycomponent","link":"#blockpropertycomponent","children":[]},{"level":3,"title":"BlockOnlyPistonPushDescription::buildSchema::__l2::<lambda_c945b5662cf1eb5589293648d6eec793>","slug":"blockonlypistonpushdescription-buildschema-l2-lambda-c945b5662cf1eb5589293648d6eec793","link":"#blockonlypistonpushdescription-buildschema-l2-lambda-c945b5662cf1eb5589293648d6eec793","children":[]},{"level":3,"title":"BlockBreakOnPushDescription::buildSchema::__l2::<lambda_85b29853f478a656648e5c7bba71cddf>","slug":"blockbreakonpushdescription-buildschema-l2-lambda-85b29853f478a656648e5c7bba71cddf","link":"#blockbreakonpushdescription-buildschema-l2-lambda-85b29853f478a656648e5c7bba71cddf","children":[]},{"level":3,"title":"BlockImmovableDescription::buildSchema::__l2::<lambda_e8efcee476cac9f07672d89dca1ff150>","slug":"blockimmovabledescription-buildschema-l2-lambda-e8efcee476cac9f07672d89dca1ff150","link":"#blockimmovabledescription-buildschema-l2-lambda-e8efcee476cac9f07672d89dca1ff150","children":[]},{"level":3,"title":"BlockPreventsJumpingDescription::buildSchema::__l2::<lambda_9542622d127f343463dd4c8650a62bd0>","slug":"blockpreventsjumpingdescription-buildschema-l2-lambda-9542622d127f343463dd4c8650a62bd0","link":"#blockpreventsjumpingdescription-buildschema-l2-lambda-9542622d127f343463dd4c8650a62bd0","children":[]},{"level":3,"title":"BlockUnwalkableDescription::buildSchema::__l2::<lambda_1a4657843158ef697741cd4b4af2d5c3>","slug":"blockunwalkabledescription-buildschema-l2-lambda-1a4657843158ef697741cd4b4af2d5c3","link":"#blockunwalkabledescription-buildschema-l2-lambda-1a4657843158ef697741cd4b4af2d5c3","children":[]},{"level":3,"title":"BlockQueuedTickingDescription","slug":"blockqueuedtickingdescription","link":"#blockqueuedtickingdescription","children":[]},{"level":3,"title":"BlockQueuedTickingDescription_vtbl","slug":"blockqueuedtickingdescription-vtbl","link":"#blockqueuedtickingdescription-vtbl","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_cf213ad65c48f5af5c1a97b78c1e03cc>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-cf213ad65c48f5af5c1a97b78c1e03cc","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-cf213ad65c48f5af5c1a97b78c1e03cc","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_626e42b5f549b74b2c47ecc5065668f8>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-626e42b5f549b74b2c47ecc5065668f8","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-626e42b5f549b74b2c47ecc5065668f8","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_3dcdcc4801ba6f06b5bd699cf19f4ae9>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-3dcdcc4801ba6f06b5bd699cf19f4ae9","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-3dcdcc4801ba6f06b5bd699cf19f4ae9","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_d7521e35ca8cc680c738d8c91bd339a3>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-d7521e35ca8cc680c738d8c91bd339a3","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-d7521e35ca8cc680c738d8c91bd339a3","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_9dd896149b2b0e048d3f4e74066c6d79>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-9dd896149b2b0e048d3f4e74066c6d79","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-9dd896149b2b0e048d3f4e74066c6d79","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_aa9609fada4ce700b2792b8814cdcabf>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-aa9609fada4ce700b2792b8814cdcabf","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-aa9609fada4ce700b2792b8814cdcabf","children":[]},{"level":3,"title":"BlockQueuedTickingDescription::buildSchema::__l2::<lambda_b620b3e3f93259a2e6ac65f0433095c0>","slug":"blockqueuedtickingdescription-buildschema-l2-lambda-b620b3e3f93259a2e6ac65f0433095c0","link":"#blockqueuedtickingdescription-buildschema-l2-lambda-b620b3e3f93259a2e6ac65f0433095c0","children":[]},{"level":3,"title":"BlockRandomTickingDescription","slug":"blockrandomtickingdescription","link":"#blockrandomtickingdescription","children":[]},{"level":3,"title":"BlockRandomTickingDescription_vtbl","slug":"blockrandomtickingdescription-vtbl","link":"#blockrandomtickingdescription-vtbl","children":[]},{"level":3,"title":"BlockRandomTickingComponent","slug":"blockrandomtickingcomponent","link":"#blockrandomtickingcomponent","children":[]},{"level":3,"title":"BlockRandomTickingDescription::buildSchema::__l2::<lambda_07d8c21d2a1191c5ff5c50620c1730e3>","slug":"blockrandomtickingdescription-buildschema-l2-lambda-07d8c21d2a1191c5ff5c50620c1730e3","link":"#blockrandomtickingdescription-buildschema-l2-lambda-07d8c21d2a1191c5ff5c50620c1730e3","children":[]},{"level":3,"title":"BlockRandomTickingDescription::buildSchema::__l2::<lambda_1321e859aa1dd025510131cc9e8e6225>","slug":"blockrandomtickingdescription-buildschema-l2-lambda-1321e859aa1dd025510131cc9e8e6225","link":"#blockrandomtickingdescription-buildschema-l2-lambda-1321e859aa1dd025510131cc9e8e6225","children":[]},{"level":3,"title":"BlockRandomTickingDescription::buildSchema::__l2::<lambda_9c30243026aaa59f1df4244d1fee3202>","slug":"blockrandomtickingdescription-buildschema-l2-lambda-9c30243026aaa59f1df4244d1fee3202","link":"#blockrandomtickingdescription-buildschema-l2-lambda-9c30243026aaa59f1df4244d1fee3202","children":[]},{"level":3,"title":"BlockRandomTickingDescription::buildSchema::__l2::<lambda_c59ae86f72fe7374104f30d451d32d65>","slug":"blockrandomtickingdescription-buildschema-l2-lambda-c59ae86f72fe7374104f30d451d32d65","link":"#blockrandomtickingdescription-buildschema-l2-lambda-c59ae86f72fe7374104f30d451d32d65","children":[]},{"level":3,"title":"BlockRandomTickingDescription::buildSchema::__l2::<lambda_eb0063f1e7722fc1fd674532441eac14>","slug":"blockrandomtickingdescription-buildschema-l2-lambda-eb0063f1e7722fc1fd674532441eac14","link":"#blockrandomtickingdescription-buildschema-l2-lambda-eb0063f1e7722fc1fd674532441eac14","children":[]},{"level":3,"title":"BlockRaycastComponentProcessor","slug":"blockraycastcomponentprocessor","link":"#blockraycastcomponentprocessor","children":[]},{"level":3,"title":"BlockRaycastComponentProcessor::getProcessor::__l2::<lambda_10b292fb3bf93b28c6ce9e7cd4e94995>","slug":"blockraycastcomponentprocessor-getprocessor-l2-lambda-10b292fb3bf93b28c6ce9e7cd4e94995","link":"#blockraycastcomponentprocessor-getprocessor-l2-lambda-10b292fb3bf93b28c6ce9e7cd4e94995","children":[]},{"level":3,"title":"BlockRaycastComponentDescription::buildSchema::__l2::<lambda_fb014cf2776a7d8c0e9f3bbce0361b6c>","slug":"blockraycastcomponentdescription-buildschema-l2-lambda-fb014cf2776a7d8c0e9f3bbce0361b6c","link":"#blockraycastcomponentdescription-buildschema-l2-lambda-fb014cf2776a7d8c0e9f3bbce0361b6c","children":[]},{"level":3,"title":"BlockRaycastComponentDescription::buildSchema::__l2::<lambda_589fb79a6d3e2959a4a37044011844b6>","slug":"blockraycastcomponentdescription-buildschema-l2-lambda-589fb79a6d3e2959a4a37044011844b6","link":"#blockraycastcomponentdescription-buildschema-l2-lambda-589fb79a6d3e2959a4a37044011844b6","children":[]},{"level":3,"title":"BlockRaycastComponentDescription::buildSchema::__l2::<lambda_8bf5a874efbe02d284420606108a25cb>","slug":"blockraycastcomponentdescription-buildschema-l2-lambda-8bf5a874efbe02d284420606108a25cb","link":"#blockraycastcomponentdescription-buildschema-l2-lambda-8bf5a874efbe02d284420606108a25cb","children":[]},{"level":3,"title":"BlockRaycastComponentDescription::buildSchema::__l2::<lambda_5dc9edb90a48ac3aff1ad1a548af9b94>","slug":"blockraycastcomponentdescription-buildschema-l2-lambda-5dc9edb90a48ac3aff1ad1a548af9b94","link":"#blockraycastcomponentdescription-buildschema-l2-lambda-5dc9edb90a48ac3aff1ad1a548af9b94","children":[]},{"level":3,"title":"BlockRotationDescription::buildSchema::__l2::<lambda_ad48c97325fe1028e35444e9e43fe6d8>","slug":"blockrotationdescription-buildschema-l2-lambda-ad48c97325fe1028e35444e9e43fe6d8","link":"#blockrotationdescription-buildschema-l2-lambda-ad48c97325fe1028e35444e9e43fe6d8","children":[]},{"level":3,"title":"BlockUnitCubeDescription::buildSchema::__l2::<lambda_19fd5eb0a190a0558be6cf70036e4f47>","slug":"blockunitcubedescription-buildschema-l2-lambda-19fd5eb0a190a0558be6cf70036e4f47","link":"#blockunitcubedescription-buildschema-l2-lambda-19fd5eb0a190a0558be6cf70036e4f47","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>","slug":"blocktriggerdescription-onfallontrigger","link":"#blocktriggerdescription-onfallontrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>_vtbl","slug":"blocktriggerdescription-onfallontrigger-vtbl","link":"#blocktriggerdescription-onfallontrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>::buildSchema::__l2::<lambda_ef8916e3db97f444a0c05fc5425db430>","slug":"blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-ef8916e3db97f444a0c05fc5425db430","link":"#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-ef8916e3db97f444a0c05fc5425db430","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>::buildSchema::__l2::<lambda_000f4e5a520a10ac3ebaba19bf2a65e9>","slug":"blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-000f4e5a520a10ac3ebaba19bf2a65e9","link":"#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-000f4e5a520a10ac3ebaba19bf2a65e9","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>::buildSchema::__l2::<lambda_fdb5fee4d3e733bbfc3db9c35163d2af>","slug":"blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-fdb5fee4d3e733bbfc3db9c35163d2af","link":"#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-fdb5fee4d3e733bbfc3db9c35163d2af","children":[]},{"level":3,"title":"BlockTriggerDescription<OnFallOnTrigger>::buildSchema::__l2::<lambda_dc70758361f9d984c7cf95f24c605334>","slug":"blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-dc70758361f9d984c7cf95f24c605334","link":"#blocktriggerdescription-onfallontrigger-buildschema-l2-lambda-dc70758361f9d984c7cf95f24c605334","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>","slug":"blocktriggerdescription-oninteracttrigger","link":"#blocktriggerdescription-oninteracttrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>_vtbl","slug":"blocktriggerdescription-oninteracttrigger-vtbl","link":"#blocktriggerdescription-oninteracttrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>::buildSchema::__l2::<lambda_a33df2b205b85b239e63f61267080c4a>","slug":"blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-a33df2b205b85b239e63f61267080c4a","link":"#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-a33df2b205b85b239e63f61267080c4a","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>::buildSchema::__l2::<lambda_076c3050c0e5f5733483d25f92b40f6a>","slug":"blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-076c3050c0e5f5733483d25f92b40f6a","link":"#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-076c3050c0e5f5733483d25f92b40f6a","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>::buildSchema::__l2::<lambda_9ced8916369862ecd1f019fbfcf13823>","slug":"blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-9ced8916369862ecd1f019fbfcf13823","link":"#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-9ced8916369862ecd1f019fbfcf13823","children":[]},{"level":3,"title":"BlockTriggerDescription<OnInteractTrigger>::buildSchema::__l2::<lambda_d814003a632a6cbdb9671d6311392b8f>","slug":"blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-d814003a632a6cbdb9671d6311392b8f","link":"#blocktriggerdescription-oninteracttrigger-buildschema-l2-lambda-d814003a632a6cbdb9671d6311392b8f","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>","slug":"blocktriggerdescription-onplacedtrigger","link":"#blocktriggerdescription-onplacedtrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>_vtbl","slug":"blocktriggerdescription-onplacedtrigger-vtbl","link":"#blocktriggerdescription-onplacedtrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>::buildSchema::__l2::<lambda_e8215986e7b31d8dd963ccb19f24bc1c>","slug":"blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-e8215986e7b31d8dd963ccb19f24bc1c","link":"#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-e8215986e7b31d8dd963ccb19f24bc1c","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>::buildSchema::__l2::<lambda_f48aa65c4d65cdf0f0fa0766d3dcb3ad>","slug":"blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-f48aa65c4d65cdf0f0fa0766d3dcb3ad","link":"#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-f48aa65c4d65cdf0f0fa0766d3dcb3ad","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>::buildSchema::__l2::<lambda_4a014553b7ffe83cbe45da2192597e7b>","slug":"blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-4a014553b7ffe83cbe45da2192597e7b","link":"#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-4a014553b7ffe83cbe45da2192597e7b","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlacedTrigger>::buildSchema::__l2::<lambda_47afbc0fcbee03dec64a6d7f55c9abb0>","slug":"blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-47afbc0fcbee03dec64a6d7f55c9abb0","link":"#blocktriggerdescription-onplacedtrigger-buildschema-l2-lambda-47afbc0fcbee03dec64a6d7f55c9abb0","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>","slug":"blocktriggerdescription-onplayerdestroyedtrigger","link":"#blocktriggerdescription-onplayerdestroyedtrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>_vtbl","slug":"blocktriggerdescription-onplayerdestroyedtrigger-vtbl","link":"#blocktriggerdescription-onplayerdestroyedtrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>::buildSchema::__l2::<lambda_435ed67ca33cdf6ce3551e627dde545b>","slug":"blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-435ed67ca33cdf6ce3551e627dde545b","link":"#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-435ed67ca33cdf6ce3551e627dde545b","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>::buildSchema::__l2::<lambda_e78fbccb97a8276bca1647984fa77f23>","slug":"blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-e78fbccb97a8276bca1647984fa77f23","link":"#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-e78fbccb97a8276bca1647984fa77f23","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>::buildSchema::__l2::<lambda_1e4e182aec1b3e1d24d6fba3cdf70c50>","slug":"blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-1e4e182aec1b3e1d24d6fba3cdf70c50","link":"#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-1e4e182aec1b3e1d24d6fba3cdf70c50","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerDestroyedTrigger>::buildSchema::__l2::<lambda_4b99d462895d28d49e43325b4a39a5dd>","slug":"blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-4b99d462895d28d49e43325b4a39a5dd","link":"#blocktriggerdescription-onplayerdestroyedtrigger-buildschema-l2-lambda-4b99d462895d28d49e43325b4a39a5dd","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>","slug":"blocktriggerdescription-onplayerplacingtrigger","link":"#blocktriggerdescription-onplayerplacingtrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>_vtbl","slug":"blocktriggerdescription-onplayerplacingtrigger-vtbl","link":"#blocktriggerdescription-onplayerplacingtrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>::buildSchema::__l2::<lambda_027de81471dbda20b20e86eedbf98df7>","slug":"blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-027de81471dbda20b20e86eedbf98df7","link":"#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-027de81471dbda20b20e86eedbf98df7","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>::buildSchema::__l2::<lambda_f0f38f51c88a5b42b90f6d3fc2ad3143>","slug":"blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-f0f38f51c88a5b42b90f6d3fc2ad3143","link":"#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-f0f38f51c88a5b42b90f6d3fc2ad3143","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>::buildSchema::__l2::<lambda_ebe4b9d77c2a0e21773e7548a78153ea>","slug":"blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-ebe4b9d77c2a0e21773e7548a78153ea","link":"#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-ebe4b9d77c2a0e21773e7548a78153ea","children":[]},{"level":3,"title":"BlockTriggerDescription<OnPlayerPlacingTrigger>::buildSchema::__l2::<lambda_833337504ddb4f2a526e6da5743fc5c8>","slug":"blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-833337504ddb4f2a526e6da5743fc5c8","link":"#blocktriggerdescription-onplayerplacingtrigger-buildschema-l2-lambda-833337504ddb4f2a526e6da5743fc5c8","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>","slug":"blocktriggerdescription-onstepontrigger","link":"#blocktriggerdescription-onstepontrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>_vtbl","slug":"blocktriggerdescription-onstepontrigger-vtbl","link":"#blocktriggerdescription-onstepontrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>","slug":"blocktriggerdescription-onstepofftrigger","link":"#blocktriggerdescription-onstepofftrigger","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>_vtbl","slug":"blocktriggerdescription-onstepofftrigger-vtbl","link":"#blocktriggerdescription-onstepofftrigger-vtbl","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>::buildSchema::__l2::<lambda_838ec938e898e7fb3a589c9f550675b7>","slug":"blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-838ec938e898e7fb3a589c9f550675b7","link":"#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-838ec938e898e7fb3a589c9f550675b7","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>::buildSchema::__l2::<lambda_8b344d19ff57fad5d3756f55b27cd212>","slug":"blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-8b344d19ff57fad5d3756f55b27cd212","link":"#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-8b344d19ff57fad5d3756f55b27cd212","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>::buildSchema::__l2::<lambda_25314afb71d3d21539214ab6b84d06e6>","slug":"blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-25314afb71d3d21539214ab6b84d06e6","link":"#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-25314afb71d3d21539214ab6b84d06e6","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOnTrigger>::buildSchema::__l2::<lambda_b50379f0dbf3bd5c47b0a110b58ddceb>","slug":"blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-b50379f0dbf3bd5c47b0a110b58ddceb","link":"#blocktriggerdescription-onstepontrigger-buildschema-l2-lambda-b50379f0dbf3bd5c47b0a110b58ddceb","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>::buildSchema::__l2::<lambda_e2c75ed82a16fa8196b889610cdebfc3>","slug":"blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e2c75ed82a16fa8196b889610cdebfc3","link":"#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e2c75ed82a16fa8196b889610cdebfc3","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>::buildSchema::__l2::<lambda_751a230ba8aa7b7ae9f90fb86eaecaa4>","slug":"blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-751a230ba8aa7b7ae9f90fb86eaecaa4","link":"#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-751a230ba8aa7b7ae9f90fb86eaecaa4","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>::buildSchema::__l2::<lambda_e702ff7c6ebe41cd2656da0166ab18d5>","slug":"blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e702ff7c6ebe41cd2656da0166ab18d5","link":"#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-e702ff7c6ebe41cd2656da0166ab18d5","children":[]},{"level":3,"title":"BlockTriggerDescription<OnStepOffTrigger>::buildSchema::__l2::<lambda_ba303f0246cd6fbc9f8024e4d67a8b23>","slug":"blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-ba303f0246cd6fbc9f8024e4d67a8b23","link":"#blocktriggerdescription-onstepofftrigger-buildschema-l2-lambda-ba303f0246cd6fbc9f8024e4d67a8b23","children":[]},{"level":3,"title":"Bedrock::NonOwnerPointer<Dimension>","slug":"bedrock-nonownerpointer-dimension","link":"#bedrock-nonownerpointer-dimension","children":[]},{"level":3,"title":"BlockSelector_vtbl","slug":"blockselector-vtbl","link":"#blockselector-vtbl","children":[]},{"level":3,"title":"BastionPiece","slug":"bastionpiece","link":"#bastionpiece","children":[]},{"level":3,"title":"BastionPiece::addPieces::__l16::<lambda_c6c2cc063f3e8775940af7b1bdaadfd2>","slug":"bastionpiece-addpieces-l16-lambda-c6c2cc063f3e8775940af7b1bdaadfd2","link":"#bastionpiece-addpieces-l16-lambda-c6c2cc063f3e8775940af7b1bdaadfd2","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<enum ParticleType,std::string >","slug":"bidirectionalunorderedmap-enum-particletype-std-string","link":"#bidirectionalunorderedmap-enum-particletype-std-string","children":[]},{"level":3,"title":"Bedrock::PlatformBootstrap","slug":"bedrock-platformbootstrap","link":"#bedrock-platformbootstrap","children":[]},{"level":3,"title":"Bedrock::PlatformBootstrap_vtbl","slug":"bedrock-platformbootstrap-vtbl","link":"#bedrock-platformbootstrap-vtbl","children":[]},{"level":3,"title":"BalloonableDefinition","slug":"balloonabledefinition","link":"#balloonabledefinition","children":[]},{"level":3,"title":"BalloonableComponent","slug":"balloonablecomponent","link":"#balloonablecomponent","children":[]},{"level":3,"title":"BalloonComponent","slug":"ballooncomponent","link":"#ballooncomponent","children":[]},{"level":3,"title":"BalloonDefinition","slug":"balloondefinition","link":"#balloondefinition","children":[]},{"level":3,"title":"BehaviorData::Data<void *>","slug":"behaviordata-data-void","link":"#behaviordata-data-void","children":[]},{"level":3,"title":"BehaviorData::Data<void *>_vtbl","slug":"behaviordata-data-void-vtbl","link":"#behaviordata-data-void-vtbl","children":[]},{"level":3,"title":"BlockListEventMap","slug":"blocklisteventmap","link":"#blocklisteventmap","children":[]},{"level":3,"title":"BlockBreakSensorDefinition","slug":"blockbreaksensordefinition","link":"#blockbreaksensordefinition","children":[]},{"level":3,"title":"BoostItem","slug":"boostitem","link":"#boostitem","children":[]},{"level":3,"title":"BoostableDefinition","slug":"boostabledefinition","link":"#boostabledefinition","children":[]},{"level":3,"title":"BossDefinition","slug":"bossdefinition","link":"#bossdefinition","children":[]},{"level":3,"title":"BreakBlocksComponent","slug":"breakblockscomponent","link":"#breakblockscomponent","children":[]},{"level":3,"title":"BreakDoorAnnotationComponent","slug":"breakdoorannotationcomponent","link":"#breakdoorannotationcomponent","children":[]},{"level":3,"title":"BreathableDefinition","slug":"breathabledefinition","link":"#breathabledefinition","children":[]},{"level":3,"title":"BreedableDefinition","slug":"breedabledefinition","link":"#breedabledefinition","children":[]},{"level":3,"title":"BreedableComponent","slug":"breedablecomponent","link":"#breedablecomponent","children":[]},{"level":3,"title":"BribeableDefinition","slug":"bribeabledefinition","link":"#bribeabledefinition","children":[]},{"level":3,"title":"BribeableComponent","slug":"bribeablecomponent","link":"#bribeablecomponent","children":[]},{"level":3,"title":"BucketableComponent","slug":"bucketablecomponent","link":"#bucketablecomponent","children":[]},{"level":3,"title":"BurnsInDaylightDefinition","slug":"burnsindaylightdefinition","link":"#burnsindaylightdefinition","children":[]},{"level":3,"title":"BucketableComponent::getInteraction::__l5::<lambda_8e84a487e038ec80f3efce51137fd1cb>","slug":"bucketablecomponent-getinteraction-l5-lambda-8e84a487e038ec80f3efce51137fd1cb","link":"#bucketablecomponent-getinteraction-l5-lambda-8e84a487e038ec80f3efce51137fd1cb","children":[]},{"level":3,"title":"BribeableComponent::getInteraction::__l14::<lambda_1e8d22cdb9df4c9a9c784cbb7b6ea1eb>","slug":"bribeablecomponent-getinteraction-l14-lambda-1e8d22cdb9df4c9a9c784cbb7b6ea1eb","link":"#bribeablecomponent-getinteraction-l14-lambda-1e8d22cdb9df4c9a9c784cbb7b6ea1eb","children":[]},{"level":3,"title":"BribeableDefinition::buildSchema::__l2::<lambda_3ea2844f8ccdbf4ca2d8554f79132ad2>","slug":"bribeabledefinition-buildschema-l2-lambda-3ea2844f8ccdbf4ca2d8554f79132ad2","link":"#bribeabledefinition-buildschema-l2-lambda-3ea2844f8ccdbf4ca2d8554f79132ad2","children":[]},{"level":3,"title":"BreedableComponent::getInteraction::__l23::<lambda_0ca09d6f42b0b2725246a39b155b6d02>","slug":"breedablecomponent-getinteraction-l23-lambda-0ca09d6f42b0b2725246a39b155b6d02","link":"#breedablecomponent-getinteraction-l23-lambda-0ca09d6f42b0b2725246a39b155b6d02","children":[]},{"level":3,"title":"BreedableDefinition::buildSchema::__l2::<lambda_687cb70991334864e2f4d9922259ea88>","slug":"breedabledefinition-buildschema-l2-lambda-687cb70991334864e2f4d9922259ea88","link":"#breedabledefinition-buildschema-l2-lambda-687cb70991334864e2f4d9922259ea88","children":[]},{"level":3,"title":"BreedableDefinition::buildSchema::__l2::<lambda_3b992a0d9419e48052bc453e3b7aa62c>","slug":"breedabledefinition-buildschema-l2-lambda-3b992a0d9419e48052bc453e3b7aa62c","link":"#breedabledefinition-buildschema-l2-lambda-3b992a0d9419e48052bc453e3b7aa62c","children":[]},{"level":3,"title":"BreakDoorAnnotationComponent::obstructionCheck::__l65::<lambda_29299142ebba9cf19320f4a54667acc9>","slug":"breakdoorannotationcomponent-obstructioncheck-l65-lambda-29299142ebba9cf19320f4a54667acc9","link":"#breakdoorannotationcomponent-obstructioncheck-l65-lambda-29299142ebba9cf19320f4a54667acc9","children":[]},{"level":3,"title":"BreakBlocksComponent::breakNearbyBlocks::__l29::<lambda_99cbf2916026c93342b5e87247c4b1b8>","slug":"breakblockscomponent-breaknearbyblocks-l29-lambda-99cbf2916026c93342b5e87247c4b1b8","link":"#breakblockscomponent-breaknearbyblocks-l29-lambda-99cbf2916026c93342b5e87247c4b1b8","children":[]},{"level":3,"title":"BlockBreakSensorComponent::initialize::__l2::<lambda_1b6de276689ee3844025b88c9022f8f6>","slug":"blockbreaksensorcomponent-initialize-l2-lambda-1b6de276689ee3844025b88c9022f8f6","link":"#blockbreaksensorcomponent-initialize-l2-lambda-1b6de276689ee3844025b88c9022f8f6","children":[]},{"level":3,"title":"BalloonableComponent::getInteraction::__l16::<lambda_4eb329858ee62965ee9c218f5145de0f>","slug":"balloonablecomponent-getinteraction-l16-lambda-4eb329858ee62965ee9c218f5145de0f","link":"#balloonablecomponent-getinteraction-l16-lambda-4eb329858ee62965ee9c218f5145de0f","children":[]},{"level":3,"title":"BalloonableComponent::getInteraction::__l8::<lambda_88cf98eb28c9260dfe790cfd08438e9d>","slug":"balloonablecomponent-getinteraction-l8-lambda-88cf98eb28c9260dfe790cfd08438e9d","link":"#balloonablecomponent-getinteraction-l8-lambda-88cf98eb28c9260dfe790cfd08438e9d","children":[]},{"level":3,"title":"BalloonableDefinition::buildSchema::__l2::<lambda_0d60382c8be5f5bc0dca2a0f426db4a1>","slug":"balloonabledefinition-buildschema-l2-lambda-0d60382c8be5f5bc0dca2a0f426db4a1","link":"#balloonabledefinition-buildschema-l2-lambda-0d60382c8be5f5bc0dca2a0f426db4a1","children":[]},{"level":3,"title":"BalloonableDefinition::buildSchema::__l2::<lambda_e55aca88682b256223a20f461ea159b2>","slug":"balloonabledefinition-buildschema-l2-lambda-e55aca88682b256223a20f461ea159b2","link":"#balloonabledefinition-buildschema-l2-lambda-e55aca88682b256223a20f461ea159b2","children":[]},{"level":3,"title":"BaseRailBlock","slug":"baserailblock","link":"#baserailblock","children":[]},{"level":3,"title":"BaseRailBlock_vtbl","slug":"baserailblock-vtbl","link":"#baserailblock-vtbl","children":[]},{"level":3,"title":"buildSchemaSpawnActorParameters::__l2::<lambda_f4d58fb7fa9c4857247880a11bbd432f>","slug":"buildschemaspawnactorparameters-l2-lambda-f4d58fb7fa9c4857247880a11bbd432f","link":"#buildschemaspawnactorparameters-l2-lambda-f4d58fb7fa9c4857247880a11bbd432f","children":[]},{"level":3,"title":"buildSchemaSpawnActorParameters::__l2::<lambda_5f64cd3a4c891918e62801dca2a65523>","slug":"buildschemaspawnactorparameters-l2-lambda-5f64cd3a4c891918e62801dca2a65523","link":"#buildschemaspawnactorparameters-l2-lambda-5f64cd3a4c891918e62801dca2a65523","children":[]},{"level":3,"title":"BehaviorSystem","slug":"behaviorsystem","link":"#behaviorsystem","children":[]},{"level":3,"title":"BehaviorSystem_vtbl","slug":"behaviorsystem-vtbl","link":"#behaviorsystem-vtbl","children":[]},{"level":3,"title":"BlockBreakSensorSystem","slug":"blockbreaksensorsystem","link":"#blockbreaksensorsystem","children":[]},{"level":3,"title":"BlockBreakSensorSystem_vtbl","slug":"blockbreaksensorsystem-vtbl","link":"#blockbreaksensorsystem-vtbl","children":[]},{"level":3,"title":"BodyControlComponent","slug":"bodycontrolcomponent","link":"#bodycontrolcomponent","children":[]},{"level":3,"title":"BodyControlSystem","slug":"bodycontrolsystem","link":"#bodycontrolsystem","children":[]},{"level":3,"title":"BodyControlSystem_vtbl","slug":"bodycontrolsystem-vtbl","link":"#bodycontrolsystem-vtbl","children":[]},{"level":3,"title":"BoostableSystem","slug":"boostablesystem","link":"#boostablesystem","children":[]},{"level":3,"title":"BoostableSystem_vtbl","slug":"boostablesystem-vtbl","link":"#boostablesystem-vtbl","children":[]},{"level":3,"title":"BreakBlocksSystem","slug":"breakblockssystem","link":"#breakblockssystem","children":[]},{"level":3,"title":"BreakBlocksSystem_vtbl","slug":"breakblockssystem-vtbl","link":"#breakblockssystem-vtbl","children":[]},{"level":3,"title":"BreakDoorAnnotationSystem","slug":"breakdoorannotationsystem","link":"#breakdoorannotationsystem","children":[]},{"level":3,"title":"BreakDoorAnnotationSystem_vtbl","slug":"breakdoorannotationsystem-vtbl","link":"#breakdoorannotationsystem-vtbl","children":[]},{"level":3,"title":"BreathableSystem","slug":"breathablesystem","link":"#breathablesystem","children":[]},{"level":3,"title":"BreathableSystem_vtbl","slug":"breathablesystem-vtbl","link":"#breathablesystem-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadUtil","slug":"bedrock-threading-threadutil","link":"#bedrock-threading-threadutil","children":[]},{"level":3,"title":"BatchedNetworkPeer::_startSendTask::__l2::<lambda_bd091a0e94bce2f3d40cd13870786e14>","slug":"batchednetworkpeer-startsendtask-l2-lambda-bd091a0e94bce2f3d40cd13870786e14","link":"#batchednetworkpeer-startsendtask-l2-lambda-bd091a0e94bce2f3d40cd13870786e14","children":[]},{"level":3,"title":"BatchedNetworkPeer::_startSendTask::__l2::<lambda_f57f9e03a6e9b4ead48e0fa8aaeaf5db>","slug":"batchednetworkpeer-startsendtask-l2-lambda-f57f9e03a6e9b4ead48e0fa8aaeaf5db","link":"#batchednetworkpeer-startsendtask-l2-lambda-f57f9e03a6e9b4ead48e0fa8aaeaf5db","children":[]},{"level":3,"title":"BookCloningRecipe","slug":"bookcloningrecipe","link":"#bookcloningrecipe","children":[]},{"level":3,"title":"BookCloningRecipe_vtbl","slug":"bookcloningrecipe-vtbl","link":"#bookcloningrecipe-vtbl","children":[]},{"level":3,"title":"BannerDuplicateRecipe","slug":"bannerduplicaterecipe","link":"#bannerduplicaterecipe","children":[]},{"level":3,"title":"BannerDuplicateRecipe_vtbl","slug":"bannerduplicaterecipe-vtbl","link":"#bannerduplicaterecipe-vtbl","children":[]},{"level":3,"title":"BannerAddPatternRecipe","slug":"banneraddpatternrecipe","link":"#banneraddpatternrecipe","children":[]},{"level":3,"title":"BannerAddPatternRecipe_vtbl","slug":"banneraddpatternrecipe-vtbl","link":"#banneraddpatternrecipe-vtbl","children":[]},{"level":3,"title":"BaseGamePackSlices::BaseGameVersionPack","slug":"basegamepackslices-basegameversionpack","link":"#basegamepackslices-basegameversionpack","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadLocalValueAccessor<ResourceLoadManager::ResourceLoadTaskGroup *>","slug":"bedrock-threading-threadlocalvalueaccessor-resourceloadmanager-resourceloadtaskgroup","link":"#bedrock-threading-threadlocalvalueaccessor-resourceloadmanager-resourceloadtaskgroup","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncResult::CompleteResult<std::string >","slug":"bedrock-threading-asyncresult-completeresult-std-string","link":"#bedrock-threading-asyncresult-completeresult-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncResult::CompleteResult<std::string >_vtbl","slug":"bedrock-threading-asyncresult-completeresult-std-string-vtbl","link":"#bedrock-threading-asyncresult-completeresult-std-string-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncDeferredResultT<std::shared_ptr<mce::Image> >","slug":"bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image","link":"#bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncDeferredResultT<std::shared_ptr<mce::Image> >_vtbl","slug":"bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image-vtbl","link":"#bedrock-threading-asyncdeferredresultt-std-shared-ptr-mce-image-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<std::vector<std::shared_ptr<Bedrock::Threading::IAsyncResult<std::string > >> >","slug":"bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string","link":"#bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<std::vector<std::shared_ptr<Bedrock::Threading::IAsyncResult<std::string > >> >_vtbl","slug":"bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string-vtbl","link":"#bedrock-threading-iasyncresult-std-vector-std-shared-ptr-bedrock-threading-iasyncresult-std-string-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::WhenAll<std::string >","slug":"bedrock-threading-whenall-std-string","link":"#bedrock-threading-whenall-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::WhenAll<std::string >_vtbl","slug":"bedrock-threading-whenall-std-string-vtbl","link":"#bedrock-threading-whenall-std-string-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::WhenAll<std::string >::initialize::__l6::<lambda_ea6d99b805a01534f505aa92a5af28d0>","slug":"bedrock-threading-whenall-std-string-initialize-l6-lambda-ea6d99b805a01534f505aa92a5af28d0","link":"#bedrock-threading-whenall-std-string-initialize-l6-lambda-ea6d99b805a01534f505aa92a5af28d0","children":[]},{"level":3,"title":"BedrockItems","slug":"bedrockitems","link":"#bedrockitems","children":[]},{"level":3,"title":"BlockTickingQueue::HashBlockTick","slug":"blocktickingqueue-hashblocktick","link":"#blocktickingqueue-hashblocktick","children":[]},{"level":3,"title":"BossbarCommand","slug":"bossbarcommand","link":"#bossbarcommand","children":[]},{"level":3,"title":"BossbarCommand_vtbl","slug":"bossbarcommand-vtbl","link":"#bossbarcommand-vtbl","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<enum ItemAcquisitionMethod,std::string >","slug":"bidirectionalunorderedmap-enum-itemacquisitionmethod-std-string","link":"#bidirectionalunorderedmap-enum-itemacquisitionmethod-std-string","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<enum ItemUseMethod,std::string >","slug":"bidirectionalunorderedmap-enum-itemusemethod-std-string","link":"#bidirectionalunorderedmap-enum-itemusemethod-std-string","children":[]},{"level":3,"title":"BlockListSerializer","slug":"blocklistserializer","link":"#blocklistserializer","children":[]},{"level":3,"title":"backing_store_struct","slug":"backing-store-struct","link":"#backing-store-struct","children":[]},{"level":3,"title":"Bedrock::Threading::TLSDetail::DefaultConstructor<Random,void>","slug":"bedrock-threading-tlsdetail-defaultconstructor-random-void","link":"#bedrock-threading-tlsdetail-defaultconstructor-random-void","children":[]},{"level":3,"title":"Bedrock::Threading::TLSDetail::DefaultConstructor<Random,void>::create::__l2::<lambda_c5e437940b24146f2fb7ba5b5af46ca8>","slug":"bedrock-threading-tlsdetail-defaultconstructor-random-void-create-l2-lambda-c5e437940b24146f2fb7ba5b5af46ca8","link":"#bedrock-threading-tlsdetail-defaultconstructor-random-void-create-l2-lambda-c5e437940b24146f2fb7ba5b5af46ca8","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::string,enum ActorDamageCause>","slug":"bidirectionalunorderedmap-std-string-enum-actordamagecause","link":"#bidirectionalunorderedmap-std-string-enum-actordamagecause","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<std::pair<Json::Value,Core::PathBuffer<std::string > > >","slug":"bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string","link":"#bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<std::pair<Json::Value,Core::PathBuffer<std::string > > >_vtbl","slug":"bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string-vtbl","link":"#bedrock-threading-iasyncresult-std-pair-json-value-core-pathbuffer-std-string-vtbl","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncDeferredResultT<std::pair<Json::Value,Core::PathBuffer<std::string > > >","slug":"bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string","link":"#bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncDeferredResultT<std::pair<Json::Value,Core::PathBuffer<std::string > > >_vtbl","slug":"bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string-vtbl","link":"#bedrock-threading-asyncdeferredresultt-std-pair-json-value-core-pathbuffer-std-string-vtbl","children":[]},{"level":3,"title":"BaseGoalDefinition","slug":"basegoaldefinition","link":"#basegoaldefinition","children":[]},{"level":3,"title":"BaseGoalDefinition_vtbl","slug":"basegoaldefinition-vtbl","link":"#basegoaldefinition-vtbl","children":[]},{"level":3,"title":"BreatheAirGoal","slug":"breatheairgoal","link":"#breatheairgoal","children":[]},{"level":3,"title":"BreatheAirGoal_vtbl","slug":"breatheairgoal-vtbl","link":"#breatheairgoal-vtbl","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_d8612f873e3b81f52251871d1b9a99f9>","slug":"basegoaldefinition-buildschemabase-l2-lambda-d8612f873e3b81f52251871d1b9a99f9","link":"#basegoaldefinition-buildschemabase-l2-lambda-d8612f873e3b81f52251871d1b9a99f9","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_5f47e7c4535a8e8b6eb9aa52e1794f25>","slug":"basegoaldefinition-buildschemabase-l2-lambda-5f47e7c4535a8e8b6eb9aa52e1794f25","link":"#basegoaldefinition-buildschemabase-l2-lambda-5f47e7c4535a8e8b6eb9aa52e1794f25","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_10b1270a68118e20f7f1d196815febb1>","slug":"basegoaldefinition-buildschemabase-l2-lambda-10b1270a68118e20f7f1d196815febb1","link":"#basegoaldefinition-buildschemabase-l2-lambda-10b1270a68118e20f7f1d196815febb1","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_e7713cd94131b6e804ff7baff09e844c>","slug":"basegoaldefinition-buildschemabase-l2-lambda-e7713cd94131b6e804ff7baff09e844c","link":"#basegoaldefinition-buildschemabase-l2-lambda-e7713cd94131b6e804ff7baff09e844c","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_9fe4dd819da38dc1eae3af426a0fcc90>","slug":"basegoaldefinition-buildschemabase-l2-lambda-9fe4dd819da38dc1eae3af426a0fcc90","link":"#basegoaldefinition-buildschemabase-l2-lambda-9fe4dd819da38dc1eae3af426a0fcc90","children":[]},{"level":3,"title":"BaseGoalDefinition::buildSchemaBase::__l2::<lambda_78da3d7fc4f3f9c053018dec9b623030>","slug":"basegoaldefinition-buildschemabase-l2-lambda-78da3d7fc4f3f9c053018dec9b623030","link":"#basegoaldefinition-buildschemabase-l2-lambda-78da3d7fc4f3f9c053018dec9b623030","children":[]},{"level":3,"title":"Bat","slug":"bat","link":"#bat","children":[]},{"level":3,"title":"Bee","slug":"bee","link":"#bee","children":[]},{"level":3,"title":"Bee::_registerLoopingSounds::__l2::<lambda_8b16ca835b74e115732146567a1e7f3b>","slug":"bee-registerloopingsounds-l2-lambda-8b16ca835b74e115732146567a1e7f3b","link":"#bee-registerloopingsounds-l2-lambda-8b16ca835b74e115732146567a1e7f3b","children":[]},{"level":3,"title":"Bee::_registerLoopingSounds::__l2::<lambda_fe84468281a4fb95c579b7348cca4739>","slug":"bee-registerloopingsounds-l2-lambda-fe84468281a4fb95c579b7348cca4739","link":"#bee-registerloopingsounds-l2-lambda-fe84468281a4fb95c579b7348cca4739","children":[]},{"level":3,"title":"BehaviorData::Data<int>","slug":"behaviordata-data-int","link":"#behaviordata-data-int","children":[]},{"level":3,"title":"BehaviorData::Data<int>_vtbl","slug":"behaviordata-data-int-vtbl","link":"#behaviordata-data-int-vtbl","children":[]},{"level":3,"title":"BehaviorData::Data<float>","slug":"behaviordata-data-float","link":"#behaviordata-data-float","children":[]},{"level":3,"title":"BehaviorData::Data<float>_vtbl","slug":"behaviordata-data-float-vtbl","link":"#behaviordata-data-float-vtbl","children":[]},{"level":3,"title":"BehaviorData::Data<bool>","slug":"behaviordata-data-bool","link":"#behaviordata-data-bool","children":[]},{"level":3,"title":"BehaviorData::Data<bool>_vtbl","slug":"behaviordata-data-bool-vtbl","link":"#behaviordata-data-bool-vtbl","children":[]},{"level":3,"title":"BehaviorData::Data<BlockPos>","slug":"behaviordata-data-blockpos","link":"#behaviordata-data-blockpos","children":[]},{"level":3,"title":"BehaviorData::Data<BlockPos>_vtbl","slug":"behaviordata-data-blockpos-vtbl","link":"#behaviordata-data-blockpos-vtbl","children":[]},{"level":3,"title":"BehaviorData::Data<Vec3>","slug":"behaviordata-data-vec3","link":"#behaviordata-data-vec3","children":[]},{"level":3,"title":"BehaviorData::Data<Vec3>_vtbl","slug":"behaviordata-data-vec3-vtbl","link":"#behaviordata-data-vec3-vtbl","children":[]},{"level":3,"title":"BehaviorData::Data<std::string >","slug":"behaviordata-data-std-string","link":"#behaviordata-data-std-string","children":[]},{"level":3,"title":"BehaviorData::Data<std::string >_vtbl","slug":"behaviordata-data-std-string-vtbl","link":"#behaviordata-data-std-string-vtbl","children":[]},{"level":3,"title":"BreakBlockNode","slug":"breakblocknode","link":"#breakblocknode","children":[]},{"level":3,"title":"BreakBlockNode_vtbl","slug":"breakblocknode-vtbl","link":"#breakblocknode-vtbl","children":[]},{"level":3,"title":"BreakBlockDefinition","slug":"breakblockdefinition","link":"#breakblockdefinition","children":[]},{"level":3,"title":"BreakBlockDefinition_vtbl","slug":"breakblockdefinition-vtbl","link":"#breakblockdefinition-vtbl","children":[]},{"level":3,"title":"buildSoundEventSchema::__l2::<lambda_83c1561f5f5169c4af75436371373e5f>","slug":"buildsoundeventschema-l2-lambda-83c1561f5f5169c4af75436371373e5f","link":"#buildsoundeventschema-l2-lambda-83c1561f5f5169c4af75436371373e5f","children":[]},{"level":3,"title":"buildSoundEventSchema::__l2::<lambda_dbade74c4a1f92bbca03768828a59559>","slug":"buildsoundeventschema-l2-lambda-dbade74c4a1f92bbca03768828a59559","link":"#buildsoundeventschema-l2-lambda-dbade74c4a1f92bbca03768828a59559","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_bf90f814d09023d3d86bbabfc91b2f2d>","slug":"buildparticleeventschema-l2-lambda-bf90f814d09023d3d86bbabfc91b2f2d","link":"#buildparticleeventschema-l2-lambda-bf90f814d09023d3d86bbabfc91b2f2d","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_c0a41c51a54f56fb665624f94a8c68a4>","slug":"buildparticleeventschema-l2-lambda-c0a41c51a54f56fb665624f94a8c68a4","link":"#buildparticleeventschema-l2-lambda-c0a41c51a54f56fb665624f94a8c68a4","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_9d0a5b44103b9a4cd09a0f79bdc9c298>","slug":"buildparticleeventschema-l2-lambda-9d0a5b44103b9a4cd09a0f79bdc9c298","link":"#buildparticleeventschema-l2-lambda-9d0a5b44103b9a4cd09a0f79bdc9c298","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_2d6eded26c009ade9068294c18061152>","slug":"buildparticleeventschema-l2-lambda-2d6eded26c009ade9068294c18061152","link":"#buildparticleeventschema-l2-lambda-2d6eded26c009ade9068294c18061152","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_1f3caa22e3ae22f1f1994ba5630aee65>","slug":"buildparticleeventschema-l2-lambda-1f3caa22e3ae22f1f1994ba5630aee65","link":"#buildparticleeventschema-l2-lambda-1f3caa22e3ae22f1f1994ba5630aee65","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_d68979437fb540ff520a765fa7266f39>","slug":"buildparticleeventschema-l2-lambda-d68979437fb540ff520a765fa7266f39","link":"#buildparticleeventschema-l2-lambda-d68979437fb540ff520a765fa7266f39","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_8fe8b599339fd8148421a1fadfa1fb50>","slug":"buildparticleeventschema-l2-lambda-8fe8b599339fd8148421a1fadfa1fb50","link":"#buildparticleeventschema-l2-lambda-8fe8b599339fd8148421a1fadfa1fb50","children":[]},{"level":3,"title":"buildParticleEventSchema::__l2::<lambda_09e2c5ded9e20b86bf2f8fed4ad9c667>","slug":"buildparticleeventschema-l2-lambda-09e2c5ded9e20b86bf2f8fed4ad9c667","link":"#buildparticleeventschema-l2-lambda-09e2c5ded9e20b86bf2f8fed4ad9c667","children":[]},{"level":3,"title":"BlockPatternBuilder","slug":"blockpatternbuilder","link":"#blockpatternbuilder","children":[]},{"level":3,"title":"BrewingStandBlockActor","slug":"brewingstandblockactor","link":"#brewingstandblockactor","children":[]},{"level":3,"title":"BrewingStandBlockActor_vtbl","slug":"brewingstandblockactor-vtbl","link":"#brewingstandblockactor-vtbl","children":[]},{"level":3,"title":"BarrelBlockActor","slug":"barrelblockactor","link":"#barrelblockactor","children":[]},{"level":3,"title":"Balloon","slug":"balloon","link":"#balloon","children":[]},{"level":3,"title":"Balloon_vtbl","slug":"balloon-vtbl","link":"#balloon-vtbl","children":[]},{"level":3,"title":"Blaze","slug":"blaze","link":"#blaze","children":[]},{"level":3,"title":"BeaconPaymentContainerController","slug":"beaconpaymentcontainercontroller","link":"#beaconpaymentcontainercontroller","children":[]},{"level":3,"title":"BeaconPaymentContainerController_vtbl","slug":"beaconpaymentcontainercontroller-vtbl","link":"#beaconpaymentcontainercontroller-vtbl","children":[]},{"level":3,"title":"BlockReducer_vtbl","slug":"blockreducer-vtbl","link":"#blockreducer-vtbl","children":[]},{"level":3,"title":"Bedrock::NonOwnerPointer<ItemStackRequestActionCraftResults_DEPRECATEDASKTYLAING>","slug":"bedrock-nonownerpointer-itemstackrequestactioncraftresults-deprecatedasktylaing","link":"#bedrock-nonownerpointer-itemstackrequestactioncraftresults-deprecatedasktylaing","children":[]},{"level":3,"title":"BlockEventTracker","slug":"blockeventtracker","link":"#blockeventtracker","children":[]},{"level":3,"title":"BlockEventTracker_vtbl","slug":"blockeventtracker-vtbl","link":"#blockeventtracker-vtbl","children":[]},{"level":3,"title":"BlockEventCoordinator::sendUnknownBlockReceived::__l2::<lambda_f6f042af8191ca65bf8adc7717dcf957>","slug":"blockeventcoordinator-sendunknownblockreceived-l2-lambda-f6f042af8191ca65bf8adc7717dcf957","link":"#blockeventcoordinator-sendunknownblockreceived-l2-lambda-f6f042af8191ca65bf8adc7717dcf957","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockExploded::__l2::<lambda_848cdfb5e8da833dbc0dcc7f87da5a4f>","slug":"blockeventcoordinator-sendblockexploded-l2-lambda-848cdfb5e8da833dbc0dcc7f87da5a4f","link":"#blockeventcoordinator-sendblockexploded-l2-lambda-848cdfb5e8da833dbc0dcc7f87da5a4f","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockInteractedWith::__l2::<lambda_a33e208c0cd2aef60e110b74b695498d>","slug":"blockeventcoordinator-sendblockinteractedwith-l2-lambda-a33e208c0cd2aef60e110b74b695498d","link":"#blockeventcoordinator-sendblockinteractedwith-l2-lambda-a33e208c0cd2aef60e110b74b695498d","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockDestructionStarted::__l2::<lambda_45a6a2b7778b47f799f30451c24f4705>","slug":"blockeventcoordinator-sendblockdestructionstarted-l2-lambda-45a6a2b7778b47f799f30451c24f4705","link":"#blockeventcoordinator-sendblockdestructionstarted-l2-lambda-45a6a2b7778b47f799f30451c24f4705","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockDestructionStopped::__l2::<lambda_b9d39bcdda4ef5e1d13e651401ee6702>","slug":"blockeventcoordinator-sendblockdestructionstopped-l2-lambda-b9d39bcdda4ef5e1d13e651401ee6702","link":"#blockeventcoordinator-sendblockdestructionstopped-l2-lambda-b9d39bcdda4ef5e1d13e651401ee6702","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockMovedByPiston::__l2::<lambda_9a6aa89b570a5b9cc497ec2fa821185c>","slug":"blockeventcoordinator-sendblockmovedbypiston-l2-lambda-9a6aa89b570a5b9cc497ec2fa821185c","link":"#blockeventcoordinator-sendblockmovedbypiston-l2-lambda-9a6aa89b570a5b9cc497ec2fa821185c","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockDestroyedByPlayer::__l2::<lambda_b770ae23f89ec602603799970f9877a0>","slug":"blockeventcoordinator-sendblockdestroyedbyplayer-l2-lambda-b770ae23f89ec602603799970f9877a0","link":"#blockeventcoordinator-sendblockdestroyedbyplayer-l2-lambda-b770ae23f89ec602603799970f9877a0","children":[]},{"level":3,"title":"BlockEventCoordinator::sendBlockPlacedByPlayer::__l2::<lambda_04b45a6d32fc9beb76aef0d7f48ebe01>","slug":"blockeventcoordinator-sendblockplacedbyplayer-l2-lambda-04b45a6d32fc9beb76aef0d7f48ebe01","link":"#blockeventcoordinator-sendblockplacedbyplayer-l2-lambda-04b45a6d32fc9beb76aef0d7f48ebe01","children":[]},{"level":3,"title":"BlockIsNameTest","slug":"blockisnametest","link":"#blockisnametest","children":[]},{"level":3,"title":"BlockIsNameTest_vtbl","slug":"blockisnametest-vtbl","link":"#blockisnametest-vtbl","children":[]},{"level":3,"title":"BambooBlockItem","slug":"bambooblockitem","link":"#bambooblockitem","children":[]},{"level":3,"title":"BannerItem","slug":"banneritem","link":"#banneritem","children":[]},{"level":3,"title":"BannerPatternItem","slug":"bannerpatternitem","link":"#bannerpatternitem","children":[]},{"level":3,"title":"BedItem","slug":"beditem","link":"#beditem","children":[]},{"level":3,"title":"BellBlockItem","slug":"bellblockitem","link":"#bellblockitem","children":[]},{"level":3,"title":"BellBlock","slug":"bellblock","link":"#bellblock","children":[]},{"level":3,"title":"BellBlock_vtbl","slug":"bellblock-vtbl","link":"#bellblock-vtbl","children":[]},{"level":3,"title":"BoatItem","slug":"boatitem","link":"#boatitem","children":[]},{"level":3,"title":"BottleItem","slug":"bottleitem","link":"#bottleitem","children":[]},{"level":3,"title":"BlockPlanterItem::_useOn::__l8::<lambda_dafc49cfe85b6ec4610f185da06c6323>","slug":"blockplanteritem-useon-l8-lambda-dafc49cfe85b6ec4610f185da06c6323","link":"#blockplanteritem-useon-l8-lambda-dafc49cfe85b6ec4610f185da06c6323","children":[]},{"level":3,"title":"BlockItem::_useOn::__l61::<lambda_3df6778bcdd597be9284d46d0b403515>","slug":"blockitem-useon-l61-lambda-3df6778bcdd597be9284d46d0b403515","link":"#blockitem-useon-l61-lambda-3df6778bcdd597be9284d46d0b403515","children":[]},{"level":3,"title":"BlockItem::_useOn::__l17::<lambda_76337a7577d3a09baa0857f2aa986cfe>","slug":"blockitem-useon-l17-lambda-76337a7577d3a09baa0857f2aa986cfe","link":"#blockitem-useon-l17-lambda-76337a7577d3a09baa0857f2aa986cfe","children":[]},{"level":3,"title":"BambooBlockItem::_useOn::__l44::<lambda_ceb2dedadc834c479cf92b2081c39bd1>","slug":"bambooblockitem-useon-l44-lambda-ceb2dedadc834c479cf92b2081c39bd1","link":"#bambooblockitem-useon-l44-lambda-ceb2dedadc834c479cf92b2081c39bd1","children":[]},{"level":3,"title":"BowItem","slug":"bowitem","link":"#bowitem","children":[]},{"level":3,"title":"BowEnchant","slug":"bowenchant","link":"#bowenchant","children":[]},{"level":3,"title":"BowEnchant_vtbl","slug":"bowenchant-vtbl","link":"#bowenchant-vtbl","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_2c33b9a3c940e38e331beb3951273cfb>","slug":"biomecomponentloading-buildschema-l2-lambda-2c33b9a3c940e38e331beb3951273cfb","link":"#biomecomponentloading-buildschema-l2-lambda-2c33b9a3c940e38e331beb3951273cfb","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_986ad8af33ac3ed9626d4e4c93db052f>","slug":"biomecomponentloading-buildschema-l2-lambda-986ad8af33ac3ed9626d4e4c93db052f","link":"#biomecomponentloading-buildschema-l2-lambda-986ad8af33ac3ed9626d4e4c93db052f","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_4043dd1967c51e1afe0bf9b59d10806d>","slug":"biomecomponentloading-buildschema-l2-lambda-4043dd1967c51e1afe0bf9b59d10806d","link":"#biomecomponentloading-buildschema-l2-lambda-4043dd1967c51e1afe0bf9b59d10806d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_70b1c8711f1412db1910c25a69dbcc73>","slug":"biomecomponentloading-buildschema-l2-lambda-70b1c8711f1412db1910c25a69dbcc73","link":"#biomecomponentloading-buildschema-l2-lambda-70b1c8711f1412db1910c25a69dbcc73","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_9f92eafcdd93e111d6dcc461b580b677>","slug":"biomecomponentloading-buildschema-l2-lambda-9f92eafcdd93e111d6dcc461b580b677","link":"#biomecomponentloading-buildschema-l2-lambda-9f92eafcdd93e111d6dcc461b580b677","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_74b06c550f1d03282e6811d3a149df1d>","slug":"biomecomponentloading-buildschema-l2-lambda-74b06c550f1d03282e6811d3a149df1d","link":"#biomecomponentloading-buildschema-l2-lambda-74b06c550f1d03282e6811d3a149df1d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_3de2852c01811dbb30ee8e9819bb06d2>","slug":"biomecomponentloading-buildschema-l2-lambda-3de2852c01811dbb30ee8e9819bb06d2","link":"#biomecomponentloading-buildschema-l2-lambda-3de2852c01811dbb30ee8e9819bb06d2","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_47d3ebb4fbf9d771bb39ed1ef100b972>","slug":"biomecomponentloading-buildschema-l2-lambda-47d3ebb4fbf9d771bb39ed1ef100b972","link":"#biomecomponentloading-buildschema-l2-lambda-47d3ebb4fbf9d771bb39ed1ef100b972","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_588cbba04482f56d12cfb2e5c6cae432>::()::__l2::<lambda_0e9e988f4be8fccbf1f02bb6d99a088d>","slug":"biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-0e9e988f4be8fccbf1f02bb6d99a088d","link":"#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-0e9e988f4be8fccbf1f02bb6d99a088d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_588cbba04482f56d12cfb2e5c6cae432>::()::__l2::<lambda_a4a8160f33e1a57e394012deaba8bba7>","slug":"biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-a4a8160f33e1a57e394012deaba8bba7","link":"#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-a4a8160f33e1a57e394012deaba8bba7","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_588cbba04482f56d12cfb2e5c6cae432>::()::__l2::<lambda_24781fac43e82524bfe294929ffcbc02>","slug":"biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-24781fac43e82524bfe294929ffcbc02","link":"#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-24781fac43e82524bfe294929ffcbc02","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_588cbba04482f56d12cfb2e5c6cae432>::()::__l2::<lambda_be3876604811fcef7cc22dea8bb87277>","slug":"biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-be3876604811fcef7cc22dea8bb87277","link":"#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-be3876604811fcef7cc22dea8bb87277","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_588cbba04482f56d12cfb2e5c6cae432>::()::__l2::<lambda_587dadbdd7697181135b67ed601fb42d>","slug":"biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-587dadbdd7697181135b67ed601fb42d","link":"#biomecomponentloading-buildschema-l2-lambda-588cbba04482f56d12cfb2e5c6cae432-l2-lambda-587dadbdd7697181135b67ed601fb42d","children":[]},{"level":3,"title":"BiomeMetadata","slug":"biomemetadata","link":"#biomemetadata","children":[]},{"level":3,"title":"BiomeRegistryMergeStrategy","slug":"biomeregistrymergestrategy","link":"#biomeregistrymergestrategy","children":[]},{"level":3,"title":"BiomeRegistryMergeStrategy_vtbl","slug":"biomeregistrymergestrategy-vtbl","link":"#biomeregistrymergestrategy-vtbl","children":[]},{"level":3,"title":"BiomeSource_vtbl","slug":"biomesource-vtbl","link":"#biomesource-vtbl","children":[]},{"level":3,"title":"BiomeRegistry::initModDimensions::__l6::<lambda_1fcb4717fe6be111942f2205fbc1a668>","slug":"biomeregistry-initmoddimensions-l6-lambda-1fcb4717fe6be111942f2205fbc1a668","link":"#biomeregistry-initmoddimensions-l6-lambda-1fcb4717fe6be111942f2205fbc1a668","children":[]},{"level":3,"title":"BiomeRegistry::_loadOneDimension::__l2::<lambda_c1d36d2c0e755f6d6cc7f448cdf58979>","slug":"biomeregistry-loadonedimension-l2-lambda-c1d36d2c0e755f6d6cc7f448cdf58979","link":"#biomeregistry-loadonedimension-l2-lambda-c1d36d2c0e755f6d6cc7f448cdf58979","children":[]},{"level":3,"title":"BiomeRegistry::_initServerFromInheritanceTree::__l2::<lambda_6c6a66314c67757f5c65376080a34747>","slug":"biomeregistry-initserverfrominheritancetree-l2-lambda-6c6a66314c67757f5c65376080a34747","link":"#biomeregistry-initserverfrominheritancetree-l2-lambda-6c6a66314c67757f5c65376080a34747","children":[]},{"level":3,"title":"BiomeRegistry::_mergeDataInheritance::__l5::<lambda_2aa0ea63de42f370212b65a4b11b230e>","slug":"biomeregistry-mergedatainheritance-l5-lambda-2aa0ea63de42f370212b65a4b11b230e","link":"#biomeregistry-mergedatainheritance-l5-lambda-2aa0ea63de42f370212b65a4b11b230e","children":[]},{"level":3,"title":"BiomeRegistry::_buildInheritanceTree::__l4::<lambda_0d4594063b6df1dd593fd643071b49c0>","slug":"biomeregistry-buildinheritancetree-l4-lambda-0d4594063b6df1dd593fd643071b49c0","link":"#biomeregistry-buildinheritancetree-l4-lambda-0d4594063b6df1dd593fd643071b49c0","children":[]},{"level":3,"title":"BiomeRegistry::_buildInheritanceTree::__l2::<lambda_3891362f1148dfaff1fd5eb8cc4a95f6>","slug":"biomeregistry-buildinheritancetree-l2-lambda-3891362f1148dfaff1fd5eb8cc4a95f6","link":"#biomeregistry-buildinheritancetree-l2-lambda-3891362f1148dfaff1fd5eb8cc4a95f6","children":[]},{"level":3,"title":"BiomeRegistry::initClientFromPacks::__l16::<lambda_12d4c7037bf9214c92b1365a74424493>","slug":"biomeregistry-initclientfrompacks-l16-lambda-12d4c7037bf9214c92b1365a74424493","link":"#biomeregistry-initclientfrompacks-l16-lambda-12d4c7037bf9214c92b1365a74424493","children":[]},{"level":3,"title":"BiomeRegistry::getMergeStrategy::__l2::<lambda_a54dc79f09743eeb2de26dc51679844e>","slug":"biomeregistry-getmergestrategy-l2-lambda-a54dc79f09743eeb2de26dc51679844e","link":"#biomeregistry-getmergestrategy-l2-lambda-a54dc79f09743eeb2de26dc51679844e","children":[]},{"level":3,"title":"BiomeComponentFactory::registrationFinished::__l2::<lambda_14fdba31cb0ef81d6cd5c2760c9d1928>","slug":"biomecomponentfactory-registrationfinished-l2-lambda-14fdba31cb0ef81d6cd5c2760c9d1928","link":"#biomecomponentfactory-registrationfinished-l2-lambda-14fdba31cb0ef81d6cd5c2760c9d1928","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_9cae496891550c5a044677317c96b590>","slug":"biomecomponentloading-buildschema-l2-lambda-9cae496891550c5a044677317c96b590","link":"#biomecomponentloading-buildschema-l2-lambda-9cae496891550c5a044677317c96b590","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_31f6d7ef5e86b9004496c6c5438bebc3>","slug":"biomecomponentloading-buildschema-l2-lambda-31f6d7ef5e86b9004496c6c5438bebc3","link":"#biomecomponentloading-buildschema-l2-lambda-31f6d7ef5e86b9004496c6c5438bebc3","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_d5c8386347dd70773df6f7b0e51aa0f4>","slug":"biomecomponentloading-buildschema-l2-lambda-d5c8386347dd70773df6f7b0e51aa0f4","link":"#biomecomponentloading-buildschema-l2-lambda-d5c8386347dd70773df6f7b0e51aa0f4","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_e62c1925c1af6d050260328ca3a20417>","slug":"biomecomponentloading-buildschema-l2-lambda-e62c1925c1af6d050260328ca3a20417","link":"#biomecomponentloading-buildschema-l2-lambda-e62c1925c1af6d050260328ca3a20417","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_fdb3f7f0568767171627b654bfa20245>","slug":"biomecomponentloading-buildschema-l2-lambda-fdb3f7f0568767171627b654bfa20245","link":"#biomecomponentloading-buildschema-l2-lambda-fdb3f7f0568767171627b654bfa20245","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_00c3dfeb26715b95f766f45ae45a4b8a>","slug":"biomecomponentloading-buildschema-l2-lambda-00c3dfeb26715b95f766f45ae45a4b8a","link":"#biomecomponentloading-buildschema-l2-lambda-00c3dfeb26715b95f766f45ae45a4b8a","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_1c9a498ad1009e5bb757ec0164b4df00>","slug":"biomecomponentloading-buildschema-l2-lambda-1c9a498ad1009e5bb757ec0164b4df00","link":"#biomecomponentloading-buildschema-l2-lambda-1c9a498ad1009e5bb757ec0164b4df00","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_4b8343632b080be1f205b1998080acc9>","slug":"biomecomponentloading-buildschema-l2-lambda-4b8343632b080be1f205b1998080acc9","link":"#biomecomponentloading-buildschema-l2-lambda-4b8343632b080be1f205b1998080acc9","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_de44ce577397417461fc346b323847d9>","slug":"biomecomponentloading-buildschema-l2-lambda-de44ce577397417461fc346b323847d9","link":"#biomecomponentloading-buildschema-l2-lambda-de44ce577397417461fc346b323847d9","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_a7b07a0bb8678bcc8099e3b5561ab8de>","slug":"biomecomponentloading-buildschema-l2-lambda-a7b07a0bb8678bcc8099e3b5561ab8de","link":"#biomecomponentloading-buildschema-l2-lambda-a7b07a0bb8678bcc8099e3b5561ab8de","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_6f5dd31b8d509c3ea58a2e27e5121198>","slug":"biomecomponentloading-buildschema-l2-lambda-6f5dd31b8d509c3ea58a2e27e5121198","link":"#biomecomponentloading-buildschema-l2-lambda-6f5dd31b8d509c3ea58a2e27e5121198","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_647b9dafc48ef4fe7d2bc246cd3fa37f>","slug":"biomecomponentloading-buildschema-l2-lambda-647b9dafc48ef4fe7d2bc246cd3fa37f","link":"#biomecomponentloading-buildschema-l2-lambda-647b9dafc48ef4fe7d2bc246cd3fa37f","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_071d75551199967bfd308b1ccaeba427>","slug":"biomecomponentloading-buildschema-l2-lambda-071d75551199967bfd308b1ccaeba427","link":"#biomecomponentloading-buildschema-l2-lambda-071d75551199967bfd308b1ccaeba427","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_13fcf2973c4f4959793e47b98a4fe16d>","slug":"biomecomponentloading-buildschema-l2-lambda-13fcf2973c4f4959793e47b98a4fe16d","link":"#biomecomponentloading-buildschema-l2-lambda-13fcf2973c4f4959793e47b98a4fe16d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_ebf5a741828bce024289db8a9317073c>","slug":"biomecomponentloading-buildschema-l2-lambda-ebf5a741828bce024289db8a9317073c","link":"#biomecomponentloading-buildschema-l2-lambda-ebf5a741828bce024289db8a9317073c","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_6702ad38bcdce54fbd866d895e5bdde3>","slug":"biomecomponentloading-buildschema-l2-lambda-6702ad38bcdce54fbd866d895e5bdde3","link":"#biomecomponentloading-buildschema-l2-lambda-6702ad38bcdce54fbd866d895e5bdde3","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_7c35618b9151048fb5f40c044803f09b>","slug":"biomecomponentloading-buildschema-l2-lambda-7c35618b9151048fb5f40c044803f09b","link":"#biomecomponentloading-buildschema-l2-lambda-7c35618b9151048fb5f40c044803f09b","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_5573650260b13fa6c75ed850cb3b791d>","slug":"biomecomponentloading-buildschema-l2-lambda-5573650260b13fa6c75ed850cb3b791d","link":"#biomecomponentloading-buildschema-l2-lambda-5573650260b13fa6c75ed850cb3b791d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_079223d09d7929335bbdc5ee3051db02>","slug":"biomecomponentloading-buildschema-l2-lambda-079223d09d7929335bbdc5ee3051db02","link":"#biomecomponentloading-buildschema-l2-lambda-079223d09d7929335bbdc5ee3051db02","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_317f0cb0ca88680b14d95e0d23e2b481>","slug":"biomecomponentloading-buildschema-l2-lambda-317f0cb0ca88680b14d95e0d23e2b481","link":"#biomecomponentloading-buildschema-l2-lambda-317f0cb0ca88680b14d95e0d23e2b481","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_521c942abe59445dc605c74e5770790b>","slug":"biomecomponentloading-buildschema-l2-lambda-521c942abe59445dc605c74e5770790b","link":"#biomecomponentloading-buildschema-l2-lambda-521c942abe59445dc605c74e5770790b","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_14139a2735e3e592c1254ac860a3050e>","slug":"biomecomponentloading-buildschema-l2-lambda-14139a2735e3e592c1254ac860a3050e","link":"#biomecomponentloading-buildschema-l2-lambda-14139a2735e3e592c1254ac860a3050e","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_79909220629f22558cb770a16046cdb7>","slug":"biomecomponentloading-buildschema-l2-lambda-79909220629f22558cb770a16046cdb7","link":"#biomecomponentloading-buildschema-l2-lambda-79909220629f22558cb770a16046cdb7","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_f88a4512ffe5a7d91ed9ab1ed8900771>","slug":"biomecomponentloading-buildschema-l2-lambda-f88a4512ffe5a7d91ed9ab1ed8900771","link":"#biomecomponentloading-buildschema-l2-lambda-f88a4512ffe5a7d91ed9ab1ed8900771","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_aa5cfd92a64dfd72bd49549d0bd77884>","slug":"biomecomponentloading-buildschema-l2-lambda-aa5cfd92a64dfd72bd49549d0bd77884","link":"#biomecomponentloading-buildschema-l2-lambda-aa5cfd92a64dfd72bd49549d0bd77884","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_7c49cd51b0ff49fc379b3c623d7100e7>","slug":"biomecomponentloading-buildschema-l2-lambda-7c49cd51b0ff49fc379b3c623d7100e7","link":"#biomecomponentloading-buildschema-l2-lambda-7c49cd51b0ff49fc379b3c623d7100e7","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_8ade96da80901bc7101fd7b815724e12>","slug":"biomecomponentloading-buildschema-l2-lambda-8ade96da80901bc7101fd7b815724e12","link":"#biomecomponentloading-buildschema-l2-lambda-8ade96da80901bc7101fd7b815724e12","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_0f0f789fcabd05839a8f4072bdd5b7a1>","slug":"biomecomponentloading-buildschema-l2-lambda-0f0f789fcabd05839a8f4072bdd5b7a1","link":"#biomecomponentloading-buildschema-l2-lambda-0f0f789fcabd05839a8f4072bdd5b7a1","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_7c0b138f98f9658636c148b465c6d818>","slug":"biomecomponentloading-buildschema-l2-lambda-7c0b138f98f9658636c148b465c6d818","link":"#biomecomponentloading-buildschema-l2-lambda-7c0b138f98f9658636c148b465c6d818","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_12f9dbe7b6fca75e36a0974e7b639bd6>","slug":"biomecomponentloading-buildschema-l2-lambda-12f9dbe7b6fca75e36a0974e7b639bd6","link":"#biomecomponentloading-buildschema-l2-lambda-12f9dbe7b6fca75e36a0974e7b639bd6","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_1958774ba91c2a8a8e7c0da9e5e1d4fa>","slug":"biomecomponentloading-buildschema-l2-lambda-1958774ba91c2a8a8e7c0da9e5e1d4fa","link":"#biomecomponentloading-buildschema-l2-lambda-1958774ba91c2a8a8e7c0da9e5e1d4fa","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_1a7595583583d62ba48aea65aa95d936>","slug":"biomecomponentloading-buildschema-l2-lambda-1a7595583583d62ba48aea65aa95d936","link":"#biomecomponentloading-buildschema-l2-lambda-1a7595583583d62ba48aea65aa95d936","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_bea0759ff1a264047c5afddfde4ec3fd>","slug":"biomecomponentloading-buildschema-l2-lambda-bea0759ff1a264047c5afddfde4ec3fd","link":"#biomecomponentloading-buildschema-l2-lambda-bea0759ff1a264047c5afddfde4ec3fd","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_f2ce1ff6ee67b84720bcb09ebf7fea04>","slug":"biomecomponentloading-buildschema-l2-lambda-f2ce1ff6ee67b84720bcb09ebf7fea04","link":"#biomecomponentloading-buildschema-l2-lambda-f2ce1ff6ee67b84720bcb09ebf7fea04","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_225167b354dd44524961a932de0b7a51>","slug":"biomecomponentloading-buildschema-l2-lambda-225167b354dd44524961a932de0b7a51","link":"#biomecomponentloading-buildschema-l2-lambda-225167b354dd44524961a932de0b7a51","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_971455b9357b3536ff5dad3d9c75c370>","slug":"biomecomponentloading-buildschema-l2-lambda-971455b9357b3536ff5dad3d9c75c370","link":"#biomecomponentloading-buildschema-l2-lambda-971455b9357b3536ff5dad3d9c75c370","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_100aefda7a177bed57c3ee89f1a167b9>","slug":"biomecomponentloading-buildschema-l2-lambda-100aefda7a177bed57c3ee89f1a167b9","link":"#biomecomponentloading-buildschema-l2-lambda-100aefda7a177bed57c3ee89f1a167b9","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_ec658f3ed0ee9fcb77be3770ebe27063>","slug":"biomecomponentloading-buildschema-l2-lambda-ec658f3ed0ee9fcb77be3770ebe27063","link":"#biomecomponentloading-buildschema-l2-lambda-ec658f3ed0ee9fcb77be3770ebe27063","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_f5b63f54e8163365fbc4fd41abd61dbc>","slug":"biomecomponentloading-buildschema-l2-lambda-f5b63f54e8163365fbc4fd41abd61dbc","link":"#biomecomponentloading-buildschema-l2-lambda-f5b63f54e8163365fbc4fd41abd61dbc","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_c3bd4d2c9b8db0215a27d95f588f01dd>","slug":"biomecomponentloading-buildschema-l2-lambda-c3bd4d2c9b8db0215a27d95f588f01dd","link":"#biomecomponentloading-buildschema-l2-lambda-c3bd4d2c9b8db0215a27d95f588f01dd","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_8cc184e2f1c5afd59ee37440bc7e558d>","slug":"biomecomponentloading-buildschema-l2-lambda-8cc184e2f1c5afd59ee37440bc7e558d","link":"#biomecomponentloading-buildschema-l2-lambda-8cc184e2f1c5afd59ee37440bc7e558d","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_d2561560f3ee380d0ec045cd18e2c99f>","slug":"biomecomponentloading-buildschema-l2-lambda-d2561560f3ee380d0ec045cd18e2c99f","link":"#biomecomponentloading-buildschema-l2-lambda-d2561560f3ee380d0ec045cd18e2c99f","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema::__l2::<lambda_909cc6b1dd127ca9c80909ce62807b61>","slug":"biomecomponentloading-buildschema-l2-lambda-909cc6b1dd127ca9c80909ce62807b61","link":"#biomecomponentloading-buildschema-l2-lambda-909cc6b1dd127ca9c80909ce62807b61","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ConsolidatedFeatures>","slug":"biomedecorationattributes-consolidatedfeatures","link":"#biomedecorationattributes-consolidatedfeatures","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ImplicitFeatures>","slug":"biomedecorationattributes-implicitfeatures","link":"#biomedecorationattributes-implicitfeatures","children":[]},{"level":3,"title":"BaseRailTransporter","slug":"baserailtransporter","link":"#baserailtransporter","children":[]},{"level":3,"title":"BaseRailTransporter_vtbl","slug":"baserailtransporter-vtbl","link":"#baserailtransporter-vtbl","children":[]},{"level":3,"title":"BiomeDecorationSystem::consolidateDecorationFeatures::__l2::<lambda_931762908d800d263659cffde2a0977f>","slug":"biomedecorationsystem-consolidatedecorationfeatures-l2-lambda-931762908d800d263659cffde2a0977f","link":"#biomedecorationsystem-consolidatedecorationfeatures-l2-lambda-931762908d800d263659cffde2a0977f","children":[]},{"level":3,"title":"BarrelBlock","slug":"barrelblock","link":"#barrelblock","children":[]},{"level":3,"title":"BarrelBlock_vtbl","slug":"barrelblock-vtbl","link":"#barrelblock-vtbl","children":[]},{"level":3,"title":"BlastFurnaceBlockActor","slug":"blastfurnaceblockactor","link":"#blastfurnaceblockactor","children":[]},{"level":3,"title":"BlastFurnaceBlockActor_vtbl","slug":"blastfurnaceblockactor-vtbl","link":"#blastfurnaceblockactor-vtbl","children":[]},{"level":3,"title":"BlockActorFactory","slug":"blockactorfactory","link":"#blockactorfactory","children":[]},{"level":3,"title":"BeehiveBlockActor::tick::__l2::<lambda_b392b9a4f8c12bc74b03b27e80b70a94>","slug":"beehiveblockactor-tick-l2-lambda-b392b9a4f8c12bc74b03b27e80b70a94","link":"#beehiveblockactor-tick-l2-lambda-b392b9a4f8c12bc74b03b27e80b70a94","children":[]},{"level":3,"title":"BeaconBlockActor::_applyEffects::__l14::<lambda_b5cf0b164fc3fb877a74bed916b0b10e>","slug":"beaconblockactor-applyeffects-l14-lambda-b5cf0b164fc3fb877a74bed916b0b10e","link":"#beaconblockactor-applyeffects-l14-lambda-b5cf0b164fc3fb877a74bed916b0b10e","children":[]},{"level":3,"title":"BeaconBlockActor::checkShapeAndAchievement::__l20::<lambda_36931bbf3f3b12ac54c465f8cbab0fe5>","slug":"beaconblockactor-checkshapeandachievement-l20-lambda-36931bbf3f3b12ac54c465f8cbab0fe5","link":"#beaconblockactor-checkshapeandachievement-l20-lambda-36931bbf3f3b12ac54c465f8cbab0fe5","children":[]},{"level":3,"title":"BeaconBlockActor::_onUpdatePacket::__l5::<lambda_41531286337530fe5a4ae271b716e292>","slug":"beaconblockactor-onupdatepacket-l5-lambda-41531286337530fe5a4ae271b716e292","link":"#beaconblockactor-onupdatepacket-l5-lambda-41531286337530fe5a4ae271b716e292","children":[]},{"level":3,"title":"BurstReactionComponent","slug":"burstreactioncomponent","link":"#burstreactioncomponent","children":[]},{"level":3,"title":"BurstReactionComponent_vtbl","slug":"burstreactioncomponent-vtbl","link":"#burstreactioncomponent-vtbl","children":[]},{"level":3,"title":"BambooBlock","slug":"bambooblock","link":"#bambooblock","children":[]},{"level":3,"title":"BambooBlock_vtbl","slug":"bambooblock-vtbl","link":"#bambooblock-vtbl","children":[]},{"level":3,"title":"BambooSapling","slug":"bamboosapling","link":"#bamboosapling","children":[]},{"level":3,"title":"BambooSapling_vtbl","slug":"bamboosapling-vtbl","link":"#bamboosapling-vtbl","children":[]},{"level":3,"title":"BannerBlock","slug":"bannerblock","link":"#bannerblock","children":[]},{"level":3,"title":"BannerBlock_vtbl","slug":"bannerblock-vtbl","link":"#bannerblock-vtbl","children":[]},{"level":3,"title":"BarrierBlock","slug":"barrierblock","link":"#barrierblock","children":[]},{"level":3,"title":"BarrierBlock_vtbl","slug":"barrierblock-vtbl","link":"#barrierblock-vtbl","children":[]},{"level":3,"title":"BasePressurePlateBlock","slug":"basepressureplateblock","link":"#basepressureplateblock","children":[]},{"level":3,"title":"BasePressurePlateBlock_vtbl","slug":"basepressureplateblock-vtbl","link":"#basepressureplateblock-vtbl","children":[]},{"level":3,"title":"BeaconBlock","slug":"beaconblock","link":"#beaconblock","children":[]},{"level":3,"title":"BeaconBlock_vtbl","slug":"beaconblock-vtbl","link":"#beaconblock-vtbl","children":[]},{"level":3,"title":"BasePressurePlateBlock::entityInside::__l17::<lambda_e218216a8f7135fcc6348d1cf3645f7b>","slug":"basepressureplateblock-entityinside-l17-lambda-e218216a8f7135fcc6348d1cf3645f7b","link":"#basepressureplateblock-entityinside-l17-lambda-e218216a8f7135fcc6348d1cf3645f7b","children":[]},{"level":3,"title":"BedrockBlock","slug":"bedrockblock","link":"#bedrockblock","children":[]},{"level":3,"title":"BedrockBlock_vtbl","slug":"bedrockblock-vtbl","link":"#bedrockblock-vtbl","children":[]},{"level":3,"title":"BeetrootBlock","slug":"beetrootblock","link":"#beetrootblock","children":[]},{"level":3,"title":"BeetrootBlock_vtbl","slug":"beetrootblock-vtbl","link":"#beetrootblock-vtbl","children":[]},{"level":3,"title":"BlastFurnaceBlock","slug":"blastfurnaceblock","link":"#blastfurnaceblock","children":[]},{"level":3,"title":"BlastFurnaceBlock_vtbl","slug":"blastfurnaceblock-vtbl","link":"#blastfurnaceblock-vtbl","children":[]},{"level":3,"title":"BlockActorComponentDescription","slug":"blockactorcomponentdescription","link":"#blockactorcomponentdescription","children":[]},{"level":3,"title":"BlockActorComponentDescription_vtbl","slug":"blockactorcomponentdescription-vtbl","link":"#blockactorcomponentdescription-vtbl","children":[]},{"level":3,"title":"BlockActorComponent","slug":"blockactorcomponent","link":"#blockactorcomponent","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6fdc15de22a520ca156369c24e880172>","slug":"blockserializationutils-lambda-6fdc15de22a520ca156369c24e880172","link":"#blockserializationutils-lambda-6fdc15de22a520ca156369c24e880172","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_eec5f314ab07ecb90fdbd203ea1346af>","slug":"blockserializationutils-lambda-eec5f314ab07ecb90fdbd203ea1346af","link":"#blockserializationutils-lambda-eec5f314ab07ecb90fdbd203ea1346af","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a1110cc62a51982954179bd25bf77129>","slug":"blockserializationutils-lambda-a1110cc62a51982954179bd25bf77129","link":"#blockserializationutils-lambda-a1110cc62a51982954179bd25bf77129","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d0a6215a0f7bc9986b97d84c5e60ffac>","slug":"blockserializationutils-lambda-d0a6215a0f7bc9986b97d84c5e60ffac","link":"#blockserializationutils-lambda-d0a6215a0f7bc9986b97d84c5e60ffac","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_983915c06c07d38b7eeb9b007ba5973c>","slug":"blockserializationutils-lambda-983915c06c07d38b7eeb9b007ba5973c","link":"#blockserializationutils-lambda-983915c06c07d38b7eeb9b007ba5973c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c4f1d652ffa81f41c47c703fce7f06f9>","slug":"blockserializationutils-lambda-c4f1d652ffa81f41c47c703fce7f06f9","link":"#blockserializationutils-lambda-c4f1d652ffa81f41c47c703fce7f06f9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7523242e50f57937d64b42feb6b56a14>","slug":"blockserializationutils-lambda-7523242e50f57937d64b42feb6b56a14","link":"#blockserializationutils-lambda-7523242e50f57937d64b42feb6b56a14","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_74a5a603128082ca82f2f8d0cd88766a>","slug":"blockserializationutils-lambda-74a5a603128082ca82f2f8d0cd88766a","link":"#blockserializationutils-lambda-74a5a603128082ca82f2f8d0cd88766a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_32e40a35da8c3294f43732418fde296e>","slug":"blockserializationutils-lambda-32e40a35da8c3294f43732418fde296e","link":"#blockserializationutils-lambda-32e40a35da8c3294f43732418fde296e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_bb35ed5f5ef5cb1ffbbfa69a4d3c6326>","slug":"blockserializationutils-lambda-bb35ed5f5ef5cb1ffbbfa69a4d3c6326","link":"#blockserializationutils-lambda-bb35ed5f5ef5cb1ffbbfa69a4d3c6326","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f0cc804bef9fa0dd72b808dfae7386bd>","slug":"blockserializationutils-lambda-f0cc804bef9fa0dd72b808dfae7386bd","link":"#blockserializationutils-lambda-f0cc804bef9fa0dd72b808dfae7386bd","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4e3010ef0db32b85e6ee2e6852546fdf>","slug":"blockserializationutils-lambda-4e3010ef0db32b85e6ee2e6852546fdf","link":"#blockserializationutils-lambda-4e3010ef0db32b85e6ee2e6852546fdf","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_33409d97eef6295cc053556720fcdef0>","slug":"blockserializationutils-lambda-33409d97eef6295cc053556720fcdef0","link":"#blockserializationutils-lambda-33409d97eef6295cc053556720fcdef0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b671c635c1771fef52af19473cfe7ad9>","slug":"blockserializationutils-lambda-b671c635c1771fef52af19473cfe7ad9","link":"#blockserializationutils-lambda-b671c635c1771fef52af19473cfe7ad9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6e2477e4b65052724097b3043b39f74e>","slug":"blockserializationutils-lambda-6e2477e4b65052724097b3043b39f74e","link":"#blockserializationutils-lambda-6e2477e4b65052724097b3043b39f74e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_44c104413fc5ea03e5c27b8a7b40cff9>","slug":"blockserializationutils-lambda-44c104413fc5ea03e5c27b8a7b40cff9","link":"#blockserializationutils-lambda-44c104413fc5ea03e5c27b8a7b40cff9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2793c93a8f04d82b30d40cd963fb3419>","slug":"blockserializationutils-lambda-2793c93a8f04d82b30d40cd963fb3419","link":"#blockserializationutils-lambda-2793c93a8f04d82b30d40cd963fb3419","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d58fa707dc3a10518dac5dcb7ddbe677>","slug":"blockserializationutils-lambda-d58fa707dc3a10518dac5dcb7ddbe677","link":"#blockserializationutils-lambda-d58fa707dc3a10518dac5dcb7ddbe677","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_ab5229346ce48dd02810d3cfb2d04c26>","slug":"blockserializationutils-lambda-ab5229346ce48dd02810d3cfb2d04c26","link":"#blockserializationutils-lambda-ab5229346ce48dd02810d3cfb2d04c26","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1af544942bf3d7d818e66af9eb8cdff1>","slug":"blockserializationutils-lambda-1af544942bf3d7d818e66af9eb8cdff1","link":"#blockserializationutils-lambda-1af544942bf3d7d818e66af9eb8cdff1","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_85712aad558f95b090474f511201e2e7>","slug":"blockserializationutils-lambda-85712aad558f95b090474f511201e2e7","link":"#blockserializationutils-lambda-85712aad558f95b090474f511201e2e7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1cd52a4d357ff67d3c4df9b88d9fd919>","slug":"blockserializationutils-lambda-1cd52a4d357ff67d3c4df9b88d9fd919","link":"#blockserializationutils-lambda-1cd52a4d357ff67d3c4df9b88d9fd919","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4886fcdffb1232a180350714b5ae36ed>","slug":"blockserializationutils-lambda-4886fcdffb1232a180350714b5ae36ed","link":"#blockserializationutils-lambda-4886fcdffb1232a180350714b5ae36ed","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_649f988dd6e7f09896e7d241a734c864>","slug":"blockserializationutils-lambda-649f988dd6e7f09896e7d241a734c864","link":"#blockserializationutils-lambda-649f988dd6e7f09896e7d241a734c864","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5991a7d46158b816eea851b55503ad9b>","slug":"blockserializationutils-lambda-5991a7d46158b816eea851b55503ad9b","link":"#blockserializationutils-lambda-5991a7d46158b816eea851b55503ad9b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d7206e335b67aeba01b09fed7d5611a0>","slug":"blockserializationutils-lambda-d7206e335b67aeba01b09fed7d5611a0","link":"#blockserializationutils-lambda-d7206e335b67aeba01b09fed7d5611a0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2cf8b0d99804c4cd0fc88a4a5d905a1d>","slug":"blockserializationutils-lambda-2cf8b0d99804c4cd0fc88a4a5d905a1d","link":"#blockserializationutils-lambda-2cf8b0d99804c4cd0fc88a4a5d905a1d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_ac8200090f7b5a7b0d59a74faff7340e>","slug":"blockserializationutils-lambda-ac8200090f7b5a7b0d59a74faff7340e","link":"#blockserializationutils-lambda-ac8200090f7b5a7b0d59a74faff7340e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_baf6a5dfea72ac67a7eaf2b0c7ad75ba>","slug":"blockserializationutils-lambda-baf6a5dfea72ac67a7eaf2b0c7ad75ba","link":"#blockserializationutils-lambda-baf6a5dfea72ac67a7eaf2b0c7ad75ba","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f829a2f0efcb053c6a1a24e77a7adabc>","slug":"blockserializationutils-lambda-f829a2f0efcb053c6a1a24e77a7adabc","link":"#blockserializationutils-lambda-f829a2f0efcb053c6a1a24e77a7adabc","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cf5f9de946c2870c5eb438da65e83ff5>","slug":"blockserializationutils-lambda-cf5f9de946c2870c5eb438da65e83ff5","link":"#blockserializationutils-lambda-cf5f9de946c2870c5eb438da65e83ff5","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2c607cc9cce0494718d74689c2e81e23>","slug":"blockserializationutils-lambda-2c607cc9cce0494718d74689c2e81e23","link":"#blockserializationutils-lambda-2c607cc9cce0494718d74689c2e81e23","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_11801299155af1503d46179ae9105a8c>","slug":"blockserializationutils-lambda-11801299155af1503d46179ae9105a8c","link":"#blockserializationutils-lambda-11801299155af1503d46179ae9105a8c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8aeaa4b2dbbc370eb42715c4738e9776>","slug":"blockserializationutils-lambda-8aeaa4b2dbbc370eb42715c4738e9776","link":"#blockserializationutils-lambda-8aeaa4b2dbbc370eb42715c4738e9776","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9162d39776f698a2f0ba606e4e270ec7>","slug":"blockserializationutils-lambda-9162d39776f698a2f0ba606e4e270ec7","link":"#blockserializationutils-lambda-9162d39776f698a2f0ba606e4e270ec7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2803c18f812d4f4b2b92030797283b5f>","slug":"blockserializationutils-lambda-2803c18f812d4f4b2b92030797283b5f","link":"#blockserializationutils-lambda-2803c18f812d4f4b2b92030797283b5f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_32f5ac5757bf39bcc1afe354ef82f89d>","slug":"blockserializationutils-lambda-32f5ac5757bf39bcc1afe354ef82f89d","link":"#blockserializationutils-lambda-32f5ac5757bf39bcc1afe354ef82f89d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b2a8a73e6cc8989dc74ab8201791eda0>","slug":"blockserializationutils-lambda-b2a8a73e6cc8989dc74ab8201791eda0","link":"#blockserializationutils-lambda-b2a8a73e6cc8989dc74ab8201791eda0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7b1eb2b2353b7ab47b5165a14bc7e71b>","slug":"blockserializationutils-lambda-7b1eb2b2353b7ab47b5165a14bc7e71b","link":"#blockserializationutils-lambda-7b1eb2b2353b7ab47b5165a14bc7e71b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_de5cb65c165db3ab320bde30c00532ab>","slug":"blockserializationutils-lambda-de5cb65c165db3ab320bde30c00532ab","link":"#blockserializationutils-lambda-de5cb65c165db3ab320bde30c00532ab","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_463e99393e64e816cb77ba56aadd83ba>","slug":"blockserializationutils-lambda-463e99393e64e816cb77ba56aadd83ba","link":"#blockserializationutils-lambda-463e99393e64e816cb77ba56aadd83ba","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5f5d23befb5501f9de8b466b56e153c4>","slug":"blockserializationutils-lambda-5f5d23befb5501f9de8b466b56e153c4","link":"#blockserializationutils-lambda-5f5d23befb5501f9de8b466b56e153c4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b9900bd6cdf5f758cf670f56b0b537e6>","slug":"blockserializationutils-lambda-b9900bd6cdf5f758cf670f56b0b537e6","link":"#blockserializationutils-lambda-b9900bd6cdf5f758cf670f56b0b537e6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a359a906504ea464babfa36eb3058d03>","slug":"blockserializationutils-lambda-a359a906504ea464babfa36eb3058d03","link":"#blockserializationutils-lambda-a359a906504ea464babfa36eb3058d03","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_caed70072474ed1910ab2bfbc542a6ce>","slug":"blockserializationutils-lambda-caed70072474ed1910ab2bfbc542a6ce","link":"#blockserializationutils-lambda-caed70072474ed1910ab2bfbc542a6ce","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f55516643c745c324938ddfd0a1a863b>","slug":"blockserializationutils-lambda-f55516643c745c324938ddfd0a1a863b","link":"#blockserializationutils-lambda-f55516643c745c324938ddfd0a1a863b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f8c7dadd1bbef2461d5dd674e68da0e6>","slug":"blockserializationutils-lambda-f8c7dadd1bbef2461d5dd674e68da0e6","link":"#blockserializationutils-lambda-f8c7dadd1bbef2461d5dd674e68da0e6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c96f7ac2a43505e3d39aa02f59be8b9a>","slug":"blockserializationutils-lambda-c96f7ac2a43505e3d39aa02f59be8b9a","link":"#blockserializationutils-lambda-c96f7ac2a43505e3d39aa02f59be8b9a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a4526e648df3660ceab1a72087cd2fac>","slug":"blockserializationutils-lambda-a4526e648df3660ceab1a72087cd2fac","link":"#blockserializationutils-lambda-a4526e648df3660ceab1a72087cd2fac","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_aa1b013aa4c6322f14796cd81f42b5cd>","slug":"blockserializationutils-lambda-aa1b013aa4c6322f14796cd81f42b5cd","link":"#blockserializationutils-lambda-aa1b013aa4c6322f14796cd81f42b5cd","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_86b2c16786202c2a0126cc0817bbf393>","slug":"blockserializationutils-lambda-86b2c16786202c2a0126cc0817bbf393","link":"#blockserializationutils-lambda-86b2c16786202c2a0126cc0817bbf393","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_fd524c11c78dee318673618cf6d1bedb>","slug":"blockserializationutils-lambda-fd524c11c78dee318673618cf6d1bedb","link":"#blockserializationutils-lambda-fd524c11c78dee318673618cf6d1bedb","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_bd0c6af5812dd5f22c4cf33464b05ca8>","slug":"blockserializationutils-lambda-bd0c6af5812dd5f22c4cf33464b05ca8","link":"#blockserializationutils-lambda-bd0c6af5812dd5f22c4cf33464b05ca8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_120724d97a1a0b780536216a55a12907>","slug":"blockserializationutils-lambda-120724d97a1a0b780536216a55a12907","link":"#blockserializationutils-lambda-120724d97a1a0b780536216a55a12907","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_afe3986df72b54efdd35597efee6368a>","slug":"blockserializationutils-lambda-afe3986df72b54efdd35597efee6368a","link":"#blockserializationutils-lambda-afe3986df72b54efdd35597efee6368a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6fa0e5e321ce32175536bef513af4097>","slug":"blockserializationutils-lambda-6fa0e5e321ce32175536bef513af4097","link":"#blockserializationutils-lambda-6fa0e5e321ce32175536bef513af4097","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_356e117505dc1c8c0527834f0213d4d4>","slug":"blockserializationutils-lambda-356e117505dc1c8c0527834f0213d4d4","link":"#blockserializationutils-lambda-356e117505dc1c8c0527834f0213d4d4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f58139ce1a15611cdb8d24fb5f331dfc>","slug":"blockserializationutils-lambda-f58139ce1a15611cdb8d24fb5f331dfc","link":"#blockserializationutils-lambda-f58139ce1a15611cdb8d24fb5f331dfc","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_bfd98adef72dec2bcf0c23e534b4cc5c>","slug":"blockserializationutils-lambda-bfd98adef72dec2bcf0c23e534b4cc5c","link":"#blockserializationutils-lambda-bfd98adef72dec2bcf0c23e534b4cc5c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1a3286eb4837fe9da6660a6f6b9fe35e>","slug":"blockserializationutils-lambda-1a3286eb4837fe9da6660a6f6b9fe35e","link":"#blockserializationutils-lambda-1a3286eb4837fe9da6660a6f6b9fe35e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0286863a89754b1ddff522b25ac0a1c5>","slug":"blockserializationutils-lambda-0286863a89754b1ddff522b25ac0a1c5","link":"#blockserializationutils-lambda-0286863a89754b1ddff522b25ac0a1c5","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_482394891ab632a56cf0ec6d92adbde4>","slug":"blockserializationutils-lambda-482394891ab632a56cf0ec6d92adbde4","link":"#blockserializationutils-lambda-482394891ab632a56cf0ec6d92adbde4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_952fab1cdca066de4ac0daeda27ce3e3>","slug":"blockserializationutils-lambda-952fab1cdca066de4ac0daeda27ce3e3","link":"#blockserializationutils-lambda-952fab1cdca066de4ac0daeda27ce3e3","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6536a8fa2b2fdbd0c5c7a184201b2549>","slug":"blockserializationutils-lambda-6536a8fa2b2fdbd0c5c7a184201b2549","link":"#blockserializationutils-lambda-6536a8fa2b2fdbd0c5c7a184201b2549","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_deb10ec0c7a9ddefde8ab21d2c35c767>","slug":"blockserializationutils-lambda-deb10ec0c7a9ddefde8ab21d2c35c767","link":"#blockserializationutils-lambda-deb10ec0c7a9ddefde8ab21d2c35c767","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_49dcdd42820e764c1f2b338ba8b16de8>","slug":"blockserializationutils-lambda-49dcdd42820e764c1f2b338ba8b16de8","link":"#blockserializationutils-lambda-49dcdd42820e764c1f2b338ba8b16de8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_961f66577b3125927f56c21e1f6a4f9a>","slug":"blockserializationutils-lambda-961f66577b3125927f56c21e1f6a4f9a","link":"#blockserializationutils-lambda-961f66577b3125927f56c21e1f6a4f9a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a11d431fef459d3df413f4eb2617c8b7>","slug":"blockserializationutils-lambda-a11d431fef459d3df413f4eb2617c8b7","link":"#blockserializationutils-lambda-a11d431fef459d3df413f4eb2617c8b7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1c707fa07b1ff7c717e025eea5542e5d>","slug":"blockserializationutils-lambda-1c707fa07b1ff7c717e025eea5542e5d","link":"#blockserializationutils-lambda-1c707fa07b1ff7c717e025eea5542e5d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_76c28052043f4402e41e4506e9833791>","slug":"blockserializationutils-lambda-76c28052043f4402e41e4506e9833791","link":"#blockserializationutils-lambda-76c28052043f4402e41e4506e9833791","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2504fee695490b12d4af8f1e10410d9e>","slug":"blockserializationutils-lambda-2504fee695490b12d4af8f1e10410d9e","link":"#blockserializationutils-lambda-2504fee695490b12d4af8f1e10410d9e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1364fa5bf15868d8c11c786949cf3cb7>","slug":"blockserializationutils-lambda-1364fa5bf15868d8c11c786949cf3cb7","link":"#blockserializationutils-lambda-1364fa5bf15868d8c11c786949cf3cb7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_688d1708202b2c1b91ad3445756d1731>","slug":"blockserializationutils-lambda-688d1708202b2c1b91ad3445756d1731","link":"#blockserializationutils-lambda-688d1708202b2c1b91ad3445756d1731","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f9a2a48e95ae986b8f1f31d8b4b07007>","slug":"blockserializationutils-lambda-f9a2a48e95ae986b8f1f31d8b4b07007","link":"#blockserializationutils-lambda-f9a2a48e95ae986b8f1f31d8b4b07007","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e3ed33be2a558f2791743a8a07f27c1a>","slug":"blockserializationutils-lambda-e3ed33be2a558f2791743a8a07f27c1a","link":"#blockserializationutils-lambda-e3ed33be2a558f2791743a8a07f27c1a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2f4365bdc54b6da9acdb3bde1fadef86>","slug":"blockserializationutils-lambda-2f4365bdc54b6da9acdb3bde1fadef86","link":"#blockserializationutils-lambda-2f4365bdc54b6da9acdb3bde1fadef86","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8c60ea3a92969cc1c0b6a6899ca2a32e>","slug":"blockserializationutils-lambda-8c60ea3a92969cc1c0b6a6899ca2a32e","link":"#blockserializationutils-lambda-8c60ea3a92969cc1c0b6a6899ca2a32e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_726975e58168013c5385d2e7610013e5>","slug":"blockserializationutils-lambda-726975e58168013c5385d2e7610013e5","link":"#blockserializationutils-lambda-726975e58168013c5385d2e7610013e5","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9d3dbb6d6bce2cb555178c19c453a08b>","slug":"blockserializationutils-lambda-9d3dbb6d6bce2cb555178c19c453a08b","link":"#blockserializationutils-lambda-9d3dbb6d6bce2cb555178c19c453a08b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0fe75d0e25cee86e8ff52a8713ef77ae>","slug":"blockserializationutils-lambda-0fe75d0e25cee86e8ff52a8713ef77ae","link":"#blockserializationutils-lambda-0fe75d0e25cee86e8ff52a8713ef77ae","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2c03e7c8e15d88d893cd88bdbf82f8ca>","slug":"blockserializationutils-lambda-2c03e7c8e15d88d893cd88bdbf82f8ca","link":"#blockserializationutils-lambda-2c03e7c8e15d88d893cd88bdbf82f8ca","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_909dcd7ce6d171f2544da41d7f521cbe>","slug":"blockserializationutils-lambda-909dcd7ce6d171f2544da41d7f521cbe","link":"#blockserializationutils-lambda-909dcd7ce6d171f2544da41d7f521cbe","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2861872706d1618ff6c5540b9522c333>","slug":"blockserializationutils-lambda-2861872706d1618ff6c5540b9522c333","link":"#blockserializationutils-lambda-2861872706d1618ff6c5540b9522c333","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9c81cca2bc07f493f58b7ad575637daa>","slug":"blockserializationutils-lambda-9c81cca2bc07f493f58b7ad575637daa","link":"#blockserializationutils-lambda-9c81cca2bc07f493f58b7ad575637daa","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e4ffe1915cdb08948830b8ae67eddf8c>","slug":"blockserializationutils-lambda-e4ffe1915cdb08948830b8ae67eddf8c","link":"#blockserializationutils-lambda-e4ffe1915cdb08948830b8ae67eddf8c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8f95b6dcff13443a45b56973d05613ad>","slug":"blockserializationutils-lambda-8f95b6dcff13443a45b56973d05613ad","link":"#blockserializationutils-lambda-8f95b6dcff13443a45b56973d05613ad","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9bf14eafc7038d1e8115f55f6616c527>","slug":"blockserializationutils-lambda-9bf14eafc7038d1e8115f55f6616c527","link":"#blockserializationutils-lambda-9bf14eafc7038d1e8115f55f6616c527","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_08de8f02cd1235cb91db8d72b5330a40>","slug":"blockserializationutils-lambda-08de8f02cd1235cb91db8d72b5330a40","link":"#blockserializationutils-lambda-08de8f02cd1235cb91db8d72b5330a40","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_989a564efee623cd3ddd0f72bf988e57>","slug":"blockserializationutils-lambda-989a564efee623cd3ddd0f72bf988e57","link":"#blockserializationutils-lambda-989a564efee623cd3ddd0f72bf988e57","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_50edb6a334ed8e799210e99afd191fc6>","slug":"blockserializationutils-lambda-50edb6a334ed8e799210e99afd191fc6","link":"#blockserializationutils-lambda-50edb6a334ed8e799210e99afd191fc6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a228982349169ce148712dfe490ae519>","slug":"blockserializationutils-lambda-a228982349169ce148712dfe490ae519","link":"#blockserializationutils-lambda-a228982349169ce148712dfe490ae519","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c51626a2d86135e2ac70650eee7fe552>","slug":"blockserializationutils-lambda-c51626a2d86135e2ac70650eee7fe552","link":"#blockserializationutils-lambda-c51626a2d86135e2ac70650eee7fe552","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2bfa752f547e87ed344ce74e19fecb96>","slug":"blockserializationutils-lambda-2bfa752f547e87ed344ce74e19fecb96","link":"#blockserializationutils-lambda-2bfa752f547e87ed344ce74e19fecb96","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_896cd9dcb0f02b56f1ad2efb8a567ff0>","slug":"blockserializationutils-lambda-896cd9dcb0f02b56f1ad2efb8a567ff0","link":"#blockserializationutils-lambda-896cd9dcb0f02b56f1ad2efb8a567ff0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d113438834d0614839bba2c528b53b3f>","slug":"blockserializationutils-lambda-d113438834d0614839bba2c528b53b3f","link":"#blockserializationutils-lambda-d113438834d0614839bba2c528b53b3f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d55872600daa00ea84d46752f8149052>","slug":"blockserializationutils-lambda-d55872600daa00ea84d46752f8149052","link":"#blockserializationutils-lambda-d55872600daa00ea84d46752f8149052","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b59cc2a447e78643ca0b4d0215f568ee>","slug":"blockserializationutils-lambda-b59cc2a447e78643ca0b4d0215f568ee","link":"#blockserializationutils-lambda-b59cc2a447e78643ca0b4d0215f568ee","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7efda1a3afc251a60489e70e6fee043a>","slug":"blockserializationutils-lambda-7efda1a3afc251a60489e70e6fee043a","link":"#blockserializationutils-lambda-7efda1a3afc251a60489e70e6fee043a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a8aea26d4affce3a7cff8c83479a984e>","slug":"blockserializationutils-lambda-a8aea26d4affce3a7cff8c83479a984e","link":"#blockserializationutils-lambda-a8aea26d4affce3a7cff8c83479a984e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7c111c639de802ed8f3f595c199786b1>","slug":"blockserializationutils-lambda-7c111c639de802ed8f3f595c199786b1","link":"#blockserializationutils-lambda-7c111c639de802ed8f3f595c199786b1","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_78e8ca433d9f14fb7e86c1b77a21e900>","slug":"blockserializationutils-lambda-78e8ca433d9f14fb7e86c1b77a21e900","link":"#blockserializationutils-lambda-78e8ca433d9f14fb7e86c1b77a21e900","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8257867c58fed36c81b682f912a6b281>","slug":"blockserializationutils-lambda-8257867c58fed36c81b682f912a6b281","link":"#blockserializationutils-lambda-8257867c58fed36c81b682f912a6b281","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dc56b327c9e0705d4ad5ef7abc2b1cf2>","slug":"blockserializationutils-lambda-dc56b327c9e0705d4ad5ef7abc2b1cf2","link":"#blockserializationutils-lambda-dc56b327c9e0705d4ad5ef7abc2b1cf2","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4d325f6d56fc641a1e1f6102241f9213>","slug":"blockserializationutils-lambda-4d325f6d56fc641a1e1f6102241f9213","link":"#blockserializationutils-lambda-4d325f6d56fc641a1e1f6102241f9213","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_fa3600bd56a1534f63666da7b3cfbd7b>","slug":"blockserializationutils-lambda-fa3600bd56a1534f63666da7b3cfbd7b","link":"#blockserializationutils-lambda-fa3600bd56a1534f63666da7b3cfbd7b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_244ef704eea5aa63cb1f9d18883bc534>","slug":"blockserializationutils-lambda-244ef704eea5aa63cb1f9d18883bc534","link":"#blockserializationutils-lambda-244ef704eea5aa63cb1f9d18883bc534","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d91658c8cc09b0339182c5a1a9e87015>","slug":"blockserializationutils-lambda-d91658c8cc09b0339182c5a1a9e87015","link":"#blockserializationutils-lambda-d91658c8cc09b0339182c5a1a9e87015","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4a62419ca4a02c449b017cd0fce13986>","slug":"blockserializationutils-lambda-4a62419ca4a02c449b017cd0fce13986","link":"#blockserializationutils-lambda-4a62419ca4a02c449b017cd0fce13986","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e778efc78cc8ddf4d370f7912963d6eb>","slug":"blockserializationutils-lambda-e778efc78cc8ddf4d370f7912963d6eb","link":"#blockserializationutils-lambda-e778efc78cc8ddf4d370f7912963d6eb","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_886224d4082bdf8c086dd2f61e422482>","slug":"blockserializationutils-lambda-886224d4082bdf8c086dd2f61e422482","link":"#blockserializationutils-lambda-886224d4082bdf8c086dd2f61e422482","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5904a2917e55a67f8a253b60b6f8fd36>","slug":"blockserializationutils-lambda-5904a2917e55a67f8a253b60b6f8fd36","link":"#blockserializationutils-lambda-5904a2917e55a67f8a253b60b6f8fd36","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f1ed6f48f9a7b639a231f501856d019f>","slug":"blockserializationutils-lambda-f1ed6f48f9a7b639a231f501856d019f","link":"#blockserializationutils-lambda-f1ed6f48f9a7b639a231f501856d019f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2ef117843c80acd549be97116c8dde90>","slug":"blockserializationutils-lambda-2ef117843c80acd549be97116c8dde90","link":"#blockserializationutils-lambda-2ef117843c80acd549be97116c8dde90","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_213dc2d94875495d5097ea3dd15d9a1e>","slug":"blockserializationutils-lambda-213dc2d94875495d5097ea3dd15d9a1e","link":"#blockserializationutils-lambda-213dc2d94875495d5097ea3dd15d9a1e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_417d1e96c37e1ca48f2dafb6a9c6228d>","slug":"blockserializationutils-lambda-417d1e96c37e1ca48f2dafb6a9c6228d","link":"#blockserializationutils-lambda-417d1e96c37e1ca48f2dafb6a9c6228d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2f9e6b501bab06c9271a912361d42fed>","slug":"blockserializationutils-lambda-2f9e6b501bab06c9271a912361d42fed","link":"#blockserializationutils-lambda-2f9e6b501bab06c9271a912361d42fed","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_67a63e26aa15305377f26047eb0a56df>","slug":"blockserializationutils-lambda-67a63e26aa15305377f26047eb0a56df","link":"#blockserializationutils-lambda-67a63e26aa15305377f26047eb0a56df","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9f43e194fb0ac5e519d42e530b4e9b8f>","slug":"blockserializationutils-lambda-9f43e194fb0ac5e519d42e530b4e9b8f","link":"#blockserializationutils-lambda-9f43e194fb0ac5e519d42e530b4e9b8f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_798a04fd2847211a026b83a1d7a042d8>","slug":"blockserializationutils-lambda-798a04fd2847211a026b83a1d7a042d8","link":"#blockserializationutils-lambda-798a04fd2847211a026b83a1d7a042d8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_62546bb4a527560d6418061ae8df526d>","slug":"blockserializationutils-lambda-62546bb4a527560d6418061ae8df526d","link":"#blockserializationutils-lambda-62546bb4a527560d6418061ae8df526d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_132571df59eb34a18f760a98fba05206>","slug":"blockserializationutils-lambda-132571df59eb34a18f760a98fba05206","link":"#blockserializationutils-lambda-132571df59eb34a18f760a98fba05206","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0c468b720adc7c9254e30817f3890b7a>","slug":"blockserializationutils-lambda-0c468b720adc7c9254e30817f3890b7a","link":"#blockserializationutils-lambda-0c468b720adc7c9254e30817f3890b7a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e7120cd4e9b688165b9aa1e73b0f809f>","slug":"blockserializationutils-lambda-e7120cd4e9b688165b9aa1e73b0f809f","link":"#blockserializationutils-lambda-e7120cd4e9b688165b9aa1e73b0f809f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_52d008f53c49bd081219984e761fb544>","slug":"blockserializationutils-lambda-52d008f53c49bd081219984e761fb544","link":"#blockserializationutils-lambda-52d008f53c49bd081219984e761fb544","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9f343462091d01c098a6fa28e542a2bf>","slug":"blockserializationutils-lambda-9f343462091d01c098a6fa28e542a2bf","link":"#blockserializationutils-lambda-9f343462091d01c098a6fa28e542a2bf","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_17da692630b94393008544e8f2c1073e>","slug":"blockserializationutils-lambda-17da692630b94393008544e8f2c1073e","link":"#blockserializationutils-lambda-17da692630b94393008544e8f2c1073e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_58c3360145a5c1ffbc17058e4903fce0>","slug":"blockserializationutils-lambda-58c3360145a5c1ffbc17058e4903fce0","link":"#blockserializationutils-lambda-58c3360145a5c1ffbc17058e4903fce0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6d291b38ad7503b1063a69c4c4a0d373>","slug":"blockserializationutils-lambda-6d291b38ad7503b1063a69c4c4a0d373","link":"#blockserializationutils-lambda-6d291b38ad7503b1063a69c4c4a0d373","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_77b3bba338ba37df6b8f39abb11f2e84>","slug":"blockserializationutils-lambda-77b3bba338ba37df6b8f39abb11f2e84","link":"#blockserializationutils-lambda-77b3bba338ba37df6b8f39abb11f2e84","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9c8777d21e42fef9d68ac5391cb9bece>","slug":"blockserializationutils-lambda-9c8777d21e42fef9d68ac5391cb9bece","link":"#blockserializationutils-lambda-9c8777d21e42fef9d68ac5391cb9bece","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_83daccaee1122b8327ff046e252a2042>","slug":"blockserializationutils-lambda-83daccaee1122b8327ff046e252a2042","link":"#blockserializationutils-lambda-83daccaee1122b8327ff046e252a2042","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f7c3c8206c88a2520e27451ff1392891>","slug":"blockserializationutils-lambda-f7c3c8206c88a2520e27451ff1392891","link":"#blockserializationutils-lambda-f7c3c8206c88a2520e27451ff1392891","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_25a90d9c4ebba7333b67781be8b3c122>","slug":"blockserializationutils-lambda-25a90d9c4ebba7333b67781be8b3c122","link":"#blockserializationutils-lambda-25a90d9c4ebba7333b67781be8b3c122","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dfe2b161b80c37784e81cfdd60a64fd7>","slug":"blockserializationutils-lambda-dfe2b161b80c37784e81cfdd60a64fd7","link":"#blockserializationutils-lambda-dfe2b161b80c37784e81cfdd60a64fd7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e8b6d3924e6395d5c61e9f6a88daff3a>","slug":"blockserializationutils-lambda-e8b6d3924e6395d5c61e9f6a88daff3a","link":"#blockserializationutils-lambda-e8b6d3924e6395d5c61e9f6a88daff3a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e1b39284fb325a9fc5fee4db216ede87>","slug":"blockserializationutils-lambda-e1b39284fb325a9fc5fee4db216ede87","link":"#blockserializationutils-lambda-e1b39284fb325a9fc5fee4db216ede87","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_514eaf3e167c4cc40851d43fedcdc402>","slug":"blockserializationutils-lambda-514eaf3e167c4cc40851d43fedcdc402","link":"#blockserializationutils-lambda-514eaf3e167c4cc40851d43fedcdc402","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4870085a47b514f0533913c903dcd1a9>","slug":"blockserializationutils-lambda-4870085a47b514f0533913c903dcd1a9","link":"#blockserializationutils-lambda-4870085a47b514f0533913c903dcd1a9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5ed417f39bd98751db56e791ece7cb10>","slug":"blockserializationutils-lambda-5ed417f39bd98751db56e791ece7cb10","link":"#blockserializationutils-lambda-5ed417f39bd98751db56e791ece7cb10","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_633bd25265605641a8f9cb5d1ccab560>","slug":"blockserializationutils-lambda-633bd25265605641a8f9cb5d1ccab560","link":"#blockserializationutils-lambda-633bd25265605641a8f9cb5d1ccab560","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_39fbcccb7c7bf029cb18111282f8c368>","slug":"blockserializationutils-lambda-39fbcccb7c7bf029cb18111282f8c368","link":"#blockserializationutils-lambda-39fbcccb7c7bf029cb18111282f8c368","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f7865132b42f5c8f7cf98bddaf9fc08c>","slug":"blockserializationutils-lambda-f7865132b42f5c8f7cf98bddaf9fc08c","link":"#blockserializationutils-lambda-f7865132b42f5c8f7cf98bddaf9fc08c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5a919aa231f9ba1f4b63a9263fce778d>","slug":"blockserializationutils-lambda-5a919aa231f9ba1f4b63a9263fce778d","link":"#blockserializationutils-lambda-5a919aa231f9ba1f4b63a9263fce778d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4acab81f8277b78b0d65320d8303db54>","slug":"blockserializationutils-lambda-4acab81f8277b78b0d65320d8303db54","link":"#blockserializationutils-lambda-4acab81f8277b78b0d65320d8303db54","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9dc5fe5c9fa7b26ea354e190fe5ee983>","slug":"blockserializationutils-lambda-9dc5fe5c9fa7b26ea354e190fe5ee983","link":"#blockserializationutils-lambda-9dc5fe5c9fa7b26ea354e190fe5ee983","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7c4774d03f6bdfef7d3c09c34cb90361>","slug":"blockserializationutils-lambda-7c4774d03f6bdfef7d3c09c34cb90361","link":"#blockserializationutils-lambda-7c4774d03f6bdfef7d3c09c34cb90361","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_87e3ca8383c2e6c0d80d8f86a30404a3>","slug":"blockserializationutils-lambda-87e3ca8383c2e6c0d80d8f86a30404a3","link":"#blockserializationutils-lambda-87e3ca8383c2e6c0d80d8f86a30404a3","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8ee582a5d5ef889ae713440f7b568db1>","slug":"blockserializationutils-lambda-8ee582a5d5ef889ae713440f7b568db1","link":"#blockserializationutils-lambda-8ee582a5d5ef889ae713440f7b568db1","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8f3aec30a2b85700b60a88197cc2c0d7>","slug":"blockserializationutils-lambda-8f3aec30a2b85700b60a88197cc2c0d7","link":"#blockserializationutils-lambda-8f3aec30a2b85700b60a88197cc2c0d7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_37374d23cdd4b05e89d1f8c2ab538dc6>","slug":"blockserializationutils-lambda-37374d23cdd4b05e89d1f8c2ab538dc6","link":"#blockserializationutils-lambda-37374d23cdd4b05e89d1f8c2ab538dc6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b69e0b83aa82a8115c8a8f6395157c66>","slug":"blockserializationutils-lambda-b69e0b83aa82a8115c8a8f6395157c66","link":"#blockserializationutils-lambda-b69e0b83aa82a8115c8a8f6395157c66","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_92cbd13327c65817b8da5515f319827f>","slug":"blockserializationutils-lambda-92cbd13327c65817b8da5515f319827f","link":"#blockserializationutils-lambda-92cbd13327c65817b8da5515f319827f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_fc03a6576434cddee2bbf3252d500c7c>","slug":"blockserializationutils-lambda-fc03a6576434cddee2bbf3252d500c7c","link":"#blockserializationutils-lambda-fc03a6576434cddee2bbf3252d500c7c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_46dec10d01150c8df455d6443728e9e9>","slug":"blockserializationutils-lambda-46dec10d01150c8df455d6443728e9e9","link":"#blockserializationutils-lambda-46dec10d01150c8df455d6443728e9e9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cc2ff158363c3e4cad7786e84d0574c9>","slug":"blockserializationutils-lambda-cc2ff158363c3e4cad7786e84d0574c9","link":"#blockserializationutils-lambda-cc2ff158363c3e4cad7786e84d0574c9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0da51c364bdadd59bc27fa537a15e0d4>","slug":"blockserializationutils-lambda-0da51c364bdadd59bc27fa537a15e0d4","link":"#blockserializationutils-lambda-0da51c364bdadd59bc27fa537a15e0d4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_ea10f2191d60813c2f7f96b0b907e7dd>","slug":"blockserializationutils-lambda-ea10f2191d60813c2f7f96b0b907e7dd","link":"#blockserializationutils-lambda-ea10f2191d60813c2f7f96b0b907e7dd","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4fb3118920b9164aaf8908c5eb1b951a>","slug":"blockserializationutils-lambda-4fb3118920b9164aaf8908c5eb1b951a","link":"#blockserializationutils-lambda-4fb3118920b9164aaf8908c5eb1b951a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_894121c1bdb7e464b30645e16073fd2b>","slug":"blockserializationutils-lambda-894121c1bdb7e464b30645e16073fd2b","link":"#blockserializationutils-lambda-894121c1bdb7e464b30645e16073fd2b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_21f90e89907a39f26e33d0138efabc5f>","slug":"blockserializationutils-lambda-21f90e89907a39f26e33d0138efabc5f","link":"#blockserializationutils-lambda-21f90e89907a39f26e33d0138efabc5f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_bfb1de0b875d4d43bf37f438dbee6a4e>","slug":"blockserializationutils-lambda-bfb1de0b875d4d43bf37f438dbee6a4e","link":"#blockserializationutils-lambda-bfb1de0b875d4d43bf37f438dbee6a4e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7541b4dfa2ac6a7db09ac2e8a7eecb0e>","slug":"blockserializationutils-lambda-7541b4dfa2ac6a7db09ac2e8a7eecb0e","link":"#blockserializationutils-lambda-7541b4dfa2ac6a7db09ac2e8a7eecb0e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a89591253bb4bab0ca5c6b449e90dc86>","slug":"blockserializationutils-lambda-a89591253bb4bab0ca5c6b449e90dc86","link":"#blockserializationutils-lambda-a89591253bb4bab0ca5c6b449e90dc86","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cec701a19c5f9f5bc36dfdf03c642ceb>","slug":"blockserializationutils-lambda-cec701a19c5f9f5bc36dfdf03c642ceb","link":"#blockserializationutils-lambda-cec701a19c5f9f5bc36dfdf03c642ceb","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c9d612fbfad9699669f760f0160a02db>","slug":"blockserializationutils-lambda-c9d612fbfad9699669f760f0160a02db","link":"#blockserializationutils-lambda-c9d612fbfad9699669f760f0160a02db","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_956cdab44be66d5197e22c3a855e5b69>","slug":"blockserializationutils-lambda-956cdab44be66d5197e22c3a855e5b69","link":"#blockserializationutils-lambda-956cdab44be66d5197e22c3a855e5b69","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b5ec29e6aa1a63684dd74e8901379a71>","slug":"blockserializationutils-lambda-b5ec29e6aa1a63684dd74e8901379a71","link":"#blockserializationutils-lambda-b5ec29e6aa1a63684dd74e8901379a71","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7a4b7ad1b18e5ad29c5dcd63724ec623>","slug":"blockserializationutils-lambda-7a4b7ad1b18e5ad29c5dcd63724ec623","link":"#blockserializationutils-lambda-7a4b7ad1b18e5ad29c5dcd63724ec623","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_953f8970144e1c7e010b1bf50aceb858>","slug":"blockserializationutils-lambda-953f8970144e1c7e010b1bf50aceb858","link":"#blockserializationutils-lambda-953f8970144e1c7e010b1bf50aceb858","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3be53f580cd60341de483f3b38e95be4>","slug":"blockserializationutils-lambda-3be53f580cd60341de483f3b38e95be4","link":"#blockserializationutils-lambda-3be53f580cd60341de483f3b38e95be4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_072e20da3c3546077ad9fac18aff268f>","slug":"blockserializationutils-lambda-072e20da3c3546077ad9fac18aff268f","link":"#blockserializationutils-lambda-072e20da3c3546077ad9fac18aff268f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c33fa34117d50e6d84953ee6ac15f21f>","slug":"blockserializationutils-lambda-c33fa34117d50e6d84953ee6ac15f21f","link":"#blockserializationutils-lambda-c33fa34117d50e6d84953ee6ac15f21f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3ba8d13556d0208451be9f301b20488f>","slug":"blockserializationutils-lambda-3ba8d13556d0208451be9f301b20488f","link":"#blockserializationutils-lambda-3ba8d13556d0208451be9f301b20488f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_ad220bcab3fa600f37cd234a06c2f562>","slug":"blockserializationutils-lambda-ad220bcab3fa600f37cd234a06c2f562","link":"#blockserializationutils-lambda-ad220bcab3fa600f37cd234a06c2f562","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_55a996f326e9bd25d76cd6345f632a7a>","slug":"blockserializationutils-lambda-55a996f326e9bd25d76cd6345f632a7a","link":"#blockserializationutils-lambda-55a996f326e9bd25d76cd6345f632a7a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_846c4b8abb6ba7fcac664aa7377aa006>","slug":"blockserializationutils-lambda-846c4b8abb6ba7fcac664aa7377aa006","link":"#blockserializationutils-lambda-846c4b8abb6ba7fcac664aa7377aa006","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8f29401e704da5e05ec9734a207f563b>","slug":"blockserializationutils-lambda-8f29401e704da5e05ec9734a207f563b","link":"#blockserializationutils-lambda-8f29401e704da5e05ec9734a207f563b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_004be5b6fa5b78c9b8adeaf94069d601>","slug":"blockserializationutils-lambda-004be5b6fa5b78c9b8adeaf94069d601","link":"#blockserializationutils-lambda-004be5b6fa5b78c9b8adeaf94069d601","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_19eaaaa315c8a15378bed5bb1897da50>","slug":"blockserializationutils-lambda-19eaaaa315c8a15378bed5bb1897da50","link":"#blockserializationutils-lambda-19eaaaa315c8a15378bed5bb1897da50","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b86e514372db9652b8fa3805b0df3a1e>","slug":"blockserializationutils-lambda-b86e514372db9652b8fa3805b0df3a1e","link":"#blockserializationutils-lambda-b86e514372db9652b8fa3805b0df3a1e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a8fca6a99b2e989d529019f6a8656001>","slug":"blockserializationutils-lambda-a8fca6a99b2e989d529019f6a8656001","link":"#blockserializationutils-lambda-a8fca6a99b2e989d529019f6a8656001","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_bbd8a0dea13b4a27264cab0ddabc331c>","slug":"blockserializationutils-lambda-bbd8a0dea13b4a27264cab0ddabc331c","link":"#blockserializationutils-lambda-bbd8a0dea13b4a27264cab0ddabc331c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7238f1484e2fe70ac6df34442375cd94>","slug":"blockserializationutils-lambda-7238f1484e2fe70ac6df34442375cd94","link":"#blockserializationutils-lambda-7238f1484e2fe70ac6df34442375cd94","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_77a9d01c9329a5b267133cb97b47b40b>","slug":"blockserializationutils-lambda-77a9d01c9329a5b267133cb97b47b40b","link":"#blockserializationutils-lambda-77a9d01c9329a5b267133cb97b47b40b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_38a9b0207bb3fc83a8770b5470c79eec>","slug":"blockserializationutils-lambda-38a9b0207bb3fc83a8770b5470c79eec","link":"#blockserializationutils-lambda-38a9b0207bb3fc83a8770b5470c79eec","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f8ef20131a7fca5fb97d6e361fc3943f>","slug":"blockserializationutils-lambda-f8ef20131a7fca5fb97d6e361fc3943f","link":"#blockserializationutils-lambda-f8ef20131a7fca5fb97d6e361fc3943f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_004685af1a11991fd7dfcf021cdaa64d>","slug":"blockserializationutils-lambda-004685af1a11991fd7dfcf021cdaa64d","link":"#blockserializationutils-lambda-004685af1a11991fd7dfcf021cdaa64d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dcea529a71bef71f14749d8c90f399b2>","slug":"blockserializationutils-lambda-dcea529a71bef71f14749d8c90f399b2","link":"#blockserializationutils-lambda-dcea529a71bef71f14749d8c90f399b2","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3b9d5e9eacb1a1a865c43b51fed2a2e3>","slug":"blockserializationutils-lambda-3b9d5e9eacb1a1a865c43b51fed2a2e3","link":"#blockserializationutils-lambda-3b9d5e9eacb1a1a865c43b51fed2a2e3","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d091ef4edf66be00a00642c2bd2a97f0>","slug":"blockserializationutils-lambda-d091ef4edf66be00a00642c2bd2a97f0","link":"#blockserializationutils-lambda-d091ef4edf66be00a00642c2bd2a97f0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_48bdc52667a74a9cba6ac48bb060c4e7>","slug":"blockserializationutils-lambda-48bdc52667a74a9cba6ac48bb060c4e7","link":"#blockserializationutils-lambda-48bdc52667a74a9cba6ac48bb060c4e7","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3d9136b72324b1c1e85620fb476ccb3f>","slug":"blockserializationutils-lambda-3d9136b72324b1c1e85620fb476ccb3f","link":"#blockserializationutils-lambda-3d9136b72324b1c1e85620fb476ccb3f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_79d10e13b89dd9fab80a33352fdb1e3b>","slug":"blockserializationutils-lambda-79d10e13b89dd9fab80a33352fdb1e3b","link":"#blockserializationutils-lambda-79d10e13b89dd9fab80a33352fdb1e3b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_77c84c148e95142eb75c7826f6649bc0>","slug":"blockserializationutils-lambda-77c84c148e95142eb75c7826f6649bc0","link":"#blockserializationutils-lambda-77c84c148e95142eb75c7826f6649bc0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d6987d7bf7fd30400e4b9256bf31af66>","slug":"blockserializationutils-lambda-d6987d7bf7fd30400e4b9256bf31af66","link":"#blockserializationutils-lambda-d6987d7bf7fd30400e4b9256bf31af66","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_52a9006590c0e7dda0c284315f59f3e1>","slug":"blockserializationutils-lambda-52a9006590c0e7dda0c284315f59f3e1","link":"#blockserializationutils-lambda-52a9006590c0e7dda0c284315f59f3e1","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a13fe0e459ff7fe0ecc915115cb98f36>","slug":"blockserializationutils-lambda-a13fe0e459ff7fe0ecc915115cb98f36","link":"#blockserializationutils-lambda-a13fe0e459ff7fe0ecc915115cb98f36","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a77974a6853122b76d5c74fd39c59957>","slug":"blockserializationutils-lambda-a77974a6853122b76d5c74fd39c59957","link":"#blockserializationutils-lambda-a77974a6853122b76d5c74fd39c59957","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6ea1eca1adcae043c74a11f68b3da135>","slug":"blockserializationutils-lambda-6ea1eca1adcae043c74a11f68b3da135","link":"#blockserializationutils-lambda-6ea1eca1adcae043c74a11f68b3da135","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e2859667c953321c444c777bdef35622>","slug":"blockserializationutils-lambda-e2859667c953321c444c777bdef35622","link":"#blockserializationutils-lambda-e2859667c953321c444c777bdef35622","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a92e69a4c04f92cbf1e8e19b0c12fa2d>","slug":"blockserializationutils-lambda-a92e69a4c04f92cbf1e8e19b0c12fa2d","link":"#blockserializationutils-lambda-a92e69a4c04f92cbf1e8e19b0c12fa2d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8428118b34244b71b887a59143e7a9fa>","slug":"blockserializationutils-lambda-8428118b34244b71b887a59143e7a9fa","link":"#blockserializationutils-lambda-8428118b34244b71b887a59143e7a9fa","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6cf682a8d95c29558beca2661793f8ed>","slug":"blockserializationutils-lambda-6cf682a8d95c29558beca2661793f8ed","link":"#blockserializationutils-lambda-6cf682a8d95c29558beca2661793f8ed","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d8fa2f79c98b9dc97e1d575cb7c91879>","slug":"blockserializationutils-lambda-d8fa2f79c98b9dc97e1d575cb7c91879","link":"#blockserializationutils-lambda-d8fa2f79c98b9dc97e1d575cb7c91879","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c9e8b0aa6a78d42c6312471d06b8516c>","slug":"blockserializationutils-lambda-c9e8b0aa6a78d42c6312471d06b8516c","link":"#blockserializationutils-lambda-c9e8b0aa6a78d42c6312471d06b8516c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4cf77149a2917fde5bfaeb7a88f03e29>","slug":"blockserializationutils-lambda-4cf77149a2917fde5bfaeb7a88f03e29","link":"#blockserializationutils-lambda-4cf77149a2917fde5bfaeb7a88f03e29","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_46501efeb038e1117703698f94186212>","slug":"blockserializationutils-lambda-46501efeb038e1117703698f94186212","link":"#blockserializationutils-lambda-46501efeb038e1117703698f94186212","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d3ae9a9d053e9156ececa7b5569c3736>","slug":"blockserializationutils-lambda-d3ae9a9d053e9156ececa7b5569c3736","link":"#blockserializationutils-lambda-d3ae9a9d053e9156ececa7b5569c3736","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0730084efe72c8be9d237570b2a7fcc3>","slug":"blockserializationutils-lambda-0730084efe72c8be9d237570b2a7fcc3","link":"#blockserializationutils-lambda-0730084efe72c8be9d237570b2a7fcc3","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_f33152037d93e168ee2daf602f847cbf>","slug":"blockserializationutils-lambda-f33152037d93e168ee2daf602f847cbf","link":"#blockserializationutils-lambda-f33152037d93e168ee2daf602f847cbf","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dbb7c86e78cb4d856820de1cdef3d9ad>","slug":"blockserializationutils-lambda-dbb7c86e78cb4d856820de1cdef3d9ad","link":"#blockserializationutils-lambda-dbb7c86e78cb4d856820de1cdef3d9ad","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_65363a572086fb22ab5ec06a3afe3853>","slug":"blockserializationutils-lambda-65363a572086fb22ab5ec06a3afe3853","link":"#blockserializationutils-lambda-65363a572086fb22ab5ec06a3afe3853","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b83d5145f9711a48958f86f683c3e703>","slug":"blockserializationutils-lambda-b83d5145f9711a48958f86f683c3e703","link":"#blockserializationutils-lambda-b83d5145f9711a48958f86f683c3e703","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6bb229817dc72b323ebfe9ff605e00b8>","slug":"blockserializationutils-lambda-6bb229817dc72b323ebfe9ff605e00b8","link":"#blockserializationutils-lambda-6bb229817dc72b323ebfe9ff605e00b8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_537f727195b63c5e49d00b56a3af7cc6>","slug":"blockserializationutils-lambda-537f727195b63c5e49d00b56a3af7cc6","link":"#blockserializationutils-lambda-537f727195b63c5e49d00b56a3af7cc6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9dd905b5dcc2c2ce02cf416f0354ae2a>","slug":"blockserializationutils-lambda-9dd905b5dcc2c2ce02cf416f0354ae2a","link":"#blockserializationutils-lambda-9dd905b5dcc2c2ce02cf416f0354ae2a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cd9dafb2469335aa35b0b5f5aeac25b9>","slug":"blockserializationutils-lambda-cd9dafb2469335aa35b0b5f5aeac25b9","link":"#blockserializationutils-lambda-cd9dafb2469335aa35b0b5f5aeac25b9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a39287cc5453d8bd8270c603aa4a2ed4>","slug":"blockserializationutils-lambda-a39287cc5453d8bd8270c603aa4a2ed4","link":"#blockserializationutils-lambda-a39287cc5453d8bd8270c603aa4a2ed4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_880eb1662c280a9a54fc30e52c108db1>","slug":"blockserializationutils-lambda-880eb1662c280a9a54fc30e52c108db1","link":"#blockserializationutils-lambda-880eb1662c280a9a54fc30e52c108db1","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c1930eb8f1d3d87d6c21d78c5b5af506>","slug":"blockserializationutils-lambda-c1930eb8f1d3d87d6c21d78c5b5af506","link":"#blockserializationutils-lambda-c1930eb8f1d3d87d6c21d78c5b5af506","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9b6ae55357330423f18f3e6ff446dd1c>","slug":"blockserializationutils-lambda-9b6ae55357330423f18f3e6ff446dd1c","link":"#blockserializationutils-lambda-9b6ae55357330423f18f3e6ff446dd1c","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2f0f08543c10cb0afdfa867616f57f57>","slug":"blockserializationutils-lambda-2f0f08543c10cb0afdfa867616f57f57","link":"#blockserializationutils-lambda-2f0f08543c10cb0afdfa867616f57f57","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5c7b3f99b943689ca2cd428c9fbd4bea>","slug":"blockserializationutils-lambda-5c7b3f99b943689ca2cd428c9fbd4bea","link":"#blockserializationutils-lambda-5c7b3f99b943689ca2cd428c9fbd4bea","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0cf65595139336f3e89cbbf78e78c9b0>","slug":"blockserializationutils-lambda-0cf65595139336f3e89cbbf78e78c9b0","link":"#blockserializationutils-lambda-0cf65595139336f3e89cbbf78e78c9b0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0a6f5383d730dd8b92e1159be66ec376>","slug":"blockserializationutils-lambda-0a6f5383d730dd8b92e1159be66ec376","link":"#blockserializationutils-lambda-0a6f5383d730dd8b92e1159be66ec376","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6d9740f9d85b8fe0fe2fcd3ac015d095>","slug":"blockserializationutils-lambda-6d9740f9d85b8fe0fe2fcd3ac015d095","link":"#blockserializationutils-lambda-6d9740f9d85b8fe0fe2fcd3ac015d095","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e81423d5a7ebefcd0e55b180efc99dd4>","slug":"blockserializationutils-lambda-e81423d5a7ebefcd0e55b180efc99dd4","link":"#blockserializationutils-lambda-e81423d5a7ebefcd0e55b180efc99dd4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_976efd94a5f0085b9dad031f49cf7e0e>","slug":"blockserializationutils-lambda-976efd94a5f0085b9dad031f49cf7e0e","link":"#blockserializationutils-lambda-976efd94a5f0085b9dad031f49cf7e0e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e7edf058f6cdd8704ff56c1b7651c98b>","slug":"blockserializationutils-lambda-e7edf058f6cdd8704ff56c1b7651c98b","link":"#blockserializationutils-lambda-e7edf058f6cdd8704ff56c1b7651c98b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_de1b9469f49bd9cbf443affd2dce3bfc>","slug":"blockserializationutils-lambda-de1b9469f49bd9cbf443affd2dce3bfc","link":"#blockserializationutils-lambda-de1b9469f49bd9cbf443affd2dce3bfc","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9ad0876a6b34d7d84a87821c07ad588f>","slug":"blockserializationutils-lambda-9ad0876a6b34d7d84a87821c07ad588f","link":"#blockserializationutils-lambda-9ad0876a6b34d7d84a87821c07ad588f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8c29a74f21ea5c343fef298b3f2b0872>","slug":"blockserializationutils-lambda-8c29a74f21ea5c343fef298b3f2b0872","link":"#blockserializationutils-lambda-8c29a74f21ea5c343fef298b3f2b0872","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7af4031d2b0a9e035cd44eb97fc216ce>","slug":"blockserializationutils-lambda-7af4031d2b0a9e035cd44eb97fc216ce","link":"#blockserializationutils-lambda-7af4031d2b0a9e035cd44eb97fc216ce","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3f5b2342cf87bbafc2a8943847a51b18>","slug":"blockserializationutils-lambda-3f5b2342cf87bbafc2a8943847a51b18","link":"#blockserializationutils-lambda-3f5b2342cf87bbafc2a8943847a51b18","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9fa357ecc7ef5bef6d2d0ff4eea8f1ac>","slug":"blockserializationutils-lambda-9fa357ecc7ef5bef6d2d0ff4eea8f1ac","link":"#blockserializationutils-lambda-9fa357ecc7ef5bef6d2d0ff4eea8f1ac","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_51c4cccda65e8f8640e0a6cda2f5a5a2>","slug":"blockserializationutils-lambda-51c4cccda65e8f8640e0a6cda2f5a5a2","link":"#blockserializationutils-lambda-51c4cccda65e8f8640e0a6cda2f5a5a2","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e0dac7234f50d867291491a20b5d2f14>","slug":"blockserializationutils-lambda-e0dac7234f50d867291491a20b5d2f14","link":"#blockserializationutils-lambda-e0dac7234f50d867291491a20b5d2f14","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dd23a837fd20abc0d0c0c8deba79c056>","slug":"blockserializationutils-lambda-dd23a837fd20abc0d0c0c8deba79c056","link":"#blockserializationutils-lambda-dd23a837fd20abc0d0c0c8deba79c056","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7084b57e619eb27e60cacefd434af631>","slug":"blockserializationutils-lambda-7084b57e619eb27e60cacefd434af631","link":"#blockserializationutils-lambda-7084b57e619eb27e60cacefd434af631","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8ace8b70b8924be52d731e7bcb93ce54>","slug":"blockserializationutils-lambda-8ace8b70b8924be52d731e7bcb93ce54","link":"#blockserializationutils-lambda-8ace8b70b8924be52d731e7bcb93ce54","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_395376adf60bee2159de113e8b4d30e2>","slug":"blockserializationutils-lambda-395376adf60bee2159de113e8b4d30e2","link":"#blockserializationutils-lambda-395376adf60bee2159de113e8b4d30e2","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_153d23d352602ec24cff82763dab3f73>","slug":"blockserializationutils-lambda-153d23d352602ec24cff82763dab3f73","link":"#blockserializationutils-lambda-153d23d352602ec24cff82763dab3f73","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_992b07d152f9524e793f0ee752eaf4db>","slug":"blockserializationutils-lambda-992b07d152f9524e793f0ee752eaf4db","link":"#blockserializationutils-lambda-992b07d152f9524e793f0ee752eaf4db","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d9a3a0f3e48e5c4dd98e17e014eb08c0>","slug":"blockserializationutils-lambda-d9a3a0f3e48e5c4dd98e17e014eb08c0","link":"#blockserializationutils-lambda-d9a3a0f3e48e5c4dd98e17e014eb08c0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7095affb4e5945ed9f44bd67398d0cf0>","slug":"blockserializationutils-lambda-7095affb4e5945ed9f44bd67398d0cf0","link":"#blockserializationutils-lambda-7095affb4e5945ed9f44bd67398d0cf0","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cc9497af8781284fa59c10670c38f11a>","slug":"blockserializationutils-lambda-cc9497af8781284fa59c10670c38f11a","link":"#blockserializationutils-lambda-cc9497af8781284fa59c10670c38f11a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3cef73b50357c121285c3a6191b13e25>","slug":"blockserializationutils-lambda-3cef73b50357c121285c3a6191b13e25","link":"#blockserializationutils-lambda-3cef73b50357c121285c3a6191b13e25","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6bdae7ef3ade7d293d80a28ff70aef7e>","slug":"blockserializationutils-lambda-6bdae7ef3ade7d293d80a28ff70aef7e","link":"#blockserializationutils-lambda-6bdae7ef3ade7d293d80a28ff70aef7e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_910d614436e4bc1f78188f9f3dfe3b3a>","slug":"blockserializationutils-lambda-910d614436e4bc1f78188f9f3dfe3b3a","link":"#blockserializationutils-lambda-910d614436e4bc1f78188f9f3dfe3b3a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0d92256ccb9d888aa7cb78ecfd5bb865>","slug":"blockserializationutils-lambda-0d92256ccb9d888aa7cb78ecfd5bb865","link":"#blockserializationutils-lambda-0d92256ccb9d888aa7cb78ecfd5bb865","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_519a254294a692c54630dcea2ba973c4>","slug":"blockserializationutils-lambda-519a254294a692c54630dcea2ba973c4","link":"#blockserializationutils-lambda-519a254294a692c54630dcea2ba973c4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_079767928ff9a283b9b7705874e4ecbd>","slug":"blockserializationutils-lambda-079767928ff9a283b9b7705874e4ecbd","link":"#blockserializationutils-lambda-079767928ff9a283b9b7705874e4ecbd","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_2f9df7967aa8d6f004fd5c3bff3ea19e>","slug":"blockserializationutils-lambda-2f9df7967aa8d6f004fd5c3bff3ea19e","link":"#blockserializationutils-lambda-2f9df7967aa8d6f004fd5c3bff3ea19e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_fbedc31c5d4c0956f04251234851414e>","slug":"blockserializationutils-lambda-fbedc31c5d4c0956f04251234851414e","link":"#blockserializationutils-lambda-fbedc31c5d4c0956f04251234851414e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6872e4b36780ab15bb3ab0e34f56849a>","slug":"blockserializationutils-lambda-6872e4b36780ab15bb3ab0e34f56849a","link":"#blockserializationutils-lambda-6872e4b36780ab15bb3ab0e34f56849a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8085dcaef47b52aa22ab669ad03399e9>","slug":"blockserializationutils-lambda-8085dcaef47b52aa22ab669ad03399e9","link":"#blockserializationutils-lambda-8085dcaef47b52aa22ab669ad03399e9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e147176d4a2f90ea786d5c583afa519f>","slug":"blockserializationutils-lambda-e147176d4a2f90ea786d5c583afa519f","link":"#blockserializationutils-lambda-e147176d4a2f90ea786d5c583afa519f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_dd137991a6886a22c6644ffc6c55af1d>","slug":"blockserializationutils-lambda-dd137991a6886a22c6644ffc6c55af1d","link":"#blockserializationutils-lambda-dd137991a6886a22c6644ffc6c55af1d","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_078e28398be7c95fdde00677d660e3b6>","slug":"blockserializationutils-lambda-078e28398be7c95fdde00677d660e3b6","link":"#blockserializationutils-lambda-078e28398be7c95fdde00677d660e3b6","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_53b3394ae5179fecc6a12c1fd473e4e8>","slug":"blockserializationutils-lambda-53b3394ae5179fecc6a12c1fd473e4e8","link":"#blockserializationutils-lambda-53b3394ae5179fecc6a12c1fd473e4e8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1b31d9c8eb125087f2302b69f119f287>","slug":"blockserializationutils-lambda-1b31d9c8eb125087f2302b69f119f287","link":"#blockserializationutils-lambda-1b31d9c8eb125087f2302b69f119f287","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_b2a67c9e23dd0e630f7d8fbb6b480293>","slug":"blockserializationutils-lambda-b2a67c9e23dd0e630f7d8fbb6b480293","link":"#blockserializationutils-lambda-b2a67c9e23dd0e630f7d8fbb6b480293","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1c94a60dbf2a625ac0033030fda0ba05>","slug":"blockserializationutils-lambda-1c94a60dbf2a625ac0033030fda0ba05","link":"#blockserializationutils-lambda-1c94a60dbf2a625ac0033030fda0ba05","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_5a68674f1a3517c6c0fcd038bd5fe6e4>","slug":"blockserializationutils-lambda-5a68674f1a3517c6c0fcd038bd5fe6e4","link":"#blockserializationutils-lambda-5a68674f1a3517c6c0fcd038bd5fe6e4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d3eed8840205e457507d8b28b4bdcfd9>","slug":"blockserializationutils-lambda-d3eed8840205e457507d8b28b4bdcfd9","link":"#blockserializationutils-lambda-d3eed8840205e457507d8b28b4bdcfd9","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_40789fddd04686ba9830e71fa2bd92c3>","slug":"blockserializationutils-lambda-40789fddd04686ba9830e71fa2bd92c3","link":"#blockserializationutils-lambda-40789fddd04686ba9830e71fa2bd92c3","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c6e007ebb1adb882ad51375fc56095fb>","slug":"blockserializationutils-lambda-c6e007ebb1adb882ad51375fc56095fb","link":"#blockserializationutils-lambda-c6e007ebb1adb882ad51375fc56095fb","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_95079b4ec55f954c0b7558155e6c9aa5>","slug":"blockserializationutils-lambda-95079b4ec55f954c0b7558155e6c9aa5","link":"#blockserializationutils-lambda-95079b4ec55f954c0b7558155e6c9aa5","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3f3d2908ded9142320b8159948eefa96>","slug":"blockserializationutils-lambda-3f3d2908ded9142320b8159948eefa96","link":"#blockserializationutils-lambda-3f3d2908ded9142320b8159948eefa96","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1cc70504779daa11198f8918a7f05f0a>","slug":"blockserializationutils-lambda-1cc70504779daa11198f8918a7f05f0a","link":"#blockserializationutils-lambda-1cc70504779daa11198f8918a7f05f0a","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a86ba1034d7be72cffab510bd562b738>","slug":"blockserializationutils-lambda-a86ba1034d7be72cffab510bd562b738","link":"#blockserializationutils-lambda-a86ba1034d7be72cffab510bd562b738","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_94b388d3e55ad1773f279a5246e39d6b>","slug":"blockserializationutils-lambda-94b388d3e55ad1773f279a5246e39d6b","link":"#blockserializationutils-lambda-94b388d3e55ad1773f279a5246e39d6b","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_3df30e04482179476cce1b4994a8bdda>","slug":"blockserializationutils-lambda-3df30e04482179476cce1b4994a8bdda","link":"#blockserializationutils-lambda-3df30e04482179476cce1b4994a8bdda","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_ba18e5cb7301b95f93caf86de1c7bc2f>","slug":"blockserializationutils-lambda-ba18e5cb7301b95f93caf86de1c7bc2f","link":"#blockserializationutils-lambda-ba18e5cb7301b95f93caf86de1c7bc2f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_6c52f7f4cb6c8f798fbeda07f28bd1e5>","slug":"blockserializationutils-lambda-6c52f7f4cb6c8f798fbeda07f28bd1e5","link":"#blockserializationutils-lambda-6c52f7f4cb6c8f798fbeda07f28bd1e5","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_c4d2a6f1190fa0fb976b7655c0ee6dd2>","slug":"blockserializationutils-lambda-c4d2a6f1190fa0fb976b7655c0ee6dd2","link":"#blockserializationutils-lambda-c4d2a6f1190fa0fb976b7655c0ee6dd2","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_1ff600a0163b53a0c3aacd7cadc86776>","slug":"blockserializationutils-lambda-1ff600a0163b53a0c3aacd7cadc86776","link":"#blockserializationutils-lambda-1ff600a0163b53a0c3aacd7cadc86776","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_286029a71ffa1f14653bacf7c0697e4f>","slug":"blockserializationutils-lambda-286029a71ffa1f14653bacf7c0697e4f","link":"#blockserializationutils-lambda-286029a71ffa1f14653bacf7c0697e4f","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_9cd28e0f75edbdae525cf70c55f2db89>","slug":"blockserializationutils-lambda-9cd28e0f75edbdae525cf70c55f2db89","link":"#blockserializationutils-lambda-9cd28e0f75edbdae525cf70c55f2db89","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_e8b4f668f54201cd3709a54bdaf9c430>","slug":"blockserializationutils-lambda-e8b4f668f54201cd3709a54bdaf9c430","link":"#blockserializationutils-lambda-e8b4f668f54201cd3709a54bdaf9c430","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_69f4c8651dedfd511daccf8814a6e210>","slug":"blockserializationutils-lambda-69f4c8651dedfd511daccf8814a6e210","link":"#blockserializationutils-lambda-69f4c8651dedfd511daccf8814a6e210","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0db45da1a1eb846d9bfc1b0e1fa7e06e>","slug":"blockserializationutils-lambda-0db45da1a1eb846d9bfc1b0e1fa7e06e","link":"#blockserializationutils-lambda-0db45da1a1eb846d9bfc1b0e1fa7e06e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_aa672cd002332cdb0211e3d1501f8231>","slug":"blockserializationutils-lambda-aa672cd002332cdb0211e3d1501f8231","link":"#blockserializationutils-lambda-aa672cd002332cdb0211e3d1501f8231","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_8fe8d9c20f8b73440c650b54cdfc8b49>","slug":"blockserializationutils-lambda-8fe8d9c20f8b73440c650b54cdfc8b49","link":"#blockserializationutils-lambda-8fe8d9c20f8b73440c650b54cdfc8b49","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_829aafbfc7349c3b12733f2fcdb1b440>","slug":"blockserializationutils-lambda-829aafbfc7349c3b12733f2fcdb1b440","link":"#blockserializationutils-lambda-829aafbfc7349c3b12733f2fcdb1b440","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_7f72b5723c115bb2f4ac0b7c17989e02>","slug":"blockserializationutils-lambda-7f72b5723c115bb2f4ac0b7c17989e02","link":"#blockserializationutils-lambda-7f72b5723c115bb2f4ac0b7c17989e02","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_28bce0213573e981d8496bc59ef25a39>","slug":"blockserializationutils-lambda-28bce0213573e981d8496bc59ef25a39","link":"#blockserializationutils-lambda-28bce0213573e981d8496bc59ef25a39","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a7b5eff23447e9db48b1aca54c835b5e>","slug":"blockserializationutils-lambda-a7b5eff23447e9db48b1aca54c835b5e","link":"#blockserializationutils-lambda-a7b5eff23447e9db48b1aca54c835b5e","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_4b32584e5a89e19541299f9bfd397ca8>","slug":"blockserializationutils-lambda-4b32584e5a89e19541299f9bfd397ca8","link":"#blockserializationutils-lambda-4b32584e5a89e19541299f9bfd397ca8","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_d4498dd8704ab60c900bcedbd359c5ff>","slug":"blockserializationutils-lambda-d4498dd8704ab60c900bcedbd359c5ff","link":"#blockserializationutils-lambda-d4498dd8704ab60c900bcedbd359c5ff","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_cc0b8eeee0034935b8cc7bfa61369244>","slug":"blockserializationutils-lambda-cc0b8eeee0034935b8cc7bfa61369244","link":"#blockserializationutils-lambda-cc0b8eeee0034935b8cc7bfa61369244","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_50d6bdbae09ef7526f42e04802e3d9ce>","slug":"blockserializationutils-lambda-50d6bdbae09ef7526f42e04802e3d9ce","link":"#blockserializationutils-lambda-50d6bdbae09ef7526f42e04802e3d9ce","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_65d8bf2a47d12c2db3557340b5b507dd>","slug":"blockserializationutils-lambda-65d8bf2a47d12c2db3557340b5b507dd","link":"#blockserializationutils-lambda-65d8bf2a47d12c2db3557340b5b507dd","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_a74442faabc957bf146f5e75908b39f4>","slug":"blockserializationutils-lambda-a74442faabc957bf146f5e75908b39f4","link":"#blockserializationutils-lambda-a74442faabc957bf146f5e75908b39f4","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_0b380bf2d0055ddea198adcf459af685>","slug":"blockserializationutils-lambda-0b380bf2d0055ddea198adcf459af685","link":"#blockserializationutils-lambda-0b380bf2d0055ddea198adcf459af685","children":[]},{"level":3,"title":"BlockSerializationUtils::<lambda_93133e4ec108c7abdd10c4236b87cbf3>","slug":"blockserializationutils-lambda-93133e4ec108c7abdd10c4236b87cbf3","link":"#blockserializationutils-lambda-93133e4ec108c7abdd10c4236b87cbf3","children":[]},{"level":3,"title":"BlockLegacy::onRemove::__l8::<lambda_7800bbdc4cb23d1438ff620c65b45a41>","slug":"blocklegacy-onremove-l8-lambda-7800bbdc4cb23d1438ff620c65b45a41","link":"#blocklegacy-onremove-l8-lambda-7800bbdc4cb23d1438ff620c65b45a41","children":[]},{"level":3,"title":"BlockLegacy::DEPRECATEDcallOnGraphicsModeChanged::__l2::<lambda_18b6b7d71f34cb1c3cabd20e7fb6e537>","slug":"blocklegacy-deprecatedcallongraphicsmodechanged-l2-lambda-18b6b7d71f34cb1c3cabd20e7fb6e537","link":"#blocklegacy-deprecatedcallongraphicsmodechanged-l2-lambda-18b6b7d71f34cb1c3cabd20e7fb6e537","children":[]},{"level":3,"title":"Block::sendShearsDestoryClientEventAndReturnWhetherCancel::__l2::<lambda_9a411960c4f05cc7270251b3a7552d4c>","slug":"block-sendshearsdestoryclienteventandreturnwhethercancel-l2-lambda-9a411960c4f05cc7270251b3a7552d4c","link":"#block-sendshearsdestoryclienteventandreturnwhethercancel-l2-lambda-9a411960c4f05cc7270251b3a7552d4c","children":[]},{"level":3,"title":"Block::sendShearsDestoryEventAndReturnWhetherCancel::__l2::<lambda_7f82bfb32741affe50ae92294b4b4459>","slug":"block-sendshearsdestoryeventandreturnwhethercancel-l2-lambda-7f82bfb32741affe50ae92294b4b4459","link":"#block-sendshearsdestoryeventandreturnwhethercancel-l2-lambda-7f82bfb32741affe50ae92294b4b4459","children":[]},{"level":3,"title":"Block::sendShearsUseEventAndReturnWhetherCancel::__l2::<lambda_4aea5b65e5091f5d8b1b0bc41688f382>","slug":"block-sendshearsuseeventandreturnwhethercancel-l2-lambda-4aea5b65e5091f5d8b1b0bc41688f382","link":"#block-sendshearsuseeventandreturnwhethercancel-l2-lambda-4aea5b65e5091f5d8b1b0bc41688f382","children":[]},{"level":3,"title":"Block::use::__l28::<lambda_f0190cd8f8393a15d907c1657001ce97>","slug":"block-use-l28-lambda-f0190cd8f8393a15d907c1657001ce97","link":"#block-use-l28-lambda-f0190cd8f8393a15d907c1657001ce97","children":[]},{"level":3,"title":"Block::use::__l20::<lambda_d1e2ab651db4318ad3859856883ccd8a>","slug":"block-use-l20-lambda-d1e2ab651db4318ad3859856883ccd8a","link":"#block-use-l20-lambda-d1e2ab651db4318ad3859856883ccd8a","children":[]},{"level":3,"title":"Block::use::__l8::<lambda_7422f341742097701f32fd419aa24ddf>","slug":"block-use-l8-lambda-7422f341742097701f32fd419aa24ddf","link":"#block-use-l8-lambda-7422f341742097701f32fd419aa24ddf","children":[]},{"level":3,"title":"Block::tickInternal::__l8::<lambda_7d31a6c885ce46283e31ada2fbdac636>","slug":"block-tickinternal-l8-lambda-7d31a6c885ce46283e31ada2fbdac636","link":"#block-tickinternal-l8-lambda-7d31a6c885ce46283e31ada2fbdac636","children":[]},{"level":3,"title":"BedBlock::use::__l20::<lambda_0949a301607bf01f6b80e2a23970522f>","slug":"bedblock-use-l20-lambda-0949a301607bf01f6b80e2a23970522f","link":"#bedblock-use-l20-lambda-0949a301607bf01f6b80e2a23970522f","children":[]},{"level":3,"title":"BlueFireBlock","slug":"bluefireblock","link":"#bluefireblock","children":[]},{"level":3,"title":"BlueFireBlock_vtbl","slug":"bluefireblock-vtbl","link":"#bluefireblock-vtbl","children":[]},{"level":3,"title":"BlueIceBlock","slug":"blueiceblock","link":"#blueiceblock","children":[]},{"level":3,"title":"BlueIceBlock_vtbl","slug":"blueiceblock-vtbl","link":"#blueiceblock-vtbl","children":[]},{"level":3,"title":"BookshelfBlock","slug":"bookshelfblock","link":"#bookshelfblock","children":[]},{"level":3,"title":"BookshelfBlock_vtbl","slug":"bookshelfblock-vtbl","link":"#bookshelfblock-vtbl","children":[]},{"level":3,"title":"BorderBlock","slug":"borderblock","link":"#borderblock","children":[]},{"level":3,"title":"BorderBlock_vtbl","slug":"borderblock-vtbl","link":"#borderblock-vtbl","children":[]},{"level":3,"title":"BrewingStandBlock","slug":"brewingstandblock","link":"#brewingstandblock","children":[]},{"level":3,"title":"BrewingStandBlock_vtbl","slug":"brewingstandblock-vtbl","link":"#brewingstandblock-vtbl","children":[]},{"level":3,"title":"BubbleColumnBlock","slug":"bubblecolumnblock","link":"#bubblecolumnblock","children":[]},{"level":3,"title":"BubbleColumnBlock_vtbl","slug":"bubblecolumnblock-vtbl","link":"#bubblecolumnblock-vtbl","children":[]}],"git":{"updatedTime":1659743947000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1}]},"filePathRelative":"1.16.201/structure/B~1.md"}');export{b as comp,p as data};
