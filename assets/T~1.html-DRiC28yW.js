import{_ as s,c as n,o as a,d as e}from"./app-CsZ-F4rT.js";const l={},i=e(`<h1 id="t-1" tabindex="-1"><a class="header-anchor" href="#t-1"><span>T~1</span></a></h1><h3 id="takepicturecommand" tabindex="-1"><a class="header-anchor" href="#takepicturecommand"><span><code>TakePictureCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TakePictureCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Actor&gt; mCameraTargets;</span>
<span class="line">  CommandSelector&lt;Player&gt; mPlayerTargets;</span>
<span class="line">  CommandPosition mCameraSpawnPos;</span>
<span class="line">  bool mCameraPositionProvided;</span>
<span class="line">  bool mCameraTargetProvided;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="takepicturecommand-vtbl" tabindex="-1"><a class="header-anchor" href="#takepicturecommand-vtbl"><span><code>TakePictureCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TakePictureCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="takepicturecommand-execute-l2-lambda-cc590f793e7a5cf4bb497762ce148e7d" tabindex="-1"><a class="header-anchor" href="#takepicturecommand-execute-l2-lambda-cc590f793e7a5cf4bb497762ce148e7d"><span><code>TakePictureCommand::execute::__l2::&lt;lambda_cc590f793e7a5cf4bb497762ce148e7d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TakePictureCommand::execute::__l2::&lt;lambda_cc590f793e7a5cf4bb497762ce148e7d&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  TripodCamera *camera;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testservercommands" tabindex="-1"><a class="header-anchor" href="#testservercommands"><span><code>TestServerCommands</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TestServerCommands</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagcommand" tabindex="-1"><a class="header-anchor" href="#tagcommand"><span><code>TagCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TagCommand : Command</span>
<span class="line">{</span>
<span class="line">  _BYTE mAction[1];</span>
<span class="line">  __declspec(align(8)) WildcardCommandSelector&lt;Actor&gt; mSelector;</span>
<span class="line">  std::string mTagString;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#tagcommand-vtbl"><span><code>TagCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TagCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teleportcommand" tabindex="-1"><a class="header-anchor" href="#teleportcommand"><span><code>TeleportCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(2)) TeleportCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Actor&gt; mTargets;</span>
<span class="line">  CommandSelector&lt;Actor&gt; mDestinationEntity;</span>
<span class="line">  CommandPositionFloat mDestinationPos;</span>
<span class="line">  CommandSelector&lt;Actor&gt; mFacingEntity;</span>
<span class="line">  CommandPositionFloat mFacingPos;</span>
<span class="line">  RelativeFloat mYRot;</span>
<span class="line">  RelativeFloat mXRot;</span>
<span class="line">  TeleportCommand::FacingResult mHaveFacing;</span>
<span class="line">  bool mDestinationIsPosition;</span>
<span class="line">  bool mFacingIsPosition;</span>
<span class="line">  bool mCheckForBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teleportcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#teleportcommand-vtbl"><span><code>TeleportCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TeleportCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tellcommand" tabindex="-1"><a class="header-anchor" href="#tellcommand"><span><code>TellCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TellCommand : MessagingCommand</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  CommandMessage mMessage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tellcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#tellcommand-vtbl"><span><code>TellCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TellCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tellrawcommand" tabindex="-1"><a class="header-anchor" href="#tellrawcommand"><span><code>TellRawCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TellRawCommand : MessagingCommand</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  Json::Value mRawText;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tellrawcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#tellrawcommand-vtbl"><span><code>TellRawCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TellRawCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforblockcommand" tabindex="-1"><a class="header-anchor" href="#testforblockcommand"><span><code>TestForBlockCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TestForBlockCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandPosition mPosition;</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  int mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforblockcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#testforblockcommand-vtbl"><span><code>TestForBlockCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TestForBlockCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforblockscommand" tabindex="-1"><a class="header-anchor" href="#testforblockscommand"><span><code>TestForBlocksCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TestForBlocksCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandPosition mBegin;</span>
<span class="line">  CommandPosition mEnd;</span>
<span class="line">  CommandPosition mDestination;</span>
<span class="line">  TestForBlocksCommand::Mode mMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforblockscommand-vtbl" tabindex="-1"><a class="header-anchor" href="#testforblockscommand-vtbl"><span><code>TestForBlocksCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TestForBlocksCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforcommand" tabindex="-1"><a class="header-anchor" href="#testforcommand"><span><code>TestForCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TestForCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Actor&gt; mTargets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testforcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#testforcommand-vtbl"><span><code>TestForCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TestForCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareacommand" tabindex="-1"><a class="header-anchor" href="#tickingareacommand"><span><code>TickingAreaCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TickingAreaCommand : Command</span>
<span class="line">{</span>
<span class="line">  TickingAreaCommand::Mode mMode;</span>
<span class="line">  _BYTE mAddAreaType[4];</span>
<span class="line">  TickingAreaCommand::TargetDimensions mTargetDimensions;</span>
<span class="line">  CommandPosition mPosition;</span>
<span class="line">  CommandPosition mMax;</span>
<span class="line">  std::string mName;</span>
<span class="line">  int mRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareacommand-vtbl" tabindex="-1"><a class="header-anchor" href="#tickingareacommand-vtbl"><span><code>TickingAreaCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TickingAreaCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timecommand" tabindex="-1"><a class="header-anchor" href="#timecommand"><span><code>TimeCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TimeCommand : Command</span>
<span class="line">{</span>
<span class="line">  TimeCommand::Mode mMode;</span>
<span class="line">  TimeCommand::Query mQuery;</span>
<span class="line">  TimeCommand::TimeSpec mSpec;</span>
<span class="line">  int mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timecommand-vtbl" tabindex="-1"><a class="header-anchor" href="#timecommand-vtbl"><span><code>TimeCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TimeCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlecommand" tabindex="-1"><a class="header-anchor" href="#titlecommand"><span><code>TitleCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TitleCommand : MessagingCommand</span>
<span class="line">{</span>
<span class="line">  _BYTE mMode[4];</span>
<span class="line">  __declspec(align(8)) CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  CommandMessage mMessage;</span>
<span class="line">  int mFadeIn;</span>
<span class="line">  int mStay;</span>
<span class="line">  int mFadeOut;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlecommand-vtbl" tabindex="-1"><a class="header-anchor" href="#titlecommand-vtbl"><span><code>TitleCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TitleCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlerawcommand" tabindex="-1"><a class="header-anchor" href="#titlerawcommand"><span><code>TitleRawCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TitleRawCommand : MessagingCommand</span>
<span class="line">{</span>
<span class="line">  _BYTE mMode[4];</span>
<span class="line">  __declspec(align(8)) CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  Json::Value mMessage;</span>
<span class="line">  int mFadeIn;</span>
<span class="line">  int mStay;</span>
<span class="line">  int mFadeOut;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlerawcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#titlerawcommand-vtbl"><span><code>TitleRawCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TitleRawCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toggledownfallcommand" tabindex="-1"><a class="header-anchor" href="#toggledownfallcommand"><span><code>ToggleDownfallCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ToggleDownfallCommand : Command</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toggledownfallcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#toggledownfallcommand-vtbl"><span><code>ToggleDownfallCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ToggleDownfallCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareacommand-list-l15-lambda-ef527cf2db8145510630afcadcb9e9a5" tabindex="-1"><a class="header-anchor" href="#tickingareacommand-list-l15-lambda-ef527cf2db8145510630afcadcb9e9a5"><span><code>TickingAreaCommand::_list::__l15::&lt;lambda_ef527cf2db8145510630afcadcb9e9a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingAreaCommand::_list::__l15::&lt;lambda_ef527cf2db8145510630afcadcb9e9a5&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *listOfTickingAreas;</span>
<span class="line">  const TickingAreaCommand *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teleportcommand-execute-l32-lambda-d12bd4980707bc17e4326e7408eadb2e" tabindex="-1"><a class="header-anchor" href="#teleportcommand-execute-l32-lambda-d12bd4980707bc17e4326e7408eadb2e"><span><code>TeleportCommand::execute::__l32::&lt;lambda_d12bd4980707bc17e4326e7408eadb2e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TeleportCommand::execute::__l32::&lt;lambda_d12bd4980707bc17e4326e7408eadb2e&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *target;</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *destinationDimension;</span>
<span class="line">  Vec3 *destination;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagscomponent-idtype-leveltagsetidtype" tabindex="-1"><a class="header-anchor" href="#tagscomponent-idtype-leveltagsetidtype"><span><code>TagsComponent&lt;IDType&lt;LevelTagSetIDType&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TagsComponent&lt;IDType&lt;LevelTagSetIDType&gt; &gt; : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  IDType&lt;LevelTagSetIDType&gt; mTagSetID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tree-desc-s" tabindex="-1"><a class="header-anchor" href="#tree-desc-s"><span><code>tree_desc_s</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tree_desc_s</span>
<span class="line">{</span>
<span class="line">  ct_data_s *dyn_tree;</span>
<span class="line">  int max_code;</span>
<span class="line">  const static_tree_desc_s *stat_desc;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timestamp" tabindex="-1"><a class="header-anchor" href="#timestamp"><span><code>TimeStamp</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TimeStamp</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish" tabindex="-1"><a class="header-anchor" href="#tropicalfish"><span><code>TropicalFish</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish : WaterAnimal</span>
<span class="line">{</span>
<span class="line">  float mAnimationAmount;</span>
<span class="line">  float mAnimationAmountPrev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetgoaldefinition" tabindex="-1"><a class="header-anchor" href="#targetgoaldefinition"><span><code>TargetGoalDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TargetGoalDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  bool mAttackOwner;</span>
<span class="line">  bool mMustReach;</span>
<span class="line">  bool mMustSee;</span>
<span class="line">  float mDefaultFollowDistance;</span>
<span class="line">  float mForgetTargetTime;</span>
<span class="line">  float mPersistTargetTime;</span>
<span class="line">  std::vector&lt;MobDescriptor&gt; mTargetTypes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetgoaldefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#targetgoaldefinition-vtbl"><span><code>TargetGoalDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TargetGoalDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetgoal" tabindex="-1"><a class="header-anchor" href="#targetgoal"><span><code>TargetGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TargetGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  bool mAttackOwner;</span>
<span class="line">  bool mMustReach;</span>
<span class="line">  bool mGlobalMustSee;</span>
<span class="line">  bool mTargetMustSee;</span>
<span class="line">  int mTargetMustSeeForgetTicks;</span>
<span class="line">  bool mFilterFailure;</span>
<span class="line">  int mFilterFailureTicks;</span>
<span class="line">  int mGlobalMustSeeForgetTicks;</span>
<span class="line">  int mPersistTargetTicks;</span>
<span class="line">  int mReachCache;</span>
<span class="line">  int mReachCacheTime;</span>
<span class="line">  int mUnseenTicks;</span>
<span class="line">  float mWithinDefault;</span>
<span class="line">  std::vector&lt;MobDescriptor&gt; mTargetTypes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#targetgoal-vtbl"><span><code>TargetGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TargetGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="typeid-t-goal" tabindex="-1"><a class="header-anchor" href="#typeid-t-goal"><span><code>typeid_t&lt;Goal&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj typeid_t&lt;Goal&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 mID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turtle" tabindex="-1"><a class="header-anchor" href="#turtle"><span><code>Turtle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Turtle : Animal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testnode" tabindex="-1"><a class="header-anchor" href="#testnode"><span><code>TestNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TestNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  std::string mTestVal;</span>
<span class="line">  int mCnt;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testnode-vtbl" tabindex="-1"><a class="header-anchor" href="#testnode-vtbl"><span><code>TestNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TestNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testdefinition" tabindex="-1"><a class="header-anchor" href="#testdefinition"><span><code>TestDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TestDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mTestValue;</span>
<span class="line">  std::string mTestValueId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#testdefinition-vtbl"><span><code>TestDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TestDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription"><span><code>TierComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TierComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  DiggerType mDiggerType;</span>
<span class="line">  int mLevel;</span>
<span class="line">  bool mDestroySpecial;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription-vtbl"><span><code>TierComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TierComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponent" tabindex="-1"><a class="header-anchor" href="#tiercomponent"><span><code>TierComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) TierComponent</span>
<span class="line">{</span>
<span class="line">  DiggerType mDiggerType;</span>
<span class="line">  int mLevel;</span>
<span class="line">  bool mDestroySpecial;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownegg" tabindex="-1"><a class="header-anchor" href="#thrownegg"><span><code>ThrownEgg</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThrownEgg : Throwable</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownegg-vtbl" tabindex="-1"><a class="header-anchor" href="#thrownegg-vtbl"><span><code>ThrownEgg_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ThrownEgg_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  float (__fastcall *getThrowPower)(Throwable *this);</span>
<span class="line">  bool (__fastcall *stopUponGroundCollision)(Throwable *this);</span>
<span class="line">  float (__fastcall *getThrowUpAngleOffset)(Throwable *this);</span>
<span class="line">  float (__fastcall *getGravity)(Throwable *this);</span>
<span class="line">  ParticleType (__fastcall *getParticleType)(Throwable *this);</span>
<span class="line">  void (__fastcall *onHit)(Throwable *this, const HitResult *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownenderpearl" tabindex="-1"><a class="header-anchor" href="#thrownenderpearl"><span><code>ThrownEnderpearl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThrownEnderpearl : Throwable</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownenderpearl-vtbl" tabindex="-1"><a class="header-anchor" href="#thrownenderpearl-vtbl"><span><code>ThrownEnderpearl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ThrownEnderpearl_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  float (__fastcall *getThrowPower)(Throwable *this);</span>
<span class="line">  bool (__fastcall *stopUponGroundCollision)(Throwable *this);</span>
<span class="line">  float (__fastcall *getThrowUpAngleOffset)(Throwable *this);</span>
<span class="line">  float (__fastcall *getGravity)(Throwable *this);</span>
<span class="line">  ParticleType (__fastcall *getParticleType)(Throwable *this);</span>
<span class="line">  void (__fastcall *onHit)(Throwable *this, const HitResult *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownicebomb" tabindex="-1"><a class="header-anchor" href="#thrownicebomb"><span><code>ThrownIceBomb</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThrownIceBomb : Throwable</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thrownicebomb-vtbl" tabindex="-1"><a class="header-anchor" href="#thrownicebomb-vtbl"><span><code>ThrownIceBomb_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ThrownIceBomb_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  float (__fastcall *getThrowPower)(Throwable *this);</span>
<span class="line">  bool (__fastcall *stopUponGroundCollision)(Throwable *this);</span>
<span class="line">  float (__fastcall *getThrowUpAngleOffset)(Throwable *this);</span>
<span class="line">  float (__fastcall *getGravity)(Throwable *this);</span>
<span class="line">  ParticleType (__fastcall *getParticleType)(Throwable *this);</span>
<span class="line">  void (__fastcall *onHit)(Throwable *this, const HitResult *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeingredientcontainercontroller" tabindex="-1"><a class="header-anchor" href="#tradeingredientcontainercontroller"><span><code>TradeIngredientContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeIngredientContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">  ItemStack mItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeingredientcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#tradeingredientcontainercontroller-vtbl"><span><code>TradeIngredientContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TradeIngredientContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradecontainermanagercontroller-setupcallbacks-l2-lambda-6ead60eba553363bbbfc19e792c62b61" tabindex="-1"><a class="header-anchor" href="#tradecontainermanagercontroller-setupcallbacks-l2-lambda-6ead60eba553363bbbfc19e792c62b61"><span><code>TradeContainerManagerController::_setupCallbacks::__l2::&lt;lambda_6ead60eba553363bbbfc19e792c62b61&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeContainerManagerController::_setupCallbacks::__l2::&lt;lambda_6ead60eba553363bbbfc19e792c62b61&gt;</span>
<span class="line">{</span>
<span class="line">  TradeContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradecontainermanagercontroller-setupcallbacks-l2-lambda-a0152511d2602a805c722ce7437a7a50" tabindex="-1"><a class="header-anchor" href="#tradecontainermanagercontroller-setupcallbacks-l2-lambda-a0152511d2602a805c722ce7437a7a50"><span><code>TradeContainerManagerController::_setupCallbacks::__l2::&lt;lambda_a0152511d2602a805c722ce7437a7a50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeContainerManagerController::_setupCallbacks::__l2::&lt;lambda_a0152511d2602a805c722ce7437a7a50&gt;</span>
<span class="line">{</span>
<span class="line">  TradeContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trade2containermanagercontroller-setupcallbacks-l2-lambda-0ba538fec63dfff7a8c31c230ccd8490" tabindex="-1"><a class="header-anchor" href="#trade2containermanagercontroller-setupcallbacks-l2-lambda-0ba538fec63dfff7a8c31c230ccd8490"><span><code>Trade2ContainerManagerController::_setupCallbacks::__l2::&lt;lambda_0ba538fec63dfff7a8c31c230ccd8490&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Trade2ContainerManagerController::_setupCallbacks::__l2::&lt;lambda_0ba538fec63dfff7a8c31c230ccd8490&gt;</span>
<span class="line">{</span>
<span class="line">  Trade2ContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trade2containermanagercontroller-setupcallbacks-l2-lambda-500a8ea3460df322e01d98c97ed7c9b2" tabindex="-1"><a class="header-anchor" href="#trade2containermanagercontroller-setupcallbacks-l2-lambda-500a8ea3460df322e01d98c97ed7c9b2"><span><code>Trade2ContainerManagerController::_setupCallbacks::__l2::&lt;lambda_500a8ea3460df322e01d98c97ed7c9b2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Trade2ContainerManagerController::_setupCallbacks::__l2::&lt;lambda_500a8ea3460df322e01d98c97ed7c9b2&gt;</span>
<span class="line">{</span>
<span class="line">  Trade2ContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="torchblock" tabindex="-1"><a class="header-anchor" href="#torchblock"><span><code>TorchBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TorchBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="torchblock-vtbl" tabindex="-1"><a class="header-anchor" href="#torchblock-vtbl"><span><code>TorchBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TorchBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toolrecipes" tabindex="-1"><a class="header-anchor" href="#toolrecipes"><span><code>ToolRecipes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ToolRecipes</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentimpalerenchant" tabindex="-1"><a class="header-anchor" href="#tridentimpalerenchant"><span><code>TridentImpalerEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TridentImpalerEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentimpalerenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#tridentimpalerenchant-vtbl"><span><code>TridentImpalerEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TridentImpalerEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentriptideenchant" tabindex="-1"><a class="header-anchor" href="#tridentriptideenchant"><span><code>TridentRiptideEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TridentRiptideEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentriptideenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#tridentriptideenchant-vtbl"><span><code>TridentRiptideEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TridentRiptideEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentloyaltyenchant" tabindex="-1"><a class="header-anchor" href="#tridentloyaltyenchant"><span><code>TridentLoyaltyEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TridentLoyaltyEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentloyaltyenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#tridentloyaltyenchant-vtbl"><span><code>TridentLoyaltyEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TridentLoyaltyEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentchannelingenchant" tabindex="-1"><a class="header-anchor" href="#tridentchannelingenchant"><span><code>TridentChannelingEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TridentChannelingEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tridentchannelingenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#tridentchannelingenchant-vtbl"><span><code>TridentChannelingEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TridentChannelingEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tntblock" tabindex="-1"><a class="header-anchor" href="#tntblock"><span><code>TntBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TntBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tntblock-vtbl" tabindex="-1"><a class="header-anchor" href="#tntblock-vtbl"><span><code>TntBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TntBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="topsnowblockitem" tabindex="-1"><a class="header-anchor" href="#topsnowblockitem"><span><code>TopSnowBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TopSnowBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagscomponent-idtype-biometagsetidtype" tabindex="-1"><a class="header-anchor" href="#tagscomponent-idtype-biometagsetidtype"><span><code>TagsComponent&lt;IDType&lt;BiomeTagSetIDType&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TagsComponent&lt;IDType&lt;BiomeTagSetIDType&gt; &gt; : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  IDType&lt;BiomeTagSetIDType&gt; mTagSetID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transportercomponent" tabindex="-1"><a class="header-anchor" href="#transportercomponent"><span><code>TransporterComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TransporterComponent : BaseCircuitComponent</span>
<span class="line">{</span>
<span class="line">  int mNextStrength;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transportercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#transportercomponent-vtbl"><span><code>TransporterComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TransporterComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getStrength)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getDirection)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);</span>
<span class="line">  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);</span>
<span class="line">  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);</span>
<span class="line">  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);</span>
<span class="line">  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);</span>
<span class="line">  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="terrainburstreactioncomponent" tabindex="-1"><a class="header-anchor" href="#terrainburstreactioncomponent"><span><code>TerrainBurstReactionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TerrainBurstReactionComponent : LabTableReactionComponent</span>
<span class="line">{</span>
<span class="line">  int mData;</span>
<span class="line">  Vec3 mDims;</span>
<span class="line">  Vec3 mDirRange;</span>
<span class="line">  int mCount;</span>
<span class="line">  bool mDirOneWay;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="terrainburstreactioncomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#terrainburstreactioncomponent-vtbl"><span><code>TerrainBurstReactionComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TerrainBurstReactionComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LabTableReactionComponent)(LabTableReactionComponent *this);</span>
<span class="line">  void (__fastcall *_onStart)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">  void (__fastcall *_onTick)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">  void (__fastcall *_onEnd)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformcomponentdescription" tabindex="-1"><a class="header-anchor" href="#transformcomponentdescription"><span><code>TransformComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  TransformConditions mConditions;</span>
<span class="line">  std::string mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformcomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#transformcomponentdescription-vtbl"><span><code>TransformComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TransformComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tallgrass" tabindex="-1"><a class="header-anchor" href="#tallgrass"><span><code>TallGrass</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TallGrass : BushBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tallgrass-vtbl" tabindex="-1"><a class="header-anchor" href="#tallgrass-vtbl"><span><code>TallGrass_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TallGrass_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trapdoorblock" tabindex="-1"><a class="header-anchor" href="#trapdoorblock"><span><code>TrapDoorBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrapDoorBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trapdoorblock-vtbl" tabindex="-1"><a class="header-anchor" href="#trapdoorblock-vtbl"><span><code>TrapDoorBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TrapDoorBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thinfenceblock" tabindex="-1"><a class="header-anchor" href="#thinfenceblock"><span><code>ThinFenceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ThinFenceBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  const bool mDropsResources;</span>
<span class="line">  const bool mCanBeUsedInCommands;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="thinfenceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#thinfenceblock-vtbl"><span><code>ThinFenceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ThinFenceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripwirehookblock" tabindex="-1"><a class="header-anchor" href="#tripwirehookblock"><span><code>TripWireHookBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TripWireHookBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripwirehookblock-vtbl" tabindex="-1"><a class="header-anchor" href="#tripwirehookblock-vtbl"><span><code>TripWireHookBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TripWireHookBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turtleeggblock" tabindex="-1"><a class="header-anchor" href="#turtleeggblock"><span><code>TurtleEggBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TurtleEggBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  float mShapeOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turtleeggblock-vtbl" tabindex="-1"><a class="header-anchor" href="#turtleeggblock-vtbl"><span><code>TurtleEggBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TurtleEggBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetblock" tabindex="-1"><a class="header-anchor" href="#targetblock"><span><code>TargetBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TargetBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetblock-vtbl" tabindex="-1"><a class="header-anchor" href="#targetblock-vtbl"><span><code>TargetBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TargetBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turtleeggblock-destroyegg-l19-lambda-269ba72276ec6875a2f570f4af2d700d" tabindex="-1"><a class="header-anchor" href="#turtleeggblock-destroyegg-l19-lambda-269ba72276ec6875a2f570f4af2d700d"><span><code>TurtleEggBlock::_destroyEgg::__l19::&lt;lambda_269ba72276ec6875a2f570f4af2d700d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TurtleEggBlock::_destroyEgg::__l19::&lt;lambda_269ba72276ec6875a2f570f4af2d700d&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *entity;</span>
<span class="line">  const Block *block;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripwireblock-entityinside-l11-lambda-a7ce562379b7c702df77d878f0eca511" tabindex="-1"><a class="header-anchor" href="#tripwireblock-entityinside-l11-lambda-a7ce562379b7c702df77d878f0eca511"><span><code>TripWireBlock::entityInside::__l11::&lt;lambda_a7ce562379b7c702df77d878f0eca511&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TripWireBlock::entityInside::__l11::&lt;lambda_a7ce562379b7c702df77d878f0eca511&gt;</span>
<span class="line">{</span>
<span class="line">  Actor *entity;</span>
<span class="line">  const TripWireBlock *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams"><span><code>TreeHelper::TreeParams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj TreeHelper::TreeParams</span>
<span class="line">{</span>
<span class="line">  int mNumBaseClusters;</span>
<span class="line">  int mClusterRadius;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mValidBaseBlocks;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mBaseMayReplace;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mMayGrowOn;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mMayReplace;</span>
<span class="line">  std::vector&lt;BlockDescriptor&gt; mMayGrowThrough;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration"><span><code>TreeHelper::AttachableDecoration</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration</span>
<span class="line">{</span>
<span class="line">  ChanceInformation mDecorationChance;</span>
<span class="line">  BlockDescriptor mDecorationBlock;</span>
<span class="line">  int mNumSteps;</span>
<span class="line">  TreeHelper::AttachableDecoration::GrowthDirection mDirection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transactionalworldblocktarget" tabindex="-1"><a class="header-anchor" href="#transactionalworldblocktarget"><span><code>TransactionalWorldBlockTarget</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransactionalWorldBlockTarget : IBlockWorldGenAPI</span>
<span class="line">{</span>
<span class="line">  WorldChangeTransaction mTransaction;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transactionalworldblocktarget-vtbl" tabindex="-1"><a class="header-anchor" href="#transactionalworldblocktarget-vtbl"><span><code>TransactionalWorldBlockTarget_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TransactionalWorldBlockTarget_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IBlockWorldGenAPI)(IBlockWorldGenAPI *this);</span>
<span class="line">  const Block *(__fastcall *getBlock)(IBlockWorldGenAPI *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasBiomeTag)(IBlockWorldGenAPI *this, unsigned __int64, const BlockPos *);</span>
<span class="line">  bool (__fastcall *setBlock)(IBlockWorldGenAPI *this, const BlockPos *, const Block *, int);</span>
<span class="line">  bool (__fastcall *apply)(IBlockWorldGenAPI *this);</span>
<span class="line">  bool (__fastcall *placeStructure)(IBlockWorldGenAPI *this, const BlockPos *, StructureTemplate *, StructureSettings *);</span>
<span class="line">  bool (__fastcall *mayPlace)(IBlockWorldGenAPI *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *canSurvive)(IBlockWorldGenAPI *this, const BlockPos *, const Block *);</span>
<span class="line">  __int16 (__fastcall *getMaxHeight)(IBlockWorldGenAPI *this);</span>
<span class="line">  __int16 (__fastcall *getMinHeight)(IBlockWorldGenAPI *this);</span>
<span class="line">  bool (__fastcall *shimPlaceForOldFeatures)(IBlockWorldGenAPI *this, const Feature *, const BlockPos *, Random *);</span>
<span class="line">  __int16 (__fastcall *getHeightmap)(IBlockWorldGenAPI *this, int, int);</span>
<span class="line">  bool (__fastcall *isLegacyLevel)(IBlockWorldGenAPI *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="templatestructurepiece" tabindex="-1"><a class="header-anchor" href="#templatestructurepiece"><span><code>TemplateStructurePiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TemplateStructurePiece : StructurePiece</span>
<span class="line">{</span>
<span class="line">  LegacyStructureTemplate *mTemplate;</span>
<span class="line">  LegacyStructureSettings mSettings;</span>
<span class="line">  BlockPos mTemplatePosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="templatestructurepiece-vtbl" tabindex="-1"><a class="header-anchor" href="#templatestructurepiece-vtbl"><span><code>TemplateStructurePiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TemplateStructurePiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *_handleDataMarker)(TemplateStructurePiece *this, const std::string *, const BlockPos *, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareaview-tick-l24-lambda-e93ece0c982b1407c5f6ea0f18f0084f" tabindex="-1"><a class="header-anchor" href="#tickingareaview-tick-l24-lambda-e93ece0c982b1407c5f6ea0f18f0084f"><span><code>TickingAreaView::tick::__l24::&lt;lambda_e93ece0c982b1407c5f6ea0f18f0084f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingAreaView::tick::__l24::&lt;lambda_e93ece0c982b1407c5f6ea0f18f0084f&gt;</span>
<span class="line">{</span>
<span class="line">  const Pos *minBounds;</span>
<span class="line">  const bool *isCircleArea;</span>
<span class="line">  const GridArea&lt;std::shared_ptr&lt;LevelChunk&gt; &gt; *view;</span>
<span class="line">  TickingAreaView *const __this;</span>
<span class="line">  const Tick *currentTick;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">  Level *level;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingarea-ctor-l2-lambda-ecbdd7020b8c77fb7806c64c03108081" tabindex="-1"><a class="header-anchor" href="#tickingarea-ctor-l2-lambda-ecbdd7020b8c77fb7806c64c03108081"><span><code>TickingArea::{ctor}::__l2::&lt;lambda_ecbdd7020b8c77fb7806c64c03108081&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingArea::{ctor}::__l2::&lt;lambda_ecbdd7020b8c77fb7806c64c03108081&gt;</span>
<span class="line">{</span>
<span class="line">  Dimension *dimension;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagxhr-cookie" tabindex="-1"><a class="header-anchor" href="#tagxhr-cookie"><span><code>tagXHR_COOKIE</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) tagXHR_COOKIE</span>
<span class="line">{</span>
<span class="line">  wchar_t *pwszUrl;</span>
<span class="line">  wchar_t *pwszName;</span>
<span class="line">  wchar_t *pwszValue;</span>
<span class="line">  wchar_t *pwszP3PPolicy;</span>
<span class="line">  _FILETIME ftExpires;</span>
<span class="line">  unsigned int dwFlags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taghelper" tabindex="-1"><a class="header-anchor" href="#taghelper"><span><code>TagHelper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TagHelper</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagrpc-call-attributes-v3-w" tabindex="-1"><a class="header-anchor" href="#tagrpc-call-attributes-v3-w"><span><code>tagRPC_CALL_ATTRIBUTES_V3_W</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tagRPC_CALL_ATTRIBUTES_V3_W</span>
<span class="line">{</span>
<span class="line">  unsigned int Version;</span>
<span class="line">  unsigned int Flags;</span>
<span class="line">  unsigned int ServerPrincipalNameBufferLength;</span>
<span class="line">  unsigned __int16 *ServerPrincipalName;</span>
<span class="line">  unsigned int ClientPrincipalNameBufferLength;</span>
<span class="line">  unsigned __int16 *ClientPrincipalName;</span>
<span class="line">  unsigned int AuthenticationLevel;</span>
<span class="line">  unsigned int AuthenticationService;</span>
<span class="line">  int NullSession;</span>
<span class="line">  int KernelModeCaller;</span>
<span class="line">  unsigned int ProtocolSequence;</span>
<span class="line">  tagRpcCallClientLocality IsClientLocal;</span>
<span class="line">  void *ClientPID;</span>
<span class="line">  unsigned int CallStatus;</span>
<span class="line">  tagRpcCallType CallType;</span>
<span class="line">  _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;</span>
<span class="line">  unsigned __int16 OpNum;</span>
<span class="line">  _GUID InterfaceUuid;</span>
<span class="line">  unsigned int ClientIdentifierBufferLength;</span>
<span class="line">  unsigned __int8 *ClientIdentifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagserverinformation" tabindex="-1"><a class="header-anchor" href="#tagserverinformation"><span><code>tagServerInformation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tagServerInformation</span>
<span class="line">{</span>
<span class="line">  unsigned int dwServerPid;</span>
<span class="line">  unsigned int dwServerTid;</span>
<span class="line">  unsigned __int64 ui64ServerAddress;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagrpc-call-attributes-v3-a" tabindex="-1"><a class="header-anchor" href="#tagrpc-call-attributes-v3-a"><span><code>tagRPC_CALL_ATTRIBUTES_V3_A</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tagRPC_CALL_ATTRIBUTES_V3_A</span>
<span class="line">{</span>
<span class="line">  unsigned int Version;</span>
<span class="line">  unsigned int Flags;</span>
<span class="line">  unsigned int ServerPrincipalNameBufferLength;</span>
<span class="line">  unsigned __int8 *ServerPrincipalName;</span>
<span class="line">  unsigned int ClientPrincipalNameBufferLength;</span>
<span class="line">  unsigned __int8 *ClientPrincipalName;</span>
<span class="line">  unsigned int AuthenticationLevel;</span>
<span class="line">  unsigned int AuthenticationService;</span>
<span class="line">  int NullSession;</span>
<span class="line">  int KernelModeCaller;</span>
<span class="line">  unsigned int ProtocolSequence;</span>
<span class="line">  unsigned int IsClientLocal;</span>
<span class="line">  void *ClientPID;</span>
<span class="line">  unsigned int CallStatus;</span>
<span class="line">  tagRpcCallType CallType;</span>
<span class="line">  _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;</span>
<span class="line">  unsigned __int16 OpNum;</span>
<span class="line">  _GUID InterfaceUuid;</span>
<span class="line">  unsigned int ClientIdentifierBufferLength;</span>
<span class="line">  unsigned __int8 *ClientIdentifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tpatchupdateinfo" tabindex="-1"><a class="header-anchor" href="#tpatchupdateinfo"><span><code>tPatchUpdateInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tPatchUpdateInfo</span>
<span class="line">{</span>
<span class="line">  std::string patchVer;</span>
<span class="line">  std::string patchUrl;</span>
<span class="line">  std::string patchMD5;</span>
<span class="line">  int patchSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transferhandler-notifypythonupdatestate-l2-lambda-afd70fad5bd69b087231a1a613a8b71d" tabindex="-1"><a class="header-anchor" href="#transferhandler-notifypythonupdatestate-l2-lambda-afd70fad5bd69b087231a1a613a8b71d"><span><code>TransferHandler::notifyPythonUpdateState::__l2::&lt;lambda_afd70fad5bd69b087231a1a613a8b71d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransferHandler::notifyPythonUpdateState::__l2::&lt;lambda_afd70fad5bd69b087231a1a613a8b71d&gt;</span>
<span class="line">{</span>
<span class="line">  TransferHandler *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trace-t" tabindex="-1"><a class="header-anchor" href="#trace-t"><span><code>trace_t</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct trace_t</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 size;</span>
<span class="line">  traceback_t *traceback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription-buildschema-l2-lambda-bcdfe114008b2394d9ad807c812ceba2" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription-buildschema-l2-lambda-bcdfe114008b2394d9ad807c812ceba2"><span><code>TierComponentDescription::buildSchema::__l2::&lt;lambda_bcdfe114008b2394d9ad807c812ceba2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TierComponentDescription::buildSchema::__l2::&lt;lambda_bcdfe114008b2394d9ad807c812ceba2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription-buildschema-l2-lambda-1fb0a0a39752f2be29816afd76f0350d" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription-buildschema-l2-lambda-1fb0a0a39752f2be29816afd76f0350d"><span><code>TierComponentDescription::buildSchema::__l2::&lt;lambda_1fb0a0a39752f2be29816afd76f0350d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TierComponentDescription::buildSchema::__l2::&lt;lambda_1fb0a0a39752f2be29816afd76f0350d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription-buildschema-l2-lambda-10780ac71d4569ba6b03abaf9d720665" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription-buildschema-l2-lambda-10780ac71d4569ba6b03abaf9d720665"><span><code>TierComponentDescription::buildSchema::__l2::&lt;lambda_10780ac71d4569ba6b03abaf9d720665&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TierComponentDescription::buildSchema::__l2::&lt;lambda_10780ac71d4569ba6b03abaf9d720665&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tiercomponentdescription-buildschema-l2-lambda-ee1ce6d16b39680e7effbc4cb509458e" tabindex="-1"><a class="header-anchor" href="#tiercomponentdescription-buildschema-l2-lambda-ee1ce6d16b39680e7effbc4cb509458e"><span><code>TierComponentDescription::buildSchema::__l2::&lt;lambda_ee1ce6d16b39680e7effbc4cb509458e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TierComponentDescription::buildSchema::__l2::&lt;lambda_ee1ce6d16b39680e7effbc4cb509458e&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformcomponentdescription-buildschema-l2-lambda-5568880fee4ed2a7481f54241155db51" tabindex="-1"><a class="header-anchor" href="#transformcomponentdescription-buildschema-l2-lambda-5568880fee4ed2a7481f54241155db51"><span><code>TransformComponentDescription::buildSchema::__l2::&lt;lambda_5568880fee4ed2a7481f54241155db51&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformComponentDescription::buildSchema::__l2::&lt;lambda_5568880fee4ed2a7481f54241155db51&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformcomponentdescription-buildschema-l2-lambda-05bff39358757891f8a72a27d6c6b4b5" tabindex="-1"><a class="header-anchor" href="#transformcomponentdescription-buildschema-l2-lambda-05bff39358757891f8a72a27d6c6b4b5"><span><code>TransformComponentDescription::buildSchema::__l2::&lt;lambda_05bff39358757891f8a72a27d6c6b4b5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformComponentDescription::buildSchema::__l2::&lt;lambda_05bff39358757891f8a72a27d6c6b4b5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformcomponentdescription-buildschema-l2-lambda-ec76577b05acff01e13b0423b61a640f" tabindex="-1"><a class="header-anchor" href="#transformcomponentdescription-buildschema-l2-lambda-ec76577b05acff01e13b0423b61a640f"><span><code>TransformComponentDescription::buildSchema::__l2::&lt;lambda_ec76577b05acff01e13b0423b61a640f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformComponentDescription::buildSchema::__l2::&lt;lambda_ec76577b05acff01e13b0423b61a640f&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchcamerajoystickcontrol" tabindex="-1"><a class="header-anchor" href="#touchcamerajoystickcontrol"><span><code>TouchCameraJoystickControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TouchCameraJoystickControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mCondition;</span>
<span class="line">  unsigned int mButtonId;</span>
<span class="line">  unsigned int mJumpButtonId;</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  mce::Color mPressedColor;</span>
<span class="line">  mce::Color mReleasedColor;</span>
<span class="line">  int mUx;</span>
<span class="line">  int mUv;</span>
<span class="line">  int mUvWidth;</span>
<span class="line">  int mUvHeight;</span>
<span class="line">  int mUx1;</span>
<span class="line">  int mUv1;</span>
<span class="line">  int mUvWidth1;</span>
<span class="line">  int mUvHeight1;</span>
<span class="line">  bool mPassThrough;</span>
<span class="line">  bool mPromiscuous;</span>
<span class="line">  int mTouchStateRequirement;</span>
<span class="line">  int mTicksSinceFirstPress;</span>
<span class="line">  bool mWaitingForSecondPress;</span>
<span class="line">  std::string mName;</span>
<span class="line">  int mTouchId;</span>
<span class="line">  float mSensitivityX;</span>
<span class="line">  float mSensitivityY;</span>
<span class="line">  float mRenderPosX;</span>
<span class="line">  float mRenderPosY;</span>
<span class="line">  float mBeginPosX;</span>
<span class="line">  float mBeginPosY;</span>
<span class="line">  float mLastPosX;</span>
<span class="line">  float mLastPosY;</span>
<span class="line">  int mJumping;</span>
<span class="line">  float mGlyphScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchcamerajoystickcontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchcamerajoystickcontrol-vtbl"><span><code>TouchCameraJoystickControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchCameraJoystickControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphbuttoncontrol" tabindex="-1"><a class="header-anchor" href="#touchglyphbuttoncontrol"><span><code>TouchGlyphButtonControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TouchGlyphButtonControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mCondition;</span>
<span class="line">  unsigned int mButtonId;</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  mce::Color mPressedColor;</span>
<span class="line">  mce::Color mReleasedColor;</span>
<span class="line">  int mUx;</span>
<span class="line">  int mUv;</span>
<span class="line">  int mUvWidth;</span>
<span class="line">  int mUvHeight;</span>
<span class="line">  bool mPassThrough;</span>
<span class="line">  bool mPromiscuous;</span>
<span class="line">  int mTouchStateRequirement;</span>
<span class="line">  int mTicksSinceFirstPress;</span>
<span class="line">  bool mWaitingForSecondPress;</span>
<span class="line">  std::string mName;</span>
<span class="line">  float mGlyphScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphbuttoncontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchglyphbuttoncontrol-vtbl"><span><code>TouchGlyphButtonControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchGlyphButtonControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphradiobuttoncontrol" tabindex="-1"><a class="header-anchor" href="#touchglyphradiobuttoncontrol"><span><code>TouchGlyphRadioButtonControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TouchGlyphRadioButtonControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mCondition;</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mStateCondition;</span>
<span class="line">  unsigned int mButtonId;</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  mce::Color mPressedColor;</span>
<span class="line">  mce::Color mReleasedColor;</span>
<span class="line">  int mUx;</span>
<span class="line">  int mUv;</span>
<span class="line">  int mUvWidth;</span>
<span class="line">  int mUvHeight;</span>
<span class="line">  bool mPassThrough;</span>
<span class="line">  bool mPromiscuous;</span>
<span class="line">  int mTouchStateRequirement;</span>
<span class="line">  int mTicksSinceFirstPress;</span>
<span class="line">  bool mWaitingForSecondPress;</span>
<span class="line">  std::string mName;</span>
<span class="line">  float mGlyphScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphradiobuttoncontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchglyphradiobuttoncontrol-vtbl"><span><code>TouchGlyphRadioButtonControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchGlyphRadioButtonControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchjoystickcontrol" tabindex="-1"><a class="header-anchor" href="#touchjoystickcontrol"><span><code>TouchJoystickControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TouchJoystickControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mCondition;</span>
<span class="line">  unsigned int mButtonUpId;</span>
<span class="line">  unsigned int mButtonDownId;</span>
<span class="line">  unsigned int mButtonLeftId;</span>
<span class="line">  unsigned int mButtonRightId;</span>
<span class="line">  bool mButtonStateUp;</span>
<span class="line">  bool mButtonStateDown;</span>
<span class="line">  bool mButtonStateLeft;</span>
<span class="line">  bool mButtonStateRight;</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  mce::Color mPressedColor;</span>
<span class="line">  mce::Color mReleasedColor;</span>
<span class="line">  int mUx;</span>
<span class="line">  int mUv;</span>
<span class="line">  int mUvWidth;</span>
<span class="line">  int mUvHeight;</span>
<span class="line">  int mUx1;</span>
<span class="line">  int mUv1;</span>
<span class="line">  int mUvWidth1;</span>
<span class="line">  int mUvHeight1;</span>
<span class="line">  bool mPassThrough;</span>
<span class="line">  bool mPromiscuous;</span>
<span class="line">  int mTouchStateRequirement;</span>
<span class="line">  int mTicksSinceFirstPress;</span>
<span class="line">  bool mWaitingForSecondPress;</span>
<span class="line">  std::string mName;</span>
<span class="line">  int mTouchId;</span>
<span class="line">  bool mCaptured;</span>
<span class="line">  float mGlyphScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchjoystickcontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchjoystickcontrol-vtbl"><span><code>TouchJoystickControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchJoystickControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphbuttonexcontrol" tabindex="-1"><a class="header-anchor" href="#touchglyphbuttonexcontrol"><span><code>TouchGlyphButtonEXControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TouchGlyphButtonEXControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; mCondition;</span>
<span class="line">  unsigned int mButtonId;</span>
<span class="line">  unsigned int mButtonId2;</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  mce::Color mPressedColor;</span>
<span class="line">  mce::Color mReleasedColor;</span>
<span class="line">  int mUx;</span>
<span class="line">  int mUv;</span>
<span class="line">  int mUvWidth;</span>
<span class="line">  int mUvHeight;</span>
<span class="line">  bool mPassThrough;</span>
<span class="line">  bool mPromiscuous;</span>
<span class="line">  int mTouchStateRequirement;</span>
<span class="line">  int mTicksSinceFirstPress;</span>
<span class="line">  bool mWaitingHold;</span>
<span class="line">  bool mHolding;</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mName2;</span>
<span class="line">  float mGlyphScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchglyphbuttonexcontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchglyphbuttonexcontrol-vtbl"><span><code>TouchGlyphButtonEXControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchGlyphButtonEXControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theendlighttextureimagebuilder" tabindex="-1"><a class="header-anchor" href="#theendlighttextureimagebuilder"><span><code>TheEndLightTextureImageBuilder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TheEndLightTextureImageBuilder : BaseLightTextureImageBuilder</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theendlighttextureimagebuilder-vtbl" tabindex="-1"><a class="header-anchor" href="#theendlighttextureimagebuilder-vtbl"><span><code>TheEndLightTextureImageBuilder_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TheEndLightTextureImageBuilder_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseLightTextureImageBuilder)(BaseLightTextureImageBuilder *this);</span>
<span class="line">  void (__fastcall *init)(BaseLightTextureImageBuilder *this, Dimension *);</span>
<span class="line">  bool (__fastcall *buildImage)(BaseLightTextureImageBuilder *this, const BaseLightData *, mce::Image *, unsigned int, float, float, bool);</span>
<span class="line">  void (__fastcall *getModifiedBlockBrightnessColor)(BaseLightTextureImageBuilder *this, const BlockPos *, const Block *, const Brightness *, BrightnessPair *);</span>
<span class="line">  std::unique_ptr&lt;BaseLightData&gt; *(__fastcall *createBaseLightTextureData)(BaseLightTextureImageBuilder *this, std::unique_ptr&lt;BaseLightData&gt; *result, IClientInstance *, const BaseLightData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theenddimension" tabindex="-1"><a class="header-anchor" href="#theenddimension"><span><code>TheEndDimension</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TheEndDimension : Dimension</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;EndDragonFight&gt; mDragonFight;</span>
<span class="line">  bool mHasInitDragon;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeablesystem" tabindex="-1"><a class="header-anchor" href="#tradeablesystem"><span><code>TradeableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeablesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#tradeablesystem-vtbl"><span><code>TradeableSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TradeableSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trailsystem" tabindex="-1"><a class="header-anchor" href="#trailsystem"><span><code>TrailSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrailSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trailsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#trailsystem-vtbl"><span><code>TrailSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TrailSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformationsystem" tabindex="-1"><a class="header-anchor" href="#transformationsystem"><span><code>TransformationSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformationSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformationsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#transformationsystem-vtbl"><span><code>TransformationSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TransformationSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tempeptr-villager" tabindex="-1"><a class="header-anchor" href="#tempeptr-villager"><span><code>TempEPtr&lt;Villager&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TempEPtr&lt;Villager&gt; : _TickPtr</span>
<span class="line">{</span>
<span class="line">  Villager *tmp;</span>
<span class="line">  ActorUniqueID mEntityId;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">  bool mHasLocked;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tempeptr-villager-vtbl" tabindex="-1"><a class="header-anchor" href="#tempeptr-villager-vtbl"><span><code>TempEPtr&lt;Villager&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TempEPtr&lt;Villager&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *invalidate)(_TickPtr *this);</span>
<span class="line">  void (__fastcall *~_TickPtr)(_TickPtr *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tempeptr-irongolem" tabindex="-1"><a class="header-anchor" href="#tempeptr-irongolem"><span><code>TempEPtr&lt;IronGolem&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TempEPtr&lt;IronGolem&gt; : _TickPtr</span>
<span class="line">{</span>
<span class="line">  IronGolem *tmp;</span>
<span class="line">  ActorUniqueID mEntityId;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">  bool mHasLocked;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tempeptr-irongolem-vtbl" tabindex="-1"><a class="header-anchor" href="#tempeptr-irongolem-vtbl"><span><code>TempEPtr&lt;IronGolem&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TempEPtr&lt;IronGolem&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *invalidate)(_TickPtr *this);</span>
<span class="line">  void (__fastcall *~_TickPtr)(_TickPtr *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="takeflowergoal" tabindex="-1"><a class="header-anchor" href="#takeflowergoal"><span><code>TakeFlowerGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TakeFlowerGoal : Goal</span>
<span class="line">{</span>
<span class="line">  TempEPtr&lt;IronGolem&gt; mGolem;</span>
<span class="line">  int mPickupTick;</span>
<span class="line">  bool mTakeFlower;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="takeflowergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#takeflowergoal-vtbl"><span><code>TakeFlowerGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TakeFlowerGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetwhenpushedgoal" tabindex="-1"><a class="header-anchor" href="#targetwhenpushedgoal"><span><code>TargetWhenPushedGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TargetWhenPushedGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mSelf;</span>
<span class="line">  float mPercentChance;</span>
<span class="line">  const std::vector&lt;MobDescriptor&gt; mTargetTypes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="targetwhenpushedgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#targetwhenpushedgoal-vtbl"><span><code>TargetWhenPushedGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TargetWhenPushedGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="temptgoal" tabindex="-1"><a class="header-anchor" href="#temptgoal"><span><code>TemptGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TemptGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mSpeed;</span>
<span class="line">  TempEPtr&lt;Player&gt; mPlayer;</span>
<span class="line">  Vec3 mOldPlayerPosition;</span>
<span class="line">  Vec2 mOldPlayerRotation;</span>
<span class="line">  bool mCanGetScared;</span>
<span class="line">  int mCalmDown;</span>
<span class="line">  bool mIsRunning;</span>
<span class="line">  bool mOldAvoidWater;</span>
<span class="line">  bool mCanTemptWhileRidden;</span>
<span class="line">  int mPathfinderWaitTicks;</span>
<span class="line">  float mTemptDistance;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mItems;</span>
<span class="line">  bool mCanTemptVertically;</span>
<span class="line">  LevelSoundEvent mSoundEvent;</span>
<span class="line">  FloatRange mSoundIntervalRange;</span>
<span class="line">  Tick mNextSoundEventTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="temptgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#temptgoal-vtbl"><span><code>TemptGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TemptGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeinterestgoal" tabindex="-1"><a class="header-anchor" href="#tradeinterestgoal"><span><code>TradeInterestGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeInterestGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  TempEPtr&lt;Player&gt; mPlayer;</span>
<span class="line">  bool mIsRunning;</span>
<span class="line">  bool mIsOnlyTargetItemFound;</span>
<span class="line">  float mInterestDistance;</span>
<span class="line">  unsigned __int64 mCurrentIndex;</span>
<span class="line">  ItemStack mCarriedItem;</span>
<span class="line">  ItemStack mPlayerItem;</span>
<span class="line">  Tick mCarriedItemSwitchTimer;</span>
<span class="line">  Tick mRemoveItemTimer;</span>
<span class="line">  Tick mInterestTimer;</span>
<span class="line">  Tick mInterestCooldown;</span>
<span class="line">  const Tick mInterestTimeMax;</span>
<span class="line">  const Tick mInterestTimeMaxHalf;</span>
<span class="line">  const Tick mRemoveTimeMax;</span>
<span class="line">  const Tick mCarriedSwitchMax;</span>
<span class="line">  const Tick mInterestCooldownMax;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradeinterestgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#tradeinterestgoal-vtbl"><span><code>TradeInterestGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TradeInterestGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradewithplayergoal" tabindex="-1"><a class="header-anchor" href="#tradewithplayergoal"><span><code>TradeWithPlayerGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TradeWithPlayerGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tradewithplayergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#tradewithplayergoal-vtbl"><span><code>TradeWithPlayerGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TradeWithPlayerGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theendgenerator-threaddata" tabindex="-1"><a class="header-anchor" href="#theendgenerator-threaddata"><span><code>TheEndGenerator::ThreadData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TheEndGenerator::ThreadData</span>
<span class="line">{</span>
<span class="line">  std::array&lt;Block const *,32768&gt; blockBuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theendgenerator" tabindex="-1"><a class="header-anchor" href="#theendgenerator"><span><code>TheEndGenerator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TheEndGenerator : ChunkSource, WorldGenerator</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; mLPerlinNoise1;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; mLPerlinNoise2;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; mPerlinNoise1;</span>
<span class="line">  std::unique_ptr&lt;SimplexNoise&gt; mIslandNoise;</span>
<span class="line">  std::unique_ptr&lt;PerlinSimplexNoise&gt; mMaterialAdjNoise;</span>
<span class="line">  Bedrock::Threading::InstancedThreadLocal&lt;TheEndGenerator::ThreadData,std::allocator&lt;TheEndGenerator::ThreadData&gt; &gt; generatorHelpersPool;</span>
<span class="line">  EndCityFeature mEndCityFeature;</span>
<span class="line">  std::shared_mutex mTryGetHeightMutex;</span>
<span class="line">  std::unordered_map&lt;BlockPos,int&gt; mHeightCache;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theendgenerator-vtbl" tabindex="-1"><a class="header-anchor" href="#theendgenerator-vtbl"><span><code>TheEndGenerator_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TheEndGenerator_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkSource)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *shutdown)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isShutdownDone)(ChunkSource *this);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, Random *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);</span>
<span class="line">  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);</span>
<span class="line">  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr&lt;LevelChunk,LevelChunkFinalDeleter&gt;);</span>
<span class="line">  void (__fastcall *compact)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *flushPendingWrites)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getChunkMap)(ChunkSource *this);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getStorage)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *clearDeletedEntities)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set&lt;AutomaticID&lt;Dimension,int&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *canCreateViews)(ChunkSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="twistingvinesclusterfeature" tabindex="-1"><a class="header-anchor" href="#twistingvinesclusterfeature"><span><code>TwistingVinesClusterFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TwistingVinesClusterFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="twistingvinesclusterfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#twistingvinesclusterfeature-vtbl"><span><code>TwistingVinesClusterFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TwistingVinesClusterFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trunkvariantbuilder-buildtrunkvariant-l2-lambda-6d9a4349d26e94dea794c1fdacfc3b13" tabindex="-1"><a class="header-anchor" href="#trunkvariantbuilder-buildtrunkvariant-l2-lambda-6d9a4349d26e94dea794c1fdacfc3b13"><span><code>TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_6d9a4349d26e94dea794c1fdacfc3b13&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_6d9a4349d26e94dea794c1fdacfc3b13&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ITreeTrunkWrapper &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; trunkAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trunkvariantbuilder-buildtrunkvariant-l2-lambda-2891af02dc87b30718ec6f87b7028bd4" tabindex="-1"><a class="header-anchor" href="#trunkvariantbuilder-buildtrunkvariant-l2-lambda-2891af02dc87b30718ec6f87b7028bd4"><span><code>TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_2891af02dc87b30718ec6f87b7028bd4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_2891af02dc87b30718ec6f87b7028bd4&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ITreeTrunkWrapper &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; trunkAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trunkvariantbuilder-buildtrunkvariant-l2-lambda-298c2fc108d44315676cf647fb15a899" tabindex="-1"><a class="header-anchor" href="#trunkvariantbuilder-buildtrunkvariant-l2-lambda-298c2fc108d44315676cf647fb15a899"><span><code>TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_298c2fc108d44315676cf647fb15a899&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_298c2fc108d44315676cf647fb15a899&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ITreeTrunkWrapper &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; trunkAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trunkvariantbuilder-buildtrunkvariant-l2-lambda-4c94e9e62cef84b17089b42c799f1b62" tabindex="-1"><a class="header-anchor" href="#trunkvariantbuilder-buildtrunkvariant-l2-lambda-4c94e9e62cef84b17089b42c799f1b62"><span><code>TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_4c94e9e62cef84b17089b42c799f1b62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrunkVariantBuilder::buildTrunkVariant::__l2::&lt;lambda_4c94e9e62cef84b17089b42c799f1b62&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ITreeTrunkWrapper &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; trunkAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l2-lambda-04126ab3841162f070846e248505fe78" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l2-lambda-04126ab3841162f070846e248505fe78"><span><code>TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_04126ab3841162f070846e248505fe78&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_04126ab3841162f070846e248505fe78&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::TreeParams &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l2-lambda-93c22a781df6dc6af71b4dd5e0b171f1" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l2-lambda-93c22a781df6dc6af71b4dd5e0b171f1"><span><code>TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_93c22a781df6dc6af71b4dd5e0b171f1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_93c22a781df6dc6af71b4dd5e0b171f1&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::TreeParams &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l2-lambda-ffd665e99d41506084ffb05e0bc3a630" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l2-lambda-ffd665e99d41506084ffb05e0bc3a630"><span><code>TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_ffd665e99d41506084ffb05e0bc3a630&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_ffd665e99d41506084ffb05e0bc3a630&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::TreeParams &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l3-lambda-a7906fd49315030a86f3708933d5a526" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l3-lambda-a7906fd49315030a86f3708933d5a526"><span><code>TreeHelper::TreeParams::buildSchema::__l3::&lt;lambda_a7906fd49315030a86f3708933d5a526&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l3::&lt;lambda_a7906fd49315030a86f3708933d5a526&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::TreeParams &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l3-lambda-20a3db3713487e2e69fdcaad7b950e8e" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l3-lambda-20a3db3713487e2e69fdcaad7b950e8e"><span><code>TreeHelper::TreeParams::buildSchema::__l3::&lt;lambda_20a3db3713487e2e69fdcaad7b950e8e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l3::&lt;lambda_20a3db3713487e2e69fdcaad7b950e8e&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::TreeParams &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-8db1885130e9761bfd1f5d45a532424c" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-8db1885130e9761bfd1f5d45a532424c"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_8db1885130e9761bfd1f5d45a532424c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_8db1885130e9761bfd1f5d45a532424c&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-6532a13bf9bbe1c02a4010743d3008b0" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-6532a13bf9bbe1c02a4010743d3008b0"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_6532a13bf9bbe1c02a4010743d3008b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_6532a13bf9bbe1c02a4010743d3008b0&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-85bae5b79c8184c2116d8fc5da3d0e07" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-85bae5b79c8184c2116d8fc5da3d0e07"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_85bae5b79c8184c2116d8fc5da3d0e07&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_85bae5b79c8184c2116d8fc5da3d0e07&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(MegaTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-ea5db8857e8fb58674ec19b155c943c9" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-ea5db8857e8fb58674ec19b155c943c9"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_ea5db8857e8fb58674ec19b155c943c9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_ea5db8857e8fb58674ec19b155c943c9&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(MegaTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-8d488a2c84209dd0831ffb054e5850e6" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-8d488a2c84209dd0831ffb054e5850e6"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_8d488a2c84209dd0831ffb054e5850e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_8d488a2c84209dd0831ffb054e5850e6&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(FallenTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-6d2a08d73f83e3ab1661efe36a98ace1" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-6d2a08d73f83e3ab1661efe36a98ace1"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_6d2a08d73f83e3ab1661efe36a98ace1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_6d2a08d73f83e3ab1661efe36a98ace1&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(FallenTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-61a38999c743ca7361dc2e73d0aaff62" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-61a38999c743ca7361dc2e73d0aaff62"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_61a38999c743ca7361dc2e73d0aaff62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_61a38999c743ca7361dc2e73d0aaff62&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(AcaciaTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-7eb97c3261170c5e4b05f8dd225213fd" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-7eb97c3261170c5e4b05f8dd225213fd"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_7eb97c3261170c5e4b05f8dd225213fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_7eb97c3261170c5e4b05f8dd225213fd&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(AcaciaTreeTrunk *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-08e01a5f67d647a919dd40f16a254eca" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-08e01a5f67d647a919dd40f16a254eca"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_08e01a5f67d647a919dd40f16a254eca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_08e01a5f67d647a919dd40f16a254eca&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeCanopy *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-33302b0860d3bfb4716cc13d3364c310" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-33302b0860d3bfb4716cc13d3364c310"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_33302b0860d3bfb4716cc13d3364c310&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_33302b0860d3bfb4716cc13d3364c310&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeCanopy *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-db6354e9b07bcb09c3bb7e2f25399ac4" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-db6354e9b07bcb09c3bb7e2f25399ac4"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_db6354e9b07bcb09c3bb7e2f25399ac4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_db6354e9b07bcb09c3bb7e2f25399ac4&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeCanopy *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-61e95202bfc74f0d4a7ca173ac48da7f" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-61e95202bfc74f0d4a7ca173ac48da7f"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_61e95202bfc74f0d4a7ca173ac48da7f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_61e95202bfc74f0d4a7ca173ac48da7f&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeCanopy *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-abae1b4ad9f5adc8002c7f845728efe6" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-abae1b4ad9f5adc8002c7f845728efe6"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_abae1b4ad9f5adc8002c7f845728efe6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_abae1b4ad9f5adc8002c7f845728efe6&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TreeHelper::AttachableDecoration &amp; __cdecl(SimpleTreeCanopy *)&gt; paramAccessor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformationmixerlayer-weightedbiomeattributes-rivertransformation" tabindex="-1"><a class="header-anchor" href="#transformationmixerlayer-weightedbiomeattributes-rivertransformation"><span><code>TransformationMixerLayer&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformationMixerLayer&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &gt; : MixerLayer&lt;Biome *,Biome *,bool&gt;</span>
<span class="line">{</span>
<span class="line">  Biome *mDefaultTransformation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformationmixerlayer-weightedbiomeattributes-rivertransformation-vtbl" tabindex="-1"><a class="header-anchor" href="#transformationmixerlayer-weightedbiomeattributes-rivertransformation-vtbl"><span><code>TransformationMixerLayer&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TransformationMixerLayer&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);</span>
<span class="line">  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);</span>
<span class="line">  LayerDetails::TransferData&lt;Biome *&gt; *(__fastcall *_allocateAndFill)(Layer&lt;Biome *&gt; *this, LayerDetails::TransferData&lt;Biome *&gt; *result, unsigned __int64, int, int, unsigned int, unsigned int);</span>
<span class="line">  void (__fastcall *_fillArea)(MixerLayer&lt;Biome *,Biome *,bool&gt; *this, LayerDetails::WorkingData&lt;Biome *,Biome *&gt; *, int, int, int, int, int, LayerResult&lt;bool&gt;);</span>
<span class="line">  std::tuple&lt;int,int,unsigned int,unsigned int&gt; *(__fastcall *_getAreaRead)(MixerLayer&lt;Biome *,Biome *,bool&gt; *this, std::tuple&lt;int,int,unsigned int,unsigned int&gt; *result, int, int, unsigned int, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchtextbuttoncontrol" tabindex="-1"><a class="header-anchor" href="#touchtextbuttoncontrol"><span><code>TouchTextButtonControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TouchTextButtonControl : TouchGlyphButtonControl</span>
<span class="line">{</span>
<span class="line">  std::function&lt;glm::tvec2&lt;float,0&gt; __cdecl(void)&gt; mPosition;</span>
<span class="line">  std::function&lt;std::string __cdecl(void)&gt; mLabel;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mCurrentPosition;</span>
<span class="line">  RectangleArea mCurrentRect;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchtextbuttoncontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchtextbuttoncontrol-vtbl"><span><code>TouchTextButtonControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchTextButtonControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchtextbuttoncontrol-lambda-d981cd7e616c973c1d1b4f1442f5f224" tabindex="-1"><a class="header-anchor" href="#touchtextbuttoncontrol-lambda-d981cd7e616c973c1d1b4f1442f5f224"><span><code>TouchTextButtonControl::&lt;lambda_d981cd7e616c973c1d1b4f1442f5f224&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TouchTextButtonControl::&lt;lambda_d981cd7e616c973c1d1b4f1442f5f224&gt;</span>
<span class="line">{</span>
<span class="line">  TouchTextButtonControl *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchguipassthroughcontrol" tabindex="-1"><a class="header-anchor" href="#touchguipassthroughcontrol"><span><code>TouchGuiPassthroughControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TouchGuiPassthroughControl : TouchControl</span>
<span class="line">{</span>
<span class="line">  ButtonState mButtonState;</span>
<span class="line">  const unsigned int mButtonId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchguipassthroughcontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#touchguipassthroughcontrol-vtbl"><span><code>TouchGuiPassthroughControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TouchGuiPassthroughControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TouchControl)(TouchControl *this);</span>
<span class="line">  void (__fastcall *render)(TouchControl *this, InputRenderContext *);</span>
<span class="line">  void (__fastcall *tick)(TouchControl *this, InputEventQueue *, TouchPointResults *, int);</span>
<span class="line">  void (__fastcall *release)(TouchControl *this, InputEventQueue *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threaddatainterface" tabindex="-1"><a class="header-anchor" href="#threaddatainterface"><span><code>ThreadDataInterface</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThreadDataInterface</span>
<span class="line">{</span>
<span class="line">  ThreadDataInterface_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threaddatainterface-vtbl" tabindex="-1"><a class="header-anchor" href="#threaddatainterface-vtbl"><span><code>ThreadDataInterface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ThreadDataInterface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ThreadDataInterface)(ThreadDataInterface *this);</span>
<span class="line">  void *(__fastcall *PerThreadFactory)(ThreadDataInterface *this, void *);</span>
<span class="line">  void (__fastcall *PerThreadDestructor)(ThreadDataInterface *this, void *, void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threadpool-raknet-filelisttransfer-threaddata-int" tabindex="-1"><a class="header-anchor" href="#threadpool-raknet-filelisttransfer-threaddata-int"><span><code>ThreadPool&lt;RakNet::FileListTransfer::ThreadData,int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThreadPool&lt;RakNet::FileListTransfer::ThreadData,int&gt;</span>
<span class="line">{</span>
<span class="line">  RakNet::SimpleMutex inputQueueMutex;</span>
<span class="line">  RakNet::SimpleMutex outputQueueMutex;</span>
<span class="line">  RakNet::SimpleMutex workingThreadCountMutex;</span>
<span class="line">  RakNet::SimpleMutex runThreadsMutex;</span>
<span class="line">  void *(__fastcall *perThreadDataFactory)();</span>
<span class="line">  void (__fastcall *perThreadDataDestructor)(void *);</span>
<span class="line">  DataStructures::Queue&lt;int (__cdecl*)(RakNet::FileListTransfer::ThreadData,bool *,void *)&gt; inputFunctionQueue;</span>
<span class="line">  DataStructures::Queue&lt;RakNet::FileListTransfer::ThreadData&gt; inputQueue;</span>
<span class="line">  DataStructures::Queue&lt;int&gt; outputQueue;</span>
<span class="line">  ThreadDataInterface *threadDataInterface;</span>
<span class="line">  void *tdiContext;</span>
<span class="line">  bool runThreads;</span>
<span class="line">  int numThreadsRunning;</span>
<span class="line">  int numThreadsWorking;</span>
<span class="line">  RakNet::SimpleMutex numThreadsRunningMutex;</span>
<span class="line">  RakNet::SignaledEvent quitAndIncomingDataEvents;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timezone" tabindex="-1"><a class="header-anchor" href="#timezone"><span><code>timezone</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct timezone</span>
<span class="line">{</span>
<span class="line">  int tz_minuteswest;</span>
<span class="line">  int tz_dsttime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timeb" tabindex="-1"><a class="header-anchor" href="#timeb"><span><code>timeb</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(4)) timeb</span>
<span class="line">{</span>
<span class="line">  __int64 time;</span>
<span class="line">  unsigned __int16 millitm;</span>
<span class="line">  __int16 timezone;</span>
<span class="line">  __int16 dstflag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="texteditfocuscontroller" tabindex="-1"><a class="header-anchor" href="#texteditfocuscontroller"><span><code>TextEditFocusController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) TextEditFocusController</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;,int,bool,bool,glm::tvec2&lt;float,0&gt; const &amp;,bool)&gt; mShowCallback;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mHideCallback;</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;)&gt; mUpdateCallback;</span>
<span class="line">  bool mShowOnFocus;</span>
<span class="line">  bool mFocused;</span>
<span class="line">  bool mSelected;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskdetails-backgroundtaskdetails-taskresult-void-void" tabindex="-1"><a class="header-anchor" href="#taskdetails-backgroundtaskdetails-taskresult-void-void"><span><code>TaskDetails::BackgroundTaskDetails&lt;TaskResult,void,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TaskDetails::BackgroundTaskDetails&lt;TaskResult,void,void&gt; : Bedrock::Threading::IAsyncResult&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;TaskResult __cdecl(void)&gt; mTask;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskdetails-backgroundtaskdetails-taskresult-void-void-vtbl" tabindex="-1"><a class="header-anchor" href="#taskdetails-backgroundtaskdetails-taskresult-void-void-vtbl"><span><code>TaskDetails::BackgroundTaskDetails&lt;TaskResult,void,void&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TaskDetails::BackgroundTaskDetails&lt;TaskResult,void,void&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;void&gt;)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::exception_ptr *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;void&gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskdetails-backgroundtaskdetails-void-void-void" tabindex="-1"><a class="header-anchor" href="#taskdetails-backgroundtaskdetails-void-void-void"><span><code>TaskDetails::BackgroundTaskDetails&lt;void,void,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TaskDetails::BackgroundTaskDetails&lt;void,void,void&gt; : Bedrock::Threading::IAsyncResult&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mTask;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskdetails-backgroundtaskdetails-void-void-void-vtbl" tabindex="-1"><a class="header-anchor" href="#taskdetails-backgroundtaskdetails-void-void-void-vtbl"><span><code>TaskDetails::BackgroundTaskDetails&lt;void,void,void&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TaskDetails::BackgroundTaskDetails&lt;void,void,void&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IAsyncResult&lt;void&gt;)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  Bedrock::Threading::AsyncStatus (__fastcall *getStatus)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  std::error_code *(__fastcall *getError)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::error_code *result);</span>
<span class="line">  std::exception_ptr *(__fastcall *getException)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::exception_ptr *result);</span>
<span class="line">  void (__fastcall *cancel)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this);</span>
<span class="line">  void (__fastcall *addOnComplete)(Bedrock::Threading::IAsyncResult&lt;void&gt; *this, std::function&lt;void __cdecl(Bedrock::Threading::IAsyncResult&lt;void&gt; const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskgroup-flush-l24-lambda-f858309b3640be0291f38b673f2e0168" tabindex="-1"><a class="header-anchor" href="#taskgroup-flush-l24-lambda-f858309b3640be0291f38b673f2e0168"><span><code>TaskGroup::flush::__l24::&lt;lambda_f858309b3640be0291f38b673f2e0168&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TaskGroup::flush::__l24::&lt;lambda_f858309b3640be0291f38b673f2e0168&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9" tabindex="-1"><a class="header-anchor" href="#taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9"><span><code>TaskGroup::resume::__l2::&lt;lambda_22aee7be42bb8fb01cff1768f3f0c0b9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TaskGroup::resume::__l2::&lt;lambda_22aee7be42bb8fb01cff1768f3f0c0b9&gt;</span>
<span class="line">{</span>
<span class="line">  TaskGroup *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9-l2-lambda-d91f59a878019cd825e76c11990156bd" tabindex="-1"><a class="header-anchor" href="#taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9-l2-lambda-d91f59a878019cd825e76c11990156bd"><span><code>TaskGroup::resume::__l2::&lt;lambda_22aee7be42bb8fb01cff1768f3f0c0b9&gt;::()::__l2::&lt;lambda_d91f59a878019cd825e76c11990156bd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TaskGroup::resume::__l2::&lt;lambda_22aee7be42bb8fb01cff1768f3f0c0b9&gt;::()::__l2::&lt;lambda_d91f59a878019cd825e76c11990156bd&gt;</span>
<span class="line">{</span>
<span class="line">  TaskGroup *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-gasprangerec" tabindex="-1"><a class="header-anchor" href="#tt-gasprangerec"><span><code>TT_GaspRangeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_GaspRangeRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 maxPPEM;</span>
<span class="line">  unsigned __int16 gaspFlag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-post-25" tabindex="-1"><a class="header-anchor" href="#tt-post-25"><span><code>TT_Post_25_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_Post_25_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 num_glyphs;</span>
<span class="line">  char *offsets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ttc-headerrec" tabindex="-1"><a class="header-anchor" href="#ttc-headerrec"><span><code>TTC_HeaderRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TTC_HeaderRec_</span>
<span class="line">{</span>
<span class="line">  unsigned int tag;</span>
<span class="line">  int version;</span>
<span class="line">  int count;</span>
<span class="line">  unsigned int *offsets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-tablerec" tabindex="-1"><a class="header-anchor" href="#tt-tablerec"><span><code>TT_TableRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_TableRec_</span>
<span class="line">{</span>
<span class="line">  unsigned int Tag;</span>
<span class="line">  unsigned int CheckSum;</span>
<span class="line">  unsigned int Offset;</span>
<span class="line">  unsigned int Length;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-header" tabindex="-1"><a class="header-anchor" href="#tt-header"><span><code>TT_Header_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(4)) TT_Header_</span>
<span class="line">{</span>
<span class="line">  int Table_Version;</span>
<span class="line">  int Font_Revision;</span>
<span class="line">  int CheckSum_Adjust;</span>
<span class="line">  int Magic_Number;</span>
<span class="line">  unsigned __int16 Flags;</span>
<span class="line">  unsigned __int16 Units_Per_EM;</span>
<span class="line">  unsigned int Created[2];</span>
<span class="line">  unsigned int Modified[2];</span>
<span class="line">  __int16 xMin;</span>
<span class="line">  __int16 yMin;</span>
<span class="line">  __int16 xMax;</span>
<span class="line">  __int16 yMax;</span>
<span class="line">  unsigned __int16 Mac_Style;</span>
<span class="line">  unsigned __int16 Lowest_Rec_PPEM;</span>
<span class="line">  __int16 Font_Direction;</span>
<span class="line">  __int16 Index_To_Loc_Format;</span>
<span class="line">  __int16 Glyph_Data_Format;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-horiheader" tabindex="-1"><a class="header-anchor" href="#tt-horiheader"><span><code>TT_HoriHeader_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_HoriHeader_</span>
<span class="line">{</span>
<span class="line">  int Version;</span>
<span class="line">  __int16 Ascender;</span>
<span class="line">  __int16 Descender;</span>
<span class="line">  __int16 Line_Gap;</span>
<span class="line">  unsigned __int16 advance_Width_Max;</span>
<span class="line">  __int16 min_Left_Side_Bearing;</span>
<span class="line">  __int16 min_Right_Side_Bearing;</span>
<span class="line">  __int16 xMax_Extent;</span>
<span class="line">  __int16 caret_Slope_Rise;</span>
<span class="line">  __int16 caret_Slope_Run;</span>
<span class="line">  __int16 caret_Offset;</span>
<span class="line">  __int16 Reserved[4];</span>
<span class="line">  __int16 metric_Data_Format;</span>
<span class="line">  unsigned __int16 number_Of_HMetrics;</span>
<span class="line">  void *long_metrics;</span>
<span class="line">  void *short_metrics;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-maxprofile" tabindex="-1"><a class="header-anchor" href="#tt-maxprofile"><span><code>TT_MaxProfile_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_MaxProfile_</span>
<span class="line">{</span>
<span class="line">  int version;</span>
<span class="line">  unsigned __int16 numGlyphs;</span>
<span class="line">  unsigned __int16 maxPoints;</span>
<span class="line">  unsigned __int16 maxContours;</span>
<span class="line">  unsigned __int16 maxCompositePoints;</span>
<span class="line">  unsigned __int16 maxCompositeContours;</span>
<span class="line">  unsigned __int16 maxZones;</span>
<span class="line">  unsigned __int16 maxTwilightPoints;</span>
<span class="line">  unsigned __int16 maxStorage;</span>
<span class="line">  unsigned __int16 maxFunctionDefs;</span>
<span class="line">  unsigned __int16 maxInstructionDefs;</span>
<span class="line">  unsigned __int16 maxStackElements;</span>
<span class="line">  unsigned __int16 maxSizeOfInstructions;</span>
<span class="line">  unsigned __int16 maxComponentElements;</span>
<span class="line">  unsigned __int16 maxComponentDepth;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-vertheader" tabindex="-1"><a class="header-anchor" href="#tt-vertheader"><span><code>TT_VertHeader_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_VertHeader_</span>
<span class="line">{</span>
<span class="line">  int Version;</span>
<span class="line">  __int16 Ascender;</span>
<span class="line">  __int16 Descender;</span>
<span class="line">  __int16 Line_Gap;</span>
<span class="line">  unsigned __int16 advance_Height_Max;</span>
<span class="line">  __int16 min_Top_Side_Bearing;</span>
<span class="line">  __int16 min_Bottom_Side_Bearing;</span>
<span class="line">  __int16 yMax_Extent;</span>
<span class="line">  __int16 caret_Slope_Rise;</span>
<span class="line">  __int16 caret_Slope_Run;</span>
<span class="line">  __int16 caret_Offset;</span>
<span class="line">  __int16 Reserved[4];</span>
<span class="line">  __int16 metric_Data_Format;</span>
<span class="line">  unsigned __int16 number_Of_VMetrics;</span>
<span class="line">  void *long_metrics;</span>
<span class="line">  void *short_metrics;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-namerec" tabindex="-1"><a class="header-anchor" href="#tt-namerec"><span><code>TT_NameRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_NameRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 platformID;</span>
<span class="line">  unsigned __int16 encodingID;</span>
<span class="line">  unsigned __int16 languageID;</span>
<span class="line">  unsigned __int16 nameID;</span>
<span class="line">  unsigned __int16 stringLength;</span>
<span class="line">  unsigned int stringOffset;</span>
<span class="line">  unsigned __int8 *string;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-langtagrec" tabindex="-1"><a class="header-anchor" href="#tt-langtagrec"><span><code>TT_LangTagRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_LangTagRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 stringLength;</span>
<span class="line">  unsigned int stringOffset;</span>
<span class="line">  unsigned __int8 *string;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-nametablerec" tabindex="-1"><a class="header-anchor" href="#tt-nametablerec"><span><code>TT_NameTableRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_NameTableRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 format;</span>
<span class="line">  unsigned int numNameRecords;</span>
<span class="line">  unsigned int storageOffset;</span>
<span class="line">  TT_NameRec_ *names;</span>
<span class="line">  unsigned int numLangTagRecords;</span>
<span class="line">  TT_LangTagRec_ *langTags;</span>
<span class="line">  FT_StreamRec_ *stream;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-os2" tabindex="-1"><a class="header-anchor" href="#tt-os2"><span><code>TT_OS2_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(4)) TT_OS2_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 version;</span>
<span class="line">  __int16 xAvgCharWidth;</span>
<span class="line">  unsigned __int16 usWeightClass;</span>
<span class="line">  unsigned __int16 usWidthClass;</span>
<span class="line">  unsigned __int16 fsType;</span>
<span class="line">  __int16 ySubscriptXSize;</span>
<span class="line">  __int16 ySubscriptYSize;</span>
<span class="line">  __int16 ySubscriptXOffset;</span>
<span class="line">  __int16 ySubscriptYOffset;</span>
<span class="line">  __int16 ySuperscriptXSize;</span>
<span class="line">  __int16 ySuperscriptYSize;</span>
<span class="line">  __int16 ySuperscriptXOffset;</span>
<span class="line">  __int16 ySuperscriptYOffset;</span>
<span class="line">  __int16 yStrikeoutSize;</span>
<span class="line">  __int16 yStrikeoutPosition;</span>
<span class="line">  __int16 sFamilyClass;</span>
<span class="line">  unsigned __int8 panose[10];</span>
<span class="line">  unsigned int ulUnicodeRange1;</span>
<span class="line">  unsigned int ulUnicodeRange2;</span>
<span class="line">  unsigned int ulUnicodeRange3;</span>
<span class="line">  unsigned int ulUnicodeRange4;</span>
<span class="line">  char achVendID[4];</span>
<span class="line">  unsigned __int16 fsSelection;</span>
<span class="line">  unsigned __int16 usFirstCharIndex;</span>
<span class="line">  unsigned __int16 usLastCharIndex;</span>
<span class="line">  __int16 sTypoAscender;</span>
<span class="line">  __int16 sTypoDescender;</span>
<span class="line">  __int16 sTypoLineGap;</span>
<span class="line">  unsigned __int16 usWinAscent;</span>
<span class="line">  unsigned __int16 usWinDescent;</span>
<span class="line">  unsigned int ulCodePageRange1;</span>
<span class="line">  unsigned int ulCodePageRange2;</span>
<span class="line">  __int16 sxHeight;</span>
<span class="line">  __int16 sCapHeight;</span>
<span class="line">  unsigned __int16 usDefaultChar;</span>
<span class="line">  unsigned __int16 usBreakChar;</span>
<span class="line">  unsigned __int16 usMaxContext;</span>
<span class="line">  unsigned __int16 usLowerOpticalPointSize;</span>
<span class="line">  unsigned __int16 usUpperOpticalPointSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-postscript" tabindex="-1"><a class="header-anchor" href="#tt-postscript"><span><code>TT_Postscript_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_Postscript_</span>
<span class="line">{</span>
<span class="line">  int FormatType;</span>
<span class="line">  int italicAngle;</span>
<span class="line">  __int16 underlinePosition;</span>
<span class="line">  __int16 underlineThickness;</span>
<span class="line">  unsigned int isFixedPitch;</span>
<span class="line">  unsigned int minMemType42;</span>
<span class="line">  unsigned int maxMemType42;</span>
<span class="line">  unsigned int minMemType1;</span>
<span class="line">  unsigned int maxMemType1;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-facerec" tabindex="-1"><a class="header-anchor" href="#tt-facerec"><span><code>TT_FaceRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_FaceRec_</span>
<span class="line">{</span>
<span class="line">  FT_FaceRec_ root;</span>
<span class="line">  TTC_HeaderRec_ ttc_header;</span>
<span class="line">  unsigned int format_tag;</span>
<span class="line">  unsigned __int16 num_tables;</span>
<span class="line">  TT_TableRec_ *dir_tables;</span>
<span class="line">  TT_Header_ header;</span>
<span class="line">  TT_HoriHeader_ horizontal;</span>
<span class="line">  TT_MaxProfile_ max_profile;</span>
<span class="line">  unsigned __int8 vertical_info;</span>
<span class="line">  TT_VertHeader_ vertical;</span>
<span class="line">  unsigned __int16 num_names;</span>
<span class="line">  TT_NameTableRec_ name_table;</span>
<span class="line">  TT_OS2_ os2;</span>
<span class="line">  TT_Postscript_ postscript;</span>
<span class="line">  unsigned __int8 *cmap_table;</span>
<span class="line">  unsigned int cmap_size;</span>
<span class="line">  int (__fastcall *goto_table)(TT_FaceRec_ *, unsigned int, FT_StreamRec_ *, unsigned int *);</span>
<span class="line">  int (__fastcall *access_glyph_frame)(TT_LoaderRec_ *, unsigned int, unsigned int, unsigned int);</span>
<span class="line">  void (__fastcall *forget_glyph_frame)(TT_LoaderRec_ *);</span>
<span class="line">  int (__fastcall *read_glyph_header)(TT_LoaderRec_ *);</span>
<span class="line">  int (__fastcall *read_simple_glyph)(TT_LoaderRec_ *);</span>
<span class="line">  int (__fastcall *read_composite_glyph)(TT_LoaderRec_ *);</span>
<span class="line">  void *sfnt;</span>
<span class="line">  void *psnames;</span>
<span class="line">  void *mm;</span>
<span class="line">  void *var;</span>
<span class="line">  void *psaux;</span>
<span class="line">  TT_Gasp_ gasp;</span>
<span class="line">  TT_PCLT_ pclt;</span>
<span class="line">  unsigned int num_sbit_scales;</span>
<span class="line">  TT_SBit_ScaleRec_ *sbit_scales;</span>
<span class="line">  TT_Post_NamesRec_ postscript_names;</span>
<span class="line">  FT_Palette_Data_ palette_data;</span>
<span class="line">  unsigned __int16 palette_index;</span>
<span class="line">  FT_Color_ *palette;</span>
<span class="line">  unsigned __int8 have_foreground_color;</span>
<span class="line">  FT_Color_ foreground_color;</span>
<span class="line">  unsigned int font_program_size;</span>
<span class="line">  unsigned __int8 *font_program;</span>
<span class="line">  unsigned int cvt_program_size;</span>
<span class="line">  unsigned __int8 *cvt_program;</span>
<span class="line">  unsigned int cvt_size;</span>
<span class="line">  int *cvt;</span>
<span class="line">  int (__fastcall *interpreter)(void *);</span>
<span class="line">  FT_Generic_ extra;</span>
<span class="line">  const char *postscript_name;</span>
<span class="line">  unsigned int glyf_len;</span>
<span class="line">  unsigned int glyf_offset;</span>
<span class="line">  unsigned __int8 is_cff2;</span>
<span class="line">  unsigned __int8 doblend;</span>
<span class="line">  GX_BlendRec_ *blend;</span>
<span class="line">  unsigned int variation_support;</span>
<span class="line">  const char *var_postscript_prefix;</span>
<span class="line">  unsigned int var_postscript_prefix_len;</span>
<span class="line">  unsigned int horz_metrics_size;</span>
<span class="line">  unsigned int vert_metrics_size;</span>
<span class="line">  unsigned int num_locations;</span>
<span class="line">  unsigned __int8 *glyph_locations;</span>
<span class="line">  unsigned __int8 *hdmx_table;</span>
<span class="line">  unsigned int hdmx_table_size;</span>
<span class="line">  unsigned int hdmx_record_count;</span>
<span class="line">  unsigned int hdmx_record_size;</span>
<span class="line">  unsigned __int8 *hdmx_record_sizes;</span>
<span class="line">  unsigned __int8 *sbit_table;</span>
<span class="line">  unsigned int sbit_table_size;</span>
<span class="line">  TT_SbitTableType_ sbit_table_type;</span>
<span class="line">  unsigned int sbit_num_strikes;</span>
<span class="line">  unsigned int *sbit_strike_map;</span>
<span class="line">  unsigned __int8 *kern_table;</span>
<span class="line">  unsigned int kern_table_size;</span>
<span class="line">  unsigned int num_kern_tables;</span>
<span class="line">  unsigned int kern_avail_bits;</span>
<span class="line">  unsigned int kern_order_bits;</span>
<span class="line">  TT_BDFRec_ bdf;</span>
<span class="line">  unsigned int horz_metrics_offset;</span>
<span class="line">  unsigned int vert_metrics_offset;</span>
<span class="line">  unsigned int ebdt_start;</span>
<span class="line">  unsigned int ebdt_size;</span>
<span class="line">  void *cpal;</span>
<span class="line">  void *colr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-size-metrics" tabindex="-1"><a class="header-anchor" href="#tt-size-metrics"><span><code>TT_Size_Metrics_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(2)) TT_Size_Metrics_</span>
<span class="line">{</span>
<span class="line">  int x_ratio;</span>
<span class="line">  int y_ratio;</span>
<span class="line">  unsigned __int16 ppem;</span>
<span class="line">  int ratio;</span>
<span class="line">  int scale;</span>
<span class="line">  int compensations[4];</span>
<span class="line">  unsigned __int8 valid;</span>
<span class="line">  unsigned __int8 rotated;</span>
<span class="line">  unsigned __int8 stretched;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-defrecord" tabindex="-1"><a class="header-anchor" href="#tt-defrecord"><span><code>TT_DefRecord_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_DefRecord_</span>
<span class="line">{</span>
<span class="line">  int range;</span>
<span class="line">  int start;</span>
<span class="line">  int end;</span>
<span class="line">  unsigned int opc;</span>
<span class="line">  unsigned __int8 active;</span>
<span class="line">  unsigned __int8 inline_delta;</span>
<span class="line">  unsigned int sph_fdef_flags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-coderange" tabindex="-1"><a class="header-anchor" href="#tt-coderange"><span><code>TT_CodeRange_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_CodeRange_</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 *base;</span>
<span class="line">  int size;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-sizerec" tabindex="-1"><a class="header-anchor" href="#tt-sizerec"><span><code>TT_SizeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_SizeRec_</span>
<span class="line">{</span>
<span class="line">  FT_SizeRec_ root;</span>
<span class="line">  FT_Size_Metrics_ *metrics;</span>
<span class="line">  FT_Size_Metrics_ hinted_metrics;</span>
<span class="line">  TT_Size_Metrics_ ttmetrics;</span>
<span class="line">  unsigned int strike_index;</span>
<span class="line">  int point_size;</span>
<span class="line">  unsigned int num_function_defs;</span>
<span class="line">  unsigned int max_function_defs;</span>
<span class="line">  TT_DefRecord_ *function_defs;</span>
<span class="line">  unsigned int num_instruction_defs;</span>
<span class="line">  unsigned int max_instruction_defs;</span>
<span class="line">  TT_DefRecord_ *instruction_defs;</span>
<span class="line">  unsigned int max_func;</span>
<span class="line">  unsigned int max_ins;</span>
<span class="line">  TT_CodeRange_ codeRangeTable[3];</span>
<span class="line">  TT_GraphicsState_ GS;</span>
<span class="line">  unsigned int cvt_size;</span>
<span class="line">  int *cvt;</span>
<span class="line">  unsigned __int16 storage_size;</span>
<span class="line">  int *storage;</span>
<span class="line">  TT_GlyphZoneRec_ twilight;</span>
<span class="line">  TT_ExecContextRec_ *context;</span>
<span class="line">  int bytecode_ready;</span>
<span class="line">  int cvt_ready;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-callrec" tabindex="-1"><a class="header-anchor" href="#tt-callrec"><span><code>TT_CallRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_CallRec_</span>
<span class="line">{</span>
<span class="line">  int Caller_Range;</span>
<span class="line">  int Caller_IP;</span>
<span class="line">  int Cur_Count;</span>
<span class="line">  TT_DefRecord_ *Def;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-execcontextrec" tabindex="-1"><a class="header-anchor" href="#tt-execcontextrec"><span><code>TT_ExecContextRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_ExecContextRec_</span>
<span class="line">{</span>
<span class="line">  TT_FaceRec_ *face;</span>
<span class="line">  TT_SizeRec_ *size;</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">  int error;</span>
<span class="line">  int top;</span>
<span class="line">  int stackSize;</span>
<span class="line">  int *stack;</span>
<span class="line">  int args;</span>
<span class="line">  int new_top;</span>
<span class="line">  TT_GlyphZoneRec_ zp0;</span>
<span class="line">  TT_GlyphZoneRec_ zp1;</span>
<span class="line">  TT_GlyphZoneRec_ zp2;</span>
<span class="line">  TT_GlyphZoneRec_ pts;</span>
<span class="line">  TT_GlyphZoneRec_ twilight;</span>
<span class="line">  int pointSize;</span>
<span class="line">  FT_Size_Metrics_ metrics;</span>
<span class="line">  TT_Size_Metrics_ tt_metrics;</span>
<span class="line">  TT_GraphicsState_ GS;</span>
<span class="line">  int curRange;</span>
<span class="line">  unsigned __int8 *code;</span>
<span class="line">  int IP;</span>
<span class="line">  int codeSize;</span>
<span class="line">  unsigned __int8 opcode;</span>
<span class="line">  int length;</span>
<span class="line">  unsigned __int8 step_ins;</span>
<span class="line">  unsigned int cvtSize;</span>
<span class="line">  int *cvt;</span>
<span class="line">  unsigned int glyphSize;</span>
<span class="line">  unsigned __int8 *glyphIns;</span>
<span class="line">  unsigned int numFDefs;</span>
<span class="line">  unsigned int maxFDefs;</span>
<span class="line">  TT_DefRecord_ *FDefs;</span>
<span class="line">  unsigned int numIDefs;</span>
<span class="line">  unsigned int maxIDefs;</span>
<span class="line">  TT_DefRecord_ *IDefs;</span>
<span class="line">  unsigned int maxFunc;</span>
<span class="line">  unsigned int maxIns;</span>
<span class="line">  int callTop;</span>
<span class="line">  int callSize;</span>
<span class="line">  TT_CallRec_ *callStack;</span>
<span class="line">  unsigned __int16 maxPoints;</span>
<span class="line">  __int16 maxContours;</span>
<span class="line">  TT_CodeRange_ codeRangeTable[3];</span>
<span class="line">  unsigned __int16 storeSize;</span>
<span class="line">  int *storage;</span>
<span class="line">  int period;</span>
<span class="line">  int phase;</span>
<span class="line">  int threshold;</span>
<span class="line">  unsigned __int8 instruction_trap;</span>
<span class="line">  TT_GraphicsState_ default_GS;</span>
<span class="line">  unsigned __int8 is_composite;</span>
<span class="line">  unsigned __int8 pedantic_hinting;</span>
<span class="line">  int F_dot_P;</span>
<span class="line">  int (__fastcall *func_round)(TT_ExecContextRec_ *, int, int);</span>
<span class="line">  int (__fastcall *func_project)(TT_ExecContextRec_ *, int, int);</span>
<span class="line">  int (__fastcall *func_dualproj)(TT_ExecContextRec_ *, int, int);</span>
<span class="line">  int (__fastcall *func_freeProj)(TT_ExecContextRec_ *, int, int);</span>
<span class="line">  void (__fastcall *func_move)(TT_ExecContextRec_ *, TT_GlyphZoneRec_ *, unsigned __int16, int);</span>
<span class="line">  void (__fastcall *func_move_orig)(TT_ExecContextRec_ *, TT_GlyphZoneRec_ *, unsigned __int16, int);</span>
<span class="line">  int (__fastcall *func_cur_ppem)(TT_ExecContextRec_ *);</span>
<span class="line">  int (__fastcall *func_read_cvt)(TT_ExecContextRec_ *, unsigned int);</span>
<span class="line">  void (__fastcall *func_write_cvt)(TT_ExecContextRec_ *, unsigned int, int);</span>
<span class="line">  void (__fastcall *func_move_cvt)(TT_ExecContextRec_ *, unsigned int, int);</span>
<span class="line">  unsigned __int8 grayscale;</span>
<span class="line">  unsigned __int8 subpixel_hinting_lean;</span>
<span class="line">  unsigned __int8 vertical_lcd_lean;</span>
<span class="line">  unsigned __int8 backward_compatibility;</span>
<span class="line">  unsigned __int8 iupx_called;</span>
<span class="line">  unsigned __int8 iupy_called;</span>
<span class="line">  unsigned __int8 grayscale_cleartype;</span>
<span class="line">  unsigned int loopcall_counter;</span>
<span class="line">  unsigned int loopcall_counter_max;</span>
<span class="line">  unsigned int neg_jump_counter;</span>
<span class="line">  unsigned int neg_jump_counter_max;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-gasp" tabindex="-1"><a class="header-anchor" href="#tt-gasp"><span><code>TT_Gasp_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_Gasp_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 version;</span>
<span class="line">  unsigned __int16 numRanges;</span>
<span class="line">  TT_GaspRangeRec_ *gaspRanges;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-pclt" tabindex="-1"><a class="header-anchor" href="#tt-pclt"><span><code>TT_PCLT_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(4)) TT_PCLT_</span>
<span class="line">{</span>
<span class="line">  int Version;</span>
<span class="line">  unsigned int FontNumber;</span>
<span class="line">  unsigned __int16 Pitch;</span>
<span class="line">  unsigned __int16 xHeight;</span>
<span class="line">  unsigned __int16 Style;</span>
<span class="line">  unsigned __int16 TypeFamily;</span>
<span class="line">  unsigned __int16 CapHeight;</span>
<span class="line">  unsigned __int16 SymbolSet;</span>
<span class="line">  char TypeFace[16];</span>
<span class="line">  char CharacterComplement[8];</span>
<span class="line">  char FileName[6];</span>
<span class="line">  char StrokeWeight;</span>
<span class="line">  char WidthType;</span>
<span class="line">  unsigned __int8 SerifStyle;</span>
<span class="line">  unsigned __int8 Reserved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-sbit-linemetricsrec" tabindex="-1"><a class="header-anchor" href="#tt-sbit-linemetricsrec"><span><code>TT_SBit_LineMetricsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_SBit_LineMetricsRec_</span>
<span class="line">{</span>
<span class="line">  char ascender;</span>
<span class="line">  char descender;</span>
<span class="line">  unsigned __int8 max_width;</span>
<span class="line">  char caret_slope_numerator;</span>
<span class="line">  char caret_slope_denominator;</span>
<span class="line">  char caret_offset;</span>
<span class="line">  char min_origin_SB;</span>
<span class="line">  char min_advance_SB;</span>
<span class="line">  char max_before_BL;</span>
<span class="line">  char min_after_BL;</span>
<span class="line">  char pads[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-sbit-scalerec" tabindex="-1"><a class="header-anchor" href="#tt-sbit-scalerec"><span><code>TT_SBit_ScaleRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_SBit_ScaleRec_</span>
<span class="line">{</span>
<span class="line">  TT_SBit_LineMetricsRec_ hori;</span>
<span class="line">  TT_SBit_LineMetricsRec_ vert;</span>
<span class="line">  unsigned __int8 x_ppem;</span>
<span class="line">  unsigned __int8 y_ppem;</span>
<span class="line">  unsigned __int8 x_ppem_substitute;</span>
<span class="line">  unsigned __int8 y_ppem_substitute;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-post-20rec" tabindex="-1"><a class="header-anchor" href="#tt-post-20rec"><span><code>TT_Post_20Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_Post_20Rec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 num_glyphs;</span>
<span class="line">  unsigned __int16 num_names;</span>
<span class="line">  wchar_t *glyph_indices;</span>
<span class="line">  char **glyph_names;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-post-namesrec" tabindex="-1"><a class="header-anchor" href="#tt-post-namesrec"><span><code>TT_Post_NamesRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_Post_NamesRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 loaded;</span>
<span class="line">  union</span>
<span class="line">  {</span>
<span class="line">    TT_Post_20Rec_ format_20;</span>
<span class="line">    TT_Post_25_ format_25;</span>
<span class="line">  } names;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-bdfrec" tabindex="-1"><a class="header-anchor" href="#tt-bdfrec"><span><code>TT_BDFRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_BDFRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 *table;</span>
<span class="line">  unsigned __int8 *table_end;</span>
<span class="line">  unsigned __int8 *strings;</span>
<span class="line">  unsigned int strings_size;</span>
<span class="line">  unsigned int num_strikes;</span>
<span class="line">  unsigned __int8 loaded;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmapinfo" tabindex="-1"><a class="header-anchor" href="#tt-cmapinfo"><span><code>TT_CMapInfo_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_CMapInfo_</span>
<span class="line">{</span>
<span class="line">  unsigned int language;</span>
<span class="line">  int format;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-sbit-metricsrec" tabindex="-1"><a class="header-anchor" href="#tt-sbit-metricsrec"><span><code>TT_SBit_MetricsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_SBit_MetricsRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 height;</span>
<span class="line">  unsigned __int16 width;</span>
<span class="line">  __int16 horiBearingX;</span>
<span class="line">  __int16 horiBearingY;</span>
<span class="line">  unsigned __int16 horiAdvance;</span>
<span class="line">  __int16 vertBearingX;</span>
<span class="line">  __int16 vertBearingY;</span>
<span class="line">  unsigned __int16 vertAdvance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tbbox-rec" tabindex="-1"><a class="header-anchor" href="#tbbox-rec"><span><code>TBBox_Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TBBox_Rec_</span>
<span class="line">{</span>
<span class="line">  FT_Vector_ last;</span>
<span class="line">  FT_BBox_ bbox;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-hints-funcsrec" tabindex="-1"><a class="header-anchor" href="#t1-hints-funcsrec"><span><code>T1_Hints_FuncsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct T1_Hints_FuncsRec_</span>
<span class="line">{</span>
<span class="line">  struct T1_HintsRec_ *hints;</span>
<span class="line">  void (__fastcall *open)(struct T1_HintsRec_ *);</span>
<span class="line">  int (__fastcall *close)(struct T1_HintsRec_ *, unsigned int);</span>
<span class="line">  void (__fastcall *stem)(struct T1_HintsRec_ *, unsigned int, int *);</span>
<span class="line">  void (__fastcall *stem3)(struct T1_HintsRec_ *, unsigned int, int *);</span>
<span class="line">  void (__fastcall *reset)(struct T1_HintsRec_ *, unsigned int);</span>
<span class="line">  int (__fastcall *apply)(struct T1_HintsRec_ *, FT_Outline_ *, PSH_GlobalsRec_ *, FT_Render_Mode_);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t2-hints-funcsrec" tabindex="-1"><a class="header-anchor" href="#t2-hints-funcsrec"><span><code>T2_Hints_FuncsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct T2_Hints_FuncsRec_</span>
<span class="line">{</span>
<span class="line">  struct T2_HintsRec_ *hints;</span>
<span class="line">  void (__fastcall *open)(struct T2_HintsRec_ *);</span>
<span class="line">  int (__fastcall *close)(struct T2_HintsRec_ *, unsigned int);</span>
<span class="line">  void (__fastcall *stems)(struct T2_HintsRec_ *, unsigned int, int, int *);</span>
<span class="line">  void (__fastcall *hintmask)(struct T2_HintsRec_ *, unsigned int, unsigned int, const unsigned __int8 *);</span>
<span class="line">  void (__fastcall *counter)(struct T2_HintsRec_ *, unsigned int, const unsigned __int8 *);</span>
<span class="line">  int (__fastcall *apply)(struct T2_HintsRec_ *, FT_Outline_ *, PSH_GlobalsRec_ *, FT_Render_Mode_);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-cmapcustomrec" tabindex="-1"><a class="header-anchor" href="#t1-cmapcustomrec"><span><code>T1_CMapCustomRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_CMapCustomRec_</span>
<span class="line">{</span>
<span class="line">  FT_CMapRec_ cmap;</span>
<span class="line">  unsigned int first;</span>
<span class="line">  unsigned int count;</span>
<span class="line">  wchar_t *indices;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-encodingrecrec" tabindex="-1"><a class="header-anchor" href="#t1-encodingrecrec"><span><code>T1_EncodingRecRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_EncodingRecRec_</span>
<span class="line">{</span>
<span class="line">  int num_chars;</span>
<span class="line">  int code_first;</span>
<span class="line">  int code_last;</span>
<span class="line">  wchar_t *char_index;</span>
<span class="line">  const char **char_name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-fontrec" tabindex="-1"><a class="header-anchor" href="#t1-fontrec"><span><code>T1_FontRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) T1_FontRec_</span>
<span class="line">{</span>
<span class="line">  PS_FontInfoRec_ font_info;</span>
<span class="line">  PS_FontExtraRec_ font_extra;</span>
<span class="line">  PS_PrivateRec_ private_dict;</span>
<span class="line">  char *font_name;</span>
<span class="line">  T1_EncodingType_ encoding_type;</span>
<span class="line">  T1_EncodingRecRec_ encoding;</span>
<span class="line">  unsigned __int8 *subrs_block;</span>
<span class="line">  unsigned __int8 *charstrings_block;</span>
<span class="line">  unsigned __int8 *glyph_names_block;</span>
<span class="line">  int num_subrs;</span>
<span class="line">  unsigned __int8 **subrs;</span>
<span class="line">  unsigned int *subrs_len;</span>
<span class="line">  FT_HashRec_ *subrs_hash;</span>
<span class="line">  int num_glyphs;</span>
<span class="line">  char **glyph_names;</span>
<span class="line">  unsigned __int8 **charstrings;</span>
<span class="line">  unsigned int *charstrings_len;</span>
<span class="line">  unsigned __int8 paint_type;</span>
<span class="line">  unsigned __int8 font_type;</span>
<span class="line">  FT_Matrix_ font_matrix;</span>
<span class="line">  FT_Vector_ font_offset;</span>
<span class="line">  FT_BBox_ font_bbox;</span>
<span class="line">  int font_id;</span>
<span class="line">  int stroke_width;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-cmapstdrec" tabindex="-1"><a class="header-anchor" href="#t1-cmapstdrec"><span><code>T1_CMapStdRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_CMapStdRec_</span>
<span class="line">{</span>
<span class="line">  FT_CMapRec_ cmap;</span>
<span class="line">  const unsigned __int16 *code_to_sid;</span>
<span class="line">  const char *(__fastcall *sid_to_string)(unsigned int);</span>
<span class="line">  unsigned int num_glyphs;</span>
<span class="line">  const char *const *glyph_names;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-facerec" tabindex="-1"><a class="header-anchor" href="#t1-facerec"><span><code>T1_FaceRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_FaceRec_</span>
<span class="line">{</span>
<span class="line">  FT_FaceRec_ root;</span>
<span class="line">  T1_FontRec_ type1;</span>
<span class="line">  const void *psnames;</span>
<span class="line">  const void *psaux;</span>
<span class="line">  const void *afm_data;</span>
<span class="line">  FT_CharMapRec_ charmaprecs[2];</span>
<span class="line">  FT_CharMapRec_ *charmaps[2];</span>
<span class="line">  PS_BlendRec_ *blend;</span>
<span class="line">  int ndv_idx;</span>
<span class="line">  int cdv_idx;</span>
<span class="line">  unsigned int len_buildchar;</span>
<span class="line">  int *buildchar;</span>
<span class="line">  const void *pshinter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tprofile" tabindex="-1"><a class="header-anchor" href="#tprofile"><span><code>TProfile_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TProfile_</span>
<span class="line">{</span>
<span class="line">  int X;</span>
<span class="line">  TProfile_ *link;</span>
<span class="line">  int *offset;</span>
<span class="line">  unsigned __int16 flags;</span>
<span class="line">  int height;</span>
<span class="line">  int start;</span>
<span class="line">  int countL;</span>
<span class="line">  TProfile_ *next;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmaprec" tabindex="-1"><a class="header-anchor" href="#tt-cmaprec"><span><code>TT_CMapRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_CMapRec_</span>
<span class="line">{</span>
<span class="line">  FT_CMapRec_ cmap;</span>
<span class="line">  unsigned __int8 *data;</span>
<span class="line">  int flags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmap12rec" tabindex="-1"><a class="header-anchor" href="#tt-cmap12rec"><span><code>TT_CMap12Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_CMap12Rec_</span>
<span class="line">{</span>
<span class="line">  TT_CMapRec_ cmap;</span>
<span class="line">  unsigned __int8 valid;</span>
<span class="line">  unsigned int cur_charcode;</span>
<span class="line">  unsigned int cur_gindex;</span>
<span class="line">  unsigned int cur_group;</span>
<span class="line">  unsigned int num_groups;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmap14rec" tabindex="-1"><a class="header-anchor" href="#tt-cmap14rec"><span><code>TT_CMap14Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_CMap14Rec_</span>
<span class="line">{</span>
<span class="line">  TT_CMapRec_ cmap;</span>
<span class="line">  unsigned int num_selectors;</span>
<span class="line">  unsigned int max_results;</span>
<span class="line">  unsigned int *results;</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-validatorrec" tabindex="-1"><a class="header-anchor" href="#tt-validatorrec"><span><code>TT_ValidatorRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(16)) TT_ValidatorRec_</span>
<span class="line">{</span>
<span class="line">  FT_ValidatorRec_ validator;</span>
<span class="line">  unsigned int num_glyphs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmap13rec" tabindex="-1"><a class="header-anchor" href="#tt-cmap13rec"><span><code>TT_CMap13Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_CMap13Rec_</span>
<span class="line">{</span>
<span class="line">  TT_CMapRec_ cmap;</span>
<span class="line">  unsigned __int8 valid;</span>
<span class="line">  unsigned int cur_charcode;</span>
<span class="line">  unsigned int cur_gindex;</span>
<span class="line">  unsigned int cur_group;</span>
<span class="line">  unsigned int num_groups;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-cmap4rec" tabindex="-1"><a class="header-anchor" href="#tt-cmap4rec"><span><code>TT_CMap4Rec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TT_CMap4Rec_</span>
<span class="line">{</span>
<span class="line">  TT_CMapRec_ cmap;</span>
<span class="line">  unsigned int cur_charcode;</span>
<span class="line">  unsigned int cur_gindex;</span>
<span class="line">  unsigned int num_ranges;</span>
<span class="line">  unsigned int cur_range;</span>
<span class="line">  unsigned int cur_start;</span>
<span class="line">  unsigned int cur_end;</span>
<span class="line">  int cur_delta;</span>
<span class="line">  unsigned __int8 *cur_values;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcell" tabindex="-1"><a class="header-anchor" href="#tcell"><span><code>TCell_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TCell_</span>
<span class="line">{</span>
<span class="line">  int x;</span>
<span class="line">  int cover;</span>
<span class="line">  int area;</span>
<span class="line">  TCell_ *next;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tt-driverrec" tabindex="-1"><a class="header-anchor" href="#tt-driverrec"><span><code>TT_DriverRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) TT_DriverRec_</span>
<span class="line">{</span>
<span class="line">  FT_DriverRec_ root;</span>
<span class="line">  TT_GlyphZoneRec_ zone;</span>
<span class="line">  unsigned int interpreter_version;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-loader" tabindex="-1"><a class="header-anchor" href="#t1-loader"><span><code>T1_Loader_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_Loader_</span>
<span class="line">{</span>
<span class="line">  T1_ParserRec_ parser;</span>
<span class="line">  int num_chars;</span>
<span class="line">  PS_TableRec_ encoding_table;</span>
<span class="line">  int num_glyphs;</span>
<span class="line">  PS_TableRec_ glyph_names;</span>
<span class="line">  PS_TableRec_ charstrings;</span>
<span class="line">  PS_TableRec_ swap_table;</span>
<span class="line">  int num_subrs;</span>
<span class="line">  PS_TableRec_ subrs;</span>
<span class="line">  FT_HashRec_ *subrs_hash;</span>
<span class="line">  unsigned __int8 fontdata;</span>
<span class="line">  unsigned int keywords_encountered;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-sizerec" tabindex="-1"><a class="header-anchor" href="#t1-sizerec"><span><code>T1_SizeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T1_SizeRec_</span>
<span class="line">{</span>
<span class="line">  FT_SizeRec_ root;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t1-glyphslotrec" tabindex="-1"><a class="header-anchor" href="#t1-glyphslotrec"><span><code>T1_GlyphSlotRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) T1_GlyphSlotRec_</span>
<span class="line">{</span>
<span class="line">  FT_GlyphSlotRec_ root;</span>
<span class="line">  unsigned __int8 hint;</span>
<span class="line">  unsigned __int8 scaled;</span>
<span class="line">  int x_scale;</span>
<span class="line">  int y_scale;</span>
<span class="line">  int max_points;</span>
<span class="line">  int max_contours;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t42-driverrec" tabindex="-1"><a class="header-anchor" href="#t42-driverrec"><span><code>T42_DriverRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T42_DriverRec_</span>
<span class="line">{</span>
<span class="line">  FT_DriverRec_ root;</span>
<span class="line">  FT_Driver_ClassRec_ *ttclazz;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t42-glyphslotrec" tabindex="-1"><a class="header-anchor" href="#t42-glyphslotrec"><span><code>T42_GlyphSlotRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T42_GlyphSlotRec_</span>
<span class="line">{</span>
<span class="line">  FT_GlyphSlotRec_ root;</span>
<span class="line">  FT_GlyphSlotRec_ *ttslot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t42-loader" tabindex="-1"><a class="header-anchor" href="#t42-loader"><span><code>T42_Loader_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T42_Loader_</span>
<span class="line">{</span>
<span class="line">  T42_ParserRec_ parser;</span>
<span class="line">  int num_chars;</span>
<span class="line">  PS_TableRec_ encoding_table;</span>
<span class="line">  int num_glyphs;</span>
<span class="line">  PS_TableRec_ glyph_names;</span>
<span class="line">  PS_TableRec_ charstrings;</span>
<span class="line">  PS_TableRec_ swap_table;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t42-facerec" tabindex="-1"><a class="header-anchor" href="#t42-facerec"><span><code>T42_FaceRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T42_FaceRec_</span>
<span class="line">{</span>
<span class="line">  FT_FaceRec_ root;</span>
<span class="line">  T1_FontRec_ type1;</span>
<span class="line">  const void *psnames;</span>
<span class="line">  const void *psaux;</span>
<span class="line">  unsigned __int8 *ttf_data;</span>
<span class="line">  int ttf_size;</span>
<span class="line">  FT_FaceRec_ *ttf_face;</span>
<span class="line">  FT_CharMapRec_ charmaprecs[2];</span>
<span class="line">  FT_CharMapRec_ *charmaps[2];</span>
<span class="line">  PS_UnicodesRec_ unicode_map;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="t42-sizerec" tabindex="-1"><a class="header-anchor" href="#t42-sizerec"><span><code>T42_SizeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct T42_SizeRec_</span>
<span class="line">{</span>
<span class="line">  FT_SizeRec_ root;</span>
<span class="line">  FT_SizeRec_ *ttsize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threadinfo-profilegroupinfo" tabindex="-1"><a class="header-anchor" href="#threadinfo-profilegroupinfo"><span><code>ThreadInfo::ProfileGroupInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThreadInfo::ProfileGroupInfo</span>
<span class="line">{</span>
<span class="line">  int mStackDepth;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threadinfo" tabindex="-1"><a class="header-anchor" href="#threadinfo"><span><code>ThreadInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ThreadInfo</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ThreadInfo::ProfileGroupInfo&gt; mProfileGroups;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teedataobject" tabindex="-1"><a class="header-anchor" href="#teedataobject"><span><code>teedataobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct teedataobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *it;</span>
<span class="line">  int numread;</span>
<span class="line">  _object *nextlink;</span>
<span class="line">  _object *values[57];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="takewhileobject" tabindex="-1"><a class="header-anchor" href="#takewhileobject"><span><code>takewhileobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) takewhileobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *func;</span>
<span class="line">  _object *it;</span>
<span class="line">  int stop;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="teeobject" tabindex="-1"><a class="header-anchor" href="#teeobject"><span><code>teeobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct teeobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  teedataobject *dataobj;</span>
<span class="line">  int index;</span>
<span class="line">  _object *weakreflist;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tcp-keepalive" tabindex="-1"><a class="header-anchor" href="#tcp-keepalive"><span><code>tcp_keepalive</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tcp_keepalive</span>
<span class="line">{</span>
<span class="line">  unsigned int onoff;</span>
<span class="line">  unsigned int keepalivetime;</span>
<span class="line">  unsigned int keepaliveinterval;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tupleiterobject" tabindex="-1"><a class="header-anchor" href="#tupleiterobject"><span><code>tupleiterobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tupleiterobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  int it_index;</span>
<span class="line">  PyTupleObject *it_seq;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tok-state" tabindex="-1"><a class="header-anchor" href="#tok-state"><span><code>tok_state</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tok_state</span>
<span class="line">{</span>
<span class="line">  char *buf;</span>
<span class="line">  char *cur;</span>
<span class="line">  char *inp;</span>
<span class="line">  char *end;</span>
<span class="line">  char *start;</span>
<span class="line">  int done;</span>
<span class="line">  _iobuf *fp;</span>
<span class="line">  int tabsize;</span>
<span class="line">  int indent;</span>
<span class="line">  int indstack[100];</span>
<span class="line">  int atbol;</span>
<span class="line">  int pendin;</span>
<span class="line">  char *prompt;</span>
<span class="line">  char *nextprompt;</span>
<span class="line">  int lineno;</span>
<span class="line">  int level;</span>
<span class="line">  const char *filename;</span>
<span class="line">  int altwarning;</span>
<span class="line">  int alterror;</span>
<span class="line">  int alttabsize;</span>
<span class="line">  int altindstack[100];</span>
<span class="line">  int decoding_state;</span>
<span class="line">  int decoding_erred;</span>
<span class="line">  int read_coding_spec;</span>
<span class="line">  char *encoding;</span>
<span class="line">  int cont_line;</span>
<span class="line">  const char *line_start;</span>
<span class="line">  _object *decoding_readline;</span>
<span class="line">  _object *decoding_buffer;</span>
<span class="line">  const char *enc;</span>
<span class="line">  const char *str;</span>
<span class="line">  const char *input;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-short-void" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-short-void"><span><code>tinystl::unordered_hash_node&lt;unsigned short,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned short,void&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int16 first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-short-void-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-short-void-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-set-unsigned-short-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-set-unsigned-short-bgfx-tinystlallocator"><span><code>tinystl::unordered_set&lt;unsigned short,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_set&lt;unsigned short,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-unsigned-int" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-unsigned-int"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  unsigned int second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned short,void&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; const &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; const &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; const &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-placeholder" tabindex="-1"><a class="header-anchor" href="#tinystl-placeholder"><span><code>tinystl::placeholder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::placeholder</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-short-void-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-short-void-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned short,void&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned int&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-bgfx-nonlocalallocator-free-0" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-bgfx-nonlocalallocator-free-0"><span><code>tinystl::pod_traits&lt;bgfx::NonLocalAllocator::Free,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;bgfx::NonLocalAllocator::Free,0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-id3d12resource-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-id3d12resource-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;ID3D12Resource *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;ID3D12Resource *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  ID3D12Resource **first;</span>
<span class="line">  ID3D12Resource **last;</span>
<span class="line">  ID3D12Resource **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-vector-id3d12resource-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-vector-id3d12resource-bgfx-tinystlallocator"><span><code>tinystl::vector&lt;ID3D12Resource *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::vector&lt;ID3D12Resource *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::buffer&lt;ID3D12Resource *,bgfx::TinyStlAllocator&gt; m_buffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-unsigned-short" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-unsigned-short"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  unsigned __int16 second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-unsigned-short-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-unsigned-short-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,unsigned short,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,unsigned short,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D12PipelineState *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D12PipelineState *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D12PipelineState *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-id3d12resource-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-id3d12resource-1"><span><code>tinystl::pod_traits&lt;ID3D12Resource *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;ID3D12Resource *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,unsigned short&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-unsigned-int-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-unsigned-int-1"><span><code>tinystl::pod_traits&lt;unsigned int,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;unsigned int,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-bgfx-dxbcsignature-element-0" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-bgfx-dxbcsignature-element-0"><span><code>tinystl::pod_traits&lt;bgfx::DxbcSignature::Element,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;bgfx::DxbcSignature::Element,0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-unsigned-short" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-unsigned-short"><span><code>tinystl::pair&lt;unsigned __int64,unsigned short&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;unsigned __int64,unsigned short&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  unsigned __int16 second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int-unsigned-int" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int-unsigned-int"><span><code>tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned int first;</span>
<span class="line">  unsigned int second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int-unsigned-int-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int-unsigned-int-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int-unsigned-int-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int-unsigned-int-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned int,unsigned int,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned int,unsigned int,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int-unsigned-int-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int-unsigned-int-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int-unsigned-int-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int-unsigned-int-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned int,unsigned int&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D11BlendState *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D11BlendState *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D11BlendState *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D11DepthStencilState *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D11DepthStencilState *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D11DepthStencilState *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D11InputLayout *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D11InputLayout *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D11InputLayout *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D11RasterizerState *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D11RasterizerState *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D11RasterizerState *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  ID3D11SamplerState *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,ID3D11SamplerState *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,ID3D11SamplerState *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d11blendstate" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d11blendstate"><span><code>tinystl::pair&lt;unsigned __int64,ID3D11BlendState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D11BlendState *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D11BlendState *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d11depthstencilstate" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d11depthstencilstate"><span><code>tinystl::pair&lt;unsigned __int64,ID3D11DepthStencilState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D11DepthStencilState *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D11DepthStencilState *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d11inputlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d11inputlayout"><span><code>tinystl::pair&lt;unsigned __int64,ID3D11InputLayout *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D11InputLayout *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D11InputLayout *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d11rasterizerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d11rasterizerstate"><span><code>tinystl::pair&lt;unsigned __int64,ID3D11RasterizerState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D11RasterizerState *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D11RasterizerState *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-unsigned-char-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-unsigned-char-1"><span><code>tinystl::pod_traits&lt;unsigned char,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;unsigned char,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11RasterizerState *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11DepthStencilState *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11InputLayout *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11BlendState *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d11samplerstate" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d11samplerstate"><span><code>tinystl::pair&lt;unsigned __int64,ID3D11SamplerState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D11SamplerState *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D11SamplerState *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D11SamplerState *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-id3d12pipelinestate" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-id3d12pipelinestate"><span><code>tinystl::pair&lt;unsigned __int64,ID3D12PipelineState *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,ID3D12PipelineState *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  ID3D12PipelineState *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,ID3D12PipelineState *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  IDirect3DVertexDeclaration9 *second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator"><span><code>tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; **first;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; **last;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; **capacity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-map-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-map-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator"><span><code>tinystl::unordered_map&lt;unsigned __int64,IDirect3DVertexDeclaration9 *,bgfx::TinyStlAllocator&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_map&lt;unsigned __int64,IDirect3DVertexDeclaration9 *,bgfx::TinyStlAllocator&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 m_size;</span>
<span class="line">  tinystl::buffer&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *,bgfx::TinyStlAllocator&gt; m_buckets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-idirect3dvertexdeclaration9" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-idirect3dvertexdeclaration9"><span><code>tinystl::pair&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  IDirect3DVertexDeclaration9 *second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,IDirect3DVertexDeclaration9 *&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkPipeline second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkDescriptorSetLayout second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkRenderPass second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler"><span><code>tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkSampler second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-bgfx-vk-vkrenderpass" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-bgfx-vk-vkrenderpass"><span><code>tinystl::pair&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkRenderPass second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-bgfx-vk-vkdescriptorsetlayout" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-bgfx-vk-vkdescriptorsetlayout"><span><code>tinystl::pair&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkDescriptorSetLayout second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkDescriptorSetLayout&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-unsigned-int64-bgfx-vk-vkpipeline" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-unsigned-int64-bgfx-vk-vkpipeline"><span><code>tinystl::pair&lt;unsigned __int64,bgfx::vk::VkPipeline&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pair&lt;unsigned __int64,bgfx::vk::VkPipeline&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 first;</span>
<span class="line">  bgfx::vk::VkPipeline second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkSampler&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkRenderPass&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-bool" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-bool"><span><code>tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; &gt;,bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; &gt;,bool&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; &gt; first;</span>
<span class="line">  bool second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;unsigned __int64,bgfx::vk::VkPipeline&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int"><span><code>tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::stringT&lt;bgfx::TinyStlAllocator&gt; first;</span>
<span class="line">  unsigned int second;</span>
<span class="line">  tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; *next;</span>
<span class="line">  tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pair-tinystl-stringt-bgfx-tinystlallocator-unsigned-int" tabindex="-1"><a class="header-anchor" href="#tinystl-pair-tinystl-stringt-bgfx-tinystlallocator-unsigned-int"><span><code>tinystl::pair&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) tinystl::pair&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt;</span>
<span class="line">{</span>
<span class="line">  tinystl::stringT&lt;bgfx::TinyStlAllocator&gt; first;</span>
<span class="line">  unsigned int second;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-pod-traits-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-1" tabindex="-1"><a class="header-anchor" href="#tinystl-pod-traits-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-1"><span><code>tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; *,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::pod_traits&lt;tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; *,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-const" tabindex="-1"><a class="header-anchor" href="#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-const"><span><code>tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; const &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::unordered_hash_iterator&lt;tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; const &gt;</span>
<span class="line">{</span>
<span class="line">  const tinystl::unordered_hash_node&lt;tinystl::stringT&lt;bgfx::TinyStlAllocator&gt;,unsigned int&gt; *node;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trialmanager-settrialabtest-l2-lambda-c30bbd6b5b06c9cde920159e96e64d3e-l2-lambda-eff4589c59d336c8838d8d2f4d341069" tabindex="-1"><a class="header-anchor" href="#trialmanager-settrialabtest-l2-lambda-c30bbd6b5b06c9cde920159e96e64d3e-l2-lambda-eff4589c59d336c8838d8d2f4d341069"><span><code>TrialManager::setTrialABTest::__l2::&lt;lambda_c30bbd6b5b06c9cde920159e96e64d3e&gt;::()::__l2::&lt;lambda_eff4589c59d336c8838d8d2f4d341069&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrialManager::setTrialABTest::__l2::&lt;lambda_c30bbd6b5b06c9cde920159e96e64d3e&gt;::()::__l2::&lt;lambda_eff4589c59d336c8838d8d2f4d341069&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="truetypefont-getsheet-l2-lambda-353d794a8b96987352e47142585db63e" tabindex="-1"><a class="header-anchor" href="#truetypefont-getsheet-l2-lambda-353d794a8b96987352e47142585db63e"><span><code>TrueTypeFont::getSheet::__l2::&lt;lambda_353d794a8b96987352e47142585db63e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TrueTypeFont::getSheet::__l2::&lt;lambda_353d794a8b96987352e47142585db63e&gt;</span>
<span class="line">{</span>
<span class="line">  TrueTypeFont *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="templateexportscreencontroller-picktemplateimage-l2-lambda-95e956f9c0e719a6eb64ab92ca969fed-l6-lambda-fac14e20a7e48827b06b0675210910ed" tabindex="-1"><a class="header-anchor" href="#templateexportscreencontroller-picktemplateimage-l2-lambda-95e956f9c0e719a6eb64ab92ca969fed-l6-lambda-fac14e20a7e48827b06b0675210910ed"><span><code>TemplateExportScreenController::_pickTemplateImage::__l2::&lt;lambda_95e956f9c0e719a6eb64ab92ca969fed&gt;::()::__l6::&lt;lambda_fac14e20a7e48827b06b0675210910ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TemplateExportScreenController::_pickTemplateImage::__l2::&lt;lambda_95e956f9c0e719a6eb64ab92ca969fed&gt;::()::__l6::&lt;lambda_fac14e20a7e48827b06b0675210910ed&gt;</span>
<span class="line">{</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; *fileExtension;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ttseventmanager-clearallttsevents-l2-lambda-166fbc57a43bf4c72b542d3926f6b284" tabindex="-1"><a class="header-anchor" href="#ttseventmanager-clearallttsevents-l2-lambda-166fbc57a43bf4c72b542d3926f6b284"><span><code>TTSEventManager::clearAllTTSEvents::__l2::&lt;lambda_166fbc57a43bf4c72b542d3926f6b284&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TTSEventManager::clearAllTTSEvents::__l2::&lt;lambda_166fbc57a43bf4c72b542d3926f6b284&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="texturesethelpers-texturesetdefinitionparser-postvalidation-l2-lambda-ccfc458045cdb218bb681a058ac9c64c" tabindex="-1"><a class="header-anchor" href="#texturesethelpers-texturesetdefinitionparser-postvalidation-l2-lambda-ccfc458045cdb218bb681a058ac9c64c"><span><code>TextureSetHelpers::TextureSetDefinitionParser::_postValidation::__l2::&lt;lambda_ccfc458045cdb218bb681a058ac9c64c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TextureSetHelpers::TextureSetDefinitionParser::_postValidation::__l2::&lt;lambda_ccfc458045cdb218bb681a058ac9c64c&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_set&lt;std::string&gt; *specifiedLayers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transformationcomponent-maintainolddata-l2-lambda-0ebed9bb243823bd2c6449afa59ff071" tabindex="-1"><a class="header-anchor" href="#transformationcomponent-maintainolddata-l2-lambda-0ebed9bb243823bd2c6449afa59ff071"><span><code>TransformationComponent::maintainOldData::__l2::&lt;lambda_0ebed9bb243823bd2c6449afa59ff071&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TransformationComponent::maintainOldData::__l2::&lt;lambda_0ebed9bb243823bd2c6449afa59ff071&gt;</span>
<span class="line">{</span>
<span class="line">  SynchedActorData *originalData;</span>
<span class="line">  SynchedActorData *transformedData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treatmentpacksource-load-l5-lambda-b6e7809886387660f36c54eb091a8cb1-l6-lambda-c49aa7eff27558e257190c445686bc48" tabindex="-1"><a class="header-anchor" href="#treatmentpacksource-load-l5-lambda-b6e7809886387660f36c54eb091a8cb1-l6-lambda-c49aa7eff27558e257190c445686bc48"><span><code>TreatmentPackSource::load::__l5::&lt;lambda_b6e7809886387660f36c54eb091a8cb1&gt;::()::__l6::&lt;lambda_c49aa7eff27558e257190c445686bc48&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreatmentPackSource::load::__l5::&lt;lambda_b6e7809886387660f36c54eb091a8cb1&gt;::()::__l6::&lt;lambda_c49aa7eff27558e257190c445686bc48&gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Pack&gt; *pack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlerawcommand-sendtitlepackettextobject-l5-lambda-48454f3bf36a4e2de18c670fda8587c6" tabindex="-1"><a class="header-anchor" href="#titlerawcommand-sendtitlepackettextobject-l5-lambda-48454f3bf36a4e2de18c670fda8587c6"><span><code>TitleRawCommand::_sendTitlePacketTextObject::__l5::&lt;lambda_48454f3bf36a4e2de18c670fda8587c6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TitleRawCommand::_sendTitlePacketTextObject::__l5::&lt;lambda_48454f3bf36a4e2de18c670fda8587c6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tellrawcommand-execute-l14-lambda-90cef47ec8b6c76c849ede2c103fd1bf" tabindex="-1"><a class="header-anchor" href="#tellrawcommand-execute-l14-lambda-90cef47ec8b6c76c849ede2c103fd1bf"><span><code>TellRawCommand::execute::__l14::&lt;lambda_90cef47ec8b6c76c849ede2c103fd1bf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TellRawCommand::execute::__l14::&lt;lambda_90cef47ec8b6c76c849ede2c103fd1bf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="titlerawcommand-execute-l2-lambda-5b9cafa6ff6d46b3d004c39e0990394f" tabindex="-1"><a class="header-anchor" href="#titlerawcommand-execute-l2-lambda-5b9cafa6ff6d46b3d004c39e0990394f"><span><code>TitleRawCommand::execute::__l2::&lt;lambda_5b9cafa6ff6d46b3d004c39e0990394f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TitleRawCommand::execute::__l2::&lt;lambda_5b9cafa6ff6d46b3d004c39e0990394f&gt;</span>
<span class="line">{</span>
<span class="line">  const TitleRawCommand *const __this;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">  CommandSelectorResults&lt;Player&gt; *targets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tagcommand-listtags-l2-lambda-c84dc9b6a1b3669bc322e4aa9ab60776" tabindex="-1"><a class="header-anchor" href="#tagcommand-listtags-l2-lambda-c84dc9b6a1b3669bc322e4aa9ab60776"><span><code>TagCommand::_listTags::__l2::&lt;lambda_c84dc9b6a1b3669bc322e4aa9ab60776&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TagCommand::_listTags::__l2::&lt;lambda_c84dc9b6a1b3669bc322e4aa9ab60776&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="textobjectparser-parseselectortextobject-l2-lambda-5827802121b532aadf729a581dac69a9" tabindex="-1"><a class="header-anchor" href="#textobjectparser-parseselectortextobject-l2-lambda-5827802121b532aadf729a581dac69a9"><span><code>TextObjectParser::_parseSelectorTextObject::__l2::&lt;lambda_5827802121b532aadf729a581dac69a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TextObjectParser::_parseSelectorTextObject::__l2::&lt;lambda_5827802121b532aadf729a581dac69a9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098-l2-literal" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098-l2-literal"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_153bf7c72ef5d891dfc82eaf261a9098&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_153bf7c72ef5d891dfc82eaf261a9098&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416-l2-literal" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416-l2-literal"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_4d52faecc4bfe184f922644e28fd1416&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_4d52faecc4bfe184f922644e28fd1416&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598-l2-literal" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598-l2-literal"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_2676d2d87e2d93db1c35d755ebed2598&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_2676d2d87e2d93db1c35d755ebed2598&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_153bf7c72ef5d891dfc82eaf261a9098&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_153bf7c72ef5d891dfc82eaf261a9098&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_2676d2d87e2d93db1c35d755ebed2598&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_2676d2d87e2d93db1c35d755ebed2598&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416" tabindex="-1"><a class="header-anchor" href="#tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416"><span><code>TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_4d52faecc4bfe184f922644e28fd1416&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TropicalFish::updateEntitySpecificMolangVariables::__l2::&lt;lambda_4d52faecc4bfe184f922644e28fd1416&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75-l2-literal" tabindex="-1"><a class="header-anchor" href="#tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75-l2-literal"><span><code>TripodCamera::updateEntitySpecificMolangVariables::__l2::&lt;lambda_b93ca8c09ad5ed9c2d4ef65764501a75&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TripodCamera::updateEntitySpecificMolangVariables::__l2::&lt;lambda_b93ca8c09ad5ed9c2d4ef65764501a75&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75" tabindex="-1"><a class="header-anchor" href="#tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75"><span><code>TripodCamera::updateEntitySpecificMolangVariables::__l2::&lt;lambda_b93ca8c09ad5ed9c2d4ef65764501a75&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TripodCamera::updateEntitySpecificMolangVariables::__l2::&lt;lambda_b93ca8c09ad5ed9c2d4ef65764501a75&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareasmanager-processadds-l4-lambda-63152a68d4422458414da9e103d40c16" tabindex="-1"><a class="header-anchor" href="#tickingareasmanager-processadds-l4-lambda-63152a68d4422458414da9e103d40c16"><span><code>TickingAreasManager::_processAdds::__l4::&lt;lambda_63152a68d4422458414da9e103d40c16&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingAreasManager::_processAdds::__l4::&lt;lambda_63152a68d4422458414da9e103d40c16&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareasmanager-processadds-l7-lambda-e901f167a717222a1fd8ef2ad4565724" tabindex="-1"><a class="header-anchor" href="#tickingareasmanager-processadds-l7-lambda-e901f167a717222a1fd8ef2ad4565724"><span><code>TickingAreasManager::_processAdds::__l7::&lt;lambda_e901f167a717222a1fd8ef2ad4565724&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingAreasManager::_processAdds::__l7::&lt;lambda_e901f167a717222a1fd8ef2ad4565724&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tickingareasmanager-requeueentityarea-l2-lambda-09aa79e11f608c65fa6ce4e15589cb72" tabindex="-1"><a class="header-anchor" href="#tickingareasmanager-requeueentityarea-l2-lambda-09aa79e11f608c65fa6ce4e15589cb72"><span><code>TickingAreasManager::_requeueEntityArea::__l2::&lt;lambda_09aa79e11f608c65fa6ce4e15589cb72&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TickingAreasManager::_requeueEntityArea::__l2::&lt;lambda_09aa79e11f608c65fa6ce4e15589cb72&gt;</span>
<span class="line">{</span>
<span class="line">  const ActorUniqueID *entityId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_f533ab86d1884dfcc519909eacc041e1&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_f533ab86d1884dfcc519909eacc041e1&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_f533ab86d1884dfcc519909eacc041e1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_f533ab86d1884dfcc519909eacc041e1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_316bfc304bdbebc8fca92470bfb64ac8&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_316bfc304bdbebc8fca92470bfb64ac8&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_316bfc304bdbebc8fca92470bfb64ac8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_316bfc304bdbebc8fca92470bfb64ac8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_c210cc24a08cbb4b0a1f4a27569b8da3&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_c210cc24a08cbb4b0a1f4a27569b8da3&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_c210cc24a08cbb4b0a1f4a27569b8da3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_c210cc24a08cbb4b0a1f4a27569b8da3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_0cdc4f7a090cfec7fa19fe15fd63dac7&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_0cdc4f7a090cfec7fa19fe15fd63dac7&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_0cdc4f7a090cfec7fa19fe15fd63dac7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_0cdc4f7a090cfec7fa19fe15fd63dac7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_06388885ee2d8055895fa3b9a937a087&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_06388885ee2d8055895fa3b9a937a087&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_06388885ee2d8055895fa3b9a937a087&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_06388885ee2d8055895fa3b9a937a087&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_d3254b4d25ff1821a3cd24c1d807c792&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_d3254b4d25ff1821a3cd24c1d807c792&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_d3254b4d25ff1821a3cd24c1d807c792&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_d3254b4d25ff1821a3cd24c1d807c792&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209-l2-literal"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_244d7cc81ad86e682410034be2e19209&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_244d7cc81ad86e682410034be2e19209&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209" tabindex="-1"><a class="header-anchor" href="#treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209"><span><code>TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_244d7cc81ad86e682410034be2e19209&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::AttachableDecoration::buildSchema::__l2::&lt;lambda_244d7cc81ad86e682410034be2e19209&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e-l2-literal" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e-l2-literal"><span><code>TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_8fc19ea07e2c80707579cacdb274625e&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_8fc19ea07e2c80707579cacdb274625e&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e" tabindex="-1"><a class="header-anchor" href="#treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e"><span><code>TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_8fc19ea07e2c80707579cacdb274625e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TreeHelper::TreeParams::buildSchema::__l2::&lt;lambda_8fc19ea07e2c80707579cacdb274625e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touchmapper-tick-l4-lambda-dee5fc28587d2581bc2aae741d21bd8b" tabindex="-1"><a class="header-anchor" href="#touchmapper-tick-l4-lambda-dee5fc28587d2581bc2aae741d21bd8b"><span><code>TouchMapper::tick::__l4::&lt;lambda_dee5fc28587d2581bc2aae741d21bd8b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj TouchMapper::tick::__l4::&lt;lambda_dee5fc28587d2581bc2aae741d21bd8b&gt;</span>
<span class="line">{</span>
<span class="line">  int p;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tencoding" tabindex="-1"><a class="header-anchor" href="#tencoding"><span><code>TEncoding_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct TEncoding_</span>
<span class="line">{</span>
<span class="line">  int platform_id;</span>
<span class="line">  int encoding_id;</span>
<span class="line">  FT_Encoding_ encoding;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tinystl-list-bgfx-nonlocalallocator-free-bgfx-tinystlallocator-sort-l2-lambda-2ab4b9f78ebe988ca785909f38c65d48" tabindex="-1"><a class="header-anchor" href="#tinystl-list-bgfx-nonlocalallocator-free-bgfx-tinystlallocator-sort-l2-lambda-2ab4b9f78ebe988ca785909f38c65d48"><span><code>tinystl::list&lt;bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator&gt;::sort::__l2::&lt;lambda_2ab4b9f78ebe988ca785909f38c65d48&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj tinystl::list&lt;bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator&gt;::sort::__l2::&lt;lambda_2ab4b9f78ebe988ca785909f38c65d48&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="togglecomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#togglecomponent-vtbl"><span><code>ToggleComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ToggleComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tripodcamera-vtbl" tabindex="-1"><a class="header-anchor" href="#tripodcamera-vtbl"><span><code>TripodCamera_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TripodCamera_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="theenddimension-vtbl" tabindex="-1"><a class="header-anchor" href="#theenddimension-vtbl"><span><code>TheEndDimension_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TheEndDimension_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);</span>
<span class="line">  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);</span>
<span class="line">  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);</span>
<span class="line">  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr&lt;BlockActor&gt;);</span>
<span class="line">  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);</span>
<span class="line">  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);</span>
<span class="line">  void (__fastcall *allChanged)(LevelListener *this);</span>
<span class="line">  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);</span>
<span class="line">  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);</span>
<span class="line">  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);</span>
<span class="line">  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);</span>
<span class="line">  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);</span>
<span class="line">  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);</span>
<span class="line">  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);</span>
<span class="line">  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);</span>
<span class="line">  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);</span>
<span class="line">  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);</span>
<span class="line">  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);</span>
<span class="line">  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);</span>
<span class="line">  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);</span>
<span class="line">  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);</span>
<span class="line">  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);</span>
<span class="line">  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);</span>
<span class="line">  void (__fastcall *stopAllSounds)(LevelListener *this);</span>
<span class="line">  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);</span>
<span class="line">  void (__fastcall *playerListChanged)(LevelListener *this);</span>
<span class="line">  void (__fastcall *init)(Dimension *this);</span>
<span class="line">  void (__fastcall *tick)(Dimension *this);</span>
<span class="line">  void (__fastcall *tickRedstone)(Dimension *this);</span>
<span class="line">  std::tuple&lt;std::unique_ptr&lt;ChunkSource&gt;,WorldGenerator *&gt; *(__fastcall *createGenerator)(Dimension *this, std::tuple&lt;std::unique_ptr&lt;ChunkSource&gt;,WorldGenerator *&gt; *result);</span>
<span class="line">  void (__fastcall *upgradeLevelChunk)(Dimension *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *fixWallChunk)(Dimension *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  bool (__fastcall *isNaturalDimension)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isValidSpawn)(Dimension *this, int, int);</span>
<span class="line">  mce::Color *(__fastcall *getBrightnessDependentFogColor)(Dimension *this, mce::Color *result, const mce::Color *, float);</span>
<span class="line">  float (__fastcall *getMaxFogEnd)(Dimension *this);</span>
<span class="line">  float (__fastcall *getMaxFogStart)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isFoggyAt)(Dimension *this, int, int);</span>
<span class="line">  __int16 (__fastcall *getCloudHeight)(Dimension *this);</span>
<span class="line">  int (__fastcall *getDefaultBiome)(Dimension *this);</span>
<span class="line">  bool (__fastcall *mayRespawnViaBed)(Dimension *this);</span>
<span class="line">  bool (__fastcall *hasGround)(Dimension *this);</span>
<span class="line">  BlockPos *(__fastcall *getSpawnPos)(Dimension *this, BlockPos *result);</span>
<span class="line">  int (__fastcall *getSpawnYPosition)(Dimension *this);</span>
<span class="line">  bool (__fastcall *hasBedrockFog)(Dimension *this);</span>
<span class="line">  float (__fastcall *getClearColorScale)(Dimension *this);</span>
<span class="line">  bool (__fastcall *showSky)(Dimension *this);</span>
<span class="line">  bool (__fastcall *isDay)(Dimension *this);</span>
<span class="line">  float (__fastcall *getTimeOfDay)(Dimension *this, int, float);</span>
<span class="line">  float (__fastcall *getSunIntensity)(Dimension *this, float, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *forceCheckAllNeighChunkSavedStat)(Dimension *this);</span>
<span class="line">  Vec3 *(__fastcall *translatePosAcrossDimension)(Dimension *this, Vec3 *result, const Vec3 *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  void (__fastcall *sendBroadcast)(Dimension *this, const Packet *, Player *);</span>
<span class="line">  bool (__fastcall *is2DPositionRelevantForPlayer)(Dimension *this, const BlockPos *, Player *);</span>
<span class="line">  bool (__fastcall *isEntityRelevantForPlayer)(Dimension *this, Player *, const Actor *);</span>
<span class="line">  BaseLightTextureImageBuilder *(__fastcall *getLightTextureImageBuilder)(Dimension *this);</span>
<span class="line">  const DimensionBrightnessRamp *(__fastcall *getBrightnessRamp)(Dimension *this);</span>
<span class="line">  void (__fastcall *startLeaveGame)(Dimension *this);</span>
<span class="line">  std::unique_ptr&lt;ChunkBuildOrderPolicyBase&gt; *(__fastcall *_createChunkBuildOrderPolicy)(Dimension *this, std::unique_ptr&lt;ChunkBuildOrderPolicyBase&gt; *result);</span>
<span class="line">  void (__fastcall *_upgradeOldLimboEntity)(Dimension *this, CompoundTag *, LimboEntitiesVersion);</span>
<span class="line">  std::unique_ptr&lt;ChunkSource&gt; *(__fastcall *_wrapStorageForVersionCompatibility)(Dimension *this, std::unique_ptr&lt;ChunkSource&gt; *result, std::unique_ptr&lt;ChunkSource&gt;, StorageVersion);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tropicalfish-vtbl" tabindex="-1"><a class="header-anchor" href="#tropicalfish-vtbl"><span><code>TropicalFish_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ TropicalFish_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turtle-vtbl" tabindex="-1"><a class="header-anchor" href="#turtle-vtbl"><span><code>Turtle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Turtle_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="throwinfo" tabindex="-1"><a class="header-anchor" href="#throwinfo"><span><code>ThrowInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef const struct _s_ThrowInfo ThrowInfo;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,833),t=[i];function c(d,o){return a(),n("div",null,t)}const p=s(l,[["render",c],["__file","T~1.html.vue"]]),v=JSON.parse('{"path":"/1.16.201/structure/T~1.html","title":"T~1","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"TakePictureCommand","slug":"takepicturecommand","link":"#takepicturecommand","children":[]},{"level":3,"title":"TakePictureCommand_vtbl","slug":"takepicturecommand-vtbl","link":"#takepicturecommand-vtbl","children":[]},{"level":3,"title":"TakePictureCommand::execute::__l2::<lambda_cc590f793e7a5cf4bb497762ce148e7d>","slug":"takepicturecommand-execute-l2-lambda-cc590f793e7a5cf4bb497762ce148e7d","link":"#takepicturecommand-execute-l2-lambda-cc590f793e7a5cf4bb497762ce148e7d","children":[]},{"level":3,"title":"TestServerCommands","slug":"testservercommands","link":"#testservercommands","children":[]},{"level":3,"title":"TagCommand","slug":"tagcommand","link":"#tagcommand","children":[]},{"level":3,"title":"TagCommand_vtbl","slug":"tagcommand-vtbl","link":"#tagcommand-vtbl","children":[]},{"level":3,"title":"TeleportCommand","slug":"teleportcommand","link":"#teleportcommand","children":[]},{"level":3,"title":"TeleportCommand_vtbl","slug":"teleportcommand-vtbl","link":"#teleportcommand-vtbl","children":[]},{"level":3,"title":"TellCommand","slug":"tellcommand","link":"#tellcommand","children":[]},{"level":3,"title":"TellCommand_vtbl","slug":"tellcommand-vtbl","link":"#tellcommand-vtbl","children":[]},{"level":3,"title":"TellRawCommand","slug":"tellrawcommand","link":"#tellrawcommand","children":[]},{"level":3,"title":"TellRawCommand_vtbl","slug":"tellrawcommand-vtbl","link":"#tellrawcommand-vtbl","children":[]},{"level":3,"title":"TestForBlockCommand","slug":"testforblockcommand","link":"#testforblockcommand","children":[]},{"level":3,"title":"TestForBlockCommand_vtbl","slug":"testforblockcommand-vtbl","link":"#testforblockcommand-vtbl","children":[]},{"level":3,"title":"TestForBlocksCommand","slug":"testforblockscommand","link":"#testforblockscommand","children":[]},{"level":3,"title":"TestForBlocksCommand_vtbl","slug":"testforblockscommand-vtbl","link":"#testforblockscommand-vtbl","children":[]},{"level":3,"title":"TestForCommand","slug":"testforcommand","link":"#testforcommand","children":[]},{"level":3,"title":"TestForCommand_vtbl","slug":"testforcommand-vtbl","link":"#testforcommand-vtbl","children":[]},{"level":3,"title":"TickingAreaCommand","slug":"tickingareacommand","link":"#tickingareacommand","children":[]},{"level":3,"title":"TickingAreaCommand_vtbl","slug":"tickingareacommand-vtbl","link":"#tickingareacommand-vtbl","children":[]},{"level":3,"title":"TimeCommand","slug":"timecommand","link":"#timecommand","children":[]},{"level":3,"title":"TimeCommand_vtbl","slug":"timecommand-vtbl","link":"#timecommand-vtbl","children":[]},{"level":3,"title":"TitleCommand","slug":"titlecommand","link":"#titlecommand","children":[]},{"level":3,"title":"TitleCommand_vtbl","slug":"titlecommand-vtbl","link":"#titlecommand-vtbl","children":[]},{"level":3,"title":"TitleRawCommand","slug":"titlerawcommand","link":"#titlerawcommand","children":[]},{"level":3,"title":"TitleRawCommand_vtbl","slug":"titlerawcommand-vtbl","link":"#titlerawcommand-vtbl","children":[]},{"level":3,"title":"ToggleDownfallCommand","slug":"toggledownfallcommand","link":"#toggledownfallcommand","children":[]},{"level":3,"title":"ToggleDownfallCommand_vtbl","slug":"toggledownfallcommand-vtbl","link":"#toggledownfallcommand-vtbl","children":[]},{"level":3,"title":"TickingAreaCommand::_list::__l15::<lambda_ef527cf2db8145510630afcadcb9e9a5>","slug":"tickingareacommand-list-l15-lambda-ef527cf2db8145510630afcadcb9e9a5","link":"#tickingareacommand-list-l15-lambda-ef527cf2db8145510630afcadcb9e9a5","children":[]},{"level":3,"title":"TeleportCommand::execute::__l32::<lambda_d12bd4980707bc17e4326e7408eadb2e>","slug":"teleportcommand-execute-l32-lambda-d12bd4980707bc17e4326e7408eadb2e","link":"#teleportcommand-execute-l32-lambda-d12bd4980707bc17e4326e7408eadb2e","children":[]},{"level":3,"title":"TagsComponent<IDType<LevelTagSetIDType> >","slug":"tagscomponent-idtype-leveltagsetidtype","link":"#tagscomponent-idtype-leveltagsetidtype","children":[]},{"level":3,"title":"tree_desc_s","slug":"tree-desc-s","link":"#tree-desc-s","children":[]},{"level":3,"title":"TimeStamp","slug":"timestamp","link":"#timestamp","children":[]},{"level":3,"title":"TropicalFish","slug":"tropicalfish","link":"#tropicalfish","children":[]},{"level":3,"title":"TargetGoalDefinition","slug":"targetgoaldefinition","link":"#targetgoaldefinition","children":[]},{"level":3,"title":"TargetGoalDefinition_vtbl","slug":"targetgoaldefinition-vtbl","link":"#targetgoaldefinition-vtbl","children":[]},{"level":3,"title":"TargetGoal","slug":"targetgoal","link":"#targetgoal","children":[]},{"level":3,"title":"TargetGoal_vtbl","slug":"targetgoal-vtbl","link":"#targetgoal-vtbl","children":[]},{"level":3,"title":"typeid_t<Goal>","slug":"typeid-t-goal","link":"#typeid-t-goal","children":[]},{"level":3,"title":"Turtle","slug":"turtle","link":"#turtle","children":[]},{"level":3,"title":"TestNode","slug":"testnode","link":"#testnode","children":[]},{"level":3,"title":"TestNode_vtbl","slug":"testnode-vtbl","link":"#testnode-vtbl","children":[]},{"level":3,"title":"TestDefinition","slug":"testdefinition","link":"#testdefinition","children":[]},{"level":3,"title":"TestDefinition_vtbl","slug":"testdefinition-vtbl","link":"#testdefinition-vtbl","children":[]},{"level":3,"title":"TierComponentDescription","slug":"tiercomponentdescription","link":"#tiercomponentdescription","children":[]},{"level":3,"title":"TierComponentDescription_vtbl","slug":"tiercomponentdescription-vtbl","link":"#tiercomponentdescription-vtbl","children":[]},{"level":3,"title":"TierComponent","slug":"tiercomponent","link":"#tiercomponent","children":[]},{"level":3,"title":"ThrownEgg","slug":"thrownegg","link":"#thrownegg","children":[]},{"level":3,"title":"ThrownEgg_vtbl","slug":"thrownegg-vtbl","link":"#thrownegg-vtbl","children":[]},{"level":3,"title":"ThrownEnderpearl","slug":"thrownenderpearl","link":"#thrownenderpearl","children":[]},{"level":3,"title":"ThrownEnderpearl_vtbl","slug":"thrownenderpearl-vtbl","link":"#thrownenderpearl-vtbl","children":[]},{"level":3,"title":"ThrownIceBomb","slug":"thrownicebomb","link":"#thrownicebomb","children":[]},{"level":3,"title":"ThrownIceBomb_vtbl","slug":"thrownicebomb-vtbl","link":"#thrownicebomb-vtbl","children":[]},{"level":3,"title":"TradeIngredientContainerController","slug":"tradeingredientcontainercontroller","link":"#tradeingredientcontainercontroller","children":[]},{"level":3,"title":"TradeIngredientContainerController_vtbl","slug":"tradeingredientcontainercontroller-vtbl","link":"#tradeingredientcontainercontroller-vtbl","children":[]},{"level":3,"title":"TradeContainerManagerController::_setupCallbacks::__l2::<lambda_6ead60eba553363bbbfc19e792c62b61>","slug":"tradecontainermanagercontroller-setupcallbacks-l2-lambda-6ead60eba553363bbbfc19e792c62b61","link":"#tradecontainermanagercontroller-setupcallbacks-l2-lambda-6ead60eba553363bbbfc19e792c62b61","children":[]},{"level":3,"title":"TradeContainerManagerController::_setupCallbacks::__l2::<lambda_a0152511d2602a805c722ce7437a7a50>","slug":"tradecontainermanagercontroller-setupcallbacks-l2-lambda-a0152511d2602a805c722ce7437a7a50","link":"#tradecontainermanagercontroller-setupcallbacks-l2-lambda-a0152511d2602a805c722ce7437a7a50","children":[]},{"level":3,"title":"Trade2ContainerManagerController::_setupCallbacks::__l2::<lambda_0ba538fec63dfff7a8c31c230ccd8490>","slug":"trade2containermanagercontroller-setupcallbacks-l2-lambda-0ba538fec63dfff7a8c31c230ccd8490","link":"#trade2containermanagercontroller-setupcallbacks-l2-lambda-0ba538fec63dfff7a8c31c230ccd8490","children":[]},{"level":3,"title":"Trade2ContainerManagerController::_setupCallbacks::__l2::<lambda_500a8ea3460df322e01d98c97ed7c9b2>","slug":"trade2containermanagercontroller-setupcallbacks-l2-lambda-500a8ea3460df322e01d98c97ed7c9b2","link":"#trade2containermanagercontroller-setupcallbacks-l2-lambda-500a8ea3460df322e01d98c97ed7c9b2","children":[]},{"level":3,"title":"TorchBlock","slug":"torchblock","link":"#torchblock","children":[]},{"level":3,"title":"TorchBlock_vtbl","slug":"torchblock-vtbl","link":"#torchblock-vtbl","children":[]},{"level":3,"title":"ToolRecipes","slug":"toolrecipes","link":"#toolrecipes","children":[]},{"level":3,"title":"TridentImpalerEnchant","slug":"tridentimpalerenchant","link":"#tridentimpalerenchant","children":[]},{"level":3,"title":"TridentImpalerEnchant_vtbl","slug":"tridentimpalerenchant-vtbl","link":"#tridentimpalerenchant-vtbl","children":[]},{"level":3,"title":"TridentRiptideEnchant","slug":"tridentriptideenchant","link":"#tridentriptideenchant","children":[]},{"level":3,"title":"TridentRiptideEnchant_vtbl","slug":"tridentriptideenchant-vtbl","link":"#tridentriptideenchant-vtbl","children":[]},{"level":3,"title":"TridentLoyaltyEnchant","slug":"tridentloyaltyenchant","link":"#tridentloyaltyenchant","children":[]},{"level":3,"title":"TridentLoyaltyEnchant_vtbl","slug":"tridentloyaltyenchant-vtbl","link":"#tridentloyaltyenchant-vtbl","children":[]},{"level":3,"title":"TridentChannelingEnchant","slug":"tridentchannelingenchant","link":"#tridentchannelingenchant","children":[]},{"level":3,"title":"TridentChannelingEnchant_vtbl","slug":"tridentchannelingenchant-vtbl","link":"#tridentchannelingenchant-vtbl","children":[]},{"level":3,"title":"TntBlock","slug":"tntblock","link":"#tntblock","children":[]},{"level":3,"title":"TntBlock_vtbl","slug":"tntblock-vtbl","link":"#tntblock-vtbl","children":[]},{"level":3,"title":"TopSnowBlockItem","slug":"topsnowblockitem","link":"#topsnowblockitem","children":[]},{"level":3,"title":"TagsComponent<IDType<BiomeTagSetIDType> >","slug":"tagscomponent-idtype-biometagsetidtype","link":"#tagscomponent-idtype-biometagsetidtype","children":[]},{"level":3,"title":"TransporterComponent","slug":"transportercomponent","link":"#transportercomponent","children":[]},{"level":3,"title":"TransporterComponent_vtbl","slug":"transportercomponent-vtbl","link":"#transportercomponent-vtbl","children":[]},{"level":3,"title":"TerrainBurstReactionComponent","slug":"terrainburstreactioncomponent","link":"#terrainburstreactioncomponent","children":[]},{"level":3,"title":"TerrainBurstReactionComponent_vtbl","slug":"terrainburstreactioncomponent-vtbl","link":"#terrainburstreactioncomponent-vtbl","children":[]},{"level":3,"title":"TransformComponentDescription","slug":"transformcomponentdescription","link":"#transformcomponentdescription","children":[]},{"level":3,"title":"TransformComponentDescription_vtbl","slug":"transformcomponentdescription-vtbl","link":"#transformcomponentdescription-vtbl","children":[]},{"level":3,"title":"TallGrass","slug":"tallgrass","link":"#tallgrass","children":[]},{"level":3,"title":"TallGrass_vtbl","slug":"tallgrass-vtbl","link":"#tallgrass-vtbl","children":[]},{"level":3,"title":"TrapDoorBlock","slug":"trapdoorblock","link":"#trapdoorblock","children":[]},{"level":3,"title":"TrapDoorBlock_vtbl","slug":"trapdoorblock-vtbl","link":"#trapdoorblock-vtbl","children":[]},{"level":3,"title":"ThinFenceBlock","slug":"thinfenceblock","link":"#thinfenceblock","children":[]},{"level":3,"title":"ThinFenceBlock_vtbl","slug":"thinfenceblock-vtbl","link":"#thinfenceblock-vtbl","children":[]},{"level":3,"title":"TripWireHookBlock","slug":"tripwirehookblock","link":"#tripwirehookblock","children":[]},{"level":3,"title":"TripWireHookBlock_vtbl","slug":"tripwirehookblock-vtbl","link":"#tripwirehookblock-vtbl","children":[]},{"level":3,"title":"TurtleEggBlock","slug":"turtleeggblock","link":"#turtleeggblock","children":[]},{"level":3,"title":"TurtleEggBlock_vtbl","slug":"turtleeggblock-vtbl","link":"#turtleeggblock-vtbl","children":[]},{"level":3,"title":"TargetBlock","slug":"targetblock","link":"#targetblock","children":[]},{"level":3,"title":"TargetBlock_vtbl","slug":"targetblock-vtbl","link":"#targetblock-vtbl","children":[]},{"level":3,"title":"TurtleEggBlock::_destroyEgg::__l19::<lambda_269ba72276ec6875a2f570f4af2d700d>","slug":"turtleeggblock-destroyegg-l19-lambda-269ba72276ec6875a2f570f4af2d700d","link":"#turtleeggblock-destroyegg-l19-lambda-269ba72276ec6875a2f570f4af2d700d","children":[]},{"level":3,"title":"TripWireBlock::entityInside::__l11::<lambda_a7ce562379b7c702df77d878f0eca511>","slug":"tripwireblock-entityinside-l11-lambda-a7ce562379b7c702df77d878f0eca511","link":"#tripwireblock-entityinside-l11-lambda-a7ce562379b7c702df77d878f0eca511","children":[]},{"level":3,"title":"TreeHelper::TreeParams","slug":"treehelper-treeparams","link":"#treehelper-treeparams","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration","slug":"treehelper-attachabledecoration","link":"#treehelper-attachabledecoration","children":[]},{"level":3,"title":"TransactionalWorldBlockTarget","slug":"transactionalworldblocktarget","link":"#transactionalworldblocktarget","children":[]},{"level":3,"title":"TransactionalWorldBlockTarget_vtbl","slug":"transactionalworldblocktarget-vtbl","link":"#transactionalworldblocktarget-vtbl","children":[]},{"level":3,"title":"TemplateStructurePiece","slug":"templatestructurepiece","link":"#templatestructurepiece","children":[]},{"level":3,"title":"TemplateStructurePiece_vtbl","slug":"templatestructurepiece-vtbl","link":"#templatestructurepiece-vtbl","children":[]},{"level":3,"title":"TickingAreaView::tick::__l24::<lambda_e93ece0c982b1407c5f6ea0f18f0084f>","slug":"tickingareaview-tick-l24-lambda-e93ece0c982b1407c5f6ea0f18f0084f","link":"#tickingareaview-tick-l24-lambda-e93ece0c982b1407c5f6ea0f18f0084f","children":[]},{"level":3,"title":"TickingArea::{ctor}::__l2::<lambda_ecbdd7020b8c77fb7806c64c03108081>","slug":"tickingarea-ctor-l2-lambda-ecbdd7020b8c77fb7806c64c03108081","link":"#tickingarea-ctor-l2-lambda-ecbdd7020b8c77fb7806c64c03108081","children":[]},{"level":3,"title":"tagXHR_COOKIE","slug":"tagxhr-cookie","link":"#tagxhr-cookie","children":[]},{"level":3,"title":"TagHelper","slug":"taghelper","link":"#taghelper","children":[]},{"level":3,"title":"tagRPC_CALL_ATTRIBUTES_V3_W","slug":"tagrpc-call-attributes-v3-w","link":"#tagrpc-call-attributes-v3-w","children":[]},{"level":3,"title":"tagServerInformation","slug":"tagserverinformation","link":"#tagserverinformation","children":[]},{"level":3,"title":"tagRPC_CALL_ATTRIBUTES_V3_A","slug":"tagrpc-call-attributes-v3-a","link":"#tagrpc-call-attributes-v3-a","children":[]},{"level":3,"title":"tPatchUpdateInfo","slug":"tpatchupdateinfo","link":"#tpatchupdateinfo","children":[]},{"level":3,"title":"TransferHandler::notifyPythonUpdateState::__l2::<lambda_afd70fad5bd69b087231a1a613a8b71d>","slug":"transferhandler-notifypythonupdatestate-l2-lambda-afd70fad5bd69b087231a1a613a8b71d","link":"#transferhandler-notifypythonupdatestate-l2-lambda-afd70fad5bd69b087231a1a613a8b71d","children":[]},{"level":3,"title":"trace_t","slug":"trace-t","link":"#trace-t","children":[]},{"level":3,"title":"TierComponentDescription::buildSchema::__l2::<lambda_bcdfe114008b2394d9ad807c812ceba2>","slug":"tiercomponentdescription-buildschema-l2-lambda-bcdfe114008b2394d9ad807c812ceba2","link":"#tiercomponentdescription-buildschema-l2-lambda-bcdfe114008b2394d9ad807c812ceba2","children":[]},{"level":3,"title":"TierComponentDescription::buildSchema::__l2::<lambda_1fb0a0a39752f2be29816afd76f0350d>","slug":"tiercomponentdescription-buildschema-l2-lambda-1fb0a0a39752f2be29816afd76f0350d","link":"#tiercomponentdescription-buildschema-l2-lambda-1fb0a0a39752f2be29816afd76f0350d","children":[]},{"level":3,"title":"TierComponentDescription::buildSchema::__l2::<lambda_10780ac71d4569ba6b03abaf9d720665>","slug":"tiercomponentdescription-buildschema-l2-lambda-10780ac71d4569ba6b03abaf9d720665","link":"#tiercomponentdescription-buildschema-l2-lambda-10780ac71d4569ba6b03abaf9d720665","children":[]},{"level":3,"title":"TierComponentDescription::buildSchema::__l2::<lambda_ee1ce6d16b39680e7effbc4cb509458e>","slug":"tiercomponentdescription-buildschema-l2-lambda-ee1ce6d16b39680e7effbc4cb509458e","link":"#tiercomponentdescription-buildschema-l2-lambda-ee1ce6d16b39680e7effbc4cb509458e","children":[]},{"level":3,"title":"TransformComponentDescription::buildSchema::__l2::<lambda_5568880fee4ed2a7481f54241155db51>","slug":"transformcomponentdescription-buildschema-l2-lambda-5568880fee4ed2a7481f54241155db51","link":"#transformcomponentdescription-buildschema-l2-lambda-5568880fee4ed2a7481f54241155db51","children":[]},{"level":3,"title":"TransformComponentDescription::buildSchema::__l2::<lambda_05bff39358757891f8a72a27d6c6b4b5>","slug":"transformcomponentdescription-buildschema-l2-lambda-05bff39358757891f8a72a27d6c6b4b5","link":"#transformcomponentdescription-buildschema-l2-lambda-05bff39358757891f8a72a27d6c6b4b5","children":[]},{"level":3,"title":"TransformComponentDescription::buildSchema::__l2::<lambda_ec76577b05acff01e13b0423b61a640f>","slug":"transformcomponentdescription-buildschema-l2-lambda-ec76577b05acff01e13b0423b61a640f","link":"#transformcomponentdescription-buildschema-l2-lambda-ec76577b05acff01e13b0423b61a640f","children":[]},{"level":3,"title":"TouchCameraJoystickControl","slug":"touchcamerajoystickcontrol","link":"#touchcamerajoystickcontrol","children":[]},{"level":3,"title":"TouchCameraJoystickControl_vtbl","slug":"touchcamerajoystickcontrol-vtbl","link":"#touchcamerajoystickcontrol-vtbl","children":[]},{"level":3,"title":"TouchGlyphButtonControl","slug":"touchglyphbuttoncontrol","link":"#touchglyphbuttoncontrol","children":[]},{"level":3,"title":"TouchGlyphButtonControl_vtbl","slug":"touchglyphbuttoncontrol-vtbl","link":"#touchglyphbuttoncontrol-vtbl","children":[]},{"level":3,"title":"TouchGlyphRadioButtonControl","slug":"touchglyphradiobuttoncontrol","link":"#touchglyphradiobuttoncontrol","children":[]},{"level":3,"title":"TouchGlyphRadioButtonControl_vtbl","slug":"touchglyphradiobuttoncontrol-vtbl","link":"#touchglyphradiobuttoncontrol-vtbl","children":[]},{"level":3,"title":"TouchJoystickControl","slug":"touchjoystickcontrol","link":"#touchjoystickcontrol","children":[]},{"level":3,"title":"TouchJoystickControl_vtbl","slug":"touchjoystickcontrol-vtbl","link":"#touchjoystickcontrol-vtbl","children":[]},{"level":3,"title":"TouchGlyphButtonEXControl","slug":"touchglyphbuttonexcontrol","link":"#touchglyphbuttonexcontrol","children":[]},{"level":3,"title":"TouchGlyphButtonEXControl_vtbl","slug":"touchglyphbuttonexcontrol-vtbl","link":"#touchglyphbuttonexcontrol-vtbl","children":[]},{"level":3,"title":"TheEndLightTextureImageBuilder","slug":"theendlighttextureimagebuilder","link":"#theendlighttextureimagebuilder","children":[]},{"level":3,"title":"TheEndLightTextureImageBuilder_vtbl","slug":"theendlighttextureimagebuilder-vtbl","link":"#theendlighttextureimagebuilder-vtbl","children":[]},{"level":3,"title":"TheEndDimension","slug":"theenddimension","link":"#theenddimension","children":[]},{"level":3,"title":"TradeableSystem","slug":"tradeablesystem","link":"#tradeablesystem","children":[]},{"level":3,"title":"TradeableSystem_vtbl","slug":"tradeablesystem-vtbl","link":"#tradeablesystem-vtbl","children":[]},{"level":3,"title":"TrailSystem","slug":"trailsystem","link":"#trailsystem","children":[]},{"level":3,"title":"TrailSystem_vtbl","slug":"trailsystem-vtbl","link":"#trailsystem-vtbl","children":[]},{"level":3,"title":"TransformationSystem","slug":"transformationsystem","link":"#transformationsystem","children":[]},{"level":3,"title":"TransformationSystem_vtbl","slug":"transformationsystem-vtbl","link":"#transformationsystem-vtbl","children":[]},{"level":3,"title":"TempEPtr<Villager>","slug":"tempeptr-villager","link":"#tempeptr-villager","children":[]},{"level":3,"title":"TempEPtr<Villager>_vtbl","slug":"tempeptr-villager-vtbl","link":"#tempeptr-villager-vtbl","children":[]},{"level":3,"title":"TempEPtr<IronGolem>","slug":"tempeptr-irongolem","link":"#tempeptr-irongolem","children":[]},{"level":3,"title":"TempEPtr<IronGolem>_vtbl","slug":"tempeptr-irongolem-vtbl","link":"#tempeptr-irongolem-vtbl","children":[]},{"level":3,"title":"TakeFlowerGoal","slug":"takeflowergoal","link":"#takeflowergoal","children":[]},{"level":3,"title":"TakeFlowerGoal_vtbl","slug":"takeflowergoal-vtbl","link":"#takeflowergoal-vtbl","children":[]},{"level":3,"title":"TargetWhenPushedGoal","slug":"targetwhenpushedgoal","link":"#targetwhenpushedgoal","children":[]},{"level":3,"title":"TargetWhenPushedGoal_vtbl","slug":"targetwhenpushedgoal-vtbl","link":"#targetwhenpushedgoal-vtbl","children":[]},{"level":3,"title":"TemptGoal","slug":"temptgoal","link":"#temptgoal","children":[]},{"level":3,"title":"TemptGoal_vtbl","slug":"temptgoal-vtbl","link":"#temptgoal-vtbl","children":[]},{"level":3,"title":"TradeInterestGoal","slug":"tradeinterestgoal","link":"#tradeinterestgoal","children":[]},{"level":3,"title":"TradeInterestGoal_vtbl","slug":"tradeinterestgoal-vtbl","link":"#tradeinterestgoal-vtbl","children":[]},{"level":3,"title":"TradeWithPlayerGoal","slug":"tradewithplayergoal","link":"#tradewithplayergoal","children":[]},{"level":3,"title":"TradeWithPlayerGoal_vtbl","slug":"tradewithplayergoal-vtbl","link":"#tradewithplayergoal-vtbl","children":[]},{"level":3,"title":"TheEndGenerator::ThreadData","slug":"theendgenerator-threaddata","link":"#theendgenerator-threaddata","children":[]},{"level":3,"title":"TheEndGenerator","slug":"theendgenerator","link":"#theendgenerator","children":[]},{"level":3,"title":"TheEndGenerator_vtbl","slug":"theendgenerator-vtbl","link":"#theendgenerator-vtbl","children":[]},{"level":3,"title":"TwistingVinesClusterFeature","slug":"twistingvinesclusterfeature","link":"#twistingvinesclusterfeature","children":[]},{"level":3,"title":"TwistingVinesClusterFeature_vtbl","slug":"twistingvinesclusterfeature-vtbl","link":"#twistingvinesclusterfeature-vtbl","children":[]},{"level":3,"title":"TrunkVariantBuilder::buildTrunkVariant::__l2::<lambda_6d9a4349d26e94dea794c1fdacfc3b13>","slug":"trunkvariantbuilder-buildtrunkvariant-l2-lambda-6d9a4349d26e94dea794c1fdacfc3b13","link":"#trunkvariantbuilder-buildtrunkvariant-l2-lambda-6d9a4349d26e94dea794c1fdacfc3b13","children":[]},{"level":3,"title":"TrunkVariantBuilder::buildTrunkVariant::__l2::<lambda_2891af02dc87b30718ec6f87b7028bd4>","slug":"trunkvariantbuilder-buildtrunkvariant-l2-lambda-2891af02dc87b30718ec6f87b7028bd4","link":"#trunkvariantbuilder-buildtrunkvariant-l2-lambda-2891af02dc87b30718ec6f87b7028bd4","children":[]},{"level":3,"title":"TrunkVariantBuilder::buildTrunkVariant::__l2::<lambda_298c2fc108d44315676cf647fb15a899>","slug":"trunkvariantbuilder-buildtrunkvariant-l2-lambda-298c2fc108d44315676cf647fb15a899","link":"#trunkvariantbuilder-buildtrunkvariant-l2-lambda-298c2fc108d44315676cf647fb15a899","children":[]},{"level":3,"title":"TrunkVariantBuilder::buildTrunkVariant::__l2::<lambda_4c94e9e62cef84b17089b42c799f1b62>","slug":"trunkvariantbuilder-buildtrunkvariant-l2-lambda-4c94e9e62cef84b17089b42c799f1b62","link":"#trunkvariantbuilder-buildtrunkvariant-l2-lambda-4c94e9e62cef84b17089b42c799f1b62","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l2::<lambda_04126ab3841162f070846e248505fe78>","slug":"treehelper-treeparams-buildschema-l2-lambda-04126ab3841162f070846e248505fe78","link":"#treehelper-treeparams-buildschema-l2-lambda-04126ab3841162f070846e248505fe78","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l2::<lambda_93c22a781df6dc6af71b4dd5e0b171f1>","slug":"treehelper-treeparams-buildschema-l2-lambda-93c22a781df6dc6af71b4dd5e0b171f1","link":"#treehelper-treeparams-buildschema-l2-lambda-93c22a781df6dc6af71b4dd5e0b171f1","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l2::<lambda_ffd665e99d41506084ffb05e0bc3a630>","slug":"treehelper-treeparams-buildschema-l2-lambda-ffd665e99d41506084ffb05e0bc3a630","link":"#treehelper-treeparams-buildschema-l2-lambda-ffd665e99d41506084ffb05e0bc3a630","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l3::<lambda_a7906fd49315030a86f3708933d5a526>","slug":"treehelper-treeparams-buildschema-l3-lambda-a7906fd49315030a86f3708933d5a526","link":"#treehelper-treeparams-buildschema-l3-lambda-a7906fd49315030a86f3708933d5a526","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l3::<lambda_20a3db3713487e2e69fdcaad7b950e8e>","slug":"treehelper-treeparams-buildschema-l3-lambda-20a3db3713487e2e69fdcaad7b950e8e","link":"#treehelper-treeparams-buildschema-l3-lambda-20a3db3713487e2e69fdcaad7b950e8e","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_8db1885130e9761bfd1f5d45a532424c>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-8db1885130e9761bfd1f5d45a532424c","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-8db1885130e9761bfd1f5d45a532424c","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_6532a13bf9bbe1c02a4010743d3008b0>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-6532a13bf9bbe1c02a4010743d3008b0","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-6532a13bf9bbe1c02a4010743d3008b0","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_85bae5b79c8184c2116d8fc5da3d0e07>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-85bae5b79c8184c2116d8fc5da3d0e07","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-85bae5b79c8184c2116d8fc5da3d0e07","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_ea5db8857e8fb58674ec19b155c943c9>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-ea5db8857e8fb58674ec19b155c943c9","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-ea5db8857e8fb58674ec19b155c943c9","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_8d488a2c84209dd0831ffb054e5850e6>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-8d488a2c84209dd0831ffb054e5850e6","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-8d488a2c84209dd0831ffb054e5850e6","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_6d2a08d73f83e3ab1661efe36a98ace1>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-6d2a08d73f83e3ab1661efe36a98ace1","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-6d2a08d73f83e3ab1661efe36a98ace1","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_61a38999c743ca7361dc2e73d0aaff62>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-61a38999c743ca7361dc2e73d0aaff62","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-61a38999c743ca7361dc2e73d0aaff62","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_7eb97c3261170c5e4b05f8dd225213fd>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-7eb97c3261170c5e4b05f8dd225213fd","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-7eb97c3261170c5e4b05f8dd225213fd","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_08e01a5f67d647a919dd40f16a254eca>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-08e01a5f67d647a919dd40f16a254eca","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-08e01a5f67d647a919dd40f16a254eca","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_33302b0860d3bfb4716cc13d3364c310>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-33302b0860d3bfb4716cc13d3364c310","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-33302b0860d3bfb4716cc13d3364c310","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_db6354e9b07bcb09c3bb7e2f25399ac4>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-db6354e9b07bcb09c3bb7e2f25399ac4","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-db6354e9b07bcb09c3bb7e2f25399ac4","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_61e95202bfc74f0d4a7ca173ac48da7f>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-61e95202bfc74f0d4a7ca173ac48da7f","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-61e95202bfc74f0d4a7ca173ac48da7f","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_abae1b4ad9f5adc8002c7f845728efe6>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-abae1b4ad9f5adc8002c7f845728efe6","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-abae1b4ad9f5adc8002c7f845728efe6","children":[]},{"level":3,"title":"TransformationMixerLayer<WeightedBiomeAttributes<RiverTransformation> >","slug":"transformationmixerlayer-weightedbiomeattributes-rivertransformation","link":"#transformationmixerlayer-weightedbiomeattributes-rivertransformation","children":[]},{"level":3,"title":"TransformationMixerLayer<WeightedBiomeAttributes<RiverTransformation> >_vtbl","slug":"transformationmixerlayer-weightedbiomeattributes-rivertransformation-vtbl","link":"#transformationmixerlayer-weightedbiomeattributes-rivertransformation-vtbl","children":[]},{"level":3,"title":"TouchTextButtonControl","slug":"touchtextbuttoncontrol","link":"#touchtextbuttoncontrol","children":[]},{"level":3,"title":"TouchTextButtonControl_vtbl","slug":"touchtextbuttoncontrol-vtbl","link":"#touchtextbuttoncontrol-vtbl","children":[]},{"level":3,"title":"TouchTextButtonControl::<lambda_d981cd7e616c973c1d1b4f1442f5f224>","slug":"touchtextbuttoncontrol-lambda-d981cd7e616c973c1d1b4f1442f5f224","link":"#touchtextbuttoncontrol-lambda-d981cd7e616c973c1d1b4f1442f5f224","children":[]},{"level":3,"title":"TouchGuiPassthroughControl","slug":"touchguipassthroughcontrol","link":"#touchguipassthroughcontrol","children":[]},{"level":3,"title":"TouchGuiPassthroughControl_vtbl","slug":"touchguipassthroughcontrol-vtbl","link":"#touchguipassthroughcontrol-vtbl","children":[]},{"level":3,"title":"ThreadDataInterface","slug":"threaddatainterface","link":"#threaddatainterface","children":[]},{"level":3,"title":"ThreadDataInterface_vtbl","slug":"threaddatainterface-vtbl","link":"#threaddatainterface-vtbl","children":[]},{"level":3,"title":"ThreadPool<RakNet::FileListTransfer::ThreadData,int>","slug":"threadpool-raknet-filelisttransfer-threaddata-int","link":"#threadpool-raknet-filelisttransfer-threaddata-int","children":[]},{"level":3,"title":"timezone","slug":"timezone","link":"#timezone","children":[]},{"level":3,"title":"timeb","slug":"timeb","link":"#timeb","children":[]},{"level":3,"title":"TextEditFocusController","slug":"texteditfocuscontroller","link":"#texteditfocuscontroller","children":[]},{"level":3,"title":"TaskDetails::BackgroundTaskDetails<TaskResult,void,void>","slug":"taskdetails-backgroundtaskdetails-taskresult-void-void","link":"#taskdetails-backgroundtaskdetails-taskresult-void-void","children":[]},{"level":3,"title":"TaskDetails::BackgroundTaskDetails<TaskResult,void,void>_vtbl","slug":"taskdetails-backgroundtaskdetails-taskresult-void-void-vtbl","link":"#taskdetails-backgroundtaskdetails-taskresult-void-void-vtbl","children":[]},{"level":3,"title":"TaskDetails::BackgroundTaskDetails<void,void,void>","slug":"taskdetails-backgroundtaskdetails-void-void-void","link":"#taskdetails-backgroundtaskdetails-void-void-void","children":[]},{"level":3,"title":"TaskDetails::BackgroundTaskDetails<void,void,void>_vtbl","slug":"taskdetails-backgroundtaskdetails-void-void-void-vtbl","link":"#taskdetails-backgroundtaskdetails-void-void-void-vtbl","children":[]},{"level":3,"title":"TaskGroup::flush::__l24::<lambda_f858309b3640be0291f38b673f2e0168>","slug":"taskgroup-flush-l24-lambda-f858309b3640be0291f38b673f2e0168","link":"#taskgroup-flush-l24-lambda-f858309b3640be0291f38b673f2e0168","children":[]},{"level":3,"title":"TaskGroup::resume::__l2::<lambda_22aee7be42bb8fb01cff1768f3f0c0b9>","slug":"taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9","link":"#taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9","children":[]},{"level":3,"title":"TaskGroup::resume::__l2::<lambda_22aee7be42bb8fb01cff1768f3f0c0b9>::()::__l2::<lambda_d91f59a878019cd825e76c11990156bd>","slug":"taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9-l2-lambda-d91f59a878019cd825e76c11990156bd","link":"#taskgroup-resume-l2-lambda-22aee7be42bb8fb01cff1768f3f0c0b9-l2-lambda-d91f59a878019cd825e76c11990156bd","children":[]},{"level":3,"title":"TT_GaspRangeRec_","slug":"tt-gasprangerec","link":"#tt-gasprangerec","children":[]},{"level":3,"title":"TT_Post_25_","slug":"tt-post-25","link":"#tt-post-25","children":[]},{"level":3,"title":"TTC_HeaderRec_","slug":"ttc-headerrec","link":"#ttc-headerrec","children":[]},{"level":3,"title":"TT_TableRec_","slug":"tt-tablerec","link":"#tt-tablerec","children":[]},{"level":3,"title":"TT_Header_","slug":"tt-header","link":"#tt-header","children":[]},{"level":3,"title":"TT_HoriHeader_","slug":"tt-horiheader","link":"#tt-horiheader","children":[]},{"level":3,"title":"TT_MaxProfile_","slug":"tt-maxprofile","link":"#tt-maxprofile","children":[]},{"level":3,"title":"TT_VertHeader_","slug":"tt-vertheader","link":"#tt-vertheader","children":[]},{"level":3,"title":"TT_NameRec_","slug":"tt-namerec","link":"#tt-namerec","children":[]},{"level":3,"title":"TT_LangTagRec_","slug":"tt-langtagrec","link":"#tt-langtagrec","children":[]},{"level":3,"title":"TT_NameTableRec_","slug":"tt-nametablerec","link":"#tt-nametablerec","children":[]},{"level":3,"title":"TT_OS2_","slug":"tt-os2","link":"#tt-os2","children":[]},{"level":3,"title":"TT_Postscript_","slug":"tt-postscript","link":"#tt-postscript","children":[]},{"level":3,"title":"TT_FaceRec_","slug":"tt-facerec","link":"#tt-facerec","children":[]},{"level":3,"title":"TT_Size_Metrics_","slug":"tt-size-metrics","link":"#tt-size-metrics","children":[]},{"level":3,"title":"TT_DefRecord_","slug":"tt-defrecord","link":"#tt-defrecord","children":[]},{"level":3,"title":"TT_CodeRange_","slug":"tt-coderange","link":"#tt-coderange","children":[]},{"level":3,"title":"TT_SizeRec_","slug":"tt-sizerec","link":"#tt-sizerec","children":[]},{"level":3,"title":"TT_CallRec_","slug":"tt-callrec","link":"#tt-callrec","children":[]},{"level":3,"title":"TT_ExecContextRec_","slug":"tt-execcontextrec","link":"#tt-execcontextrec","children":[]},{"level":3,"title":"TT_Gasp_","slug":"tt-gasp","link":"#tt-gasp","children":[]},{"level":3,"title":"TT_PCLT_","slug":"tt-pclt","link":"#tt-pclt","children":[]},{"level":3,"title":"TT_SBit_LineMetricsRec_","slug":"tt-sbit-linemetricsrec","link":"#tt-sbit-linemetricsrec","children":[]},{"level":3,"title":"TT_SBit_ScaleRec_","slug":"tt-sbit-scalerec","link":"#tt-sbit-scalerec","children":[]},{"level":3,"title":"TT_Post_20Rec_","slug":"tt-post-20rec","link":"#tt-post-20rec","children":[]},{"level":3,"title":"TT_Post_NamesRec_","slug":"tt-post-namesrec","link":"#tt-post-namesrec","children":[]},{"level":3,"title":"TT_BDFRec_","slug":"tt-bdfrec","link":"#tt-bdfrec","children":[]},{"level":3,"title":"TT_CMapInfo_","slug":"tt-cmapinfo","link":"#tt-cmapinfo","children":[]},{"level":3,"title":"TT_SBit_MetricsRec_","slug":"tt-sbit-metricsrec","link":"#tt-sbit-metricsrec","children":[]},{"level":3,"title":"TBBox_Rec_","slug":"tbbox-rec","link":"#tbbox-rec","children":[]},{"level":3,"title":"T1_Hints_FuncsRec_","slug":"t1-hints-funcsrec","link":"#t1-hints-funcsrec","children":[]},{"level":3,"title":"T2_Hints_FuncsRec_","slug":"t2-hints-funcsrec","link":"#t2-hints-funcsrec","children":[]},{"level":3,"title":"T1_CMapCustomRec_","slug":"t1-cmapcustomrec","link":"#t1-cmapcustomrec","children":[]},{"level":3,"title":"T1_EncodingRecRec_","slug":"t1-encodingrecrec","link":"#t1-encodingrecrec","children":[]},{"level":3,"title":"T1_FontRec_","slug":"t1-fontrec","link":"#t1-fontrec","children":[]},{"level":3,"title":"T1_CMapStdRec_","slug":"t1-cmapstdrec","link":"#t1-cmapstdrec","children":[]},{"level":3,"title":"T1_FaceRec_","slug":"t1-facerec","link":"#t1-facerec","children":[]},{"level":3,"title":"TProfile_","slug":"tprofile","link":"#tprofile","children":[]},{"level":3,"title":"TT_CMapRec_","slug":"tt-cmaprec","link":"#tt-cmaprec","children":[]},{"level":3,"title":"TT_CMap12Rec_","slug":"tt-cmap12rec","link":"#tt-cmap12rec","children":[]},{"level":3,"title":"TT_CMap14Rec_","slug":"tt-cmap14rec","link":"#tt-cmap14rec","children":[]},{"level":3,"title":"TT_ValidatorRec_","slug":"tt-validatorrec","link":"#tt-validatorrec","children":[]},{"level":3,"title":"TT_CMap13Rec_","slug":"tt-cmap13rec","link":"#tt-cmap13rec","children":[]},{"level":3,"title":"TT_CMap4Rec_","slug":"tt-cmap4rec","link":"#tt-cmap4rec","children":[]},{"level":3,"title":"TCell_","slug":"tcell","link":"#tcell","children":[]},{"level":3,"title":"TT_DriverRec_","slug":"tt-driverrec","link":"#tt-driverrec","children":[]},{"level":3,"title":"T1_Loader_","slug":"t1-loader","link":"#t1-loader","children":[]},{"level":3,"title":"T1_SizeRec_","slug":"t1-sizerec","link":"#t1-sizerec","children":[]},{"level":3,"title":"T1_GlyphSlotRec_","slug":"t1-glyphslotrec","link":"#t1-glyphslotrec","children":[]},{"level":3,"title":"T42_DriverRec_","slug":"t42-driverrec","link":"#t42-driverrec","children":[]},{"level":3,"title":"T42_GlyphSlotRec_","slug":"t42-glyphslotrec","link":"#t42-glyphslotrec","children":[]},{"level":3,"title":"T42_Loader_","slug":"t42-loader","link":"#t42-loader","children":[]},{"level":3,"title":"T42_FaceRec_","slug":"t42-facerec","link":"#t42-facerec","children":[]},{"level":3,"title":"T42_SizeRec_","slug":"t42-sizerec","link":"#t42-sizerec","children":[]},{"level":3,"title":"ThreadInfo::ProfileGroupInfo","slug":"threadinfo-profilegroupinfo","link":"#threadinfo-profilegroupinfo","children":[]},{"level":3,"title":"ThreadInfo","slug":"threadinfo","link":"#threadinfo","children":[]},{"level":3,"title":"teedataobject","slug":"teedataobject","link":"#teedataobject","children":[]},{"level":3,"title":"takewhileobject","slug":"takewhileobject","link":"#takewhileobject","children":[]},{"level":3,"title":"teeobject","slug":"teeobject","link":"#teeobject","children":[]},{"level":3,"title":"tcp_keepalive","slug":"tcp-keepalive","link":"#tcp-keepalive","children":[]},{"level":3,"title":"tupleiterobject","slug":"tupleiterobject","link":"#tupleiterobject","children":[]},{"level":3,"title":"tok_state","slug":"tok-state","link":"#tok-state","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned short,void>","slug":"tinystl-unordered-hash-node-unsigned-short-void","link":"#tinystl-unordered-hash-node-unsigned-short-void","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned short,void> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-short-void-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-short-void-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_set<unsigned short,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-set-unsigned-short-bgfx-tinystlallocator","link":"#tinystl-unordered-set-unsigned-short-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,unsigned int>","slug":"tinystl-unordered-hash-node-unsigned-int64-unsigned-int","link":"#tinystl-unordered-hash-node-unsigned-int64-unsigned-int","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned short,void> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned short,void> const >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-short-void-const-bool","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,unsigned int> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-const","children":[]},{"level":3,"title":"tinystl::placeholder","slug":"tinystl-placeholder","link":"#tinystl-placeholder","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned short,void> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-short-void-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-short-void-1","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,unsigned int> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-int-1","children":[]},{"level":3,"title":"tinystl::pod_traits<bgfx::NonLocalAllocator::Free,0>","slug":"tinystl-pod-traits-bgfx-nonlocalallocator-free-0","link":"#tinystl-pod-traits-bgfx-nonlocalallocator-free-0","children":[]},{"level":3,"title":"tinystl::buffer<ID3D12Resource *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-id3d12resource-bgfx-tinystlallocator","link":"#tinystl-buffer-id3d12resource-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::vector<ID3D12Resource *,bgfx::TinyStlAllocator>","slug":"tinystl-vector-id3d12resource-bgfx-tinystlallocator","link":"#tinystl-vector-id3d12resource-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,unsigned short>","slug":"tinystl-unordered-hash-node-unsigned-int64-unsigned-short","link":"#tinystl-unordered-hash-node-unsigned-int64-unsigned-short","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,unsigned short> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,unsigned short,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-unsigned-short-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-unsigned-short-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D12PipelineState *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d12pipelinestate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::pod_traits<ID3D12Resource *,1>","slug":"tinystl-pod-traits-id3d12resource-1","link":"#tinystl-pod-traits-id3d12resource-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,unsigned short> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-const","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,unsigned short> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-unsigned-short-1","children":[]},{"level":3,"title":"tinystl::pod_traits<unsigned int,1>","slug":"tinystl-pod-traits-unsigned-int-1","link":"#tinystl-pod-traits-unsigned-int-1","children":[]},{"level":3,"title":"tinystl::pod_traits<bgfx::DxbcSignature::Element,0>","slug":"tinystl-pod-traits-bgfx-dxbcsignature-element-0","link":"#tinystl-pod-traits-bgfx-dxbcsignature-element-0","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,unsigned short>","slug":"tinystl-pair-unsigned-int64-unsigned-short","link":"#tinystl-pair-unsigned-int64-unsigned-short","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned int,unsigned int>","slug":"tinystl-unordered-hash-node-unsigned-int-unsigned-int","link":"#tinystl-unordered-hash-node-unsigned-int-unsigned-int","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned int,unsigned int> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int-unsigned-int-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int-unsigned-int-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned int,unsigned int,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int-unsigned-int-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int-unsigned-int-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned int,unsigned int> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int-unsigned-int-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int-unsigned-int-const","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned int,unsigned int> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int-unsigned-int-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int-unsigned-int-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D11BlendState *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d11blendstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D11DepthStencilState *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d11depthstencilstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D11InputLayout *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d11inputlayout-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D11RasterizerState *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d11rasterizerstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *>","slug":"tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate","link":"#tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,ID3D11SamplerState *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-id3d11samplerstate-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-1","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D11BlendState *>","slug":"tinystl-pair-unsigned-int64-id3d11blendstate","link":"#tinystl-pair-unsigned-int64-id3d11blendstate","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D11DepthStencilState *>","slug":"tinystl-pair-unsigned-int64-id3d11depthstencilstate","link":"#tinystl-pair-unsigned-int64-id3d11depthstencilstate","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-bool","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-bool","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D11InputLayout *>","slug":"tinystl-pair-unsigned-int64-id3d11inputlayout","link":"#tinystl-pair-unsigned-int64-id3d11inputlayout","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D11RasterizerState *>","slug":"tinystl-pair-unsigned-int64-id3d11rasterizerstate","link":"#tinystl-pair-unsigned-int64-id3d11rasterizerstate","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-bool","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-const","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-bool","children":[]},{"level":3,"title":"tinystl::pod_traits<unsigned char,1>","slug":"tinystl-pod-traits-unsigned-char-1","link":"#tinystl-pod-traits-unsigned-char-1","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D11RasterizerState *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11rasterizerstate-1","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-bool","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D11DepthStencilState *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11depthstencilstate-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D11InputLayout *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d11inputlayout-const","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D11BlendState *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11blendstate-1","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D11SamplerState *>","slug":"tinystl-pair-unsigned-int64-id3d11samplerstate","link":"#tinystl-pair-unsigned-int64-id3d11samplerstate","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D11SamplerState *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d11samplerstate-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,ID3D12PipelineState *>","slug":"tinystl-pair-unsigned-int64-id3d12pipelinestate","link":"#tinystl-pair-unsigned-int64-id3d12pipelinestate","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-bool","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-const","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,ID3D12PipelineState *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-id3d12pipelinestate-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *>","slug":"tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9","link":"#tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9","children":[]},{"level":3,"title":"tinystl::buffer<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> *,bgfx::TinyStlAllocator>","slug":"tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator","link":"#tinystl-buffer-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_map<unsigned __int64,IDirect3DVertexDeclaration9 *,bgfx::TinyStlAllocator>","slug":"tinystl-unordered-map-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator","link":"#tinystl-unordered-map-unsigned-int64-idirect3dvertexdeclaration9-bgfx-tinystlallocator","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-bool","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-1","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,IDirect3DVertexDeclaration9 *>","slug":"tinystl-pair-unsigned-int64-idirect3dvertexdeclaration9","link":"#tinystl-pair-unsigned-int64-idirect3dvertexdeclaration9","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,IDirect3DVertexDeclaration9 *> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-idirect3dvertexdeclaration9-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline>","slug":"tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline","link":"#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout>","slug":"tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","link":"#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass>","slug":"tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass","link":"#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkSampler>","slug":"tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler","link":"#tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,bgfx::vk::VkRenderPass>","slug":"tinystl-pair-unsigned-int64-bgfx-vk-vkrenderpass","link":"#tinystl-pair-unsigned-int64-bgfx-vk-vkrenderpass","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkSampler> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-const","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-bool","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,bgfx::vk::VkDescriptorSetLayout>","slug":"tinystl-pair-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","link":"#tinystl-pair-unsigned-int64-bgfx-vk-vkdescriptorsetlayout","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkDescriptorSetLayout> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkdescriptorsetlayout-const","children":[]},{"level":3,"title":"tinystl::pair<unsigned __int64,bgfx::vk::VkPipeline>","slug":"tinystl-pair-unsigned-int64-bgfx-vk-vkpipeline","link":"#tinystl-pair-unsigned-int64-bgfx-vk-vkpipeline","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkSampler> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vksampler-1","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkRenderPass> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkrenderpass-bool","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-const","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline> >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline","children":[]},{"level":3,"title":"tinystl::pair<tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline> >,bool>","slug":"tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-bool","link":"#tinystl-pair-tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-bool","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<unsigned __int64,bgfx::vk::VkPipeline> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-unsigned-int64-bgfx-vk-vkpipeline-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_node<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int>","slug":"tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int","link":"#tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int","children":[]},{"level":3,"title":"tinystl::pair<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int>","slug":"tinystl-pair-tinystl-stringt-bgfx-tinystlallocator-unsigned-int","link":"#tinystl-pair-tinystl-stringt-bgfx-tinystlallocator-unsigned-int","children":[]},{"level":3,"title":"tinystl::pod_traits<tinystl::unordered_hash_node<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int> *,1>","slug":"tinystl-pod-traits-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-1","link":"#tinystl-pod-traits-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-1","children":[]},{"level":3,"title":"tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<tinystl::stringT<bgfx::TinyStlAllocator>,unsigned int> const >","slug":"tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-const","link":"#tinystl-unordered-hash-iterator-tinystl-unordered-hash-node-tinystl-stringt-bgfx-tinystlallocator-unsigned-int-const","children":[]},{"level":3,"title":"TrialManager::setTrialABTest::__l2::<lambda_c30bbd6b5b06c9cde920159e96e64d3e>::()::__l2::<lambda_eff4589c59d336c8838d8d2f4d341069>","slug":"trialmanager-settrialabtest-l2-lambda-c30bbd6b5b06c9cde920159e96e64d3e-l2-lambda-eff4589c59d336c8838d8d2f4d341069","link":"#trialmanager-settrialabtest-l2-lambda-c30bbd6b5b06c9cde920159e96e64d3e-l2-lambda-eff4589c59d336c8838d8d2f4d341069","children":[]},{"level":3,"title":"TrueTypeFont::getSheet::__l2::<lambda_353d794a8b96987352e47142585db63e>","slug":"truetypefont-getsheet-l2-lambda-353d794a8b96987352e47142585db63e","link":"#truetypefont-getsheet-l2-lambda-353d794a8b96987352e47142585db63e","children":[]},{"level":3,"title":"TemplateExportScreenController::_pickTemplateImage::__l2::<lambda_95e956f9c0e719a6eb64ab92ca969fed>::()::__l6::<lambda_fac14e20a7e48827b06b0675210910ed>","slug":"templateexportscreencontroller-picktemplateimage-l2-lambda-95e956f9c0e719a6eb64ab92ca969fed-l6-lambda-fac14e20a7e48827b06b0675210910ed","link":"#templateexportscreencontroller-picktemplateimage-l2-lambda-95e956f9c0e719a6eb64ab92ca969fed-l6-lambda-fac14e20a7e48827b06b0675210910ed","children":[]},{"level":3,"title":"TTSEventManager::clearAllTTSEvents::__l2::<lambda_166fbc57a43bf4c72b542d3926f6b284>","slug":"ttseventmanager-clearallttsevents-l2-lambda-166fbc57a43bf4c72b542d3926f6b284","link":"#ttseventmanager-clearallttsevents-l2-lambda-166fbc57a43bf4c72b542d3926f6b284","children":[]},{"level":3,"title":"TextureSetHelpers::TextureSetDefinitionParser::_postValidation::__l2::<lambda_ccfc458045cdb218bb681a058ac9c64c>","slug":"texturesethelpers-texturesetdefinitionparser-postvalidation-l2-lambda-ccfc458045cdb218bb681a058ac9c64c","link":"#texturesethelpers-texturesetdefinitionparser-postvalidation-l2-lambda-ccfc458045cdb218bb681a058ac9c64c","children":[]},{"level":3,"title":"TransformationComponent::maintainOldData::__l2::<lambda_0ebed9bb243823bd2c6449afa59ff071>","slug":"transformationcomponent-maintainolddata-l2-lambda-0ebed9bb243823bd2c6449afa59ff071","link":"#transformationcomponent-maintainolddata-l2-lambda-0ebed9bb243823bd2c6449afa59ff071","children":[]},{"level":3,"title":"TreatmentPackSource::load::__l5::<lambda_b6e7809886387660f36c54eb091a8cb1>::()::__l6::<lambda_c49aa7eff27558e257190c445686bc48>","slug":"treatmentpacksource-load-l5-lambda-b6e7809886387660f36c54eb091a8cb1-l6-lambda-c49aa7eff27558e257190c445686bc48","link":"#treatmentpacksource-load-l5-lambda-b6e7809886387660f36c54eb091a8cb1-l6-lambda-c49aa7eff27558e257190c445686bc48","children":[]},{"level":3,"title":"TitleRawCommand::_sendTitlePacketTextObject::__l5::<lambda_48454f3bf36a4e2de18c670fda8587c6>","slug":"titlerawcommand-sendtitlepackettextobject-l5-lambda-48454f3bf36a4e2de18c670fda8587c6","link":"#titlerawcommand-sendtitlepackettextobject-l5-lambda-48454f3bf36a4e2de18c670fda8587c6","children":[]},{"level":3,"title":"TellRawCommand::execute::__l14::<lambda_90cef47ec8b6c76c849ede2c103fd1bf>","slug":"tellrawcommand-execute-l14-lambda-90cef47ec8b6c76c849ede2c103fd1bf","link":"#tellrawcommand-execute-l14-lambda-90cef47ec8b6c76c849ede2c103fd1bf","children":[]},{"level":3,"title":"TitleRawCommand::execute::__l2::<lambda_5b9cafa6ff6d46b3d004c39e0990394f>","slug":"titlerawcommand-execute-l2-lambda-5b9cafa6ff6d46b3d004c39e0990394f","link":"#titlerawcommand-execute-l2-lambda-5b9cafa6ff6d46b3d004c39e0990394f","children":[]},{"level":3,"title":"TagCommand::_listTags::__l2::<lambda_c84dc9b6a1b3669bc322e4aa9ab60776>","slug":"tagcommand-listtags-l2-lambda-c84dc9b6a1b3669bc322e4aa9ab60776","link":"#tagcommand-listtags-l2-lambda-c84dc9b6a1b3669bc322e4aa9ab60776","children":[]},{"level":3,"title":"TextObjectParser::_parseSelectorTextObject::__l2::<lambda_5827802121b532aadf729a581dac69a9>","slug":"textobjectparser-parseselectortextobject-l2-lambda-5827802121b532aadf729a581dac69a9","link":"#textobjectparser-parseselectortextobject-l2-lambda-5827802121b532aadf729a581dac69a9","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_153bf7c72ef5d891dfc82eaf261a9098>::()::__l2::Literal","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098-l2-literal","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098-l2-literal","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_4d52faecc4bfe184f922644e28fd1416>::()::__l2::Literal","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416-l2-literal","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416-l2-literal","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_2676d2d87e2d93db1c35d755ebed2598>::()::__l2::Literal","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598-l2-literal","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598-l2-literal","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_153bf7c72ef5d891dfc82eaf261a9098>","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-153bf7c72ef5d891dfc82eaf261a9098","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_2676d2d87e2d93db1c35d755ebed2598>","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-2676d2d87e2d93db1c35d755ebed2598","children":[]},{"level":3,"title":"TropicalFish::updateEntitySpecificMolangVariables::__l2::<lambda_4d52faecc4bfe184f922644e28fd1416>","slug":"tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416","link":"#tropicalfish-updateentityspecificmolangvariables-l2-lambda-4d52faecc4bfe184f922644e28fd1416","children":[]},{"level":3,"title":"TripodCamera::updateEntitySpecificMolangVariables::__l2::<lambda_b93ca8c09ad5ed9c2d4ef65764501a75>::()::__l2::Literal","slug":"tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75-l2-literal","link":"#tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75-l2-literal","children":[]},{"level":3,"title":"TripodCamera::updateEntitySpecificMolangVariables::__l2::<lambda_b93ca8c09ad5ed9c2d4ef65764501a75>","slug":"tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75","link":"#tripodcamera-updateentityspecificmolangvariables-l2-lambda-b93ca8c09ad5ed9c2d4ef65764501a75","children":[]},{"level":3,"title":"TickingAreasManager::_processAdds::__l4::<lambda_63152a68d4422458414da9e103d40c16>","slug":"tickingareasmanager-processadds-l4-lambda-63152a68d4422458414da9e103d40c16","link":"#tickingareasmanager-processadds-l4-lambda-63152a68d4422458414da9e103d40c16","children":[]},{"level":3,"title":"TickingAreasManager::_processAdds::__l7::<lambda_e901f167a717222a1fd8ef2ad4565724>","slug":"tickingareasmanager-processadds-l7-lambda-e901f167a717222a1fd8ef2ad4565724","link":"#tickingareasmanager-processadds-l7-lambda-e901f167a717222a1fd8ef2ad4565724","children":[]},{"level":3,"title":"TickingAreasManager::_requeueEntityArea::__l2::<lambda_09aa79e11f608c65fa6ce4e15589cb72>","slug":"tickingareasmanager-requeueentityarea-l2-lambda-09aa79e11f608c65fa6ce4e15589cb72","link":"#tickingareasmanager-requeueentityarea-l2-lambda-09aa79e11f608c65fa6ce4e15589cb72","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_f533ab86d1884dfcc519909eacc041e1>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_f533ab86d1884dfcc519909eacc041e1>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-f533ab86d1884dfcc519909eacc041e1","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_316bfc304bdbebc8fca92470bfb64ac8>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_316bfc304bdbebc8fca92470bfb64ac8>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-316bfc304bdbebc8fca92470bfb64ac8","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_c210cc24a08cbb4b0a1f4a27569b8da3>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_c210cc24a08cbb4b0a1f4a27569b8da3>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-c210cc24a08cbb4b0a1f4a27569b8da3","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_0cdc4f7a090cfec7fa19fe15fd63dac7>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_0cdc4f7a090cfec7fa19fe15fd63dac7>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-0cdc4f7a090cfec7fa19fe15fd63dac7","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_06388885ee2d8055895fa3b9a937a087>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_06388885ee2d8055895fa3b9a937a087>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-06388885ee2d8055895fa3b9a937a087","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_d3254b4d25ff1821a3cd24c1d807c792>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_d3254b4d25ff1821a3cd24c1d807c792>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-d3254b4d25ff1821a3cd24c1d807c792","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_244d7cc81ad86e682410034be2e19209>::()::__l2::Literal","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209-l2-literal","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209-l2-literal","children":[]},{"level":3,"title":"TreeHelper::AttachableDecoration::buildSchema::__l2::<lambda_244d7cc81ad86e682410034be2e19209>","slug":"treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209","link":"#treehelper-attachabledecoration-buildschema-l2-lambda-244d7cc81ad86e682410034be2e19209","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l2::<lambda_8fc19ea07e2c80707579cacdb274625e>::()::__l2::Literal","slug":"treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e-l2-literal","link":"#treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e-l2-literal","children":[]},{"level":3,"title":"TreeHelper::TreeParams::buildSchema::__l2::<lambda_8fc19ea07e2c80707579cacdb274625e>","slug":"treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e","link":"#treehelper-treeparams-buildschema-l2-lambda-8fc19ea07e2c80707579cacdb274625e","children":[]},{"level":3,"title":"TouchMapper::tick::__l4::<lambda_dee5fc28587d2581bc2aae741d21bd8b>","slug":"touchmapper-tick-l4-lambda-dee5fc28587d2581bc2aae741d21bd8b","link":"#touchmapper-tick-l4-lambda-dee5fc28587d2581bc2aae741d21bd8b","children":[]},{"level":3,"title":"TEncoding_","slug":"tencoding","link":"#tencoding","children":[]},{"level":3,"title":"tinystl::list<bgfx::NonLocalAllocator::Free,bgfx::TinyStlAllocator>::sort::__l2::<lambda_2ab4b9f78ebe988ca785909f38c65d48>","slug":"tinystl-list-bgfx-nonlocalallocator-free-bgfx-tinystlallocator-sort-l2-lambda-2ab4b9f78ebe988ca785909f38c65d48","link":"#tinystl-list-bgfx-nonlocalallocator-free-bgfx-tinystlallocator-sort-l2-lambda-2ab4b9f78ebe988ca785909f38c65d48","children":[]},{"level":3,"title":"ToggleComponent_vtbl","slug":"togglecomponent-vtbl","link":"#togglecomponent-vtbl","children":[]},{"level":3,"title":"TripodCamera_vtbl","slug":"tripodcamera-vtbl","link":"#tripodcamera-vtbl","children":[]},{"level":3,"title":"TheEndDimension_vtbl","slug":"theenddimension-vtbl","link":"#theenddimension-vtbl","children":[]},{"level":3,"title":"TropicalFish_vtbl","slug":"tropicalfish-vtbl","link":"#tropicalfish-vtbl","children":[]},{"level":3,"title":"Turtle_vtbl","slug":"turtle-vtbl","link":"#turtle-vtbl","children":[]},{"level":3,"title":"ThrowInfo","slug":"throwinfo","link":"#throwinfo","children":[]}],"git":{"updatedTime":1659743947000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1}]},"filePathRelative":"1.16.201/structure/T~1.md"}');export{p as comp,v as data};
