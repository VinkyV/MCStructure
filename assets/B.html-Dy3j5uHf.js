import{_ as e,c as t,o as a,d as n}from"./app-SaJJkj-5.js";const s={},d=n(`<h1 id="b" tabindex="-1"><a class="header-anchor" href="#b"><span>B</span></a></h1><h3 id="blockpos" tabindex="-1"><a class="header-anchor" href="#blockpos"><span><code>BlockPos</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>x</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>y</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>z</td></tr></tbody></table><h3 id="basegameversion" tabindex="-1"><a class="header-anchor" href="#basegameversion"><span><code>BaseGameVersion</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(112) <code>SemVersion</code></td><td>mSemVersion</td></tr></tbody></table><h3 id="bedrock-threading-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-mutex"><span><code>Bedrock::Threading::Mutex</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>std::__mutex_base</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrockengine-appisland" tabindex="-1"><a class="header-anchor" href="#bedrockengine-appisland"><span><code>BedrockEngine::AppIsland</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BedrockEngine::IIslandCore</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrockengine-iislandcore" tabindex="-1"><a class="header-anchor" href="#bedrockengine-iislandcore"><span><code>BedrockEngine::IIslandCore</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$IIslandCore</td></tr></tbody></table><h3 id="basegamepackslices" tabindex="-1"><a class="header-anchor" href="#basegamepackslices"><span><code>BaseGamePackSlices</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;BaseGamePackSlices::BaseGameVersionPack&gt;</code></td><td>mBaseGameVersionPacks</td></tr><tr><td>24</td><td>(24) <code>std::vector&lt;BaseGamePackSlices::BaseGameVersionPack&gt;</code></td><td>mBaseGameVersionTestPacks</td></tr></tbody></table><h3 id="boundingbox" tabindex="-1"><a class="header-anchor" href="#boundingbox"><span><code>BoundingBox</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>BlockPos</code></td><td>min</td></tr><tr><td>12</td><td>(12) <code>BlockPos</code></td><td>max</td></tr></tbody></table><h3 id="bedrock-application-threadowner-core-random" tabindex="-1"><a class="header-anchor" href="#bedrock-application-threadowner-core-random"><span><code>Bedrock::Application::ThreadOwner&lt;Core::Random&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2516) <code>Core::Random</code></td><td>mObject</td></tr></tbody></table><h3 id="blocksource" tabindex="-1"><a class="header-anchor" href="#blocksource"><span><code>BlockSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockSource</td></tr><tr><td>8</td><td>(8) <code>const std::thread::id</code></td><td>mOwnerThreadID</td></tr><tr><td>16</td><td>(1) <code>const bool</code></td><td>mAllowUnpopulatedChunks</td></tr><tr><td>17</td><td>(1) <code>const bool</code></td><td>mPublicSource</td></tr><tr><td>24</td><td>(8) <code>Level *</code></td><td>mLevel</td></tr><tr><td>32</td><td>(8) <code>ChunkSource *</code></td><td>mChunkSource</td></tr><tr><td>40</td><td>(8) <code>Dimension *</code></td><td>mDimension</td></tr><tr><td>48</td><td>(2) <code>const Height</code></td><td>mMaxHeight</td></tr><tr><td>56</td><td>(24) <code>std::vector&lt;BlockFetchResult&gt;</code></td><td>mTempBlockFetchResult</td></tr><tr><td>80</td><td>(12) <code>BlockPos</code></td><td>mPlaceChunkPos</td></tr><tr><td>96</td><td>(24) <code>BlockSource::ListenerVector</code></td><td>mListeners</td></tr><tr><td>120</td><td>(8) <code>ChunkPos</code></td><td>mLastChunkPos</td></tr><tr><td>128</td><td>(8) <code>LevelChunk *</code></td><td>mLastChunk</td></tr><tr><td>136</td><td>(8) <code>BlockTickingQueue *</code></td><td>mRandomTickQueue</td></tr><tr><td>144</td><td>(8) <code>BlockTickingQueue *</code></td><td>mTickQueue</td></tr><tr><td>152</td><td>(2) <code>const BrightnessPair</code></td><td>mDefaultBrightness</td></tr><tr><td>160</td><td>(24) <code>ActorList</code></td><td>mTempEntityList</td></tr><tr><td>184</td><td>(24) <code>BlockActorList</code></td><td>mTempBlockEntityList</td></tr><tr><td>208</td><td>(24) <code>std::vector&lt;AABB&gt;</code></td><td>mTempCubeList</td></tr></tbody></table><h3 id="blocksource-listenervector" tabindex="-1"><a class="header-anchor" href="#blocksource-listenervector"><span><code>BlockSource::ListenerVector</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Vector_base&lt;BlockSourceListener *&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="brightnesspair" tabindex="-1"><a class="header-anchor" href="#brightnesspair"><span><code>BrightnessPair</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>Brightness</code></td><td>sky</td></tr><tr><td>1</td><td>(1) <code>Brightness</code></td><td>block</td></tr></tbody></table><h3 id="brightness" tabindex="-1"><a class="header-anchor" href="#brightness"><span><code>Brightness</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>NewType&lt;unsigned char&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="blockactorlist" tabindex="-1"><a class="header-anchor" href="#blockactorlist"><span><code>BlockActorList</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Vector_base&lt;BlockActor *&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="blocktickingqueue" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue"><span><code>BlockTickingQueue</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>LevelChunk *</code></td><td>mOwningChunk</td></tr><tr><td>8</td><td>(8) <code>Tick</code></td><td>mCurrentTick</td></tr><tr><td>16</td><td>(24) <code>BlockTickingQueue::TickDataSet</code></td><td>mNextTickQueue</td></tr><tr><td>40</td><td>(24) <code>BlockTickingQueue::TickDataSet</code></td><td>mActiveTickQueue</td></tr><tr><td>64</td><td>(1) <code>TickingQueueType</code></td><td>mQueueType</td></tr><tr><td>65</td><td>(1) <code>bool</code></td><td>mInstaTick</td></tr></tbody></table><h3 id="blocktickingqueue-tickdataset" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue-tickdataset"><span><code>BlockTickingQueue::TickDataSet</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>MovePriorityQueue&lt;BlockTickingQueue::BlockTick,std::greater&lt;BlockTickingQueue::BlockTick&gt; &gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-bedrock-threading-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-bedrock-threading-mutex"><span><code>Bedrock::Threading::LockGuard&lt;Bedrock::Threading::Mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="buffer-span-chunkpos" tabindex="-1"><a class="header-anchor" href="#buffer-span-chunkpos"><span><code>buffer_span&lt;ChunkPos&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ChunkPos *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const ChunkPos *</code></td><td>mEnd</td></tr></tbody></table><h3 id="biomesource" tabindex="-1"><a class="header-anchor" href="#biomesource"><span><code>BiomeSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BiomeSource</td></tr></tbody></table><h3 id="blockvolume" tabindex="-1"><a class="header-anchor" href="#blockvolume"><span><code>BlockVolume</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>buffer_span_mut&lt;const Block *&gt;</code></td><td>blocks</td></tr><tr><td>16</td><td>(4) <code>uint32_t</code></td><td>mWidth</td></tr><tr><td>20</td><td>(4) <code>uint32_t</code></td><td>mHeight</td></tr><tr><td>24</td><td>(4) <code>uint32_t</code></td><td>mDepth</td></tr></tbody></table><h3 id="buffer-span-mut-const-block" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-const-block"><span><code>buffer_span_mut&lt;const Block *&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Block **</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const Block **</code></td><td>mEnd</td></tr></tbody></table><h3 id="biomearea" tabindex="-1"><a class="header-anchor" href="#biomearea"><span><code>BiomeArea</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>uint32_t</code></td><td>mStride</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;const Biome *&gt;</code></td><td>mBiomes</td></tr></tbody></table><h3 id="bonuschestfeature" tabindex="-1"><a class="header-anchor" href="#bonuschestfeature"><span><code>BonusChestFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="blockpositerator" tabindex="-1"><a class="header-anchor" href="#blockpositerator"><span><code>BlockPosIterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>const BlockPos</code></td><td>mMinCorner</td></tr><tr><td>12</td><td>(12) <code>const BlockPos</code></td><td>mMaxCorner</td></tr><tr><td>24</td><td>(12) <code>BlockPos</code></td><td>mCurrentPos</td></tr><tr><td>36</td><td>(1) <code>bool</code></td><td>mDone</td></tr></tbody></table><h3 id="buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1" tabindex="-1"><a class="header-anchor" href="#buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1"><span><code>buffer_span&lt;std::pair&lt;gsl::basic_string_span&lt;const char,-1&gt;,gsl::basic_string_span&lt;const char,-1&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const std::pair&lt;gsl::basic_string_span&lt;const char,-1&gt;,gsl::basic_string_span&lt;const char,-1&gt; &gt; *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const std::pair&lt;gsl::basic_string_span&lt;const char,-1&gt;,gsl::basic_string_span&lt;const char,-1&gt; &gt; *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1-iterator"><span><code>buffer_span&lt;std::pair&lt;gsl::basic_string_span&lt;const char,-1&gt;,gsl::basic_string_span&lt;const char,-1&gt; &gt; &gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const std::pair&lt;gsl::basic_string_span&lt;const char,-1&gt;,gsl::basic_string_span&lt;const char,-1&gt; &gt; *</code></td><td>mPtr</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-core-singlethreadedlock"><span><code>Bedrock::Threading::LockGuard&lt;Core::SingleThreadedLock&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;Core::SingleThreadedLock&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="ballooncomponent" tabindex="-1"><a class="header-anchor" href="#ballooncomponent"><span><code>BalloonComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ActorUniqueID</code></td><td>mAttachedID</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mMaxHeight</td></tr><tr><td>12</td><td>(1) <code>bool</code></td><td>mShouldDropAttached</td></tr></tbody></table><h3 id="behaviorcomponent" tabindex="-1"><a class="header-anchor" href="#behaviorcomponent"><span><code>BehaviorComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>BehaviorTreeDefinitionPtr</code></td><td>mTreeDefinition</td></tr><tr><td>16</td><td>(8) <code>Unique&lt;BehaviorNode&gt;</code></td><td>mRoot</td></tr><tr><td>24</td><td>(80) <code>BehaviorData</code></td><td>mBehaviorData</td></tr></tbody></table><h3 id="behaviortreedefinitionptr" tabindex="-1"><a class="header-anchor" href="#behaviortreedefinitionptr"><span><code>BehaviorTreeDefinitionPtr</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BehaviorTreeGroup *</code></td><td>mGroup</td></tr><tr><td>8</td><td>(8) <code>BehaviorTreeDefinition *</code></td><td>mPtr</td></tr></tbody></table><h3 id="behaviordata" tabindex="-1"><a class="header-anchor" href="#behaviordata"><span><code>BehaviorData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,std::unique_ptr&lt;BehaviorData::DataProxy&gt;&gt;</code></td><td>mData</td></tr><tr><td>56</td><td>(24) <code>std::vector&lt;std::unique_ptr&lt;BehaviorData::DataProxy&gt;&gt;</code></td><td>mDataStack</td></tr></tbody></table><h3 id="blockbreaksensorcomponent" tabindex="-1"><a class="header-anchor" href="#blockbreaksensorcomponent"><span><code>BlockBreakSensorComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mSensorRadius</td></tr><tr><td>4</td><td>(12) <code>Vec3</code></td><td>mSensorPos</td></tr><tr><td>16</td><td>(16) <code>BlockEventDispatcherToken</code></td><td>mListener</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;BlockListEventMap&gt;</code></td><td>mBlockSets</td></tr></tbody></table><h3 id="blockeventdispatchertoken" tabindex="-1"><a class="header-anchor" href="#blockeventdispatchertoken"><span><code>BlockEventDispatcherToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>ListenerHandle</code></td><td>mHandle</td></tr><tr><td>8</td><td>(8) <code>BlockEventDispatcher *</code></td><td>mDispatcher</td></tr></tbody></table><h3 id="bodycontrolcomponent" tabindex="-1"><a class="header-anchor" href="#bodycontrolcomponent"><span><code>BodyControlComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;BodyControl&gt;</code></td><td>mBodyControl</td></tr></tbody></table><h3 id="boostablecomponent" tabindex="-1"><a class="header-anchor" href="#boostablecomponent"><span><code>BoostableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mIsBoosting</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mBoostTime</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mBoostTimeTotal</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mFovMod</td></tr></tbody></table><h3 id="bosscomponent" tabindex="-1"><a class="header-anchor" href="#bosscomponent"><span><code>BossComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mHealthBarVisible</td></tr><tr><td>36</td><td>(4) <code>float</code></td><td>mHealthPercent</td></tr><tr><td>40</td><td>(1) <code>bool</code></td><td>mShouldDarkenSky</td></tr><tr><td>41</td><td>(1) <code>bool</code></td><td>mCreateWorldFog</td></tr><tr><td>44</td><td>(4) <code>BossBarColor</code></td><td>mColor</td></tr><tr><td>48</td><td>(4) <code>BossBarOverlay</code></td><td>mOverlay</td></tr><tr><td>52</td><td>(4) <code>int</code></td><td>mPlayersRegistered</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>mLastHealth</td></tr><tr><td>60</td><td>(4) <code>int</code></td><td>mHudRangeSquared</td></tr><tr><td>64</td><td>(8) <code>std::chrono::_V2::steady_clock::time_point</code></td><td>mLastPlayerUpdate</td></tr><tr><td>72</td><td>(56) <code>std::unordered_map&lt;mce::UUID,int&gt;</code></td><td>mPlayerParty</td></tr></tbody></table><h3 id="breakblockscomponent" tabindex="-1"><a class="header-anchor" href="#breakblockscomponent"><span><code>BreakBlocksComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>IEntityComponent</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="breakdoorannotationcomponent" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationcomponent"><span><code>BreakDoorAnnotationComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mBreakTicks</td></tr><tr><td>4</td><td>(4) <code>Difficulty</code></td><td>mMinDifficulty</td></tr><tr><td>8</td><td>(8) <code>ActorUniqueID</code></td><td>mTargetID</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mBreakingTime</td></tr><tr><td>20</td><td>(16) <code>std::optional&lt;BlockPos&gt;</code></td><td>mObstructionPos</td></tr><tr><td>40</td><td>(8) <code>size_t</code></td><td>mLastPathIndex</td></tr></tbody></table><h3 id="breathablecomponent" tabindex="-1"><a class="header-anchor" href="#breathablecomponent"><span><code>BreathableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mSuffocateTime</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mInhaleTime</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mAirRegenPerTick</td></tr><tr><td>12</td><td>(1) <code>bool</code></td><td>mBreathesAir</td></tr><tr><td>13</td><td>(1) <code>bool</code></td><td>mBreathesWater</td></tr><tr><td>14</td><td>(1) <code>bool</code></td><td>mBreathesLava</td></tr><tr><td>15</td><td>(1) <code>bool</code></td><td>mBreathesSolids</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>mGeneratesBubbles</td></tr><tr><td>18</td><td>(2) <code>__int16</code></td><td>mAirSupply</td></tr><tr><td>20</td><td>(2) <code>__int16</code></td><td>mAirSupplyMax</td></tr><tr><td>24</td><td>(48) <code>std::set&lt;const Block *&gt;</code></td><td>mBreathableBlocks</td></tr><tr><td>72</td><td>(48) <code>std::set&lt;const Block *&gt;</code></td><td>mNonBreathableBlocks</td></tr><tr><td>120</td><td>(4) <code>BreathableComponent::BreathableState</code></td><td>mBreathableState</td></tr></tbody></table><h3 id="breedablecomponent" tabindex="-1"><a class="header-anchor" href="#breedablecomponent"><span><code>BreedableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BreedableDefinition *</code></td><td>mStaticData</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mLoveTimer</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mBreedCooldown</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mBreedCooldownTime</td></tr><tr><td>20</td><td>(1) <code>bool</code></td><td>mInheritTamed</td></tr><tr><td>21</td><td>(1) <code>bool</code></td><td>mCausesPregnancy</td></tr><tr><td>24</td><td>(8) <code>ActorUniqueID</code></td><td>mLoveCause</td></tr></tbody></table><h3 id="bribeablecomponent" tabindex="-1"><a class="header-anchor" href="#bribeablecomponent"><span><code>BribeableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BribeableDefinition *</code></td><td>mStaticData</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mBribeTimer</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mBribeCooldown</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mBribeCooldownTime</td></tr></tbody></table><h3 id="basecommandblock" tabindex="-1"><a class="header-anchor" href="#basecommandblock"><span><code>BaseCommandBlock</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mLastOutputId</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mLastOutputParams</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mCommand</td></tr><tr><td>88</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>120</td><td>(8) <code>std::unique_ptr&lt;Command&gt;</code></td><td>mCompiledCommand</td></tr><tr><td>128</td><td>(8) <code>uint64_t</code></td><td>mLastExecution</td></tr><tr><td>136</td><td>(4) <code>int</code></td><td>mVersion</td></tr><tr><td>140</td><td>(4) <code>int</code></td><td>mSuccessCount</td></tr><tr><td>144</td><td>(4) <code>int</code></td><td>mTickDelay</td></tr><tr><td>148</td><td>(1) <code>bool</code></td><td>mExecuteOnFirstTick</td></tr><tr><td>149</td><td>(1) <code>bool</code></td><td>mTrackOutput</td></tr></tbody></table><h3 id="bedrock-threading-23596803-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-23596803-1"><span><code>Bedrock::Threading::$&lt;23596803,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-uniquelock-bedrock-threading-sharedmutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelock-bedrock-threading-sharedmutex"><span><code>Bedrock::Threading::UniqueLock&lt;Bedrock::Threading::SharedMutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_lock&lt;std::shared_timed_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="bedrock-threading-sharedlock-bedrock-threading-sharedmutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-sharedlock-bedrock-threading-sharedmutex"><span><code>Bedrock::Threading::SharedLock&lt;Bedrock::Threading::SharedMutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::shared_lock&lt;std::shared_timed_mutex&gt;::mutex_type *</code></td><td>_M_pm</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="binarydataoutput" tabindex="-1"><a class="header-anchor" href="#binarydataoutput"><span><code>BinaryDataOutput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BytesDataOutput</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>BinaryStream *</code></td><td>mStream</td></tr></tbody></table><h3 id="bytesdataoutput" tabindex="-1"><a class="header-anchor" href="#bytesdataoutput"><span><code>BytesDataOutput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>IDataOutput</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="binarydatainput" tabindex="-1"><a class="header-anchor" href="#binarydatainput"><span><code>BinaryDataInput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BytesDataInput</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>ReadOnlyBinaryStream *</code></td><td>mStream</td></tr></tbody></table><h3 id="bytesdatainput" tabindex="-1"><a class="header-anchor" href="#bytesdatainput"><span><code>BytesDataInput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>IDataInput</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-iasyncresult-void-handle" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-void-handle"><span><code>Bedrock::Threading::IAsyncResult&lt;void&gt;::Handle</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::__shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;void&gt;,__gnu_cxx::_S_atomic&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-uniquelock-bedrock-threading-recursivemutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelock-bedrock-threading-recursivemutex"><span><code>Bedrock::Threading::UniqueLock&lt;Bedrock::Threading::RecursiveMutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_lock&lt;std::recursive_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="bedrock-threading-25190359-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-25190359-1"><span><code>Bedrock::Threading::$&lt;25190359,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="blacklist-entry" tabindex="-1"><a class="header-anchor" href="#blacklist-entry"><span><code>Blacklist::Entry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>mce::UUID</code></td><td>mUuid</td></tr><tr><td>16</td><td>(32) <code>std::string</code></td><td>mXuid</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mBlockedMessage</td></tr><tr><td>80</td><td>(4) <code>Blacklist::Duration</code></td><td>mDuration</td></tr></tbody></table><h3 id="biomedefinitionlistpacket" tabindex="-1"><a class="header-anchor" href="#biomedefinitionlistpacket"><span><code>BiomeDefinitionListPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(56) <code>CompoundTag</code></td><td>mBiomeData</td></tr></tbody></table><h3 id="bedrock-threading-uniquelock-bedrock-threading-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelock-bedrock-threading-mutex"><span><code>Bedrock::Threading::UniqueLock&lt;Bedrock::Threading::Mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_lock&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="bookeditpacket" tabindex="-1"><a class="header-anchor" href="#bookeditpacket"><span><code>BookEditPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(36) <code>Packet:288</code></td><td>baseclass_0</td></tr><tr><td>36</td><td>(1) <code>BookEditAction</code></td><td>mAction</td></tr><tr><td>40</td><td>(4) <code>int</code></td><td>mBookSlot</td></tr><tr><td>44</td><td>(4) <code>int</code></td><td>mPageIndex1</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>mPageIndex2</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mText1</td></tr><tr><td>88</td><td>(32) <code>std::string</code></td><td>mText2</td></tr><tr><td>120</td><td>(32) <code>std::string</code></td><td>mText3</td></tr></tbody></table><h3 id="buffer-span-unsigned-int" tabindex="-1"><a class="header-anchor" href="#buffer-span-unsigned-int"><span><code>buffer_span&lt;unsigned int&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned int *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const unsigned int *</code></td><td>mEnd</td></tr></tbody></table><h3 id="basegamepackslices-applypackslices-407e69f49d83a976b60eb7804f48e5fb" tabindex="-1"><a class="header-anchor" href="#basegamepackslices-applypackslices-407e69f49d83a976b60eb7804f48e5fb"><span><code>BaseGamePackSlices::applyPackSlices::$407E69F49D83A976B60EB7804F48E5FB</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>const bool</code></td><td>shouldApplyAllSlices</td></tr><tr><td>8</td><td>(8) <code>const BaseGameVersion *</code></td><td>baseGameVersion</td></tr></tbody></table><h3 id="basegameversion-any-version-constructor" tabindex="-1"><a class="header-anchor" href="#basegameversion-any-version-constructor"><span><code>BaseGameVersion::any_version_constructor</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="behaviorpackcontents" tabindex="-1"><a class="header-anchor" href="#behaviorpackcontents"><span><code>BehaviorPackContents</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>uint32_t</code></td><td>mEntities</td></tr><tr><td>4</td><td>(4) <code>uint32_t</code></td><td>mLoots</td></tr><tr><td>8</td><td>(4) <code>uint32_t</code></td><td>mTrades</td></tr><tr><td>12</td><td>(4) <code>uint32_t</code></td><td>mPlugins</td></tr></tbody></table><h3 id="bedrock-threading-thread" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-thread"><span><code>Bedrock::Threading::Thread</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::thread::id</code></td><td>_M_id</td></tr></tbody></table><h3 id="blacklist-lockguard" tabindex="-1"><a class="header-anchor" href="#blacklist-lockguard"><span><code>Blacklist::LockGuard</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::recursive_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-conditionvariable" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-conditionvariable"><span><code>Bedrock::Threading::ConditionVariable</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::condition_variable::__native_type</code></td><td>_M_cond</td></tr></tbody></table><h3 id="bucketablecomponent" tabindex="-1"><a class="header-anchor" href="#bucketablecomponent"><span><code>BucketableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>IEntityComponent</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bucketabledescription" tabindex="-1"><a class="header-anchor" href="#bucketabledescription"><span><code>BucketableDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ComponentDescription</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="boneanimationchannel-sortkeyframes-keyframecompare" tabindex="-1"><a class="header-anchor" href="#boneanimationchannel-sortkeyframes-keyframecompare"><span><code>BoneAnimationChannel::sortKeyFrames::KeyFrameCompare</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="boneorientation" tabindex="-1"><a class="header-anchor" href="#boneorientation"><span><code>BoneOrientation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mParentBoneIndex</td></tr><tr><td>4</td><td>(4) <code>SkeletalHierarchyIndex</code></td><td>mParentSkeletalHierarchyIndex</td></tr><tr><td>8</td><td>(40) <code>HashedString</code></td><td>mName</td></tr><tr><td>48</td><td>(64) <code>Matrix</code></td><td>mLocalPreTransformMatrix</td></tr><tr><td>112</td><td>(64) <code>Matrix</code></td><td>mMatrix</td></tr><tr><td>176</td><td>(4) <code>BoneAnimationRelativeMode</code></td><td>mRotationRelativeMode</td></tr><tr><td>180</td><td>(36) <code>BoneOrientationTransform</code></td><td>mTransform</td></tr><tr><td>216</td><td>(36) <code>BoneOrientationTransform</code></td><td>mDefaultTransform</td></tr><tr><td>252</td><td>(12) <code>Vec3</code></td><td>mPivot</td></tr><tr><td>264</td><td>(1) <code>bool</code></td><td>mOverrideStackMatrix</td></tr><tr><td>265</td><td>(1) <code>bool</code></td><td>mApplyLocalPreTransformMatrix</td></tr></tbody></table><h3 id="boneorientationtransform" tabindex="-1"><a class="header-anchor" href="#boneorientationtransform"><span><code>BoneOrientationTransform</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(36) <code>Vec3[3]</code></td><td>mData</td></tr></tbody></table><h3 id="bedrock-threading-recursivemutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-recursivemutex"><span><code>Bedrock::Threading::RecursiveMutex</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>std::__recursive_mutex_base</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-bedrock-threading-recursivemutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-bedrock-threading-recursivemutex"><span><code>Bedrock::Threading::LockGuard&lt;Bedrock::Threading::RecursiveMutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::recursive_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="buffer-span-mut-std-shared-ptr-levelchunk" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-std-shared-ptr-levelchunk"><span><code>buffer_span_mut&lt;std::shared_ptr&lt;LevelChunk&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::shared_ptr&lt;LevelChunk&gt; *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>std::shared_ptr&lt;LevelChunk&gt; *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-unsigned-int-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-unsigned-int-iterator"><span><code>buffer_span&lt;unsigned int&gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned int *</code></td><td>mPtr</td></tr></tbody></table><h3 id="blockactordatapacket" tabindex="-1"><a class="header-anchor" href="#blockactordatapacket"><span><code>BlockActorDataPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(36) <code>Packet:288</code></td><td>baseclass_0</td></tr><tr><td>36</td><td>(12) <code>NetworkBlockPosition</code></td><td>mPos</td></tr><tr><td>48</td><td>(56) <code>CompoundTag</code></td><td>mData</td></tr></tbody></table><h3 id="buffer-span-mut-unsigned-int" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-unsigned-int"><span><code>buffer_span_mut&lt;unsigned int&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned int *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>unsigned int *</code></td><td>mEnd</td></tr></tbody></table><h3 id="blockpalette-constructortoken" tabindex="-1"><a class="header-anchor" href="#blockpalette-constructortoken"><span><code>BlockPalette::ConstructorToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="blockid" tabindex="-1"><a class="header-anchor" href="#blockid"><span><code>BlockID</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>NewType&lt;unsigned char&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="buffer-span-blockid" tabindex="-1"><a class="header-anchor" href="#buffer-span-blockid"><span><code>buffer_span&lt;BlockID&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BlockID *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const BlockID *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-nibblepair" tabindex="-1"><a class="header-anchor" href="#buffer-span-nibblepair"><span><code>buffer_span&lt;NibblePair&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const NibblePair *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const NibblePair *</code></td><td>mEnd</td></tr></tbody></table><h3 id="blockfetchresult" tabindex="-1"><a class="header-anchor" href="#blockfetchresult"><span><code>BlockFetchResult</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::reference_wrapper&lt;const Block&gt;</code></td><td>mBlock</td></tr><tr><td>8</td><td>(12) <code>BlockPos</code></td><td>mBlockPos</td></tr><tr><td>20</td><td>(4) <code>uint32_t</code></td><td>mDistanceSquared</td></tr></tbody></table><h3 id="buffer-span-subchunk" tabindex="-1"><a class="header-anchor" href="#buffer-span-subchunk"><span><code>buffer_span&lt;SubChunk&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const SubChunk *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const SubChunk *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-actor" tabindex="-1"><a class="header-anchor" href="#buffer-span-actor"><span><code>buffer_span&lt;Actor *&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Actor *const *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>Actor *const *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-actor-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-actor-iterator"><span><code>buffer_span&lt;Actor *&gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Actor *const *</code></td><td>mPtr</td></tr></tbody></table><h3 id="blocktickingqueue-blocktick" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue-blocktick"><span><code>BlockTickingQueue::BlockTick</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mIsRemoved</td></tr><tr><td>8</td><td>(40) <code>TickNextTickData</code></td><td>mData</td></tr></tbody></table><h3 id="blocktickingqueue-gettickdelaysinarea-8cf75821b5ba7dd28c0cf4a48a9cb9fa" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue-gettickdelaysinarea-8cf75821b5ba7dd28c0cf4a48a9cb9fa"><span><code>BlockTickingQueue::getTickDelaysInArea::$8CF75821B5BA7DD28C0CF4A48A9CB9FA</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BoundingBox *</code></td><td>boundingBox</td></tr><tr><td>8</td><td>(8) <code>std::unordered_multimap&lt;BlockPos,TickDelayBlock&gt; *</code></td><td>ticks</td></tr><tr><td>16</td><td>(8) <code>const BlockTickingQueue *</code></td><td>this</td></tr></tbody></table><h3 id="blockposset" tabindex="-1"><a class="header-anchor" href="#blockposset"><span><code>BlockPosSet</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_set&lt;BlockPos&gt;::_Hashtable</code></td><td>_M_h</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-weightedbiomeattributes-hillstransformation" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-weightedbiomeattributes-hillstransformation"><span><code>BiomeComponentLoading::ComponentAccessor&lt;WeightedBiomeAttributes&lt;HillsTransformation&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;HillsTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-weightedbiomeattributes-mutatebiometransformation" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-weightedbiomeattributes-mutatebiometransformation"><span><code>BiomeComponentLoading::ComponentAccessor&lt;WeightedBiomeAttributes&lt;MutateBiomeTransformation&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;MutateBiomeTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-weightedbiomeattributes-rivertransformation" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-weightedbiomeattributes-rivertransformation"><span><code>BiomeComponentLoading::ComponentAccessor&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-weightedbiomeattributes-shoretransformation" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-weightedbiomeattributes-shoretransformation"><span><code>BiomeComponentLoading::ComponentAccessor&lt;WeightedBiomeAttributes&lt;ShoreTransformation&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;ShoreTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-ignoreautomaticfeaturerules" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-ignoreautomaticfeaturerules"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;IgnoreAutomaticFeatureRules&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;IgnoreAutomaticFeatureRules&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-datadrivenbiomesurface" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-datadrivenbiomesurface"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;DataDrivenBiomeSurface&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;DataDrivenBiomeSurface&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-swampbiomesurface" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-swampbiomesurface"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;SwampBiomeSurface&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;SwampBiomeSurface&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-oceanfrozenbiomesurface" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-oceanfrozenbiomesurface"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;OceanFrozenBiomeSurface&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;OceanFrozenBiomeSurface&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-netherbiomesurface" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-netherbiomesurface"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;NetherBiomeSurface&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;NetherBiomeSurface&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-flagcomponent-theendbiomesurface" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-flagcomponent-theendbiomesurface"><span><code>BiomeComponentLoading::ComponentAccessor&lt;FlagComponent&lt;TheEndBiomeSurface&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FlagComponent&lt;TheEndBiomeSurface&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-hillstransformationattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-hillstransformationattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;HillsTransformationAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;HillsTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-mutatetransformationattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-mutatetransformationattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;MutateTransformationAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;MutateBiomeTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-prehillsedgeattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-prehillsedgeattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;PreHillsEdgeAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FilteredTransformationAttributes&lt;PreHillsEdgeTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-postshoreedgeattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-postshoreedgeattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;PostShoreEdgeAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FilteredTransformationAttributes&lt;PostShoreEdgeTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-rivertransformationattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-rivertransformationattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;RiverTransformationAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;RiverTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-shoreattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-shoreattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;ShoreAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WeightedBiomeAttributes&lt;ShoreTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-legacyprehillsedgeattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-legacyprehillsedgeattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;LegacyPreHillsEdgeAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;FilteredTransformationAttributes&lt;LegacyPreHillsEdgeTransformation&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomefiltergroup" tabindex="-1"><a class="header-anchor" href="#biomefiltergroup"><span><code>BiomeFilterGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>FilterGroup</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="biomeheight" tabindex="-1"><a class="header-anchor" href="#biomeheight"><span><code>BiomeHeight</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>depth</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>scale</td></tr></tbody></table><h3 id="biomedecorationattributes-listedfeatures" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-listedfeatures"><span><code>BiomeDecorationAttributes&lt;ListedFeatures&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;BiomeDecorationAttributes&lt;ListedFeatures&gt;::Element,std::allocator&lt;BiomeDecorationAttributes&lt;ListedFeatures&gt;::Element&gt; &gt;</code></td><td>mFeatures</td></tr></tbody></table><h3 id="biomecomponentloading-buildschema-biomedecorationattributes-listedfeatures-2658d4b1be3081384a926fb0e5d18baf" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-buildschema-biomedecorationattributes-listedfeatures-2658d4b1be3081384a926fb0e5d18baf"><span><code>BiomeComponentLoading::_buildSchema&lt;BiomeDecorationAttributes&lt;ListedFeatures&gt; &gt;::$2658D4B1BE3081384A926FB0E5D18BAF</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BiomeComponentLoading::BiomeSchemaNode *</code></td><td>schemaNode</td></tr><tr><td>8</td><td>(32) <code>BiomeComponentLoading::ComponentAccessor&lt;ListedFeaturesDecorationAttributes&gt;</code></td><td>componentAccessor</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-listedfeaturesdecorationattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-listedfeaturesdecorationattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;ListedFeaturesDecorationAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;BiomeDecorationAttributes&lt;ListedFeatures&gt; &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-climateattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-climateattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;ClimateAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;ClimateAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-surfacematerialadjustmentattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-surfacematerialadjustmentattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;SurfaceMaterialAdjustmentAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;SurfaceMaterialAdjustmentAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-surfacematerialattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-surfacematerialattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;SurfaceMaterialAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;SurfaceMaterialAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-worldgenclimatemappingattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-worldgenclimatemappingattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;WorldGenClimateMappingAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;WorldGenClimateMappingAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-mesasurfaceattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-mesasurfaceattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;MesaSurfaceAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;MesaSurfaceAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-componentaccessor-overworldheightattributes" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-componentaccessor-overworldheightattributes"><span><code>BiomeComponentLoading::ComponentAccessor&lt;OverworldHeightAttributes&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;OverworldHeightAttributes &amp;(std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; *)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="biomecomponentloading-biomeparsecontext" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-biomeparsecontext"><span><code>BiomeComponentLoading::BiomeParseContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::reference_wrapper&lt;Biome&gt;</code></td><td>first</td></tr><tr><td>8</td><td>(8) <code>std::reference_wrapper&lt;IWorldRegistriesProvider&gt;</code></td><td>second</td></tr></tbody></table><h3 id="biomemetadata" tabindex="-1"><a class="header-anchor" href="#biomemetadata"><span><code>BiomeMetadata</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mInherits</td></tr><tr><td>64</td><td>(16) <code>Json::Value</code></td><td>mLocalComponents</td></tr></tbody></table><h3 id="biomeregistrymergestrategy" tabindex="-1"><a class="header-anchor" href="#biomeregistrymergestrategy"><span><code>BiomeRegistryMergeStrategy</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ResourcePackMergeStrategy</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(32) <code>Core::HeapPathBuffer</code></td><td>mBiomePath</td></tr><tr><td>40</td><td>(8) <code>Json::Value *</code></td><td>mRoot</td></tr></tbody></table><h3 id="baserailblock-rail" tabindex="-1"><a class="header-anchor" href="#baserailblock-rail"><span><code>BaseRailBlock::Rail</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BlockSource *</code></td><td>mRegion</td></tr><tr><td>8</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr><tr><td>20</td><td>(1) <code>bool</code></td><td>mUsesDataBit</td></tr><tr><td>24</td><td>(24) <code>std::vector&lt;BlockPos&gt;</code></td><td>mConnections</td></tr></tbody></table><h3 id="blocklegacy-createblockpermutations-033a5a72970d0569f1b4e5782e3e5f13" tabindex="-1"><a class="header-anchor" href="#blocklegacy-createblockpermutations-033a5a72970d0569f1b4e5782e3e5f13"><span><code>BlockLegacy::createBlockPermutations::$033A5A72970D0569F1B4E5782E3E5F13</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BlockLegacy *</code></td><td>this</td></tr></tbody></table><h3 id="bedrock-threading-uniquelock-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelock-mutex"><span><code>Bedrock::Threading::UniqueLock&lt;Mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_lock&lt;std::shared_timed_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="bedrock-threading-sharedlock-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-sharedlock-mutex"><span><code>Bedrock::Threading::SharedLock&lt;Mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::shared_lock&lt;std::shared_timed_mutex&gt;::mutex_type *</code></td><td>_M_pm</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="buffer-span-mut-long" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-long"><span><code>buffer_span_mut&lt;long&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>__int64 *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>__int64 *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-mut-const-block-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-const-block-iterator"><span><code>buffer_span_mut&lt;const Block *&gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Block **</code></td><td>mPtr</td></tr></tbody></table><h3 id="beaconbeamsection" tabindex="-1"><a class="header-anchor" href="#beaconbeamsection"><span><code>BeaconBeamSection</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mHeight</td></tr><tr><td>4</td><td>(16) <code>Color</code></td><td>mColor</td></tr></tbody></table><h3 id="blockdescriptionfactoryfunction" tabindex="-1"><a class="header-anchor" href="#blockdescriptionfactoryfunction"><span><code>BlockDescriptionFactoryFunction</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;std::unique_ptr&lt;BlockComponentDescription&gt; ()&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="blockdescription" tabindex="-1"><a class="header-anchor" href="#blockdescription"><span><code>BlockDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mIdentifier</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mRegisterToCreativeMenu</td></tr><tr><td>33</td><td>(1) <code>bool</code></td><td>mIsExperimental</td></tr></tbody></table><h3 id="blockdefinition" tabindex="-1"><a class="header-anchor" href="#blockdefinition"><span><code>BlockDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(112) <code>SemVersion</code></td><td>mFormatVersion</td></tr><tr><td>112</td><td>(40) <code>BlockDescription</code></td><td>mDescription</td></tr><tr><td>152</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;BlockComponentDescription&gt;&gt;</code></td><td>mDescriptions</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-spinlock" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-spinlock"><span><code>Bedrock::Threading::LockGuard&lt;SpinLock&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;SpinLock&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="buffer-span-pos" tabindex="-1"><a class="header-anchor" href="#buffer-span-pos"><span><code>buffer_span&lt;Pos&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Pos *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const Pos *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-const-block" tabindex="-1"><a class="header-anchor" href="#buffer-span-const-block"><span><code>buffer_span&lt;const Block *&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Block *const *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const Block *const *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-mut-subchunk-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-subchunk-iterator"><span><code>buffer_span_mut&lt;SubChunk&gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>SubChunk *</code></td><td>mPtr</td></tr></tbody></table><h3 id="biomechunkdata" tabindex="-1"><a class="header-anchor" href="#biomechunkdata"><span><code>BiomeChunkData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>biome</td></tr></tbody></table><h3 id="buffer-span-mut-subchunk" tabindex="-1"><a class="header-anchor" href="#buffer-span-mut-subchunk"><span><code>buffer_span_mut&lt;SubChunk&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>SubChunk *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>SubChunk *</code></td><td>mEnd</td></tr></tbody></table><h3 id="biomechunkdatalegacy" tabindex="-1"><a class="header-anchor" href="#biomechunkdatalegacy"><span><code>BiomeChunkDataLegacy</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>biome</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>r</td></tr><tr><td>2</td><td>(1) <code>unsigned __int8</code></td><td>g</td></tr><tr><td>3</td><td>(1) <code>unsigned __int8</code></td><td>b</td></tr></tbody></table><h3 id="blockeventpacket" tabindex="-1"><a class="header-anchor" href="#blockeventpacket"><span><code>BlockEventPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(36) <code>Packet:288</code></td><td>baseclass_0</td></tr><tr><td>36</td><td>(12) <code>NetworkBlockPosition</code></td><td>mPos</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>mB0</td></tr><tr><td>52</td><td>(4) <code>int</code></td><td>mB1</td></tr></tbody></table><h3 id="buildmatch" tabindex="-1"><a class="header-anchor" href="#buildmatch"><span><code>BuildMatch</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mMatched</td></tr><tr><td>1</td><td>(1) <code>FacingID</code></td><td>mForward</td></tr><tr><td>2</td><td>(1) <code>FacingID</code></td><td>mUp</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mNumPatterns</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mPatternSize</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mSubPatternIndex</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mRowIndex</td></tr><tr><td>20</td><td>(12) <code>BlockPos</code></td><td>mPattern</td></tr><tr><td>32</td><td>(12) <code>Vec3</code></td><td>mObjectPos</td></tr></tbody></table><h3 id="biomedecorationattributes-implicitfeatures-element" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-implicitfeatures-element"><span><code>BiomeDecorationAttributes&lt;ImplicitFeatures&gt;::Element</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1064) <code>ScatterParams</code></td><td>mScatter</td></tr><tr><td>1064</td><td>(24) <code>WeakRef&lt;IFeature&gt;</code></td><td>mFeature</td></tr><tr><td>1088</td><td>(48) <code>StringKey</code></td><td>mIdentifier</td></tr></tbody></table><h3 id="biomedecorationattributes-implicitfeatures" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-implicitfeatures"><span><code>BiomeDecorationAttributes&lt;ImplicitFeatures&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;BiomeDecorationAttributes&lt;ImplicitFeatures&gt;::Element,std::allocator&lt;BiomeDecorationAttributes&lt;ImplicitFeatures&gt;::Element&gt; &gt;</code></td><td>mFeatures</td></tr></tbody></table><h3 id="bonuschestfeature-place-fd274ef55ac88bd6b944c809a18a5641" tabindex="-1"><a class="header-anchor" href="#bonuschestfeature-place-fd274ef55ac88bd6b944c809a18a5641"><span><code>BonusChestFeature::place::$FD274EF55AC88BD6B944C809A18A5641</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BonusChestFeature *</code></td><td>this</td></tr><tr><td>8</td><td>(8) <code>BlockSource *</code></td><td>region</td></tr><tr><td>16</td><td>(8) <code>Random *</code></td><td>newRandom</td></tr></tbody></table><h3 id="blocklayer" tabindex="-1"><a class="header-anchor" href="#blocklayer"><span><code>BlockLayer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mNumLayers</td></tr></tbody></table><h3 id="blockserializationutils-nbttoblockcache" tabindex="-1"><a class="header-anchor" href="#blockserializationutils-nbttoblockcache"><span><code>BlockSerializationUtils::NbtToBlockCache</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::map&lt;unsigned long,const Block *&gt;</code></td><td>mCache</td></tr><tr><td>48</td><td>(40) <code>Bedrock::Threading::Mutex</code></td><td>mMutex</td></tr></tbody></table><h3 id="buffer-span-chunkpos-iterator" tabindex="-1"><a class="header-anchor" href="#buffer-span-chunkpos-iterator"><span><code>buffer_span&lt;ChunkPos&gt;::iterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ChunkPos *</code></td><td>mPtr</td></tr></tbody></table><h3 id="bigendianstringbyteinput" tabindex="-1"><a class="header-anchor" href="#bigendianstringbyteinput"><span><code>BigEndianStringByteInput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>StringByteInput</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="binarystream" tabindex="-1"><a class="header-anchor" href="#binarystream"><span><code>BinaryStream</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>ReadOnlyBinaryStream</code></td><td>baseclass_0</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mOwnedBuffer</td></tr><tr><td>88</td><td>(8) <code>std::string *</code></td><td>mBuffer</td></tr></tbody></table><h3 id="blockgraphics-modelitem" tabindex="-1"><a class="header-anchor" href="#blockgraphics-modelitem"><span><code>BlockGraphics::ModelItem</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>name</td></tr><tr><td>32</td><td>(8) <code>const BlockGeometry::TessellatedModel *</code></td><td>model</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;unsigned long&gt;</code></td><td>textureIndices</td></tr></tbody></table><h3 id="blockgraphics-constructortoken" tabindex="-1"><a class="header-anchor" href="#blockgraphics-constructortoken"><span><code>BlockGraphics::ConstructorToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="blocklisteventmap" tabindex="-1"><a class="header-anchor" href="#blocklisteventmap"><span><code>BlockListEventMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_set&lt;const BlockLegacy *&gt;</code></td><td>mBlockList</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mEventName</td></tr></tbody></table><h3 id="boostitem" tabindex="-1"><a class="header-anchor" href="#boostitem"><span><code>BoostItem</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Item *</code></td><td>mItem</td></tr><tr><td>8</td><td>(8) <code>const Item *</code></td><td>mReplacement</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mDamageAmount</td></tr></tbody></table><h3 id="bosseventpacket" tabindex="-1"><a class="header-anchor" href="#bosseventpacket"><span><code>BossEventPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(36) <code>Packet:288</code></td><td>baseclass_0</td></tr><tr><td>36</td><td>(4) <code>const int</code></td><td>FLAG_DARKEN</td></tr><tr><td>40</td><td>(4) <code>const int</code></td><td>FLAG_FOG</td></tr><tr><td>48</td><td>(8) <code>ActorUniqueID</code></td><td>mBossID</td></tr><tr><td>56</td><td>(8) <code>ActorUniqueID</code></td><td>mPlayerID</td></tr><tr><td>64</td><td>(4) <code>BossEventUpdateType</code></td><td>mEventType</td></tr><tr><td>72</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>104</td><td>(4) <code>float</code></td><td>mHealthPercent</td></tr><tr><td>108</td><td>(4) <code>BossBarColor</code></td><td>mColor</td></tr><tr><td>112</td><td>(4) <code>BossBarOverlay</code></td><td>mOverlay</td></tr><tr><td>116</td><td>(1) <code>Util::Byte</code></td><td>mDarkenScreen</td></tr><tr><td>117</td><td>(1) <code>Util::Byte</code></td><td>mCreateWorldFog</td></tr></tbody></table><h3 id="breedabletype" tabindex="-1"><a class="header-anchor" href="#breedabletype"><span><code>BreedableType</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(168) <code>ActorDefinitionIdentifier</code></td><td>mMateType</td></tr><tr><td>168</td><td>(168) <code>ActorDefinitionIdentifier</code></td><td>mBabyType</td></tr><tr><td>336</td><td>(128) <code>DefinitionTrigger</code></td><td>mOnBred</td></tr></tbody></table><h3 id="batchednetworkpeer-datacallback" tabindex="-1"><a class="header-anchor" href="#batchednetworkpeer-datacallback"><span><code>BatchedNetworkPeer::DataCallback</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>data</td></tr><tr><td>32</td><td>(4) <code>Compressibility</code></td><td>compressible</td></tr><tr><td>40</td><td>(32) <code>std::function&lt;void ()&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="bytevector" tabindex="-1"><a class="header-anchor" href="#bytevector"><span><code>ByteVector</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Vector_base&lt;unsigned char&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="balloonablecomponent" tabindex="-1"><a class="header-anchor" href="#balloonablecomponent"><span><code>BalloonableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>IEntityComponent</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="binaryheap" tabindex="-1"><a class="header-anchor" href="#binaryheap"><span><code>BinaryHeap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;PathfinderNode *&gt;</code></td><td>heap</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>sizeVar</td></tr></tbody></table><h3 id="behaviorfactory-definitioncreator" tabindex="-1"><a class="header-anchor" href="#behaviorfactory-definitioncreator"><span><code>BehaviorFactory::DefinitionCreator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;std::unique_ptr&lt;BehaviorDefinition&gt; ()&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="behaviorfactory-nodecreator" tabindex="-1"><a class="header-anchor" href="#behaviorfactory-nodecreator"><span><code>BehaviorFactory::NodeCreator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;std::unique_ptr&lt;BehaviorNode&gt; ()&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="blockpatternbuilder-blockentrytester" tabindex="-1"><a class="header-anchor" href="#blockpatternbuilder-blockentrytester"><span><code>BlockPatternBuilder::BlockEntryTester</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;bool (BlockSource &amp;,const BlockPos &amp;,const Block &amp;)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="bedrock-threading-268754422-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-268754422-1"><span><code>Bedrock::Threading::$&lt;268754422,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-269227119-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-269227119-1"><span><code>Bedrock::Threading::$&lt;269227119,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-decltype-midmutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-decltype-midmutex"><span><code>Bedrock::Threading::LockGuard&lt;decltype(mIdMutex)&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-std-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-std-mutex"><span><code>Bedrock::Threading::LockGuard&lt;std::mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-281360972-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-281360972-1"><span><code>Bedrock::Threading::$&lt;281360972,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrocklog-logdetails-appendlogentrymetadata-7ef7c94beab75c6cef4adfb99b570420" tabindex="-1"><a class="header-anchor" href="#bedrocklog-logdetails-appendlogentrymetadata-7ef7c94beab75c6cef4adfb99b570420"><span><code>BedrockLog::LogDetails::_appendLogEntryMetadata::$7EF7C94BEAB75C6CEF4ADFB99B570420</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="bedrocklog-logareafilter" tabindex="-1"><a class="header-anchor" href="#bedrocklog-logareafilter"><span><code>BedrockLog::LogAreaFilter</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::bitset&lt;34&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-282285601-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-282285601-1"><span><code>Bedrock::Threading::$&lt;282285601,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::recursive_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-decltype-sstoragearealock" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-decltype-sstoragearealock"><span><code>Bedrock::Threading::LockGuard&lt;decltype(sStorageAreaLock)&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-282285612-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-282285612-1"><span><code>Bedrock::Threading::$&lt;282285612,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_lock&lt;std::recursive_mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_owns</td></tr></tbody></table><h3 id="bedrock-threading-lockguard-decltype-fileimpl-sallfileslock" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-lockguard-decltype-fileimpl-sallfileslock"><span><code>Bedrock::Threading::LockGuard&lt;decltype(FileImpl::sAllFilesLock)&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-282952368-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-282952368-1"><span><code>Bedrock::Threading::$&lt;282952368,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-283102713-1" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-283102713-1"><span><code>Bedrock::Threading::$&lt;283102713,1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::lock_guard&lt;std::mutex&gt;::mutex_type *</code></td><td>_M_device</td></tr></tbody></table><h3 id="bedrock-threading-anonymous-namespace-asyncerrorcategory" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-anonymous-namespace-asyncerrorcategory"><span><code>Bedrock::Threading::</code>anonymous namespace&#39;::AsyncErrorCategory\`</span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>__int8[8]</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bedrock-threading-iasyncresult-void-completionhandler" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-void-completionhandler"><span><code>Bedrock::Threading::IAsyncResult&lt;void&gt;::CompletionHandler</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::_Function_base</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;void (const Bedrock::Threading::IAsyncResult&lt;void&gt; &amp;)&gt;::_Invoker_type</code></td><td>_M_invoker</td></tr></tbody></table><h3 id="bedrock-threading-uniquelockreleasewindow-std-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelockreleasewindow-std-mutex"><span><code>Bedrock::Threading::UniqueLockReleaseWindow&lt;std::mutex&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Bedrock::Threading::UniqueLock&lt;std::mutex&gt; *</code></td><td>mLock</td></tr></tbody></table><h3 id="backgroundtask-pendingcomparer" tabindex="-1"><a class="header-anchor" href="#backgroundtask-pendingcomparer"><span><code>BackgroundTask::PendingComparer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="buffer-span-bool" tabindex="-1"><a class="header-anchor" href="#buffer-span-bool"><span><code>buffer_span&lt;bool&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const bool *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const bool *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-int" tabindex="-1"><a class="header-anchor" href="#buffer-span-int"><span><code>buffer_span&lt;int&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const int *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const int *</code></td><td>mEnd</td></tr></tbody></table><h3 id="buffer-span-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#buffer-span-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>buffer_span&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const std::string *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>const std::string *</code></td><td>mEnd</td></tr></tbody></table><h3 id="backgroundtask-prioritycomparer" tabindex="-1"><a class="header-anchor" href="#backgroundtask-prioritycomparer"><span><code>BackgroundTask::PriorityComparer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="bedrock-threading-sharedmutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-sharedmutex"><span><code>Bedrock::Threading::SharedMutex</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::__shared_timed_mutex_base</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-actordamagecause" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-actordamagecause"><span><code>BidirectionalUnorderedMap&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,ActorDamageCause&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,ActorDamageCause&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;ActorDamageCause,std::string&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-itemusemethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-itemusemethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>BidirectionalUnorderedMap&lt;ItemUseMethod,std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;ItemUseMethod,std::string&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;std::string,ItemUseMethod&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-itemacquisitionmethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-itemacquisitionmethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>BidirectionalUnorderedMap&lt;ItemAcquisitionMethod,std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;ItemAcquisitionMethod,std::string&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;std::string,ItemAcquisitionMethod&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-levelsoundevent" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-levelsoundevent"><span><code>BidirectionalUnorderedMap&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,LevelSoundEvent&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,LevelSoundEvent&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;LevelSoundEvent,std::string&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="blockactor-mapidtype" tabindex="-1"><a class="header-anchor" href="#blockactor-mapidtype"><span><code>BlockActor::MapIdType</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::map&lt;std::string,BlockActorType&gt;::_Rep_type</code></td><td>_M_t</td></tr></tbody></table><h3 id="blockactor-maptypeid" tabindex="-1"><a class="header-anchor" href="#blockactor-maptypeid"><span><code>BlockActor::MapTypeId</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::map&lt;BlockActorType,std::string&gt;::_Rep_type</code></td><td>_M_t</td></tr></tbody></table><h3 id="blocktyperegistry-blocklookupmap" tabindex="-1"><a class="header-anchor" href="#blocktyperegistry-blocklookupmap"><span><code>BlockTypeRegistry::BlockLookupMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,SharedPtr&lt;BlockLegacy&gt;&gt;::_Hashtable</code></td><td>_M_h</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-automaticid-dimension-int" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-automaticid-dimension-int"><span><code>BidirectionalUnorderedMap&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,AutomaticID&lt;Dimension,int&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,AutomaticID&lt;Dimension,int&gt;&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;AutomaticID&lt;Dimension,int&gt;,std::string&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-containertype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-containertype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>BidirectionalUnorderedMap&lt;ContainerType,std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;ContainerType,std::string&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;std::string,ContainerType&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bidirectionalunorderedmap-particletype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-particletype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>BidirectionalUnorderedMap&lt;ParticleType,std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;ParticleType,std::string&gt;</code></td><td>mRight</td></tr><tr><td>56</td><td>(56) <code>std::unordered_map&lt;std::string,ParticleType&gt;</code></td><td>mLeft</td></tr></tbody></table><h3 id="bedrocklog-categorylogs" tabindex="-1"><a class="header-anchor" href="#bedrocklog-categorylogs"><span><code>BedrockLog::CategoryLogs</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(504) <code>std::array&lt;BedrockLog::CategoryLogFile,7&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="backwardscompattexturegroup" tabindex="-1"><a class="header-anchor" href="#backwardscompattexturegroup"><span><code>BackwardsCompatTextureGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;ResourceLocation,BackwardsCompatTextureInfo&gt;</code></td><td>mBackCompatMap</td></tr></tbody></table><h3 id="blockselector" tabindex="-1"><a class="header-anchor" href="#blockselector"><span><code>BlockSelector</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockSelector</td></tr></tbody></table><h3 id="blocksourcelistener" tabindex="-1"><a class="header-anchor" href="#blocksourcelistener"><span><code>BlockSourceListener</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockSourceListener</td></tr></tbody></table><h3 id="biome" tabindex="-1"><a class="header-anchor" href="#biome"><span><code>Biome</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$Biome</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>40</td><td>(4) <code>int</code></td><td>mDebugMapColor</td></tr><tr><td>44</td><td>(4) <code>int</code></td><td>mDebugMapOddColor</td></tr><tr><td>48</td><td>(4) <code>float</code></td><td>mTemperature</td></tr><tr><td>52</td><td>(4) <code>float</code></td><td>mDownfall</td></tr><tr><td>56</td><td>(4) <code>float</code></td><td>mSnowAccumulation</td></tr><tr><td>60</td><td>(4) <code>float</code></td><td>mFoliageSnow</td></tr><tr><td>64</td><td>(4) <code>float</code></td><td>mMinSnowLevel</td></tr><tr><td>68</td><td>(4) <code>float</code></td><td>mMaxSnowLevel</td></tr><tr><td>72</td><td>(4) <code>float</code></td><td>mDepth</td></tr><tr><td>76</td><td>(4) <code>float</code></td><td>mScale</td></tr><tr><td>80</td><td>(16) <code>Color</code></td><td>mWaterColor</td></tr><tr><td>96</td><td>(4) <code>float</code></td><td>mWaterTranparency</td></tr><tr><td>100</td><td>(16) <code>Color</code></td><td>mUnderWaterColor</td></tr><tr><td>116</td><td>(1) <code>bool</code></td><td>mRain</td></tr><tr><td>120</td><td>(4) <code>int</code></td><td>mId</td></tr><tr><td>124</td><td>(4) <code>float</code></td><td>mFogDist</td></tr><tr><td>128</td><td>(12) <code>OceanRuinConfiguration</code></td><td>mOceanRuinConfig</td></tr><tr><td>144</td><td>(24) <code>MobList</code></td><td>mMobs</td></tr><tr><td>168</td><td>(8) <code>Unique&lt;PerlinSimplexNoise&gt;</code></td><td>mTemperatureNoise</td></tr><tr><td>176</td><td>(8) <code>std::unique_ptr&lt;PerlinSimplexNoise&gt;</code></td><td>mFrozenTemperatureNoise</td></tr><tr><td>184</td><td>(24) <code>OwnerPtr&lt;EntityId&gt;</code></td><td>mEntity</td></tr><tr><td>208</td><td>(16) <code>OwnerPtr&lt;PerlinSimplexNoise&gt;</code></td><td>mBiomeInfoNoise</td></tr></tbody></table><h3 id="blockmap" tabindex="-1"><a class="header-anchor" href="#blockmap"><span><code>BlockMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;int,const Block *&gt;::_Hashtable</code></td><td>_M_h</td></tr></tbody></table><h3 id="backgroundworkerperfinfo" tabindex="-1"><a class="header-anchor" href="#backgroundworkerperfinfo"><span><code>BackgroundWorkerPerfInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const BackgroundWorker *</code></td><td>mUpdaterWorker</td></tr><tr><td>8</td><td>(8) <code>std::atomic&lt;unsigned long&gt;</code></td><td>mTotalRunTasks</td></tr><tr><td>16</td><td>(8) <code>std::atomic&lt;unsigned long&gt;</code></td><td>mTotalRunTasksTicks</td></tr><tr><td>24</td><td>(4) <code>std::atomic&lt;unsigned int&gt;</code></td><td>mTotalWakeUps</td></tr><tr><td>32</td><td>(8) <code>std::atomic&lt;double&gt;</code></td><td>mAverageTaskDuration</td></tr><tr><td>40</td><td>(4) <code>std::atomic&lt;unsigned int&gt;</code></td><td>mWakeUpsPerSecond</td></tr><tr><td>48</td><td>(8) <code>std::chrono::_V2::system_clock::time_point</code></td><td>mLastPerfInfoUpdate</td></tr><tr><td>56</td><td>(8) <code>std::chrono::_V2::system_clock::time_point</code></td><td>mNextPerfInfoUpdate</td></tr></tbody></table><h3 id="backgroundtaskqueue" tabindex="-1"><a class="header-anchor" href="#backgroundtaskqueue"><span><code>BackgroundTaskQueue</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Bedrock::Threading::Mutex</code></td><td>mIngressLock</td></tr><tr><td>40</td><td>(40) <code>Bedrock::Threading::Mutex</code></td><td>mEgressLock</td></tr><tr><td>80</td><td>(80) <code>BackgroundTaskQueue::TaskPipe</code></td><td>mTasks</td></tr><tr><td>160</td><td>(8) <code>std::atomic_size_t</code></td><td>mQueuedTasksCount</td></tr><tr><td>168</td><td>(1) <code>std::atomic&lt;bool&gt;</code></td><td>mResortQueue</td></tr><tr><td>176</td><td>(40) <code>Bedrock::Threading::Mutex</code></td><td>mQueueLock</td></tr><tr><td>216</td><td>(24) <code>BackgroundTaskQueue::SortingJobQueue</code></td><td>mLocalPriorityQueue</td></tr><tr><td>240</td><td>(4) <code>std::atomic&lt;int&gt;</code></td><td>mNextItemPriority</td></tr></tbody></table><h3 id="backgroundtaskqueue-taskpipe" tabindex="-1"><a class="header-anchor" href="#backgroundtaskqueue-taskpipe"><span><code>BackgroundTaskQueue::TaskPipe</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Lockless::WeakAtomic&lt;SPSCQueue&lt;std::shared_ptr&lt;BackgroundTask&gt;,512&gt;::Block *&gt;</code></td><td>mFrontBlock</td></tr><tr><td>8</td><td>(56) <code>char[56]</code></td><td>mCachelineFiller</td></tr><tr><td>64</td><td>(8) <code>Lockless::WeakAtomic&lt;SPSCQueue&lt;std::shared_ptr&lt;BackgroundTask&gt;,512&gt;::Block *&gt;</code></td><td>mTailBlock</td></tr><tr><td>72</td><td>(8) <code>size_t</code></td><td>mLargestBlockSize</td></tr></tbody></table><h3 id="backgroundtaskqueue-sortingjobqueue" tabindex="-1"><a class="header-anchor" href="#backgroundtaskqueue-sortingjobqueue"><span><code>BackgroundTaskQueue::SortingJobQueue</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>MovePriorityQueue&lt;std::shared_ptr&lt;BackgroundTask&gt;,BackgroundTask::PriorityComparer&gt;::Base</code></td><td>mC</td></tr></tbody></table><h3 id="blocklegacy" tabindex="-1"><a class="header-anchor" href="#blocklegacy"><span><code>BlockLegacy</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockLegacy</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mDescriptionId</td></tr><tr><td>40</td><td>(32) <code>std::string</code></td><td>mRawNameId</td></tr><tr><td>72</td><td>(32) <code>std::string</code></td><td>mNamespace</td></tr><tr><td>104</td><td>(32) <code>std::string</code></td><td>mFullName</td></tr><tr><td>136</td><td>(1) <code>bool</code></td><td>mFancy</td></tr><tr><td>140</td><td>(4) <code>BlockRenderLayer</code></td><td>mRenderLayer</td></tr><tr><td>144</td><td>(1) <code>bool</code></td><td>mRenderLayerCanRenderAsOpaque</td></tr><tr><td>152</td><td>(8) <code>BlockProperty</code></td><td>mProperties</td></tr><tr><td>160</td><td>(4) <code>BlockActorType</code></td><td>mBlockEntityType</td></tr><tr><td>164</td><td>(1) <code>bool</code></td><td>mAnimatedTexture</td></tr><tr><td>168</td><td>(4) <code>float</code></td><td>mBrightnessGamma</td></tr><tr><td>172</td><td>(4) <code>float</code></td><td>mThickness</td></tr><tr><td>176</td><td>(1) <code>bool</code></td><td>mCanSlide</td></tr><tr><td>177</td><td>(1) <code>bool</code></td><td>mCanInstatick</td></tr><tr><td>178</td><td>(1) <code>bool</code></td><td>mIsInteraction</td></tr><tr><td>180</td><td>(4) <code>float</code></td><td>mGravity</td></tr><tr><td>184</td><td>(8) <code>const Material *</code></td><td>mMaterial</td></tr><tr><td>192</td><td>(16) <code>Color</code></td><td>mMapColor</td></tr><tr><td>208</td><td>(4) <code>float</code></td><td>mFriction</td></tr><tr><td>212</td><td>(1) <code>bool</code></td><td>mHeavy</td></tr><tr><td>216</td><td>(4) <code>float</code></td><td>mParticleQuantityScalar</td></tr><tr><td>220</td><td>(4) <code>float</code></td><td>mDestroySpeed</td></tr><tr><td>224</td><td>(4) <code>float</code></td><td>mExplosionResistance</td></tr><tr><td>228</td><td>(4) <code>CreativeItemCategory</code></td><td>mCreativeCategory</td></tr><tr><td>232</td><td>(1) <code>bool</code></td><td>mAllowsRunes</td></tr><tr><td>233</td><td>(1) <code>bool</code></td><td>mCanBeBrokenFromFalling</td></tr><tr><td>234</td><td>(1) <code>bool</code></td><td>mSolid</td></tr><tr><td>235</td><td>(1) <code>bool</code></td><td>mPushesOutItems</td></tr><tr><td>236</td><td>(1) <code>bool</code></td><td>mIgnoreBlockForInsideCubeRenderer</td></tr><tr><td>237</td><td>(1) <code>bool</code></td><td>mIsTrapdoor</td></tr><tr><td>238</td><td>(1) <code>bool</code></td><td>mIsDoor</td></tr><tr><td>240</td><td>(4) <code>float</code></td><td>mTranslucency</td></tr><tr><td>244</td><td>(1) <code>Brightness</code></td><td>mLightBlock</td></tr><tr><td>245</td><td>(1) <code>Brightness</code></td><td>mLightEmission</td></tr><tr><td>246</td><td>(1) <code>bool</code></td><td>mShouldRandomTick</td></tr><tr><td>247</td><td>(1) <code>bool</code></td><td>mShouldRandomTickExtraLayer</td></tr><tr><td>248</td><td>(4) <code>int</code></td><td>mFlameOdds</td></tr><tr><td>252</td><td>(4) <code>int</code></td><td>mBurnOdds</td></tr><tr><td>256</td><td>(1) <code>bool</code></td><td>mIsMobPiece</td></tr><tr><td>257</td><td>(1) <code>bool</code></td><td>mCanBeExtraBlock</td></tr><tr><td>258</td><td>(1) <code>bool</code></td><td>mCanPropagateBrightness</td></tr><tr><td>260</td><td>(2) <code>NewBlockID</code></td><td>mID</td></tr><tr><td>264</td><td>(112) <code>BaseGameVersion</code></td><td>mMinRequiredBaseGameVersion</td></tr><tr><td>376</td><td>(1) <code>bool</code></td><td>mExperimental</td></tr><tr><td>377</td><td>(1) <code>bool</code></td><td>mIsVanilla</td></tr><tr><td>384</td><td>(8) <code>Unique&lt;LootComponent&gt;</code></td><td>mLootComponent</td></tr><tr><td>392</td><td>(28) <code>AABB</code></td><td>mVisualShape</td></tr><tr><td>420</td><td>(4) <code>unsigned int</code></td><td>mBitsUsed</td></tr><tr><td>424</td><td>(4) <code>unsigned int</code></td><td>mTotalBitsUsed</td></tr><tr><td>432</td><td>(3360) <code>std::array&lt;ItemStateInstance,105&gt;</code></td><td>mStates</td></tr><tr><td>3792</td><td>(24) <code>std::vector&lt;std::unique_ptr&lt;Block&gt;&gt;</code></td><td>mBlockPermutations</td></tr><tr><td>3816</td><td>(8) <code>const Block *</code></td><td>mDefaultState</td></tr><tr><td>3824</td><td>(56) <code>Bedrock::Threading::SharedMutex</code></td><td>mLegacyDataLookupTableMutex</td></tr><tr><td>3880</td><td>(24) <code>std::vector&lt;long&gt;</code></td><td>mLegacyDataLookupTable</td></tr></tbody></table><h3 id="baseattributemap" tabindex="-1"><a class="header-anchor" href="#baseattributemap"><span><code>BaseAttributeMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;unsigned int,AttributeInstance&gt;</code></td><td>mInstanceMap</td></tr><tr><td>56</td><td>(24) <code>std::vector&lt;AttributeInstanceHandle&gt;</code></td><td>mDirtyAttributes</td></tr></tbody></table><h3 id="basemovetogoal" tabindex="-1"><a class="header-anchor" href="#basemovetogoal"><span><code>BaseMoveToGoal</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Goal:96</code></td><td>baseclass_0</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mTravelTicks</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mNextStartTick</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>mGiveUpTicks</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>mStayTicks</td></tr><tr><td>28</td><td>(4) <code>int</code></td><td>mMaxStayTicks</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mReachedTarget</td></tr><tr><td>36</td><td>(4) <code>float</code></td><td>mSpeedMod</td></tr><tr><td>40</td><td>(4) <code>float</code></td><td>mGoalRadiusSq</td></tr><tr><td>48</td><td>(8) <code>uint64_t</code></td><td>mCooldownCounter</td></tr><tr><td>56</td><td>(8) <code>const uint64_t</code></td><td>mCooldownTimeoutTime</td></tr><tr><td>64</td><td>(12) <code>BlockPos</code></td><td>mStartPos</td></tr><tr><td>76</td><td>(12) <code>Vec3</code></td><td>mBlockPos</td></tr><tr><td>88</td><td>(12) <code>Vec3</code></td><td>mTargetPositionOffset</td></tr><tr><td>100</td><td>(4) <code>float</code></td><td>mChanceToStart</td></tr><tr><td>104</td><td>(8) <code>Mob *</code></td><td>mMob</td></tr><tr><td>112</td><td>(4) <code>int</code></td><td>mInterval</td></tr></tbody></table><h3 id="boat-onabovebubblecolumn-7ef7c94beab75c6cef4adfb99b570420" tabindex="-1"><a class="header-anchor" href="#boat-onabovebubblecolumn-7ef7c94beab75c6cef4adfb99b570420"><span><code>Boat::onAboveBubbleColumn::$7EF7C94BEAB75C6CEF4ADFB99B570420</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="blocksource-fetchblocksincylinder-bff6684f24a24dab087e11b4105c16ca" tabindex="-1"><a class="header-anchor" href="#blocksource-fetchblocksincylinder-bff6684f24a24dab087e11b4105c16ca"><span><code>BlockSource::fetchBlocksInCylinder::$BFF6684F24A24DAB087E11B4105C16CA</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BlockSource *</code></td><td>this</td></tr><tr><td>8</td><td>(8) <code>const BlockPos *</code></td><td>centerPos</td></tr><tr><td>16</td><td>(4) <code>uint32_t</code></td><td>radius</td></tr><tr><td>20</td><td>(4) <code>uint32_t</code></td><td>height</td></tr><tr><td>24</td><td>(8) <code>std::function&lt;bool (const Block &amp;)&gt; *</code></td><td>predicate</td></tr></tbody></table><h3 id="blocksource-fetchblocksinbox-74f335ec098d670c69ad7d2e598e74bf" tabindex="-1"><a class="header-anchor" href="#blocksource-fetchblocksinbox-74f335ec098d670c69ad7d2e598e74bf"><span><code>BlockSource::fetchBlocksInBox::$74F335EC098D670C69AD7D2E598E74BF</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BlockSource *</code></td><td>this</td></tr><tr><td>8</td><td>(8) <code>const BoundingBox *</code></td><td>box</td></tr><tr><td>16</td><td>(8) <code>std::function&lt;bool (const Block &amp;)&gt; *</code></td><td>predicate</td></tr></tbody></table><h3 id="biomeregistry-biomeparent" tabindex="-1"><a class="header-anchor" href="#biomeregistry-biomeparent"><span><code>BiomeRegistry::BiomeParent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>parentName</td></tr><tr><td>32</td><td>(16) <code>Json::Value</code></td><td>json</td></tr></tbody></table><h3 id="biomedecorationsystem-decorate-7ef7c94beab75c6cef4adfb99b570420" tabindex="-1"><a class="header-anchor" href="#biomedecorationsystem-decorate-7ef7c94beab75c6cef4adfb99b570420"><span><code>BiomeDecorationSystem::decorate::$7EF7C94BEAB75C6CEF4ADFB99B570420</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="blocklegacy-initfromdefinition-033a5a72970d0569f1b4e5782e3e5f13" tabindex="-1"><a class="header-anchor" href="#blocklegacy-initfromdefinition-033a5a72970d0569f1b4e5782e3e5f13"><span><code>BlockLegacy::initFromDefinition::$033A5A72970D0569F1B4E5782E3E5F13</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BlockLegacy *</code></td><td>this</td></tr></tbody></table><h3 id="blockactor" tabindex="-1"><a class="header-anchor" href="#blockactor"><span><code>BlockActor</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockActor</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mTickCount</td></tr><tr><td>16</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mDestroyTimer</td></tr><tr><td>28</td><td>(12) <code>Vec3</code></td><td>mDestroyDirection</td></tr><tr><td>40</td><td>(4) <code>float</code></td><td>mDestroyProgress</td></tr><tr><td>44</td><td>(12) <code>BlockPos</code></td><td>mPosition</td></tr><tr><td>56</td><td>(28) <code>AABB</code></td><td>mBB</td></tr><tr><td>84</td><td>(4) <code>const BlockActorType</code></td><td>mType</td></tr><tr><td>88</td><td>(4) <code>BlockActorRendererId</code></td><td>mRendererId</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>mCustomName</td></tr><tr><td>128</td><td>(32) <code>std::string</code></td><td>mFilteredCustomName</td></tr><tr><td>160</td><td>(4) <code>int</code></td><td>mRepairCost</td></tr><tr><td>164</td><td>(1) <code>bool</code></td><td>mClientSideOnly</td></tr><tr><td>165</td><td>(1) <code>bool</code></td><td>mIsMovable</td></tr><tr><td>166</td><td>(1) <code>bool</code></td><td>mSaveCustomName</td></tr><tr><td>167</td><td>(1) <code>bool</code></td><td>mCanRenderCustomName</td></tr><tr><td>168</td><td>(4) <code>const float</code></td><td>signShadowRadius</td></tr><tr><td>176</td><td>(24) <code>ActorTerrainInterlockData</code></td><td>mTerrainInterlockData</td></tr><tr><td>200</td><td>(1) <code>bool</code></td><td>mChanged</td></tr></tbody></table><h3 id="burstreactioncomponent-onend-7ef7c94beab75c6cef4adfb99b570420" tabindex="-1"><a class="header-anchor" href="#burstreactioncomponent-onend-7ef7c94beab75c6cef4adfb99b570420"><span><code>BurstReactionComponent::_onEnd::$7EF7C94BEAB75C6CEF4ADFB99B570420</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="biomechunkstate" tabindex="-1"><a class="header-anchor" href="#biomechunkstate"><span><code>BiomeChunkState</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>byte</code></td><td>snowLevel</td></tr></tbody></table><h3 id="blockactor-1632" tabindex="-1"><a class="header-anchor" href="#blockactor-1632"><span><code>BlockActor:1632</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BlockActor</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mTickCount</td></tr><tr><td>12</td><td>(4) <code>_BYTE[4]</code></td><td>gapC</td></tr><tr><td>16</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mDestroyTimer</td></tr><tr><td>28</td><td>(12) <code>Vec3</code></td><td>mDestroyDirection</td></tr><tr><td>40</td><td>(4) <code>float</code></td><td>mDestroyProgress</td></tr><tr><td>44</td><td>(12) <code>BlockPos</code></td><td>mPosition</td></tr><tr><td>56</td><td>(28) <code>AABB</code></td><td>mBB</td></tr><tr><td>84</td><td>(4) <code>const BlockActorType</code></td><td>mType</td></tr><tr><td>88</td><td>(4) <code>BlockActorRendererId</code></td><td>mRendererId</td></tr><tr><td>92</td><td>(4) <code>_BYTE[4]</code></td><td>gap5C</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>mCustomName</td></tr><tr><td>128</td><td>(32) <code>std::string</code></td><td>mFilteredCustomName</td></tr><tr><td>160</td><td>(4) <code>int</code></td><td>mRepairCost</td></tr><tr><td>164</td><td>(1) <code>bool</code></td><td>mClientSideOnly</td></tr><tr><td>165</td><td>(1) <code>bool</code></td><td>mIsMovable</td></tr><tr><td>166</td><td>(1) <code>bool</code></td><td>mSaveCustomName</td></tr><tr><td>167</td><td>(1) <code>bool</code></td><td>mCanRenderCustomName</td></tr><tr><td>168</td><td>(4) <code>const float</code></td><td>signShadowRadius</td></tr><tr><td>172</td><td>(4) <code>_BYTE[4]</code></td><td>gapAC</td></tr><tr><td>176</td><td>(24) <code>ActorTerrainInterlockData</code></td><td>mTerrainInterlockData</td></tr><tr><td>200</td><td>(1) <code>bool</code></td><td>mChanged</td></tr></tbody></table><h3 id="behaviortreegroup" tabindex="-1"><a class="header-anchor" href="#behaviortreegroup"><span><code>BehaviorTreeGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ResourcePackManager *</code></td><td>mResourcePackManager</td></tr><tr><td>8</td><td>(8) <code>BehaviorFactory *</code></td><td>mFactory</td></tr><tr><td>16</td><td>(56) <code>BehaviorTreeGroup::BehaviorDefinitionMap</code></td><td>mDefinitions</td></tr><tr><td>72</td><td>(56) <code>std::unordered_set&lt;BehaviorTreeDefinitionPtr *&gt;</code></td><td>mRegisteredPtrs</td></tr></tbody></table><h3 id="behaviortreegroup-behaviordefinitionmap" tabindex="-1"><a class="header-anchor" href="#behaviortreegroup-behaviordefinitionmap"><span><code>BehaviorTreeGroup::BehaviorDefinitionMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,std::unique_ptr&lt;BehaviorTreeDefinition&gt;&gt;::_Hashtable</code></td><td>_M_h</td></tr></tbody></table><h3 id="blockeventdispatcher" tabindex="-1"><a class="header-anchor" href="#blockeventdispatcher"><span><code>BlockEventDispatcher</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>ListenerSet</code></td><td>mRegisteredListeners</td></tr><tr><td>56</td><td>(4) <code>ListenerHandle</code></td><td>mHandleCounter</td></tr></tbody></table><h3 id="blockchange" tabindex="-1"><a class="header-anchor" href="#blockchange"><span><code>BlockChange</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mUpdateFlags</td></tr><tr><td>8</td><td>(8) <code>const Block *</code></td><td>mOldBlock</td></tr><tr><td>16</td><td>(8) <code>const Block *</code></td><td>mNewBlock</td></tr></tbody></table><h3 id="behaviordefinition" tabindex="-1"><a class="header-anchor" href="#behaviordefinition"><span><code>BehaviorDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$BehaviorDefinition</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>40</td><td>(16) <code>BehaviorTreeDefinitionPtr</code></td><td>mTreeDefinition</td></tr></tbody></table><h3 id="behaviorfactory" tabindex="-1"><a class="header-anchor" href="#behaviorfactory"><span><code>BehaviorFactory</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::unordered_map&lt;std::string,std::pair&lt;std::function&lt;std::unique_ptr&lt;BehaviorDefinition&gt; ()&gt;,std::function&lt;std::unique_ptr&lt;BehaviorNode&gt; ()&gt; &gt;&gt;</code></td><td>mFactoryPairs</td></tr></tbody></table><h3 id="bubblecolumnblock-entityinside-7ef7c94beab75c6cef4adfb99b570420" tabindex="-1"><a class="header-anchor" href="#bubblecolumnblock-entityinside-7ef7c94beab75c6cef4adfb99b570420"><span><code>BubbleColumnBlock::entityInside::$7EF7C94BEAB75C6CEF4ADFB99B570420</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8[1]</code></td><td>gap0</td></tr></tbody></table><h3 id="bedrock-threading-conditionvariableany" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-conditionvariableany"><span><code>Bedrock::Threading::ConditionVariableAny</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::condition_variable</code></td><td>_M_cond</td></tr><tr><td>48</td><td>(16) <code>std::shared_ptr&lt;std::mutex&gt;</code></td><td>_M_mutex</td></tr></tbody></table><h3 id="bedrock-threading-asyncbase" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncbase"><span><code>Bedrock::Threading::AsyncBase</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::enable_shared_from_this&lt;Bedrock::Threading::AsyncBase&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="backgroundtask" tabindex="-1"><a class="header-anchor" href="#backgroundtask"><span><code>BackgroundTask</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Bedrock::Threading::IAsyncResult&lt;void&gt;</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>ITaskGroup *</code></td><td>mGroup</td></tr><tr><td>32</td><td>(8) <code>BackgroundTask *</code></td><td>mPrevTask</td></tr><tr><td>40</td><td>(16) <code>std::shared_ptr&lt;BackgroundTask&gt;</code></td><td>mNextTask</td></tr><tr><td>56</td><td>(32) <code>std::function&lt;TaskResult ()&gt;</code></td><td>mTask</td></tr><tr><td>88</td><td>(8) <code>std::chrono::_V2::steady_clock::time_point</code></td><td>mStartAfterTime</td></tr><tr><td>96</td><td>(4) <code>int</code></td><td>mPriority</td></tr><tr><td>104</td><td>(8) <code>std::thread::id</code></td><td>mAffinity</td></tr><tr><td>112</td><td>(4) <code>int</code></td><td>mBackDownPriorityAmount</td></tr><tr><td>120</td><td>(40) <code>Bedrock::Threading::Mutex</code></td><td>mLock</td></tr><tr><td>160</td><td>(4) <code>BackgroundTask::TaskStatus</code></td><td>mStatus</td></tr><tr><td>164</td><td>(1) <code>bool</code></td><td>mIsAsync</td></tr><tr><td>168</td><td>(24) <code>std::vector&lt;std::function&lt;void (const Bedrock::Threading::IAsyncResult&lt;void&gt; &amp;)&gt;&gt;</code></td><td>mComplete</td></tr><tr><td>192</td><td>(16) <code>Bedrock::Threading::IAsyncResult&lt;void&gt;::Handle</code></td><td>mPredecessor</td></tr></tbody></table><h3 id="bedrock-threading-iasyncresult-void" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-iasyncresult-void"><span><code>Bedrock::Threading::IAsyncResult&lt;void&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (**)(void)</code></td><td>_vptr$IAsyncResult</td></tr><tr><td>8</td><td>(16) <code>Bedrock::Threading::AsyncBase</code></td><td>baseclass_8</td></tr></tbody></table><h3 id="buffer-span-workerpool" tabindex="-1"><a class="header-anchor" href="#buffer-span-workerpool"><span><code>buffer_span&lt;WorkerPool *&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>WorkerPool *const *</code></td><td>mBegin</td></tr><tr><td>8</td><td>(8) <code>WorkerPool *const *</code></td><td>mEnd</td></tr></tbody></table><h3 id="backgroundworker" tabindex="-1"><a class="header-anchor" href="#backgroundworker"><span><code>BackgroundWorker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BackgroundWorker : ITaskExecutionContext</span>
<span class="line">{</span>
<span class="line">  const bool mAsync;</span>
<span class="line">  Bedrock::Threading::OSThreadPriority mPriority;</span>
<span class="line">  std::optional&lt;unsigned long&gt; mCoreAffinity;</span>
<span class="line">  std::string mName;</span>
<span class="line">  Bedrock::Threading::Thread mThread;</span>
<span class="line">  std::thread::id mWorkerThreadID;</span>
<span class="line">  std::atomic&lt;BackgroundWorker::State&gt; mState;</span>
<span class="line">  ResetEventObj mResetEvent;</span>
<span class="line">  std::atomic&lt;bool&gt; mIdle;</span>
<span class="line">  std::chrono::_V2::system_clock::time_point mIdleSinceTime;</span>
<span class="line">  std::shared_ptr&lt;BackgroundTask&gt; mCurrentTask;</span>
<span class="line">  WorkerPool *mWorkerPool;</span>
<span class="line">  std::chrono::_V2::system_clock::duration mMaxSpinlockDuration;</span>
<span class="line">  std::shared_ptr&lt;ThreadLocal&lt;BackgroundWorker *&gt; &gt; mLocalWorkerMapping;</span>
<span class="line">  BackgroundTaskQueue mTaskQueue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockengine-platformruntimeinfo" tabindex="-1"><a class="header-anchor" href="#bedrockengine-platformruntimeinfo"><span><code>BedrockEngine::PlatformRuntimeInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BedrockEngine::PlatformRuntimeInfo</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$PlatformRuntimeInfo)(void);</span>
<span class="line">  std::string mDeviceModelName;</span>
<span class="line">  std::string mOSVersion;</span>
<span class="line">  std::string mCPUType;</span>
<span class="line">  std::string mCPUName;</span>
<span class="line">  std::string mCPUFeatures;</span>
<span class="line">  std::string mSecureId;</span>
<span class="line">  std::string mSerial;</span>
<span class="line">  std::string mBoard;</span>
<span class="line">  std::string mInstallerPackageName;</span>
<span class="line">  std::string mRegion;</span>
<span class="line">  PlatformType mPlatformType;</span>
<span class="line">  uint64_t mCachedFreeStorageSpace_Internal;</span>
<span class="line">  uint64_t mCachedFreeStorageSpace_External;</span>
<span class="line">  uint64_t mCachedFreeStorageSpace_Cloud;</span>
<span class="line">  uint64_t mTotalPhysicalMemory;</span>
<span class="line">  uint64_t mTotalVirtualMemory;</span>
<span class="line">  uint64_t mUsedMemory;</span>
<span class="line">  size_t mPhysicalMemorySize;</span>
<span class="line">  uint32_t mOptimalLDBSize;</span>
<span class="line">  float mWidth;</span>
<span class="line">  float mHeight;</span>
<span class="line">  float mDPI;</span>
<span class="line">  DisplayOrientation mOrientation;</span>
<span class="line">  int mSignaturesHash;</span>
<span class="line">  bool mGraphicsTearingSupport;</span>
<span class="line">  bool mAllowSplitScreen;</span>
<span class="line">  bool mSupportsMSAA;</span>
<span class="line">  bool mHasFastAlphaTest;</span>
<span class="line">  bool mSupportsVibration;</span>
<span class="line">  bool mSupportsTextToSpeech;</span>
<span class="line">  bool mSupportsClipboard;</span>
<span class="line">  bool mSupportsFilePicking;</span>
<span class="line">  bool mAllowContentLogWrite;</span>
<span class="line">  bool mIsRooted;</span>
<span class="line">  bool mCanSelfTerminate;</span>
<span class="line">  bool mCanLaunchUri;</span>
<span class="line">  uint8_t mCoreCount;</span>
<span class="line">  uint8_t mThreadCount;</span>
<span class="line">  uint8_t mHighPerfThreadCount;</span>
<span class="line">  uint8_t mProcessorGrade;</span>
<span class="line">  uint8_t mGraphicsGrade;</span>
<span class="line">  uint8_t mMemoryGrade;</span>
<span class="line">  uint8_t mStorageGrade;</span>
<span class="line">  uint8_t mPowerSupplyGrade;</span>
<span class="line">  Core::HeapPathBuffer mAssetStoragePath;</span>
<span class="line">  Core::HeapPathBuffer mCurrentStoragePath;</span>
<span class="line">  Core::HeapPathBuffer mExternalStoragePath;</span>
<span class="line">  Core::HeapPathBuffer mInternalStoragePath;</span>
<span class="line">  Core::HeapPathBuffer mLoggingPath;</span>
<span class="line">  Core::HeapPathBuffer mPackagePath;</span>
<span class="line">  Core::HeapPathBuffer mUserDataPath;</span>
<span class="line">  Core::HeapPathBuffer mCacheStoragePath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockengine-platformbuildinfo" tabindex="-1"><a class="header-anchor" href="#bedrockengine-platformbuildinfo"><span><code>BedrockEngine::PlatformBuildInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BedrockEngine::PlatformBuildInfo</span>
<span class="line">{</span>
<span class="line">  std::string mInstallerPackageName;</span>
<span class="line">  Core::HeapPathBuffer mPlatformTempPath;</span>
<span class="line">  Core::HeapPathBuffer mOnDiskScratchPath;</span>
<span class="line">  Core::HeapPathBuffer mDataUrl;</span>
<span class="line">  Core::HeapPathBuffer mAltDataUrl;</span>
<span class="line">  std::string mFeedbackURL;</span>
<span class="line">  bool mHasBuyButtonWhenLicenseInvalid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="batchednetworkpeer" tabindex="-1"><a class="header-anchor" href="#batchednetworkpeer"><span><code>BatchedNetworkPeer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BatchedNetworkPeer : NetworkPeer</span>
<span class="line">{</span>
<span class="line">  BinaryStream mOutgoingData;</span>
<span class="line">  size_t mCompressibleBytes;</span>
<span class="line">  std::string mIncomingDataBuffer;</span>
<span class="line">  std::unique_ptr&lt;ReadOnlyBinaryStream&gt; mIncomingData;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mTaskGroup;</span>
<span class="line">  SPSCQueue&lt;BatchedNetworkPeer::DataCallback,512&gt; mSendQueue;</span>
<span class="line">  std::atomic_bool mTaskRunning;</span>
<span class="line">  std::atomic&lt;unsigned long&gt; mQueuedPackets;</span>
<span class="line">  uint64_t mSentPackets;</span>
<span class="line">  uint16_t mCompressionThreshold;</span>
<span class="line">  bool mAsyncEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basegamepackslices-basegameversionpack" tabindex="-1"><a class="header-anchor" href="#basegamepackslices-basegameversionpack"><span><code>BaseGamePackSlices::BaseGameVersionPack</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BaseGamePackSlices::BaseGameVersionPack</span>
<span class="line">{</span>
<span class="line">  BaseGameVersion mBaseGameVersion;</span>
<span class="line">  ResourcePack *mPack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventlistener" tabindex="-1"><a class="header-anchor" href="#blockeventlistener"><span><code>BlockEventListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockEventListener</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BlockEventListener)(void);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burnsindaylightsystem" tabindex="-1"><a class="header-anchor" href="#burnsindaylightsystem"><span><code>BurnsInDaylightSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BurnsInDaylightSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bodycontrolsystem" tabindex="-1"><a class="header-anchor" href="#bodycontrolsystem"><span><code>BodyControlSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BodyControlSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bosssystem" tabindex="-1"><a class="header-anchor" href="#bosssystem"><span><code>BossSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BossSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedablesystem" tabindex="-1"><a class="header-anchor" href="#breedablesystem"><span><code>BreedableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeablesystem" tabindex="-1"><a class="header-anchor" href="#bribeablesystem"><span><code>BribeableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BribeableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breathablesystem" tabindex="-1"><a class="header-anchor" href="#breathablesystem"><span><code>BreathableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreathableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostablesystem" tabindex="-1"><a class="header-anchor" href="#boostablesystem"><span><code>BoostableSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoostableSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonsystem" tabindex="-1"><a class="header-anchor" href="#balloonsystem"><span><code>BalloonSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviorsystem" tabindex="-1"><a class="header-anchor" href="#behaviorsystem"><span><code>BehaviorSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockssystem" tabindex="-1"><a class="header-anchor" href="#breakblockssystem"><span><code>BreakBlocksSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlocksSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationsystem" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationsystem"><span><code>BreakDoorAnnotationSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorAnnotationSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensorsystem" tabindex="-1"><a class="header-anchor" href="#blockbreaksensorsystem"><span><code>BlockBreakSensorSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockBreakSensorSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="block" tabindex="-1"><a class="header-anchor" href="#block"><span><code>Block</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(4))) Block</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$Block)(void);</span>
<span class="line">  const DataID mData;</span>
<span class="line">  WeakPtr&lt;BlockLegacy&gt; mLegacyBlock;</span>
<span class="line">  BlockSerializationId mSerializationId;</span>
<span class="line">  BlockRuntimeId mRuntimeId;</span>
<span class="line">  bool mHasRuntimeId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdefinitiongroup" tabindex="-1"><a class="header-anchor" href="#blockdefinitiongroup"><span><code>BlockDefinitionGroup</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BlockDefinitionGroup</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::unique_ptr&lt;BlockDefinition&gt;&gt; mBlockDefinitions;</span>
<span class="line">  int mLastBlockId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcomponentfactory" tabindex="-1"><a class="header-anchor" href="#blockcomponentfactory"><span><code>BlockComponentFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockComponentFactory</span>
<span class="line">{</span>
<span class="line">  BlockFactoryMap mFactoryMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="birchfeature" tabindex="-1"><a class="header-anchor" href="#birchfeature"><span><code>BirchFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BirchFeature : TreeFeature:272</span>
<span class="line">{</span>
<span class="line">  bool mSuperBirch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blueicefeature" tabindex="-1"><a class="header-anchor" href="#blueicefeature"><span><code>BlueIceFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlueIceFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockblobfeature" tabindex="-1"><a class="header-anchor" href="#blockblobfeature"><span><code>BlockBlobFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockBlobFeature : Feature</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  int mStartRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bamboofeature" tabindex="-1"><a class="header-anchor" href="#bamboofeature"><span><code>BambooFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpilefeature" tabindex="-1"><a class="header-anchor" href="#blockpilefeature"><span><code>BlockPileFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPileFeature : Feature</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basecircuitcomponent" tabindex="-1"><a class="header-anchor" href="#basecircuitcomponent"><span><code>BaseCircuitComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BaseCircuitComponent</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BaseCircuitComponent)(void);</span>
<span class="line">  CircuitComponentList mSources;</span>
<span class="line">  bool mIgnoreFirstUpdate;</span>
<span class="line">  bool mIsFirstTime;</span>
<span class="line">  bool mNeedsUpdate;</span>
<span class="line">  BlockPos mChunkPosition;</span>
<span class="line">  bool mShouldEvaluate;</span>
<span class="line">  int mStrength;</span>
<span class="line">  FacingID mDirection;</span>
<span class="line">  bool mAllowPowerUp;</span>
<span class="line">  bool mAllowPowerDown;</span>
<span class="line">  bool mRemoved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpalette" tabindex="-1"><a class="header-anchor" href="#blockpalette"><span><code>BlockPalette</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockPalette</span>
<span class="line">{</span>
<span class="line">  Bedrock::Threading::Mutex mLegacyBlockStatesConversionWarningMutex;</span>
<span class="line">  std::set&lt;std::pair&lt;int,int&gt;&gt; mLegacyBlockStatesConversionWarningSet;</span>
<span class="line">  std::map&lt;std::string,const BlockLegacy *&gt; mNameLookup;</span>
<span class="line">  std::map&lt;CompoundTag,const Block *&gt; mBlockFromSerId;</span>
<span class="line">  std::vector&lt;const Block *&gt; mBlockFromRuntimeId;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockvolume-blockvolumeiter" tabindex="-1"><a class="header-anchor" href="#blockvolume-blockvolumeiter"><span><code>BlockVolume::BlockVolumeIter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockVolume::BlockVolumeIter</span>
<span class="line">{</span>
<span class="line">  Pos pos;</span>
<span class="line">  BlockPos dims;</span>
<span class="line">  buffer_span_mut&lt;const Block *&gt;::iterator blockIter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bushblock" tabindex="-1"><a class="header-anchor" href="#bushblock"><span><code>BushBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BushBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bounds" tabindex="-1"><a class="header-anchor" href="#bounds"><span><code>Bounds</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Bounds</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  Pos mDim;</span>
<span class="line">  int mArea;</span>
<span class="line">  int mVolume;</span>
<span class="line">  int mSide;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bounds-iterator" tabindex="-1"><a class="header-anchor" href="#bounds-iterator"><span><code>Bounds::Iterator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) Bounds::Iterator : Pos</span>
<span class="line">{</span>
<span class="line">  const Bounds *mBounds;</span>
<span class="line">  int mIdx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomesourcegetbiomecache" tabindex="-1"><a class="header-anchor" href="#biomesourcegetbiomecache"><span><code>BiomeSourceGetBiomeCache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BiomeSourceGetBiomeCache</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;BlockPos,const Biome *&gt; mMap;</span>
<span class="line">  SpinLock mLock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry" tabindex="-1"><a class="header-anchor" href="#biomeregistry"><span><code>BiomeRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BiomeRegistry : IEntityRegistryOwner</span>
<span class="line">{</span>
<span class="line">  WellKnownBiomeTags mWellKnownBiomeTags;</span>
<span class="line">  BiomeRegistry::BiomeLookupVector mBiomes;</span>
<span class="line">  OwnerPtr&lt;EntityRegistry&gt; mEntities;</span>
<span class="line">  uint32_t mNextId;</span>
<span class="line">  std::atomic&lt;bool&gt; mClosedForRegistration;</span>
<span class="line">  bool mLoadFromPacks;</span>
<span class="line">  TagRegistry mTagRegistry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beardkernel" tabindex="-1"><a class="header-anchor" href="#beardkernel"><span><code>BeardKernel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BeardKernel</span>
<span class="line">{</span>
<span class="line">  const std::array&lt;float,13824&gt; mKernel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buriedtreasurefeature" tabindex="-1"><a class="header-anchor" href="#buriedtreasurefeature"><span><code>BuriedTreasureFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BuriedTreasureFeature : StructureFeature:1760</span>
<span class="line">{</span>
<span class="line">  int mSpacing;</span>
<span class="line">  int mMinSeparation;</span>
<span class="line">  std::vector&lt;int&gt; mAllowedBiomes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buriedtreasurestart" tabindex="-1"><a class="header-anchor" href="#buriedtreasurestart"><span><code>BuriedTreasureStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BuriedTreasureStart : StructureStart</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buriedtreasurepiece" tabindex="-1"><a class="header-anchor" href="#buriedtreasurepiece"><span><code>BuriedTreasurePiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BuriedTreasurePiece : StructurePiece</span>
<span class="line">{</span>
<span class="line">  int mRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buffer-span-std-string" tabindex="-1"><a class="header-anchor" href="#buffer-span-std-string"><span><code>buffer_span&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct buffer_span&lt;std::string &gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *mBegin;</span>
<span class="line">  const std::string *mEnd;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviornode" tabindex="-1"><a class="header-anchor" href="#behaviornode"><span><code>BehaviorNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BehaviorNode</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BehaviorNode)(void);</span>
<span class="line">  const BehaviorDefinition *mNodeDefinition;</span>
<span class="line">  BehaviorTreeDefinitionPtr mTreeDefinition;</span>
<span class="line">  BehaviorNode *mParent;</span>
<span class="line">  BehaviorComponent *mComponent;</span>
<span class="line">  BehaviorData *mTreeData;</span>
<span class="line">  BehaviorStatus mStatus;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-dataproxy" tabindex="-1"><a class="header-anchor" href="#behaviordata-dataproxy"><span><code>BehaviorData::DataProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$DataProxy)(void);</span>
<span class="line">  std::string mId;</span>
<span class="line">  BehaviorData::DataType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviortreedefinition" tabindex="-1"><a class="header-anchor" href="#behaviortreedefinition"><span><code>BehaviorTreeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BehaviorTreeDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mTreeName;</span>
<span class="line">  std::string mStringInput;</span>
<span class="line">  Unique&lt;BehaviorDefinition&gt; mRoot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bodycontrol" tabindex="-1"><a class="header-anchor" href="#bodycontrol"><span><code>BodyControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BodyControl : Control</span>
<span class="line">{</span>
<span class="line">  int mTimeStill;</span>
<span class="line">  float mLastHeadY;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedabledefinition" tabindex="-1"><a class="header-anchor" href="#breedabledefinition"><span><code>BreedableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BreedableDefinition</span>
<span class="line">{</span>
<span class="line">  bool mTame;</span>
<span class="line">  bool mBlendAttributes;</span>
<span class="line">  float mExtraChance;</span>
<span class="line">  float mBreedCooldownTimeSeconds;</span>
<span class="line">  bool mInheritTamed;</span>
<span class="line">  bool mAllowSitting;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mBreedItems;</span>
<span class="line">  std::vector&lt;EnvironmentRequirement&gt; mEnvironmentRequirements;</span>
<span class="line">  ActorFilterGroup mLoveFilter;</span>
<span class="line">  std::vector&lt;BreedableType&gt; mBreedTypes;</span>
<span class="line">  MutationFactorData mMutationFactors;</span>
<span class="line">  DenySameParentsVariantData mDenyParentsVariant;</span>
<span class="line">  bool mCausesPregnancy;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bribeabledefinition" tabindex="-1"><a class="header-anchor" href="#bribeabledefinition"><span><code>BribeableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BribeableDefinition</span>
<span class="line">{</span>
<span class="line">  float mBribeCooldown;</span>
<span class="line">  std::set&lt;const Item *&gt; mBribeItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burnsindaylightcomponent" tabindex="-1"><a class="header-anchor" href="#burnsindaylightcomponent"><span><code>BurnsInDaylightComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef ActorFlagComponent&lt;BurnsInDaylightFlag&gt; BurnsInDaylightComponent;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bytetag" tabindex="-1"><a class="header-anchor" href="#bytetag"><span><code>ByteTag</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) ByteTag : Tag</span>
<span class="line">{</span>
<span class="line">  uint8_t data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bytearraytag" tabindex="-1"><a class="header-anchor" href="#bytearraytag"><span><code>ByteArrayTag</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ByteArrayTag : Tag</span>
<span class="line">{</span>
<span class="line">  TagMemoryChunk data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpickrequestpacket" tabindex="-1"><a class="header-anchor" href="#blockpickrequestpacket"><span><code>BlockPickRequestPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockPickRequestPacket : Packet:288</span>
<span class="line">{</span>
<span class="line">  BlockPos mPos;</span>
<span class="line">  bool mWithData;</span>
<span class="line">  byte mMaxSlots;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blacklist" tabindex="-1"><a class="header-anchor" href="#blacklist"><span><code>Blacklist</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Blacklist</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Blacklist::Entry&gt; mEntries;</span>
<span class="line">  Bedrock::Threading::RecursiveMutex mEntriesMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boat" tabindex="-1"><a class="header-anchor" href="#boat"><span><code>Boat</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Boat : Actor</span>
<span class="line">{</span>
<span class="line">  bool mFlipped;</span>
<span class="line">  std::string mName;</span>
<span class="line">  MovementInterpolator mInterpolation;</span>
<span class="line">  Boat::Paddle mPaddles[2];</span>
<span class="line">  int mOutOfControlTicks;</span>
<span class="line">  float mYRotD;</span>
<span class="line">  float mInvFriction;</span>
<span class="line">  double mTimer;</span>
<span class="line">  bool mAboveBubbleColumn;</span>
<span class="line">  bool mBubbleColumnDown;</span>
<span class="line">  bool insideBubbleColumn;</span>
<span class="line">  float mBubbleMultiplier;</span>
<span class="line">  float mBubbleAngle;</span>
<span class="line">  float mBubbleAngleOld;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockserializationid" tabindex="-1"><a class="header-anchor" href="#blockserializationid"><span><code>BlockSerializationId</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef CompoundTag BlockSerializationId;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookcloningrecipe" tabindex="-1"><a class="header-anchor" href="#bookcloningrecipe"><span><code>BookCloningRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BookCloningRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  Recipe::ResultList mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerduplicaterecipe" tabindex="-1"><a class="header-anchor" href="#bannerduplicaterecipe"><span><code>BannerDuplicateRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerDuplicateRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  Recipe::ResultList mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="banneraddpatternrecipe" tabindex="-1"><a class="header-anchor" href="#banneraddpatternrecipe"><span><code>BannerAddPatternRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerAddPatternRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  Recipe::ResultList mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcomponentdescription" tabindex="-1"><a class="header-anchor" href="#blockcomponentdescription"><span><code>BlockComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BlockComponentDescription)(void);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="booloption" tabindex="-1"><a class="header-anchor" href="#booloption"><span><code>BoolOption</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoolOption : Option</span>
<span class="line">{</span>
<span class="line">  bool mValue;</span>
<span class="line">  bool mDefaultValue;</span>
<span class="line">  Option::BoolFilter mCoerceValueCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockfactorymap" tabindex="-1"><a class="header-anchor" href="#blockfactorymap"><span><code>BlockFactoryMap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef std::unordered_map&lt;std::string,std::function&lt;std::unique_ptr&lt;BlockComponentDescription&gt; ()&gt;&gt; BlockFactoryMap;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockeventcoordinator" tabindex="-1"><a class="header-anchor" href="#blockeventcoordinator"><span><code>BlockEventCoordinator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockEventCoordinator : EventCoordinator&lt;BlockEventListener&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentfactory" tabindex="-1"><a class="header-anchor" href="#biomecomponentfactory"><span><code>BiomeComponentFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(4))) BiomeComponentFactory</span>
<span class="line">{</span>
<span class="line">  JsonUtil::JsonSchemaRoot&lt;BiomeComponentLoading::BiomeParseContext&gt; mSchema;</span>
<span class="line">  std::vector&lt;std::function&lt;void (CompoundTag &amp;,EntityContext &amp;,IWorldRegistriesProvider &amp;)&gt;&gt; mExtraSerialization;</span>
<span class="line">  BiomeComponentFactory::FactoryScope mScope;</span>
<span class="line">  bool mClosedForRegistration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorlevellistener" tabindex="-1"><a class="header-anchor" href="#blockactorlevellistener"><span><code>BlockActorLevelListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockActorLevelListener : LevelListener</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedhelper" tabindex="-1"><a class="header-anchor" href="#bedhelper"><span><code>BedHelper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BedHelper</span>
<span class="line">{</span>
<span class="line">  float mNorthDir;</span>
<span class="line">  float mSouthDir;</span>
<span class="line">  float mWestDir;</span>
<span class="line">  float mEastDir;</span>
<span class="line">  float mBedOffsetX;</span>
<span class="line">  float mBedOffsetZ;</span>
<span class="line">  float mMobOffsetWestX;</span>
<span class="line">  float mMobOffsetEastX;</span>
<span class="line">  float mMobOffsetSouthZ;</span>
<span class="line">  float mMobOffsetNorthZ;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviortreedescription" tabindex="-1"><a class="header-anchor" href="#behaviortreedescription"><span><code>BehaviorTreeDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorTreeDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mBehaviorTreeId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblocksdescription" tabindex="-1"><a class="header-anchor" href="#breakblocksdescription"><span><code>BreakBlocksDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlocksDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::unordered_set&lt;const BlockLegacy *&gt; mBreakableBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorannotationdescription" tabindex="-1"><a class="header-anchor" href="#breakdoorannotationdescription"><span><code>BreakDoorAnnotationDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorAnnotationDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">  int mBreakTicks;</span>
<span class="line">  Difficulty mMinDifficulty;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockset" tabindex="-1"><a class="header-anchor" href="#blockset"><span><code>BlockSet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockSet</span>
<span class="line">{</span>
<span class="line">  float cost;</span>
<span class="line">  std::unordered_set&lt;const BlockLegacy *&gt; blocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basecontainermenu" tabindex="-1"><a class="header-anchor" href="#basecontainermenu"><span><code>BaseContainerMenu</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BaseContainerMenu : ContainerContentChangeListener, IContainerManager</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mLastSlots;</span>
<span class="line">  ContainerID mContainerId;</span>
<span class="line">  ContainerType mContainerType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnacecontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#blastfurnacecontainermanagermodel"><span><code>BlastFurnaceContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlastFurnaceContainerManagerModel : FurnaceContainerManagerModel</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandcontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#brewingstandcontainermanagermodel"><span><code>BrewingStandContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandContainerManagerModel : ContainerManagerModel</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  int mLastTickCount;</span>
<span class="line">  int mLastFuelAmount;</span>
<span class="line">  int mLastFuelTotal;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconcontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#beaconcontainermanagermodel"><span><code>BeaconContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BeaconContainerManagerModel : LevelContainerManagerModel</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ContainerModel&gt; mPaymentContainerModel;</span>
<span class="line">  int mPrimaryEffectPreviousId;</span>
<span class="line">  int mSecondaryEffectPreviousId;</span>
<span class="line">  int mSelectedPrimaryEffectId;</span>
<span class="line">  int mSelectedSecondaryEffectId;</span>
<span class="line">  bool mEffectSelectionsChanged;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockcommandorigin" tabindex="-1"><a class="header-anchor" href="#blockcommandorigin"><span><code>BlockCommandOrigin</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockCommandOrigin : CommandOrigin</span>
<span class="line">{</span>
<span class="line">  BlockSource *mRegion;</span>
<span class="line">  BlockPos mPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-logendpoint" tabindex="-1"><a class="header-anchor" href="#bedrock-logendpoint"><span><code>Bedrock::LogEndPoint</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Bedrock::LogEndPoint</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$LogEndPoint)(void);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloondefinition" tabindex="-1"><a class="header-anchor" href="#balloondefinition"><span><code>BalloonDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BalloonDefinition</span>
<span class="line">{</span>
<span class="line">  Vec3 mLiftForce;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breathabledefinition" tabindex="-1"><a class="header-anchor" href="#breathabledefinition"><span><code>BreathableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BreathableDefinition</span>
<span class="line">{</span>
<span class="line">  int mTotalSupply;</span>
<span class="line">  int mSuffocateTime;</span>
<span class="line">  float mInhaleTime;</span>
<span class="line">  bool mBreathesAir;</span>
<span class="line">  bool mBreathesWater;</span>
<span class="line">  bool mBreathesLava;</span>
<span class="line">  bool mBreathesSolids;</span>
<span class="line">  bool mGeneratesBubbles;</span>
<span class="line">  std::set&lt;const Block *&gt; mBreathableBlocks;</span>
<span class="line">  std::set&lt;const Block *&gt; mNonBreathableBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-std-string-actordamagecause" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-string-actordamagecause"><span><code>BidirectionalUnorderedMap&lt;std::string,ActorDamageCause&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;std::string,ActorDamageCause&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,ActorDamageCause&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;ActorDamageCause,std::string&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bat" tabindex="-1"><a class="header-anchor" href="#bat"><span><code>Bat</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bat : Mob</span>
<span class="line">{</span>
<span class="line">  bool mWasResting;</span>
<span class="line">  Vec3 mTargetPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blaze" tabindex="-1"><a class="header-anchor" href="#blaze"><span><code>Blaze</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Blaze : Monster</span>
<span class="line">{</span>
<span class="line">  float mAllowedHeightOffset;</span>
<span class="line">  int mNextHeightOffsetChangeTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloon" tabindex="-1"><a class="header-anchor" href="#balloon"><span><code>Balloon</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Balloon : Actor</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;MovementInterpolator&gt; mInterpolator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblockactor" tabindex="-1"><a class="header-anchor" href="#brewingstandblockactor"><span><code>BrewingStandBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BrewingStandBlockActor : BlockActor, Container:1952</span>
<span class="line">{</span>
<span class="line">  int mBrewTime;</span>
<span class="line">  int mFuelAmount;</span>
<span class="line">  int mFuelTotal;</span>
<span class="line">  bool mFinished;</span>
<span class="line">  const Item *mIngredient;</span>
<span class="line">  ItemStack mItems[5];</span>
<span class="line">  bool mNotifyPlayersOnChange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrelblockactor" tabindex="-1"><a class="header-anchor" href="#barrelblockactor"><span><code>BarrelBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BarrelBlockActor : ChestBlockActor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgraphics" tabindex="-1"><a class="header-anchor" href="#blockgraphics"><span><code>BlockGraphics</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGraphics</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BlockGraphics)(void);</span>
<span class="line">  IsotropicFaceData mIsotropicFaceData;</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  BlockRenderLayer mRenderLayer;</span>
<span class="line">  BlockShape mBlockShape;</span>
<span class="line">  bool mAnimatedTexture;</span>
<span class="line">  float mBrightnessGamma;</span>
<span class="line">  Color mMapColor;</span>
<span class="line">  bool mFancy;</span>
<span class="line">  bool mAllowSame;</span>
<span class="line">  BlockSoundType mSoundType;</span>
<span class="line">  AABB mVisualShape;</span>
<span class="line">  std::vector&lt;TextureItem&gt; mTextureItems;</span>
<span class="line">  size_t mIconTextureIndex;</span>
<span class="line">  std::vector&lt;std::vector&lt;const BlockGeometry::Model *&gt;&gt; mBlockModelVariants;</span>
<span class="line">  std::vector&lt;std::vector&lt;BlockGraphics::ModelItem&gt;&gt; mTessellatedModelParts;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beggoal" tabindex="-1"><a class="header-anchor" href="#beggoal"><span><code>BegGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BegGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mLookDistance;</span>
<span class="line">  int mLookTime;</span>
<span class="line">  int mMinLookTime;</span>
<span class="line">  int mMaxLookTime;</span>
<span class="line">  TempEPtr&lt;Player&gt; mPlayer;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakdoorgoal" tabindex="-1"><a class="header-anchor" href="#breakdoorgoal"><span><code>BreakDoorGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakDoorGoal : DoorInteractGoal</span>
<span class="line">{</span>
<span class="line">  int mBreakTime;</span>
<span class="line">  const int mBreakDoorTime;</span>
<span class="line">  int mLastBreakProgress;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breedgoal" tabindex="-1"><a class="header-anchor" href="#breedgoal"><span><code>BreedGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreedGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mOwner;</span>
<span class="line">  TempEPtr&lt;Mob&gt; mPartner;</span>
<span class="line">  int mLoveTime;</span>
<span class="line">  float mSpeed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basemovetoblockgoal" tabindex="-1"><a class="header-anchor" href="#basemovetoblockgoal"><span><code>BaseMoveToBlockGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BaseMoveToBlockGoal</span>
<span class="line">{</span>
<span class="line">  __int8 baseclass_0[116];</span>
<span class="line">  int mSearchRange;</span>
<span class="line">  int mSearchHeight;</span>
<span class="line">  int mSearchCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedblockactor" tabindex="-1"><a class="header-anchor" href="#bedblockactor"><span><code>BedBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedBlockActor : BlockActor:1632</span>
<span class="line">{</span>
<span class="line">  int mDyeColor;</span>
<span class="line">  bool mDirty;</span>
<span class="line">  ActorUniqueID mPetSleepingOnBed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblockactor" tabindex="-1"><a class="header-anchor" href="#bellblockactor"><span><code>BellBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BellBlockActor : BlockActor:1608</span>
<span class="line">{</span>
<span class="line">  bool mRinging;</span>
<span class="line">  Direction::Type mMovementDirection;</span>
<span class="line">  bool mPowered;</span>
<span class="line">  int mAlarmCooldown;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breatheairgoal" tabindex="-1"><a class="header-anchor" href="#breatheairgoal"><span><code>BreatheAirGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BreatheAirGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  Vec3 mWanted;</span>
<span class="line">  float mSpeedMod;</span>
<span class="line">  int mRadius;</span>
<span class="line">  int mStartBreath;</span>
<span class="line">  bool mEndsInAir;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boneanimation" tabindex="-1"><a class="header-anchor" href="#boneanimation"><span><code>BoneAnimation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BoneAnimation</span>
<span class="line">{</span>
<span class="line">  HashedString mBoneName;</span>
<span class="line">  std::vector&lt;BoneAnimationChannel&gt; mAnimationChannels;</span>
<span class="line">  BoneAnimationRelativeMode mRotationRelativeMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boneanimationchannel" tabindex="-1"><a class="header-anchor" href="#boneanimationchannel"><span><code>BoneAnimationChannel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BoneAnimationChannel</span>
<span class="line">{</span>
<span class="line">  BoneTransformType mBoneTransformType;</span>
<span class="line">  std::vector&lt;KeyFrameTransform&gt; mKeyFrames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockpatternbuilder" tabindex="-1"><a class="header-anchor" href="#blockpatternbuilder"><span><code>BlockPatternBuilder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BlockPatternBuilder</span>
<span class="line">{</span>
<span class="line">  BlockSource *mRegion;</span>
<span class="line">  std::vector&lt;std::string&gt; mPattern;</span>
<span class="line">  std::map&lt;char,PatternEntry&gt; mLookup;</span>
<span class="line">  bool mReadyForMatch;</span>
<span class="line">  int mNumPatterns;</span>
<span class="line">  int mPatternLength;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boat-paddle" tabindex="-1"><a class="header-anchor" href="#boat-paddle"><span><code>Boat::Paddle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Boat::Paddle</span>
<span class="line">{</span>
<span class="line">  int mOldPressTime;</span>
<span class="line">  int mPressTime;</span>
<span class="line">  float mOldRowingTime;</span>
<span class="line">  float mRowingTime;</span>
<span class="line">  float mForce;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bee" tabindex="-1"><a class="header-anchor" href="#bee"><span><code>Bee</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) Bee : Animal</span>
<span class="line">{</span>
<span class="line">  LoopingSoundHandle mNormalLoop;</span>
<span class="line">  LoopingSoundHandle mAggressiveLoop;</span>
<span class="line">  float mLoopSoundSpeed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblockactor" tabindex="-1"><a class="header-anchor" href="#beaconblockactor"><span><code>BeaconBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlockActor : BlockActor, Container</span>
<span class="line">{</span>
<span class="line">  BeaconBlockActor::BeaconBeamSections mBeamSections;</span>
<span class="line">  float mBeamRot;</span>
<span class="line">  int mNumLevels;</span>
<span class="line">  int mNumLevelsSet;</span>
<span class="line">  int mBlockRefreshCounter;</span>
<span class="line">  int mPrimaryEffectId;</span>
<span class="line">  int mSecondaryEffectId;</span>
<span class="line">  int mPrimaryEffectTier;</span>
<span class="line">  int mSecondaryEffectTier;</span>
<span class="line">  std::vector&lt;MobEffect *&gt; mBeaconEffects;</span>
<span class="line">  std::vector&lt;std::vector&lt;MobEffect *&gt;&gt; mTierEffects;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockisnametest" tabindex="-1"><a class="header-anchor" href="#blockisnametest"><span><code>BlockIsNameTest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockIsNameTest : SimpleHashStringFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockitems" tabindex="-1"><a class="header-anchor" href="#bedrockitems"><span><code>BedrockItems</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BedrockItems</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-itemusemethod-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-itemusemethod-std-string"><span><code>BidirectionalUnorderedMap&lt;ItemUseMethod,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;ItemUseMethod,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ItemUseMethod,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,ItemUseMethod&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-itemacquisitionmethod-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-itemacquisitionmethod-std-string"><span><code>BidirectionalUnorderedMap&lt;ItemAcquisitionMethod,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;ItemAcquisitionMethod,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ItemAcquisitionMethod,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,ItemAcquisitionMethod&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockitem" tabindex="-1"><a class="header-anchor" href="#blockitem"><span><code>BlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerpatternitem" tabindex="-1"><a class="header-anchor" href="#bannerpatternitem"><span><code>BannerPatternItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerPatternItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bowitem" tabindex="-1"><a class="header-anchor" href="#bowitem"><span><code>BowItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BowItem : RangedWeaponItem</span>
<span class="line">{</span>
<span class="line">  TextureUVCoordinateSet mFrame[3];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockplanteritem" tabindex="-1"><a class="header-anchor" href="#blockplanteritem"><span><code>BlockPlanterItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockPlanterItem : Item</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bucketitem" tabindex="-1"><a class="header-anchor" href="#bucketitem"><span><code>BucketItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BucketItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketEmpty;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketLava;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketMilk;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketWater;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketFish;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketSalmon;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketTropical;</span>
<span class="line">  TextureUVCoordinateSet m_uvBucketPuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boatitem" tabindex="-1"><a class="header-anchor" href="#boatitem"><span><code>BoatItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BoatItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureAtlasItem m_uvTextureItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beditem" tabindex="-1"><a class="header-anchor" href="#beditem"><span><code>BedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureAtlasItem m_uvTextureItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bottleitem" tabindex="-1"><a class="header-anchor" href="#bottleitem"><span><code>BottleItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BottleItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="banneritem" tabindex="-1"><a class="header-anchor" href="#banneritem"><span><code>BannerItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BannerItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonitem" tabindex="-1"><a class="header-anchor" href="#balloonitem"><span><code>BalloonItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BalloonItem : ChemistryItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblockitem" tabindex="-1"><a class="header-anchor" href="#bambooblockitem"><span><code>BambooBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblockitem" tabindex="-1"><a class="header-anchor" href="#bellblockitem"><span><code>BellBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BellBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerpattern" tabindex="-1"><a class="header-anchor" href="#bannerpattern"><span><code>BannerPattern</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BannerPattern</span>
<span class="line">{</span>
<span class="line">  uint8_t mID;</span>
<span class="line">  RowList mPattern;</span>
<span class="line">  ItemStack mIngredientItem;</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mNameID;</span>
<span class="line">  __int16 mPatternItemType;</span>
<span class="line">  bool mIgnoreAux;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerrecipes" tabindex="-1"><a class="header-anchor" href="#bannerrecipes"><span><code>BannerRecipes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BannerRecipes</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bowenchant" tabindex="-1"><a class="header-anchor" href="#bowenchant"><span><code>BowEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BowEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basemobspawner" tabindex="-1"><a class="header-anchor" href="#basemobspawner"><span><code>BaseMobSpawner</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BaseMobSpawner</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BaseMobSpawner)(void);</span>
<span class="line">  int mSpawnDelay;</span>
<span class="line">  float mSpin;</span>
<span class="line">  float mOSpin;</span>
<span class="line">  ActorDefinitionIdentifier mActorId;</span>
<span class="line">  SpawnDataList mSpawnPotentials;</span>
<span class="line">  Unique&lt;SpawnData&gt; mNextSpawnData;</span>
<span class="line">  int mMinSpawnDelay;</span>
<span class="line">  int mMaxSpawnDelay;</span>
<span class="line">  int mSpawnCount;</span>
<span class="line">  Unique&lt;Mob&gt; mDisplayEntity;</span>
<span class="line">  int mMaxNearbyEntities;</span>
<span class="line">  int mRequiredPlayerRange;</span>
<span class="line">  int mSpawnRange;</span>
<span class="line">  float mDisplayEntityWidth;</span>
<span class="line">  float mDisplayEntityHeight;</span>
<span class="line">  float mDisplayEntityScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocksource-listener" tabindex="-1"><a class="header-anchor" href="#blocksource-listener"><span><code>BlockSource::Listener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef BlockSourceListener BlockSource::Listener;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktickingqueue-hashblocktick" tabindex="-1"><a class="header-anchor" href="#blocktickingqueue-hashblocktick"><span><code>BlockTickingQueue::HashBlockTick</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockTickingQueue::HashBlockTick</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basictimer" tabindex="-1"><a class="header-anchor" href="#basictimer"><span><code>BasicTimer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BasicTimer</span>
<span class="line">{</span>
<span class="line">  double mTimeDelay;</span>
<span class="line">  double mStartTime;</span>
<span class="line">  std::function&lt;double ()&gt; mGetCurrentTimeCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomedecorationattributes-listedfeatures-element" tabindex="-1"><a class="header-anchor" href="#biomedecorationattributes-listedfeatures-element"><span><code>BiomeDecorationAttributes&lt;ListedFeatures&gt;::Element</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BiomeDecorationAttributes&lt;ListedFeatures&gt;::Element</span>
<span class="line">{</span>
<span class="line">  ScatterParams mScatter;</span>
<span class="line">  WeakRef&lt;IFeature&gt; mFeature;</span>
<span class="line">  StringKey mIdentifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomecomponentloading-biomeschemanode" tabindex="-1"><a class="header-anchor" href="#biomecomponentloading-biomeschemanode"><span><code>BiomeComponentLoading::BiomeSchemaNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::JsonParseState&lt;JsonUtil::EmptyClass,std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; &gt;,std::pair&lt;std::reference_wrapper&lt;Biome&gt;,std::reference_wrapper&lt;IWorldRegistriesProvider&gt; &gt; &gt; BiomeComponentLoading::BiomeSchemaNode;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biomeregistry-biomelookupvector" tabindex="-1"><a class="header-anchor" href="#biomeregistry-biomelookupvector"><span><code>BiomeRegistry::BiomeLookupVector</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef std::vector&lt;std::unique_ptr&lt;Biome&gt;&gt; BiomeRegistry::BiomeLookupVector;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailtransporter" tabindex="-1"><a class="header-anchor" href="#baserailtransporter"><span><code>BaseRailTransporter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BaseRailTransporter : BaseCircuitComponent:480</span>
<span class="line">{</span>
<span class="line">  BaseRailTransporter::RailType mRailType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="baserailblock" tabindex="-1"><a class="header-anchor" href="#baserailblock"><span><code>BaseRailBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BaseRailBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  const bool mUsesDataBit;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedblock" tabindex="-1"><a class="header-anchor" href="#bedblock"><span><code>BedBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buffer-span-std-unique-ptr-block" tabindex="-1"><a class="header-anchor" href="#buffer-span-std-unique-ptr-block"><span><code>buffer_span&lt;std::unique_ptr&lt;Block&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct buffer_span&lt;std::unique_ptr&lt;Block&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  const std::unique_ptr&lt;Block&gt; *mBegin;</span>
<span class="line">  const std::unique_ptr&lt;Block&gt; *mEnd;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beehiveblock" tabindex="-1"><a class="header-anchor" href="#beehiveblock"><span><code>BeehiveBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeehiveBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-std-string-levelsoundevent" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-string-levelsoundevent"><span><code>BidirectionalUnorderedMap&lt;std::string,LevelSoundEvent&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;std::string,LevelSoundEvent&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,LevelSoundEvent&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;LevelSoundEvent,std::string&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerblockactor" tabindex="-1"><a class="header-anchor" href="#bannerblockactor"><span><code>BannerBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BannerBlockActor</span>
<span class="line">{</span>
<span class="line">  __int8 baseclass_0[201];</span>
<span class="line">  bool mDirtyBounds;</span>
<span class="line">  uint8_t mBaseColor;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mPatterns;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mColors;</span>
<span class="line">  BannerBlockType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblockactor-beaconbeamsections" tabindex="-1"><a class="header-anchor" href="#beaconblockactor-beaconbeamsections"><span><code>BeaconBlockActor::BeaconBeamSections</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef std::vector&lt;BeaconBeamSection&gt; BeaconBlockActor::BeaconBeamSections;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactor-1608" tabindex="-1"><a class="header-anchor" href="#blockactor-1608"><span><code>BlockActor:1608</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(1))) BlockActor:1608</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BlockActor)(void);</span>
<span class="line">  int mTickCount;</span>
<span class="line">  _BYTE gapC[4];</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  float mDestroyTimer;</span>
<span class="line">  Vec3 mDestroyDirection;</span>
<span class="line">  float mDestroyProgress;</span>
<span class="line">  BlockPos mPosition;</span>
<span class="line">  AABB mBB;</span>
<span class="line">  const BlockActorType mType;</span>
<span class="line">  BlockActorRendererId mRendererId;</span>
<span class="line">  _BYTE gap5C[4];</span>
<span class="line">  std::string mCustomName;</span>
<span class="line">  std::string mFilteredCustomName;</span>
<span class="line">  int mRepairCost;</span>
<span class="line">  bool mClientSideOnly;</span>
<span class="line">  bool mIsMovable;</span>
<span class="line">  bool mSaveCustomName;</span>
<span class="line">  bool mCanRenderCustomName;</span>
<span class="line">  const float signShadowRadius;</span>
<span class="line">  _BYTE gapAC[4];</span>
<span class="line">  ActorTerrainInterlockData mTerrainInterlockData;</span>
<span class="line">  bool mChanged;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblockactor" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblockactor"><span><code>BlastFurnaceBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlastFurnaceBlockActor : FurnaceBlockActor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beehiveblockactor" tabindex="-1"><a class="header-anchor" href="#beehiveblockactor"><span><code>BeehiveBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BeehiveBlockActor : BlockActor</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BeehiveBlockActor::Occupant&gt; mOccupants;</span>
<span class="line">  bool mShouldSpawnBees;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockactorfactory" tabindex="-1"><a class="header-anchor" href="#blockactorfactory"><span><code>BlockActorFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockActorFactory</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burstreactioncomponent" tabindex="-1"><a class="header-anchor" href="#burstreactioncomponent"><span><code>BurstReactionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(4))) BurstReactionComponent : LabTableReactionComponent</span>
<span class="line">{</span>
<span class="line">  ParticleType mParticleType;</span>
<span class="line">  HashedString mNewParticleType;</span>
<span class="line">  Vec3 mDims;</span>
<span class="line">  Vec3 mDirRange;</span>
<span class="line">  int mCount;</span>
<span class="line">  int mDataMin;</span>
<span class="line">  int mDataMax;</span>
<span class="line">  bool mDirOneWay;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdestroytimedescription" tabindex="-1"><a class="header-anchor" href="#blockdestroytimedescription"><span><code>BlockDestroyTimeDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockDestroyTimeDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mDestroyTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockexplodeabledescription" tabindex="-1"><a class="header-anchor" href="#blockexplodeabledescription"><span><code>BlockExplodeableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockExplodeableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mExplosionResistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockfrictiondescription" tabindex="-1"><a class="header-anchor" href="#blockfrictiondescription"><span><code>BlockFrictionDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockFrictionDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  float mFriction;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockflammabledescription" tabindex="-1"><a class="header-anchor" href="#blockflammabledescription"><span><code>BlockFlammableDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockFlammableDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  int mFlameOdds;</span>
<span class="line">  int mBurnOdds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockmapcolordescription" tabindex="-1"><a class="header-anchor" href="#blockmapcolordescription"><span><code>BlockMapColorDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockMapColorDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  Color mMapColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightdescription" tabindex="-1"><a class="header-anchor" href="#blocklightdescription"><span><code>BlockLightDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlockLightDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  Brightness mLightLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklightemissiondescription" tabindex="-1"><a class="header-anchor" href="#blocklightemissiondescription"><span><code>BlockLightEmissionDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockLightEmissionDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  float mLightEmission;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockdefinitiongroup-loadresources-blockresource" tabindex="-1"><a class="header-anchor" href="#blockdefinitiongroup-loadresources-blockresource"><span><code>BlockDefinitionGroup::loadResources::BlockResource</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockDefinitionGroup::loadResources::BlockResource</span>
<span class="line">{</span>
<span class="line">  SemVersion mVersion;</span>
<span class="line">  BlockDescription mDescription;</span>
<span class="line">  Json::Value mRoot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocktyperegistry" tabindex="-1"><a class="header-anchor" href="#blocktyperegistry"><span><code>BlockTypeRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockTypeRegistry</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrockblock" tabindex="-1"><a class="header-anchor" href="#bedrockblock"><span><code>BedrockBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BedrockBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bookshelfblock" tabindex="-1"><a class="header-anchor" href="#bookshelfblock"><span><code>BookshelfBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BookshelfBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandblock" tabindex="-1"><a class="header-anchor" href="#brewingstandblock"><span><code>BrewingStandBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconblock" tabindex="-1"><a class="header-anchor" href="#beaconblock"><span><code>BeaconBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bannerblock" tabindex="-1"><a class="header-anchor" href="#bannerblock"><span><code>BannerBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BannerBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  bool mOnGround;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beetrootblock" tabindex="-1"><a class="header-anchor" href="#beetrootblock"><span><code>BeetrootBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeetrootBlock : CropBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blueiceblock" tabindex="-1"><a class="header-anchor" href="#blueiceblock"><span><code>BlueIceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlueIceBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bubblecolumnblock" tabindex="-1"><a class="header-anchor" href="#bubblecolumnblock"><span><code>BubbleColumnBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BubbleColumnBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  bool mFancyBubbles;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrierblock" tabindex="-1"><a class="header-anchor" href="#barrierblock"><span><code>BarrierBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BarrierBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bambooblock" tabindex="-1"><a class="header-anchor" href="#bambooblock"><span><code>BambooBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bamboosapling" tabindex="-1"><a class="header-anchor" href="#bamboosapling"><span><code>BambooSapling</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BambooSapling : Sapling</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blastfurnaceblock" tabindex="-1"><a class="header-anchor" href="#blastfurnaceblock"><span><code>BlastFurnaceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BlastFurnaceBlock : FurnaceBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="barrelblock" tabindex="-1"><a class="header-anchor" href="#barrelblock"><span><code>BarrelBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BarrelBlock : FaceDirectionalBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bellblock" tabindex="-1"><a class="header-anchor" href="#bellblock"><span><code>BellBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BellBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-std-string-automaticid-dimension-int" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-std-string-automaticid-dimension-int"><span><code>BidirectionalUnorderedMap&lt;std::string,AutomaticID&lt;Dimension,int&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;std::string,AutomaticID&lt;Dimension,int&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,AutomaticID&lt;Dimension,int&gt;&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;AutomaticID&lt;Dimension,int&gt;,std::string&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockintersectionconstraint" tabindex="-1"><a class="header-anchor" href="#blockintersectionconstraint"><span><code>BlockIntersectionConstraint</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BlockIntersectionConstraint : IStructureConstraint</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BlockPos&gt; mVolumeOffsets;</span>
<span class="line">  std::unordered_map&lt;std::string,const Block *&gt; mBlockWhitelist;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basecircuitcomponent-480" tabindex="-1"><a class="header-anchor" href="#basecircuitcomponent-480"><span><code>BaseCircuitComponent:480</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(4))) BaseCircuitComponent:480</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BaseCircuitComponent)(void);</span>
<span class="line">  CircuitComponentList mSources;</span>
<span class="line">  bool mIgnoreFirstUpdate;</span>
<span class="line">  bool mIsFirstTime;</span>
<span class="line">  bool mNeedsUpdate;</span>
<span class="line">  __attribute__((aligned(2))) BlockPos mChunkPosition;</span>
<span class="line">  bool mShouldEvaluate;</span>
<span class="line">  __attribute__((aligned(4))) int mStrength;</span>
<span class="line">  FacingID mDirection;</span>
<span class="line">  bool mAllowPowerUp;</span>
<span class="line">  bool mAllowPowerDown;</span>
<span class="line">  bool mRemoved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-model" tabindex="-1"><a class="header-anchor" href="#blockgeometry-model"><span><code>BlockGeometry::Model</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::Model</span>
<span class="line">{</span>
<span class="line">  GameVersion mVersion;</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mParent;</span>
<span class="line">  std::vector&lt;BlockGeometry::Element&gt; mElements;</span>
<span class="line">  std::unordered_map&lt;std::string,std::string&gt; mTextureMap;</span>
<span class="line">  std::vector&lt;std::string&gt; mTextureList;</span>
<span class="line">  std::vector&lt;std::string&gt; mTextureStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-element" tabindex="-1"><a class="header-anchor" href="#blockgeometry-element"><span><code>BlockGeometry::Element</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::Element</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mParent;</span>
<span class="line">  glm::vec3 mPivot;</span>
<span class="line">  glm::vec3 mRotation;</span>
<span class="line">  std::vector&lt;BlockGeometry::ElementBox&gt; mBoxes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-elementbox" tabindex="-1"><a class="header-anchor" href="#blockgeometry-elementbox"><span><code>BlockGeometry::ElementBox</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::ElementBox</span>
<span class="line">{</span>
<span class="line">  glm::vec3 mOrigin;</span>
<span class="line">  glm::vec3 mSize;</span>
<span class="line">  std::array&lt;BlockGeometry::Face,6&gt; mFaces;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-face" tabindex="-1"><a class="header-anchor" href="#blockgeometry-face"><span><code>BlockGeometry::Face</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(4))) BlockGeometry::Face</span>
<span class="line">{</span>
<span class="line">  float u0;</span>
<span class="line">  float v0;</span>
<span class="line">  float u1;</span>
<span class="line">  float v1;</span>
<span class="line">  int rotation;</span>
<span class="line">  std::string texture;</span>
<span class="line">  int textureIndex;</span>
<span class="line">  bool enabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-tessellatedmodel" tabindex="-1"><a class="header-anchor" href="#blockgeometry-tessellatedmodel"><span><code>BlockGeometry::TessellatedModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::TessellatedModel</span>
<span class="line">{</span>
<span class="line">  std::array&lt;AABB,4&gt; mAABoxes;</span>
<span class="line">  std::array&lt;std::vector&lt;BlockGeometry::AlignedFace&gt;,6&gt; mEdgeSet;</span>
<span class="line">  std::array&lt;std::vector&lt;BlockGeometry::AlignedFace&gt;,6&gt; mAlignedSet;</span>
<span class="line">  BlockGeometry::OrientedFaceVector mOrientedSet;</span>
<span class="line">  std::array&lt;BlockGeometry::TessellatedModel::Occlusion,6&gt; mOcclusion;</span>
<span class="line">  std::array&lt;BlockGeometry::TessellatedModel::Occlusion,3&gt; mTopOcclusionRot;</span>
<span class="line">  std::array&lt;BlockGeometry::TessellatedModel::Occlusion,3&gt; mBotOcclusionRot;</span>
<span class="line">  std::vector&lt;std::string&gt; mTextureNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-alignedface" tabindex="-1"><a class="header-anchor" href="#blockgeometry-alignedface"><span><code>BlockGeometry::AlignedFace</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::AlignedFace</span>
<span class="line">{</span>
<span class="line">  std::array&lt;Vec3,4&gt; verts;</span>
<span class="line">  std::array&lt;Vec2,4&gt; uvs;</span>
<span class="line">  size_t textureIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-orientedfacevector" tabindex="-1"><a class="header-anchor" href="#blockgeometry-orientedfacevector"><span><code>BlockGeometry::OrientedFaceVector</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef std::vector&lt;BlockGeometry::OrientedFace&gt; BlockGeometry::OrientedFaceVector;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-orientedface" tabindex="-1"><a class="header-anchor" href="#blockgeometry-orientedface"><span><code>BlockGeometry::OrientedFace</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::OrientedFace</span>
<span class="line">{</span>
<span class="line">  std::array&lt;Vec3,4&gt; verts;</span>
<span class="line">  std::array&lt;Vec2,4&gt; uvs;</span>
<span class="line">  Vec3 norm;</span>
<span class="line">  size_t textureIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockgeometry-tessellatedmodel-occlusion" tabindex="-1"><a class="header-anchor" href="#blockgeometry-tessellatedmodel-occlusion"><span><code>BlockGeometry::TessellatedModel::Occlusion</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockGeometry::TessellatedModel::Occlusion</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned char,8&gt; blocking;</span>
<span class="line">  std::array&lt;unsigned char,8&gt; visible;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="balloonabledefinition" tabindex="-1"><a class="header-anchor" href="#balloonabledefinition"><span><code>BalloonableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BalloonableDefinition</span>
<span class="line">{</span>
<span class="line">  float mSoftDistance;</span>
<span class="line">  float mMaxDistance;</span>
<span class="line">  float mInvMass;</span>
<span class="line">  DefinitionTrigger mOnBalloon;</span>
<span class="line">  DefinitionTrigger mOnUnballoon;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockbreaksensordefinition" tabindex="-1"><a class="header-anchor" href="#blockbreaksensordefinition"><span><code>BlockBreakSensorDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockBreakSensorDefinition</span>
<span class="line">{</span>
<span class="line">  float mSensorRadius;</span>
<span class="line">  std::vector&lt;BlockListEventMap&gt; mBlockSets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boostabledefinition" tabindex="-1"><a class="header-anchor" href="#boostabledefinition"><span><code>BoostableDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BoostableDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BoostItem&gt; mBoostItems;</span>
<span class="line">  float mMaxBoostTime;</span>
<span class="line">  float mSpeedModifier;</span>
<span class="line">  float mFovMod;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bossdefinition" tabindex="-1"><a class="header-anchor" href="#bossdefinition"><span><code>BossDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BossDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  bool mShouldDarkenSky;</span>
<span class="line">  int mHudRange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocklistserializer" tabindex="-1"><a class="header-anchor" href="#blocklistserializer"><span><code>BlockListSerializer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockListSerializer</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockutils" tabindex="-1"><a class="header-anchor" href="#blockutils"><span><code>BlockUtils</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockUtils</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-containertype-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-containertype-std-string"><span><code>BidirectionalUnorderedMap&lt;ContainerType,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;ContainerType,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ContainerType,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,ContainerType&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="burnsindaylightdefinition" tabindex="-1"><a class="header-anchor" href="#burnsindaylightdefinition"><span><code>BurnsInDaylightDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BurnsInDaylightDefinition</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bidirectionalunorderedmap-particletype-std-string" tabindex="-1"><a class="header-anchor" href="#bidirectionalunorderedmap-particletype-std-string"><span><code>BidirectionalUnorderedMap&lt;ParticleType,std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BidirectionalUnorderedMap&lt;ParticleType,std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ParticleType,std::string&gt; mRight;</span>
<span class="line">  std::unordered_map&lt;std::string,ParticleType&gt; mLeft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblockdefinition" tabindex="-1"><a class="header-anchor" href="#breakblockdefinition"><span><code>BreakBlockDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BreakBlockDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  std::string mBlockPosId;</span>
<span class="line">  int mNumTicksToBreak;</span>
<span class="line">  std::string mNumTicksToBreakId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="breakblocknode" tabindex="-1"><a class="header-anchor" href="#breakblocknode"><span><code>BreakBlockNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(4))) BreakBlockNode : BehaviorNode:480</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  int mNumTicksToBreak;</span>
<span class="line">  const Block *mStartingBlock;</span>
<span class="line">  int mNumTicksBreaking;</span>
<span class="line">  bool mPreActionDone;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-blockpos" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-blockpos"><span><code>BehaviorData::Data&lt;BlockPos&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;BlockPos&gt; : BehaviorData::DataProxy:352</span>
<span class="line">{</span>
<span class="line">  BlockPos mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviornode-480" tabindex="-1"><a class="header-anchor" href="#behaviornode-480"><span><code>BehaviorNode:480</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(4))) BehaviorNode:480</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BehaviorNode)(void);</span>
<span class="line">  const BehaviorDefinition *mNodeDefinition;</span>
<span class="line">  BehaviorTreeDefinitionPtr mTreeDefinition;</span>
<span class="line">  BehaviorNode *mParent;</span>
<span class="line">  BehaviorComponent *mComponent;</span>
<span class="line">  BehaviorData *mTreeData;</span>
<span class="line">  BehaviorStatus mStatus;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-int" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-int"><span><code>BehaviorData::Data&lt;int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;int&gt; : BehaviorData::DataProxy:352</span>
<span class="line">{</span>
<span class="line">  int mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-std-string" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-std-string"><span><code>BehaviorData::Data&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;std::string &gt; : BehaviorData::DataProxy</span>
<span class="line">{</span>
<span class="line">  std::string mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-bool" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-bool"><span><code>BehaviorData::Data&lt;bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) BehaviorData::Data&lt;bool&gt; : BehaviorData::DataProxy:328</span>
<span class="line">{</span>
<span class="line">  bool mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-vec3" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-vec3"><span><code>BehaviorData::Data&lt;Vec3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;Vec3&gt; : BehaviorData::DataProxy:352</span>
<span class="line">{</span>
<span class="line">  Vec3 mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beaconpaymentcontainercontroller" tabindex="-1"><a class="header-anchor" href="#beaconpaymentcontainercontroller"><span><code>BeaconPaymentContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BeaconPaymentContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandinputcontainercontroller" tabindex="-1"><a class="header-anchor" href="#brewingstandinputcontainercontroller"><span><code>BrewingStandInputContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandInputContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandresultcontainercontroller" tabindex="-1"><a class="header-anchor" href="#brewingstandresultcontainercontroller"><span><code>BrewingStandResultContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandResultContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="brewingstandfuelcontainercontroller" tabindex="-1"><a class="header-anchor" href="#brewingstandfuelcontainercontroller"><span><code>BrewingStandFuelContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BrewingStandFuelContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blockreducer" tabindex="-1"><a class="header-anchor" href="#blockreducer"><span><code>BlockReducer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BlockReducer</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$BlockReducer)(void);</span>
<span class="line">  std::unordered_map&lt;int,std::vector&lt;ItemStack&gt;&gt; mBlockToElements;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basepressureplateblock" tabindex="-1"><a class="header-anchor" href="#basepressureplateblock"><span><code>BasePressurePlateBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BasePressurePlateBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  std::string texture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buttonblock" tabindex="-1"><a class="header-anchor" href="#buttonblock"><span><code>ButtonBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __attribute__((aligned(8))) ButtonBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  const bool mSensitive;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beehiveblockactor-occupant" tabindex="-1"><a class="header-anchor" href="#beehiveblockactor-occupant"><span><code>BeehiveBlockActor::Occupant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BeehiveBlockActor::Occupant</span>
<span class="line">{</span>
<span class="line">  ActorDefinitionIdentifier mActorIdentifier;</span>
<span class="line">  CompoundTag mSaveData;</span>
<span class="line">  unsigned int mTicksLeftToStay;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-dataproxy-352" tabindex="-1"><a class="header-anchor" href="#behaviordata-dataproxy-352"><span><code>BehaviorData::DataProxy:352</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(4))) BehaviorData::DataProxy:352</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$DataProxy)(void);</span>
<span class="line">  std::string mId;</span>
<span class="line">  BehaviorData::DataType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-data-float" tabindex="-1"><a class="header-anchor" href="#behaviordata-data-float"><span><code>BehaviorData::Data&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj BehaviorData::Data&lt;float&gt; : BehaviorData::DataProxy:352</span>
<span class="line">{</span>
<span class="line">  float mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="behaviordata-dataproxy-328" tabindex="-1"><a class="header-anchor" href="#behaviordata-dataproxy-328"><span><code>BehaviorData::DataProxy:328</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(1))) BehaviorData::DataProxy:328</span>
<span class="line">{</span>
<span class="line">  int (**_vptr$DataProxy)(void);</span>
<span class="line">  std::string mId;</span>
<span class="line">  BehaviorData::DataType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrocklog-categorylogfile" tabindex="-1"><a class="header-anchor" href="#bedrocklog-categorylogfile"><span><code>BedrockLog::CategoryLogFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((aligned(8))) BedrockLog::CategoryLogFile</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;BedrockLog::LogChannel,std::unique_ptr&lt;BedrockLog::LogDetails&gt;,std::enum_hash&lt;BedrockLog::LogChannel&gt;,std::equal_to&lt;BedrockLog::LogChannel&gt;,std::allocator&lt;std::pair&lt;const BedrockLog::LogChannel,std::unique_ptr&lt;BedrockLog::LogDetails&gt; &gt; &gt; &gt; mChannel;</span>
<span class="line">  std::bitset&lt;3&gt; mCombinedChannelMask;</span>
<span class="line">  int mMessageCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrocklog-logdetails" tabindex="-1"><a class="header-anchor" href="#bedrocklog-logdetails"><span><code>BedrockLog::LogDetails</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __attribute__((packed)) __attribute__((aligned(8))) BedrockLog::LogDetails</span>
<span class="line">{</span>
<span class="line">  SpinLock mLogMutex;</span>
<span class="line">  bool mUseLogFile;</span>
<span class="line">  bool mLogFileCreated;</span>
<span class="line">  __attribute__((aligned(8))) Core::HeapPathBuffer mDebugLogFileName;</span>
<span class="line">  Core::HeapPathBuffer mLogFilePath;</span>
<span class="line">  Core::OutputFileStream mLogFile;</span>
<span class="line">  bool mFlushImmediate;</span>
<span class="line">  bool mTimestamp;</span>
<span class="line">  bool mTrace;</span>
<span class="line">  bool mPriority;</span>
<span class="line">  bool mArea;</span>
<span class="line">  bool mThreadId;</span>
<span class="line">  bool mAppend;</span>
<span class="line">  bool mProcessId;</span>
<span class="line">  bool mMessageId;</span>
<span class="line">  bool mSilent;</span>
<span class="line">  __attribute__((aligned(4))) unsigned int mPriorityFilter;</span>
<span class="line">  BedrockLog::LogAreaFilter mAreaFilter;</span>
<span class="line">  double mFlushDelayTime;</span>
<span class="line">  bool mCycleLog;</span>
<span class="line">  __attribute__((aligned(8))) double mLastOpenTime;</span>
<span class="line">  double mCycleTime;</span>
<span class="line">  BedrockLog::LogChannel mChannel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="backwardscompattextureinfo" tabindex="-1"><a class="header-anchor" href="#backwardscompattextureinfo"><span><code>BackwardsCompatTextureInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct BackwardsCompatTextureInfo</span>
<span class="line">{</span>
<span class="line">  bool mUse;</span>
<span class="line">  glm::vec2 mUVSize;</span>
<span class="line">  glm::vec2 mUV;</span>
<span class="line">  glm::vec2 mBaseSize;</span>
<span class="line">  Core::HeapPathBuffer mBackCompatTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-asyncresult-completeresult-void" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-asyncresult-completeresult-void"><span><code>Bedrock::Threading::AsyncResult::CompleteResult&lt;void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Bedrock::Threading::AsyncResult::CompleteResult&lt;void&gt; : Bedrock::Threading::IAsyncResult&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-uniquelock-std-mutex" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-uniquelock-std-mutex"><span><code>Bedrock::Threading::UniqueLock&lt;std::mutex&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">typedef std::unique_lock&lt;std::mutex&gt; Bedrock::Threading::UniqueLock&lt;std::mutex&gt;;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bedrock-threading-threadutil" tabindex="-1"><a class="header-anchor" href="#bedrock-threading-threadutil"><span><code>Bedrock::Threading::ThreadUtil</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Bedrock::Threading::ThreadUtil</span>
<span class="line">{</span>
<span class="line">  __int8 gap0[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,849),i=[d];function l(r,c){return a(),t("div",null,i)}const p=e(s,[["render",l],["__file","B.html.vue"]]),b=JSON.parse('{"path":"/1.14.60.5/structure/B.html","title":"B","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"BlockPos","slug":"blockpos","link":"#blockpos","children":[]},{"level":3,"title":"BaseGameVersion","slug":"basegameversion","link":"#basegameversion","children":[]},{"level":3,"title":"Bedrock::Threading::Mutex","slug":"bedrock-threading-mutex","link":"#bedrock-threading-mutex","children":[]},{"level":3,"title":"BedrockEngine::AppIsland","slug":"bedrockengine-appisland","link":"#bedrockengine-appisland","children":[]},{"level":3,"title":"BedrockEngine::IIslandCore","slug":"bedrockengine-iislandcore","link":"#bedrockengine-iislandcore","children":[]},{"level":3,"title":"BaseGamePackSlices","slug":"basegamepackslices","link":"#basegamepackslices","children":[]},{"level":3,"title":"BoundingBox","slug":"boundingbox","link":"#boundingbox","children":[]},{"level":3,"title":"Bedrock::Application::ThreadOwner<Core::Random>","slug":"bedrock-application-threadowner-core-random","link":"#bedrock-application-threadowner-core-random","children":[]},{"level":3,"title":"BlockSource","slug":"blocksource","link":"#blocksource","children":[]},{"level":3,"title":"BlockSource::ListenerVector","slug":"blocksource-listenervector","link":"#blocksource-listenervector","children":[]},{"level":3,"title":"BrightnessPair","slug":"brightnesspair","link":"#brightnesspair","children":[]},{"level":3,"title":"Brightness","slug":"brightness","link":"#brightness","children":[]},{"level":3,"title":"BlockActorList","slug":"blockactorlist","link":"#blockactorlist","children":[]},{"level":3,"title":"BlockTickingQueue","slug":"blocktickingqueue","link":"#blocktickingqueue","children":[]},{"level":3,"title":"BlockTickingQueue::TickDataSet","slug":"blocktickingqueue-tickdataset","link":"#blocktickingqueue-tickdataset","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<Bedrock::Threading::Mutex>","slug":"bedrock-threading-lockguard-bedrock-threading-mutex","link":"#bedrock-threading-lockguard-bedrock-threading-mutex","children":[]},{"level":3,"title":"buffer_span<ChunkPos>","slug":"buffer-span-chunkpos","link":"#buffer-span-chunkpos","children":[]},{"level":3,"title":"BiomeSource","slug":"biomesource","link":"#biomesource","children":[]},{"level":3,"title":"BlockVolume","slug":"blockvolume","link":"#blockvolume","children":[]},{"level":3,"title":"buffer_span_mut<const Block *>","slug":"buffer-span-mut-const-block","link":"#buffer-span-mut-const-block","children":[]},{"level":3,"title":"BiomeArea","slug":"biomearea","link":"#biomearea","children":[]},{"level":3,"title":"BonusChestFeature","slug":"bonuschestfeature","link":"#bonuschestfeature","children":[]},{"level":3,"title":"BlockPosIterator","slug":"blockpositerator","link":"#blockpositerator","children":[]},{"level":3,"title":"buffer_span<std::pair<gsl::basic_string_span<const char,-1>,gsl::basic_string_span<const char,-1> > >","slug":"buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1","link":"#buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1","children":[]},{"level":3,"title":"buffer_span<std::pair<gsl::basic_string_span<const char,-1>,gsl::basic_string_span<const char,-1> > >::iterator","slug":"buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1-iterator","link":"#buffer-span-std-pair-gsl-basic-string-span-const-char-1-gsl-basic-string-span-const-char-1-iterator","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<Core::SingleThreadedLock>","slug":"bedrock-threading-lockguard-core-singlethreadedlock","link":"#bedrock-threading-lockguard-core-singlethreadedlock","children":[]},{"level":3,"title":"BalloonComponent","slug":"ballooncomponent","link":"#ballooncomponent","children":[]},{"level":3,"title":"BehaviorComponent","slug":"behaviorcomponent","link":"#behaviorcomponent","children":[]},{"level":3,"title":"BehaviorTreeDefinitionPtr","slug":"behaviortreedefinitionptr","link":"#behaviortreedefinitionptr","children":[]},{"level":3,"title":"BehaviorData","slug":"behaviordata","link":"#behaviordata","children":[]},{"level":3,"title":"BlockBreakSensorComponent","slug":"blockbreaksensorcomponent","link":"#blockbreaksensorcomponent","children":[]},{"level":3,"title":"BlockEventDispatcherToken","slug":"blockeventdispatchertoken","link":"#blockeventdispatchertoken","children":[]},{"level":3,"title":"BodyControlComponent","slug":"bodycontrolcomponent","link":"#bodycontrolcomponent","children":[]},{"level":3,"title":"BoostableComponent","slug":"boostablecomponent","link":"#boostablecomponent","children":[]},{"level":3,"title":"BossComponent","slug":"bosscomponent","link":"#bosscomponent","children":[]},{"level":3,"title":"BreakBlocksComponent","slug":"breakblockscomponent","link":"#breakblockscomponent","children":[]},{"level":3,"title":"BreakDoorAnnotationComponent","slug":"breakdoorannotationcomponent","link":"#breakdoorannotationcomponent","children":[]},{"level":3,"title":"BreathableComponent","slug":"breathablecomponent","link":"#breathablecomponent","children":[]},{"level":3,"title":"BreedableComponent","slug":"breedablecomponent","link":"#breedablecomponent","children":[]},{"level":3,"title":"BribeableComponent","slug":"bribeablecomponent","link":"#bribeablecomponent","children":[]},{"level":3,"title":"BaseCommandBlock","slug":"basecommandblock","link":"#basecommandblock","children":[]},{"level":3,"title":"Bedrock::Threading::$<23596803,1>","slug":"bedrock-threading-23596803-1","link":"#bedrock-threading-23596803-1","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLock<Bedrock::Threading::SharedMutex>","slug":"bedrock-threading-uniquelock-bedrock-threading-sharedmutex","link":"#bedrock-threading-uniquelock-bedrock-threading-sharedmutex","children":[]},{"level":3,"title":"Bedrock::Threading::SharedLock<Bedrock::Threading::SharedMutex>","slug":"bedrock-threading-sharedlock-bedrock-threading-sharedmutex","link":"#bedrock-threading-sharedlock-bedrock-threading-sharedmutex","children":[]},{"level":3,"title":"BinaryDataOutput","slug":"binarydataoutput","link":"#binarydataoutput","children":[]},{"level":3,"title":"BytesDataOutput","slug":"bytesdataoutput","link":"#bytesdataoutput","children":[]},{"level":3,"title":"BinaryDataInput","slug":"binarydatainput","link":"#binarydatainput","children":[]},{"level":3,"title":"BytesDataInput","slug":"bytesdatainput","link":"#bytesdatainput","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<void>::Handle","slug":"bedrock-threading-iasyncresult-void-handle","link":"#bedrock-threading-iasyncresult-void-handle","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLock<Bedrock::Threading::RecursiveMutex>","slug":"bedrock-threading-uniquelock-bedrock-threading-recursivemutex","link":"#bedrock-threading-uniquelock-bedrock-threading-recursivemutex","children":[]},{"level":3,"title":"Bedrock::Threading::$<25190359,1>","slug":"bedrock-threading-25190359-1","link":"#bedrock-threading-25190359-1","children":[]},{"level":3,"title":"Blacklist::Entry","slug":"blacklist-entry","link":"#blacklist-entry","children":[]},{"level":3,"title":"BiomeDefinitionListPacket","slug":"biomedefinitionlistpacket","link":"#biomedefinitionlistpacket","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLock<Bedrock::Threading::Mutex>","slug":"bedrock-threading-uniquelock-bedrock-threading-mutex","link":"#bedrock-threading-uniquelock-bedrock-threading-mutex","children":[]},{"level":3,"title":"BookEditPacket","slug":"bookeditpacket","link":"#bookeditpacket","children":[]},{"level":3,"title":"buffer_span<unsigned int>","slug":"buffer-span-unsigned-int","link":"#buffer-span-unsigned-int","children":[]},{"level":3,"title":"BaseGamePackSlices::applyPackSlices::$407E69F49D83A976B60EB7804F48E5FB","slug":"basegamepackslices-applypackslices-407e69f49d83a976b60eb7804f48e5fb","link":"#basegamepackslices-applypackslices-407e69f49d83a976b60eb7804f48e5fb","children":[]},{"level":3,"title":"BaseGameVersion::any_version_constructor","slug":"basegameversion-any-version-constructor","link":"#basegameversion-any-version-constructor","children":[]},{"level":3,"title":"BehaviorPackContents","slug":"behaviorpackcontents","link":"#behaviorpackcontents","children":[]},{"level":3,"title":"Bedrock::Threading::Thread","slug":"bedrock-threading-thread","link":"#bedrock-threading-thread","children":[]},{"level":3,"title":"Blacklist::LockGuard","slug":"blacklist-lockguard","link":"#blacklist-lockguard","children":[]},{"level":3,"title":"Bedrock::Threading::ConditionVariable","slug":"bedrock-threading-conditionvariable","link":"#bedrock-threading-conditionvariable","children":[]},{"level":3,"title":"BucketableComponent","slug":"bucketablecomponent","link":"#bucketablecomponent","children":[]},{"level":3,"title":"BucketableDescription","slug":"bucketabledescription","link":"#bucketabledescription","children":[]},{"level":3,"title":"BoneAnimationChannel::sortKeyFrames::KeyFrameCompare","slug":"boneanimationchannel-sortkeyframes-keyframecompare","link":"#boneanimationchannel-sortkeyframes-keyframecompare","children":[]},{"level":3,"title":"BoneOrientation","slug":"boneorientation","link":"#boneorientation","children":[]},{"level":3,"title":"BoneOrientationTransform","slug":"boneorientationtransform","link":"#boneorientationtransform","children":[]},{"level":3,"title":"Bedrock::Threading::RecursiveMutex","slug":"bedrock-threading-recursivemutex","link":"#bedrock-threading-recursivemutex","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<Bedrock::Threading::RecursiveMutex>","slug":"bedrock-threading-lockguard-bedrock-threading-recursivemutex","link":"#bedrock-threading-lockguard-bedrock-threading-recursivemutex","children":[]},{"level":3,"title":"buffer_span_mut<std::shared_ptr<LevelChunk> >","slug":"buffer-span-mut-std-shared-ptr-levelchunk","link":"#buffer-span-mut-std-shared-ptr-levelchunk","children":[]},{"level":3,"title":"buffer_span<unsigned int>::iterator","slug":"buffer-span-unsigned-int-iterator","link":"#buffer-span-unsigned-int-iterator","children":[]},{"level":3,"title":"BlockActorDataPacket","slug":"blockactordatapacket","link":"#blockactordatapacket","children":[]},{"level":3,"title":"buffer_span_mut<unsigned int>","slug":"buffer-span-mut-unsigned-int","link":"#buffer-span-mut-unsigned-int","children":[]},{"level":3,"title":"BlockPalette::ConstructorToken","slug":"blockpalette-constructortoken","link":"#blockpalette-constructortoken","children":[]},{"level":3,"title":"BlockID","slug":"blockid","link":"#blockid","children":[]},{"level":3,"title":"buffer_span<BlockID>","slug":"buffer-span-blockid","link":"#buffer-span-blockid","children":[]},{"level":3,"title":"buffer_span<NibblePair>","slug":"buffer-span-nibblepair","link":"#buffer-span-nibblepair","children":[]},{"level":3,"title":"BlockFetchResult","slug":"blockfetchresult","link":"#blockfetchresult","children":[]},{"level":3,"title":"buffer_span<SubChunk>","slug":"buffer-span-subchunk","link":"#buffer-span-subchunk","children":[]},{"level":3,"title":"buffer_span<Actor *>","slug":"buffer-span-actor","link":"#buffer-span-actor","children":[]},{"level":3,"title":"buffer_span<Actor *>::iterator","slug":"buffer-span-actor-iterator","link":"#buffer-span-actor-iterator","children":[]},{"level":3,"title":"BlockTickingQueue::BlockTick","slug":"blocktickingqueue-blocktick","link":"#blocktickingqueue-blocktick","children":[]},{"level":3,"title":"BlockTickingQueue::getTickDelaysInArea::$8CF75821B5BA7DD28C0CF4A48A9CB9FA","slug":"blocktickingqueue-gettickdelaysinarea-8cf75821b5ba7dd28c0cf4a48a9cb9fa","link":"#blocktickingqueue-gettickdelaysinarea-8cf75821b5ba7dd28c0cf4a48a9cb9fa","children":[]},{"level":3,"title":"BlockPosSet","slug":"blockposset","link":"#blockposset","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<WeightedBiomeAttributes<HillsTransformation> >","slug":"biomecomponentloading-componentaccessor-weightedbiomeattributes-hillstransformation","link":"#biomecomponentloading-componentaccessor-weightedbiomeattributes-hillstransformation","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<WeightedBiomeAttributes<MutateBiomeTransformation> >","slug":"biomecomponentloading-componentaccessor-weightedbiomeattributes-mutatebiometransformation","link":"#biomecomponentloading-componentaccessor-weightedbiomeattributes-mutatebiometransformation","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<WeightedBiomeAttributes<RiverTransformation> >","slug":"biomecomponentloading-componentaccessor-weightedbiomeattributes-rivertransformation","link":"#biomecomponentloading-componentaccessor-weightedbiomeattributes-rivertransformation","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<WeightedBiomeAttributes<ShoreTransformation> >","slug":"biomecomponentloading-componentaccessor-weightedbiomeattributes-shoretransformation","link":"#biomecomponentloading-componentaccessor-weightedbiomeattributes-shoretransformation","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<IgnoreAutomaticFeatureRules> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-ignoreautomaticfeaturerules","link":"#biomecomponentloading-componentaccessor-flagcomponent-ignoreautomaticfeaturerules","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<DataDrivenBiomeSurface> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-datadrivenbiomesurface","link":"#biomecomponentloading-componentaccessor-flagcomponent-datadrivenbiomesurface","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<SwampBiomeSurface> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-swampbiomesurface","link":"#biomecomponentloading-componentaccessor-flagcomponent-swampbiomesurface","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<OceanFrozenBiomeSurface> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-oceanfrozenbiomesurface","link":"#biomecomponentloading-componentaccessor-flagcomponent-oceanfrozenbiomesurface","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<NetherBiomeSurface> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-netherbiomesurface","link":"#biomecomponentloading-componentaccessor-flagcomponent-netherbiomesurface","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<FlagComponent<TheEndBiomeSurface> >","slug":"biomecomponentloading-componentaccessor-flagcomponent-theendbiomesurface","link":"#biomecomponentloading-componentaccessor-flagcomponent-theendbiomesurface","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<HillsTransformationAttributes>","slug":"biomecomponentloading-componentaccessor-hillstransformationattributes","link":"#biomecomponentloading-componentaccessor-hillstransformationattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<MutateTransformationAttributes>","slug":"biomecomponentloading-componentaccessor-mutatetransformationattributes","link":"#biomecomponentloading-componentaccessor-mutatetransformationattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<PreHillsEdgeAttributes>","slug":"biomecomponentloading-componentaccessor-prehillsedgeattributes","link":"#biomecomponentloading-componentaccessor-prehillsedgeattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<PostShoreEdgeAttributes>","slug":"biomecomponentloading-componentaccessor-postshoreedgeattributes","link":"#biomecomponentloading-componentaccessor-postshoreedgeattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<RiverTransformationAttributes>","slug":"biomecomponentloading-componentaccessor-rivertransformationattributes","link":"#biomecomponentloading-componentaccessor-rivertransformationattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<ShoreAttributes>","slug":"biomecomponentloading-componentaccessor-shoreattributes","link":"#biomecomponentloading-componentaccessor-shoreattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<LegacyPreHillsEdgeAttributes>","slug":"biomecomponentloading-componentaccessor-legacyprehillsedgeattributes","link":"#biomecomponentloading-componentaccessor-legacyprehillsedgeattributes","children":[]},{"level":3,"title":"BiomeFilterGroup","slug":"biomefiltergroup","link":"#biomefiltergroup","children":[]},{"level":3,"title":"BiomeHeight","slug":"biomeheight","link":"#biomeheight","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ListedFeatures>","slug":"biomedecorationattributes-listedfeatures","link":"#biomedecorationattributes-listedfeatures","children":[]},{"level":3,"title":"BiomeComponentLoading::_buildSchema<BiomeDecorationAttributes<ListedFeatures> >::$2658D4B1BE3081384A926FB0E5D18BAF","slug":"biomecomponentloading-buildschema-biomedecorationattributes-listedfeatures-2658d4b1be3081384a926fb0e5d18baf","link":"#biomecomponentloading-buildschema-biomedecorationattributes-listedfeatures-2658d4b1be3081384a926fb0e5d18baf","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<ListedFeaturesDecorationAttributes>","slug":"biomecomponentloading-componentaccessor-listedfeaturesdecorationattributes","link":"#biomecomponentloading-componentaccessor-listedfeaturesdecorationattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<ClimateAttributes>","slug":"biomecomponentloading-componentaccessor-climateattributes","link":"#biomecomponentloading-componentaccessor-climateattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<SurfaceMaterialAdjustmentAttributes>","slug":"biomecomponentloading-componentaccessor-surfacematerialadjustmentattributes","link":"#biomecomponentloading-componentaccessor-surfacematerialadjustmentattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<SurfaceMaterialAttributes>","slug":"biomecomponentloading-componentaccessor-surfacematerialattributes","link":"#biomecomponentloading-componentaccessor-surfacematerialattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<WorldGenClimateMappingAttributes>","slug":"biomecomponentloading-componentaccessor-worldgenclimatemappingattributes","link":"#biomecomponentloading-componentaccessor-worldgenclimatemappingattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<MesaSurfaceAttributes>","slug":"biomecomponentloading-componentaccessor-mesasurfaceattributes","link":"#biomecomponentloading-componentaccessor-mesasurfaceattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::ComponentAccessor<OverworldHeightAttributes>","slug":"biomecomponentloading-componentaccessor-overworldheightattributes","link":"#biomecomponentloading-componentaccessor-overworldheightattributes","children":[]},{"level":3,"title":"BiomeComponentLoading::BiomeParseContext","slug":"biomecomponentloading-biomeparsecontext","link":"#biomecomponentloading-biomeparsecontext","children":[]},{"level":3,"title":"BiomeMetadata","slug":"biomemetadata","link":"#biomemetadata","children":[]},{"level":3,"title":"BiomeRegistryMergeStrategy","slug":"biomeregistrymergestrategy","link":"#biomeregistrymergestrategy","children":[]},{"level":3,"title":"BaseRailBlock::Rail","slug":"baserailblock-rail","link":"#baserailblock-rail","children":[]},{"level":3,"title":"BlockLegacy::createBlockPermutations::$033A5A72970D0569F1B4E5782E3E5F13","slug":"blocklegacy-createblockpermutations-033a5a72970d0569f1b4e5782e3e5f13","link":"#blocklegacy-createblockpermutations-033a5a72970d0569f1b4e5782e3e5f13","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLock<Mutex>","slug":"bedrock-threading-uniquelock-mutex","link":"#bedrock-threading-uniquelock-mutex","children":[]},{"level":3,"title":"Bedrock::Threading::SharedLock<Mutex>","slug":"bedrock-threading-sharedlock-mutex","link":"#bedrock-threading-sharedlock-mutex","children":[]},{"level":3,"title":"buffer_span_mut<long>","slug":"buffer-span-mut-long","link":"#buffer-span-mut-long","children":[]},{"level":3,"title":"buffer_span_mut<const Block *>::iterator","slug":"buffer-span-mut-const-block-iterator","link":"#buffer-span-mut-const-block-iterator","children":[]},{"level":3,"title":"BeaconBeamSection","slug":"beaconbeamsection","link":"#beaconbeamsection","children":[]},{"level":3,"title":"BlockDescriptionFactoryFunction","slug":"blockdescriptionfactoryfunction","link":"#blockdescriptionfactoryfunction","children":[]},{"level":3,"title":"BlockDescription","slug":"blockdescription","link":"#blockdescription","children":[]},{"level":3,"title":"BlockDefinition","slug":"blockdefinition","link":"#blockdefinition","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<SpinLock>","slug":"bedrock-threading-lockguard-spinlock","link":"#bedrock-threading-lockguard-spinlock","children":[]},{"level":3,"title":"buffer_span<Pos>","slug":"buffer-span-pos","link":"#buffer-span-pos","children":[]},{"level":3,"title":"buffer_span<const Block *>","slug":"buffer-span-const-block","link":"#buffer-span-const-block","children":[]},{"level":3,"title":"buffer_span_mut<SubChunk>::iterator","slug":"buffer-span-mut-subchunk-iterator","link":"#buffer-span-mut-subchunk-iterator","children":[]},{"level":3,"title":"BiomeChunkData","slug":"biomechunkdata","link":"#biomechunkdata","children":[]},{"level":3,"title":"buffer_span_mut<SubChunk>","slug":"buffer-span-mut-subchunk","link":"#buffer-span-mut-subchunk","children":[]},{"level":3,"title":"BiomeChunkDataLegacy","slug":"biomechunkdatalegacy","link":"#biomechunkdatalegacy","children":[]},{"level":3,"title":"BlockEventPacket","slug":"blockeventpacket","link":"#blockeventpacket","children":[]},{"level":3,"title":"BuildMatch","slug":"buildmatch","link":"#buildmatch","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ImplicitFeatures>::Element","slug":"biomedecorationattributes-implicitfeatures-element","link":"#biomedecorationattributes-implicitfeatures-element","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ImplicitFeatures>","slug":"biomedecorationattributes-implicitfeatures","link":"#biomedecorationattributes-implicitfeatures","children":[]},{"level":3,"title":"BonusChestFeature::place::$FD274EF55AC88BD6B944C809A18A5641","slug":"bonuschestfeature-place-fd274ef55ac88bd6b944c809a18a5641","link":"#bonuschestfeature-place-fd274ef55ac88bd6b944c809a18a5641","children":[]},{"level":3,"title":"BlockLayer","slug":"blocklayer","link":"#blocklayer","children":[]},{"level":3,"title":"BlockSerializationUtils::NbtToBlockCache","slug":"blockserializationutils-nbttoblockcache","link":"#blockserializationutils-nbttoblockcache","children":[]},{"level":3,"title":"buffer_span<ChunkPos>::iterator","slug":"buffer-span-chunkpos-iterator","link":"#buffer-span-chunkpos-iterator","children":[]},{"level":3,"title":"BigEndianStringByteInput","slug":"bigendianstringbyteinput","link":"#bigendianstringbyteinput","children":[]},{"level":3,"title":"BinaryStream","slug":"binarystream","link":"#binarystream","children":[]},{"level":3,"title":"BlockGraphics::ModelItem","slug":"blockgraphics-modelitem","link":"#blockgraphics-modelitem","children":[]},{"level":3,"title":"BlockGraphics::ConstructorToken","slug":"blockgraphics-constructortoken","link":"#blockgraphics-constructortoken","children":[]},{"level":3,"title":"BlockListEventMap","slug":"blocklisteventmap","link":"#blocklisteventmap","children":[]},{"level":3,"title":"BoostItem","slug":"boostitem","link":"#boostitem","children":[]},{"level":3,"title":"BossEventPacket","slug":"bosseventpacket","link":"#bosseventpacket","children":[]},{"level":3,"title":"BreedableType","slug":"breedabletype","link":"#breedabletype","children":[]},{"level":3,"title":"BatchedNetworkPeer::DataCallback","slug":"batchednetworkpeer-datacallback","link":"#batchednetworkpeer-datacallback","children":[]},{"level":3,"title":"ByteVector","slug":"bytevector","link":"#bytevector","children":[]},{"level":3,"title":"BalloonableComponent","slug":"balloonablecomponent","link":"#balloonablecomponent","children":[]},{"level":3,"title":"BinaryHeap","slug":"binaryheap","link":"#binaryheap","children":[]},{"level":3,"title":"BehaviorFactory::DefinitionCreator","slug":"behaviorfactory-definitioncreator","link":"#behaviorfactory-definitioncreator","children":[]},{"level":3,"title":"BehaviorFactory::NodeCreator","slug":"behaviorfactory-nodecreator","link":"#behaviorfactory-nodecreator","children":[]},{"level":3,"title":"BlockPatternBuilder::BlockEntryTester","slug":"blockpatternbuilder-blockentrytester","link":"#blockpatternbuilder-blockentrytester","children":[]},{"level":3,"title":"Bedrock::Threading::$<268754422,1>","slug":"bedrock-threading-268754422-1","link":"#bedrock-threading-268754422-1","children":[]},{"level":3,"title":"Bedrock::Threading::$<269227119,1>","slug":"bedrock-threading-269227119-1","link":"#bedrock-threading-269227119-1","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<decltype(mIdMutex)>","slug":"bedrock-threading-lockguard-decltype-midmutex","link":"#bedrock-threading-lockguard-decltype-midmutex","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<std::mutex>","slug":"bedrock-threading-lockguard-std-mutex","link":"#bedrock-threading-lockguard-std-mutex","children":[]},{"level":3,"title":"Bedrock::Threading::$<281360972,1>","slug":"bedrock-threading-281360972-1","link":"#bedrock-threading-281360972-1","children":[]},{"level":3,"title":"BedrockLog::LogDetails::_appendLogEntryMetadata::$7EF7C94BEAB75C6CEF4ADFB99B570420","slug":"bedrocklog-logdetails-appendlogentrymetadata-7ef7c94beab75c6cef4adfb99b570420","link":"#bedrocklog-logdetails-appendlogentrymetadata-7ef7c94beab75c6cef4adfb99b570420","children":[]},{"level":3,"title":"BedrockLog::LogAreaFilter","slug":"bedrocklog-logareafilter","link":"#bedrocklog-logareafilter","children":[]},{"level":3,"title":"Bedrock::Threading::$<282285601,1>","slug":"bedrock-threading-282285601-1","link":"#bedrock-threading-282285601-1","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<decltype(sStorageAreaLock)>","slug":"bedrock-threading-lockguard-decltype-sstoragearealock","link":"#bedrock-threading-lockguard-decltype-sstoragearealock","children":[]},{"level":3,"title":"Bedrock::Threading::$<282285612,1>","slug":"bedrock-threading-282285612-1","link":"#bedrock-threading-282285612-1","children":[]},{"level":3,"title":"Bedrock::Threading::LockGuard<decltype(FileImpl::sAllFilesLock)>","slug":"bedrock-threading-lockguard-decltype-fileimpl-sallfileslock","link":"#bedrock-threading-lockguard-decltype-fileimpl-sallfileslock","children":[]},{"level":3,"title":"Bedrock::Threading::$<282952368,1>","slug":"bedrock-threading-282952368-1","link":"#bedrock-threading-282952368-1","children":[]},{"level":3,"title":"Bedrock::Threading::$<283102713,1>","slug":"bedrock-threading-283102713-1","link":"#bedrock-threading-283102713-1","children":[]},{"level":3,"title":"Bedrock::Threading::anonymous namespace\'::AsyncErrorCategory`","slug":"bedrock-threading-anonymous-namespace-asyncerrorcategory","link":"#bedrock-threading-anonymous-namespace-asyncerrorcategory","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<void>::CompletionHandler","slug":"bedrock-threading-iasyncresult-void-completionhandler","link":"#bedrock-threading-iasyncresult-void-completionhandler","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLockReleaseWindow<std::mutex>","slug":"bedrock-threading-uniquelockreleasewindow-std-mutex","link":"#bedrock-threading-uniquelockreleasewindow-std-mutex","children":[]},{"level":3,"title":"BackgroundTask::PendingComparer","slug":"backgroundtask-pendingcomparer","link":"#backgroundtask-pendingcomparer","children":[]},{"level":3,"title":"buffer_span<bool>","slug":"buffer-span-bool","link":"#buffer-span-bool","children":[]},{"level":3,"title":"buffer_span<int>","slug":"buffer-span-int","link":"#buffer-span-int","children":[]},{"level":3,"title":"buffer_span<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"buffer-span-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","link":"#buffer-span-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"BackgroundTask::PriorityComparer","slug":"backgroundtask-prioritycomparer","link":"#backgroundtask-prioritycomparer","children":[]},{"level":3,"title":"Bedrock::Threading::SharedMutex","slug":"bedrock-threading-sharedmutex","link":"#bedrock-threading-sharedmutex","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,ActorDamageCause>","slug":"bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-actordamagecause","link":"#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-actordamagecause","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ItemUseMethod,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"bidirectionalunorderedmap-itemusemethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","link":"#bidirectionalunorderedmap-itemusemethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ItemAcquisitionMethod,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"bidirectionalunorderedmap-itemacquisitionmethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","link":"#bidirectionalunorderedmap-itemacquisitionmethod-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,LevelSoundEvent>","slug":"bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-levelsoundevent","link":"#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-levelsoundevent","children":[]},{"level":3,"title":"BlockActor::MapIdType","slug":"blockactor-mapidtype","link":"#blockactor-mapidtype","children":[]},{"level":3,"title":"BlockActor::MapTypeId","slug":"blockactor-maptypeid","link":"#blockactor-maptypeid","children":[]},{"level":3,"title":"BlockTypeRegistry::BlockLookupMap","slug":"blocktyperegistry-blocklookupmap","link":"#blocktyperegistry-blocklookupmap","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,AutomaticID<Dimension,int> >","slug":"bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-automaticid-dimension-int","link":"#bidirectionalunorderedmap-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char-automaticid-dimension-int","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ContainerType,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"bidirectionalunorderedmap-containertype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","link":"#bidirectionalunorderedmap-containertype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ParticleType,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"bidirectionalunorderedmap-particletype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","link":"#bidirectionalunorderedmap-particletype-std-cxx11-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"BedrockLog::CategoryLogs","slug":"bedrocklog-categorylogs","link":"#bedrocklog-categorylogs","children":[]},{"level":3,"title":"BackwardsCompatTextureGroup","slug":"backwardscompattexturegroup","link":"#backwardscompattexturegroup","children":[]},{"level":3,"title":"BlockSelector","slug":"blockselector","link":"#blockselector","children":[]},{"level":3,"title":"BlockSourceListener","slug":"blocksourcelistener","link":"#blocksourcelistener","children":[]},{"level":3,"title":"Biome","slug":"biome","link":"#biome","children":[]},{"level":3,"title":"BlockMap","slug":"blockmap","link":"#blockmap","children":[]},{"level":3,"title":"BackgroundWorkerPerfInfo","slug":"backgroundworkerperfinfo","link":"#backgroundworkerperfinfo","children":[]},{"level":3,"title":"BackgroundTaskQueue","slug":"backgroundtaskqueue","link":"#backgroundtaskqueue","children":[]},{"level":3,"title":"BackgroundTaskQueue::TaskPipe","slug":"backgroundtaskqueue-taskpipe","link":"#backgroundtaskqueue-taskpipe","children":[]},{"level":3,"title":"BackgroundTaskQueue::SortingJobQueue","slug":"backgroundtaskqueue-sortingjobqueue","link":"#backgroundtaskqueue-sortingjobqueue","children":[]},{"level":3,"title":"BlockLegacy","slug":"blocklegacy","link":"#blocklegacy","children":[]},{"level":3,"title":"BaseAttributeMap","slug":"baseattributemap","link":"#baseattributemap","children":[]},{"level":3,"title":"BaseMoveToGoal","slug":"basemovetogoal","link":"#basemovetogoal","children":[]},{"level":3,"title":"Boat::onAboveBubbleColumn::$7EF7C94BEAB75C6CEF4ADFB99B570420","slug":"boat-onabovebubblecolumn-7ef7c94beab75c6cef4adfb99b570420","link":"#boat-onabovebubblecolumn-7ef7c94beab75c6cef4adfb99b570420","children":[]},{"level":3,"title":"BlockSource::fetchBlocksInCylinder::$BFF6684F24A24DAB087E11B4105C16CA","slug":"blocksource-fetchblocksincylinder-bff6684f24a24dab087e11b4105c16ca","link":"#blocksource-fetchblocksincylinder-bff6684f24a24dab087e11b4105c16ca","children":[]},{"level":3,"title":"BlockSource::fetchBlocksInBox::$74F335EC098D670C69AD7D2E598E74BF","slug":"blocksource-fetchblocksinbox-74f335ec098d670c69ad7d2e598e74bf","link":"#blocksource-fetchblocksinbox-74f335ec098d670c69ad7d2e598e74bf","children":[]},{"level":3,"title":"BiomeRegistry::BiomeParent","slug":"biomeregistry-biomeparent","link":"#biomeregistry-biomeparent","children":[]},{"level":3,"title":"BiomeDecorationSystem::decorate::$7EF7C94BEAB75C6CEF4ADFB99B570420","slug":"biomedecorationsystem-decorate-7ef7c94beab75c6cef4adfb99b570420","link":"#biomedecorationsystem-decorate-7ef7c94beab75c6cef4adfb99b570420","children":[]},{"level":3,"title":"BlockLegacy::initFromDefinition::$033A5A72970D0569F1B4E5782E3E5F13","slug":"blocklegacy-initfromdefinition-033a5a72970d0569f1b4e5782e3e5f13","link":"#blocklegacy-initfromdefinition-033a5a72970d0569f1b4e5782e3e5f13","children":[]},{"level":3,"title":"BlockActor","slug":"blockactor","link":"#blockactor","children":[]},{"level":3,"title":"BurstReactionComponent::_onEnd::$7EF7C94BEAB75C6CEF4ADFB99B570420","slug":"burstreactioncomponent-onend-7ef7c94beab75c6cef4adfb99b570420","link":"#burstreactioncomponent-onend-7ef7c94beab75c6cef4adfb99b570420","children":[]},{"level":3,"title":"BiomeChunkState","slug":"biomechunkstate","link":"#biomechunkstate","children":[]},{"level":3,"title":"BlockActor:1632","slug":"blockactor-1632","link":"#blockactor-1632","children":[]},{"level":3,"title":"BehaviorTreeGroup","slug":"behaviortreegroup","link":"#behaviortreegroup","children":[]},{"level":3,"title":"BehaviorTreeGroup::BehaviorDefinitionMap","slug":"behaviortreegroup-behaviordefinitionmap","link":"#behaviortreegroup-behaviordefinitionmap","children":[]},{"level":3,"title":"BlockEventDispatcher","slug":"blockeventdispatcher","link":"#blockeventdispatcher","children":[]},{"level":3,"title":"BlockChange","slug":"blockchange","link":"#blockchange","children":[]},{"level":3,"title":"BehaviorDefinition","slug":"behaviordefinition","link":"#behaviordefinition","children":[]},{"level":3,"title":"BehaviorFactory","slug":"behaviorfactory","link":"#behaviorfactory","children":[]},{"level":3,"title":"BubbleColumnBlock::entityInside::$7EF7C94BEAB75C6CEF4ADFB99B570420","slug":"bubblecolumnblock-entityinside-7ef7c94beab75c6cef4adfb99b570420","link":"#bubblecolumnblock-entityinside-7ef7c94beab75c6cef4adfb99b570420","children":[]},{"level":3,"title":"Bedrock::Threading::ConditionVariableAny","slug":"bedrock-threading-conditionvariableany","link":"#bedrock-threading-conditionvariableany","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncBase","slug":"bedrock-threading-asyncbase","link":"#bedrock-threading-asyncbase","children":[]},{"level":3,"title":"BackgroundTask","slug":"backgroundtask","link":"#backgroundtask","children":[]},{"level":3,"title":"Bedrock::Threading::IAsyncResult<void>","slug":"bedrock-threading-iasyncresult-void","link":"#bedrock-threading-iasyncresult-void","children":[]},{"level":3,"title":"buffer_span<WorkerPool *>","slug":"buffer-span-workerpool","link":"#buffer-span-workerpool","children":[]},{"level":3,"title":"BackgroundWorker","slug":"backgroundworker","link":"#backgroundworker","children":[]},{"level":3,"title":"BedrockEngine::PlatformRuntimeInfo","slug":"bedrockengine-platformruntimeinfo","link":"#bedrockengine-platformruntimeinfo","children":[]},{"level":3,"title":"BedrockEngine::PlatformBuildInfo","slug":"bedrockengine-platformbuildinfo","link":"#bedrockengine-platformbuildinfo","children":[]},{"level":3,"title":"BatchedNetworkPeer","slug":"batchednetworkpeer","link":"#batchednetworkpeer","children":[]},{"level":3,"title":"BaseGamePackSlices::BaseGameVersionPack","slug":"basegamepackslices-basegameversionpack","link":"#basegamepackslices-basegameversionpack","children":[]},{"level":3,"title":"BlockEventListener","slug":"blockeventlistener","link":"#blockeventlistener","children":[]},{"level":3,"title":"BurnsInDaylightSystem","slug":"burnsindaylightsystem","link":"#burnsindaylightsystem","children":[]},{"level":3,"title":"BodyControlSystem","slug":"bodycontrolsystem","link":"#bodycontrolsystem","children":[]},{"level":3,"title":"BossSystem","slug":"bosssystem","link":"#bosssystem","children":[]},{"level":3,"title":"BreedableSystem","slug":"breedablesystem","link":"#breedablesystem","children":[]},{"level":3,"title":"BribeableSystem","slug":"bribeablesystem","link":"#bribeablesystem","children":[]},{"level":3,"title":"BreathableSystem","slug":"breathablesystem","link":"#breathablesystem","children":[]},{"level":3,"title":"BoostableSystem","slug":"boostablesystem","link":"#boostablesystem","children":[]},{"level":3,"title":"BalloonSystem","slug":"balloonsystem","link":"#balloonsystem","children":[]},{"level":3,"title":"BehaviorSystem","slug":"behaviorsystem","link":"#behaviorsystem","children":[]},{"level":3,"title":"BreakBlocksSystem","slug":"breakblockssystem","link":"#breakblockssystem","children":[]},{"level":3,"title":"BreakDoorAnnotationSystem","slug":"breakdoorannotationsystem","link":"#breakdoorannotationsystem","children":[]},{"level":3,"title":"BlockBreakSensorSystem","slug":"blockbreaksensorsystem","link":"#blockbreaksensorsystem","children":[]},{"level":3,"title":"Block","slug":"block","link":"#block","children":[]},{"level":3,"title":"BlockDefinitionGroup","slug":"blockdefinitiongroup","link":"#blockdefinitiongroup","children":[]},{"level":3,"title":"BlockComponentFactory","slug":"blockcomponentfactory","link":"#blockcomponentfactory","children":[]},{"level":3,"title":"BirchFeature","slug":"birchfeature","link":"#birchfeature","children":[]},{"level":3,"title":"BlueIceFeature","slug":"blueicefeature","link":"#blueicefeature","children":[]},{"level":3,"title":"BlockBlobFeature","slug":"blockblobfeature","link":"#blockblobfeature","children":[]},{"level":3,"title":"BambooFeature","slug":"bamboofeature","link":"#bamboofeature","children":[]},{"level":3,"title":"BlockPileFeature","slug":"blockpilefeature","link":"#blockpilefeature","children":[]},{"level":3,"title":"BaseCircuitComponent","slug":"basecircuitcomponent","link":"#basecircuitcomponent","children":[]},{"level":3,"title":"BlockPalette","slug":"blockpalette","link":"#blockpalette","children":[]},{"level":3,"title":"BlockVolume::BlockVolumeIter","slug":"blockvolume-blockvolumeiter","link":"#blockvolume-blockvolumeiter","children":[]},{"level":3,"title":"BushBlock","slug":"bushblock","link":"#bushblock","children":[]},{"level":3,"title":"Bounds","slug":"bounds","link":"#bounds","children":[]},{"level":3,"title":"Bounds::Iterator","slug":"bounds-iterator","link":"#bounds-iterator","children":[]},{"level":3,"title":"BiomeSourceGetBiomeCache","slug":"biomesourcegetbiomecache","link":"#biomesourcegetbiomecache","children":[]},{"level":3,"title":"BiomeRegistry","slug":"biomeregistry","link":"#biomeregistry","children":[]},{"level":3,"title":"BeardKernel","slug":"beardkernel","link":"#beardkernel","children":[]},{"level":3,"title":"BuriedTreasureFeature","slug":"buriedtreasurefeature","link":"#buriedtreasurefeature","children":[]},{"level":3,"title":"BuriedTreasureStart","slug":"buriedtreasurestart","link":"#buriedtreasurestart","children":[]},{"level":3,"title":"BuriedTreasurePiece","slug":"buriedtreasurepiece","link":"#buriedtreasurepiece","children":[]},{"level":3,"title":"buffer_span<std::string >","slug":"buffer-span-std-string","link":"#buffer-span-std-string","children":[]},{"level":3,"title":"BehaviorNode","slug":"behaviornode","link":"#behaviornode","children":[]},{"level":3,"title":"BehaviorData::DataProxy","slug":"behaviordata-dataproxy","link":"#behaviordata-dataproxy","children":[]},{"level":3,"title":"BehaviorTreeDefinition","slug":"behaviortreedefinition","link":"#behaviortreedefinition","children":[]},{"level":3,"title":"BodyControl","slug":"bodycontrol","link":"#bodycontrol","children":[]},{"level":3,"title":"BreedableDefinition","slug":"breedabledefinition","link":"#breedabledefinition","children":[]},{"level":3,"title":"BribeableDefinition","slug":"bribeabledefinition","link":"#bribeabledefinition","children":[]},{"level":3,"title":"BurnsInDaylightComponent","slug":"burnsindaylightcomponent","link":"#burnsindaylightcomponent","children":[]},{"level":3,"title":"ByteTag","slug":"bytetag","link":"#bytetag","children":[]},{"level":3,"title":"ByteArrayTag","slug":"bytearraytag","link":"#bytearraytag","children":[]},{"level":3,"title":"BlockPickRequestPacket","slug":"blockpickrequestpacket","link":"#blockpickrequestpacket","children":[]},{"level":3,"title":"Blacklist","slug":"blacklist","link":"#blacklist","children":[]},{"level":3,"title":"Boat","slug":"boat","link":"#boat","children":[]},{"level":3,"title":"BlockSerializationId","slug":"blockserializationid","link":"#blockserializationid","children":[]},{"level":3,"title":"BookCloningRecipe","slug":"bookcloningrecipe","link":"#bookcloningrecipe","children":[]},{"level":3,"title":"BannerDuplicateRecipe","slug":"bannerduplicaterecipe","link":"#bannerduplicaterecipe","children":[]},{"level":3,"title":"BannerAddPatternRecipe","slug":"banneraddpatternrecipe","link":"#banneraddpatternrecipe","children":[]},{"level":3,"title":"BlockComponentDescription","slug":"blockcomponentdescription","link":"#blockcomponentdescription","children":[]},{"level":3,"title":"BoolOption","slug":"booloption","link":"#booloption","children":[]},{"level":3,"title":"BlockFactoryMap","slug":"blockfactorymap","link":"#blockfactorymap","children":[]},{"level":3,"title":"BlockEventCoordinator","slug":"blockeventcoordinator","link":"#blockeventcoordinator","children":[]},{"level":3,"title":"BiomeComponentFactory","slug":"biomecomponentfactory","link":"#biomecomponentfactory","children":[]},{"level":3,"title":"BlockActorLevelListener","slug":"blockactorlevellistener","link":"#blockactorlevellistener","children":[]},{"level":3,"title":"BedHelper","slug":"bedhelper","link":"#bedhelper","children":[]},{"level":3,"title":"BehaviorTreeDescription","slug":"behaviortreedescription","link":"#behaviortreedescription","children":[]},{"level":3,"title":"BreakBlocksDescription","slug":"breakblocksdescription","link":"#breakblocksdescription","children":[]},{"level":3,"title":"BreakDoorAnnotationDescription","slug":"breakdoorannotationdescription","link":"#breakdoorannotationdescription","children":[]},{"level":3,"title":"BlockSet","slug":"blockset","link":"#blockset","children":[]},{"level":3,"title":"BaseContainerMenu","slug":"basecontainermenu","link":"#basecontainermenu","children":[]},{"level":3,"title":"BlastFurnaceContainerManagerModel","slug":"blastfurnacecontainermanagermodel","link":"#blastfurnacecontainermanagermodel","children":[]},{"level":3,"title":"BrewingStandContainerManagerModel","slug":"brewingstandcontainermanagermodel","link":"#brewingstandcontainermanagermodel","children":[]},{"level":3,"title":"BeaconContainerManagerModel","slug":"beaconcontainermanagermodel","link":"#beaconcontainermanagermodel","children":[]},{"level":3,"title":"BlockCommandOrigin","slug":"blockcommandorigin","link":"#blockcommandorigin","children":[]},{"level":3,"title":"Bedrock::LogEndPoint","slug":"bedrock-logendpoint","link":"#bedrock-logendpoint","children":[]},{"level":3,"title":"BalloonDefinition","slug":"balloondefinition","link":"#balloondefinition","children":[]},{"level":3,"title":"BreathableDefinition","slug":"breathabledefinition","link":"#breathabledefinition","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::string,ActorDamageCause>","slug":"bidirectionalunorderedmap-std-string-actordamagecause","link":"#bidirectionalunorderedmap-std-string-actordamagecause","children":[]},{"level":3,"title":"Bat","slug":"bat","link":"#bat","children":[]},{"level":3,"title":"Blaze","slug":"blaze","link":"#blaze","children":[]},{"level":3,"title":"Balloon","slug":"balloon","link":"#balloon","children":[]},{"level":3,"title":"BrewingStandBlockActor","slug":"brewingstandblockactor","link":"#brewingstandblockactor","children":[]},{"level":3,"title":"BarrelBlockActor","slug":"barrelblockactor","link":"#barrelblockactor","children":[]},{"level":3,"title":"BlockGraphics","slug":"blockgraphics","link":"#blockgraphics","children":[]},{"level":3,"title":"BegGoal","slug":"beggoal","link":"#beggoal","children":[]},{"level":3,"title":"BreakDoorGoal","slug":"breakdoorgoal","link":"#breakdoorgoal","children":[]},{"level":3,"title":"BreedGoal","slug":"breedgoal","link":"#breedgoal","children":[]},{"level":3,"title":"BaseMoveToBlockGoal","slug":"basemovetoblockgoal","link":"#basemovetoblockgoal","children":[]},{"level":3,"title":"BedBlockActor","slug":"bedblockactor","link":"#bedblockactor","children":[]},{"level":3,"title":"BellBlockActor","slug":"bellblockactor","link":"#bellblockactor","children":[]},{"level":3,"title":"BreatheAirGoal","slug":"breatheairgoal","link":"#breatheairgoal","children":[]},{"level":3,"title":"BoneAnimation","slug":"boneanimation","link":"#boneanimation","children":[]},{"level":3,"title":"BoneAnimationChannel","slug":"boneanimationchannel","link":"#boneanimationchannel","children":[]},{"level":3,"title":"BlockPatternBuilder","slug":"blockpatternbuilder","link":"#blockpatternbuilder","children":[]},{"level":3,"title":"Boat::Paddle","slug":"boat-paddle","link":"#boat-paddle","children":[]},{"level":3,"title":"Bee","slug":"bee","link":"#bee","children":[]},{"level":3,"title":"BeaconBlockActor","slug":"beaconblockactor","link":"#beaconblockactor","children":[]},{"level":3,"title":"BlockIsNameTest","slug":"blockisnametest","link":"#blockisnametest","children":[]},{"level":3,"title":"BedrockItems","slug":"bedrockitems","link":"#bedrockitems","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ItemUseMethod,std::string >","slug":"bidirectionalunorderedmap-itemusemethod-std-string","link":"#bidirectionalunorderedmap-itemusemethod-std-string","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ItemAcquisitionMethod,std::string >","slug":"bidirectionalunorderedmap-itemacquisitionmethod-std-string","link":"#bidirectionalunorderedmap-itemacquisitionmethod-std-string","children":[]},{"level":3,"title":"BlockItem","slug":"blockitem","link":"#blockitem","children":[]},{"level":3,"title":"BannerPatternItem","slug":"bannerpatternitem","link":"#bannerpatternitem","children":[]},{"level":3,"title":"BowItem","slug":"bowitem","link":"#bowitem","children":[]},{"level":3,"title":"BlockPlanterItem","slug":"blockplanteritem","link":"#blockplanteritem","children":[]},{"level":3,"title":"BucketItem","slug":"bucketitem","link":"#bucketitem","children":[]},{"level":3,"title":"BoatItem","slug":"boatitem","link":"#boatitem","children":[]},{"level":3,"title":"BedItem","slug":"beditem","link":"#beditem","children":[]},{"level":3,"title":"BottleItem","slug":"bottleitem","link":"#bottleitem","children":[]},{"level":3,"title":"BannerItem","slug":"banneritem","link":"#banneritem","children":[]},{"level":3,"title":"BalloonItem","slug":"balloonitem","link":"#balloonitem","children":[]},{"level":3,"title":"BambooBlockItem","slug":"bambooblockitem","link":"#bambooblockitem","children":[]},{"level":3,"title":"BellBlockItem","slug":"bellblockitem","link":"#bellblockitem","children":[]},{"level":3,"title":"BannerPattern","slug":"bannerpattern","link":"#bannerpattern","children":[]},{"level":3,"title":"BannerRecipes","slug":"bannerrecipes","link":"#bannerrecipes","children":[]},{"level":3,"title":"BowEnchant","slug":"bowenchant","link":"#bowenchant","children":[]},{"level":3,"title":"BaseMobSpawner","slug":"basemobspawner","link":"#basemobspawner","children":[]},{"level":3,"title":"BlockSource::Listener","slug":"blocksource-listener","link":"#blocksource-listener","children":[]},{"level":3,"title":"BlockTickingQueue::HashBlockTick","slug":"blocktickingqueue-hashblocktick","link":"#blocktickingqueue-hashblocktick","children":[]},{"level":3,"title":"BasicTimer","slug":"basictimer","link":"#basictimer","children":[]},{"level":3,"title":"BiomeDecorationAttributes<ListedFeatures>::Element","slug":"biomedecorationattributes-listedfeatures-element","link":"#biomedecorationattributes-listedfeatures-element","children":[]},{"level":3,"title":"BiomeComponentLoading::BiomeSchemaNode","slug":"biomecomponentloading-biomeschemanode","link":"#biomecomponentloading-biomeschemanode","children":[]},{"level":3,"title":"BiomeRegistry::BiomeLookupVector","slug":"biomeregistry-biomelookupvector","link":"#biomeregistry-biomelookupvector","children":[]},{"level":3,"title":"BaseRailTransporter","slug":"baserailtransporter","link":"#baserailtransporter","children":[]},{"level":3,"title":"BaseRailBlock","slug":"baserailblock","link":"#baserailblock","children":[]},{"level":3,"title":"BedBlock","slug":"bedblock","link":"#bedblock","children":[]},{"level":3,"title":"buffer_span<std::unique_ptr<Block> >","slug":"buffer-span-std-unique-ptr-block","link":"#buffer-span-std-unique-ptr-block","children":[]},{"level":3,"title":"BeehiveBlock","slug":"beehiveblock","link":"#beehiveblock","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::string,LevelSoundEvent>","slug":"bidirectionalunorderedmap-std-string-levelsoundevent","link":"#bidirectionalunorderedmap-std-string-levelsoundevent","children":[]},{"level":3,"title":"BannerBlockActor","slug":"bannerblockactor","link":"#bannerblockactor","children":[]},{"level":3,"title":"BeaconBlockActor::BeaconBeamSections","slug":"beaconblockactor-beaconbeamsections","link":"#beaconblockactor-beaconbeamsections","children":[]},{"level":3,"title":"BlockActor:1608","slug":"blockactor-1608","link":"#blockactor-1608","children":[]},{"level":3,"title":"BlastFurnaceBlockActor","slug":"blastfurnaceblockactor","link":"#blastfurnaceblockactor","children":[]},{"level":3,"title":"BeehiveBlockActor","slug":"beehiveblockactor","link":"#beehiveblockactor","children":[]},{"level":3,"title":"BlockActorFactory","slug":"blockactorfactory","link":"#blockactorfactory","children":[]},{"level":3,"title":"BurstReactionComponent","slug":"burstreactioncomponent","link":"#burstreactioncomponent","children":[]},{"level":3,"title":"BlockDestroyTimeDescription","slug":"blockdestroytimedescription","link":"#blockdestroytimedescription","children":[]},{"level":3,"title":"BlockExplodeableDescription","slug":"blockexplodeabledescription","link":"#blockexplodeabledescription","children":[]},{"level":3,"title":"BlockFrictionDescription","slug":"blockfrictiondescription","link":"#blockfrictiondescription","children":[]},{"level":3,"title":"BlockFlammableDescription","slug":"blockflammabledescription","link":"#blockflammabledescription","children":[]},{"level":3,"title":"BlockMapColorDescription","slug":"blockmapcolordescription","link":"#blockmapcolordescription","children":[]},{"level":3,"title":"BlockLightDescription","slug":"blocklightdescription","link":"#blocklightdescription","children":[]},{"level":3,"title":"BlockLightEmissionDescription","slug":"blocklightemissiondescription","link":"#blocklightemissiondescription","children":[]},{"level":3,"title":"BlockDefinitionGroup::loadResources::BlockResource","slug":"blockdefinitiongroup-loadresources-blockresource","link":"#blockdefinitiongroup-loadresources-blockresource","children":[]},{"level":3,"title":"BlockTypeRegistry","slug":"blocktyperegistry","link":"#blocktyperegistry","children":[]},{"level":3,"title":"BedrockBlock","slug":"bedrockblock","link":"#bedrockblock","children":[]},{"level":3,"title":"BookshelfBlock","slug":"bookshelfblock","link":"#bookshelfblock","children":[]},{"level":3,"title":"BrewingStandBlock","slug":"brewingstandblock","link":"#brewingstandblock","children":[]},{"level":3,"title":"BeaconBlock","slug":"beaconblock","link":"#beaconblock","children":[]},{"level":3,"title":"BannerBlock","slug":"bannerblock","link":"#bannerblock","children":[]},{"level":3,"title":"BeetrootBlock","slug":"beetrootblock","link":"#beetrootblock","children":[]},{"level":3,"title":"BlueIceBlock","slug":"blueiceblock","link":"#blueiceblock","children":[]},{"level":3,"title":"BubbleColumnBlock","slug":"bubblecolumnblock","link":"#bubblecolumnblock","children":[]},{"level":3,"title":"BarrierBlock","slug":"barrierblock","link":"#barrierblock","children":[]},{"level":3,"title":"BambooBlock","slug":"bambooblock","link":"#bambooblock","children":[]},{"level":3,"title":"BambooSapling","slug":"bamboosapling","link":"#bamboosapling","children":[]},{"level":3,"title":"BlastFurnaceBlock","slug":"blastfurnaceblock","link":"#blastfurnaceblock","children":[]},{"level":3,"title":"BarrelBlock","slug":"barrelblock","link":"#barrelblock","children":[]},{"level":3,"title":"BellBlock","slug":"bellblock","link":"#bellblock","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<std::string,AutomaticID<Dimension,int> >","slug":"bidirectionalunorderedmap-std-string-automaticid-dimension-int","link":"#bidirectionalunorderedmap-std-string-automaticid-dimension-int","children":[]},{"level":3,"title":"BlockIntersectionConstraint","slug":"blockintersectionconstraint","link":"#blockintersectionconstraint","children":[]},{"level":3,"title":"BaseCircuitComponent:480","slug":"basecircuitcomponent-480","link":"#basecircuitcomponent-480","children":[]},{"level":3,"title":"BlockGeometry::Model","slug":"blockgeometry-model","link":"#blockgeometry-model","children":[]},{"level":3,"title":"BlockGeometry::Element","slug":"blockgeometry-element","link":"#blockgeometry-element","children":[]},{"level":3,"title":"BlockGeometry::ElementBox","slug":"blockgeometry-elementbox","link":"#blockgeometry-elementbox","children":[]},{"level":3,"title":"BlockGeometry::Face","slug":"blockgeometry-face","link":"#blockgeometry-face","children":[]},{"level":3,"title":"BlockGeometry::TessellatedModel","slug":"blockgeometry-tessellatedmodel","link":"#blockgeometry-tessellatedmodel","children":[]},{"level":3,"title":"BlockGeometry::AlignedFace","slug":"blockgeometry-alignedface","link":"#blockgeometry-alignedface","children":[]},{"level":3,"title":"BlockGeometry::OrientedFaceVector","slug":"blockgeometry-orientedfacevector","link":"#blockgeometry-orientedfacevector","children":[]},{"level":3,"title":"BlockGeometry::OrientedFace","slug":"blockgeometry-orientedface","link":"#blockgeometry-orientedface","children":[]},{"level":3,"title":"BlockGeometry::TessellatedModel::Occlusion","slug":"blockgeometry-tessellatedmodel-occlusion","link":"#blockgeometry-tessellatedmodel-occlusion","children":[]},{"level":3,"title":"BalloonableDefinition","slug":"balloonabledefinition","link":"#balloonabledefinition","children":[]},{"level":3,"title":"BlockBreakSensorDefinition","slug":"blockbreaksensordefinition","link":"#blockbreaksensordefinition","children":[]},{"level":3,"title":"BoostableDefinition","slug":"boostabledefinition","link":"#boostabledefinition","children":[]},{"level":3,"title":"BossDefinition","slug":"bossdefinition","link":"#bossdefinition","children":[]},{"level":3,"title":"BlockListSerializer","slug":"blocklistserializer","link":"#blocklistserializer","children":[]},{"level":3,"title":"BlockUtils","slug":"blockutils","link":"#blockutils","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ContainerType,std::string >","slug":"bidirectionalunorderedmap-containertype-std-string","link":"#bidirectionalunorderedmap-containertype-std-string","children":[]},{"level":3,"title":"BurnsInDaylightDefinition","slug":"burnsindaylightdefinition","link":"#burnsindaylightdefinition","children":[]},{"level":3,"title":"BidirectionalUnorderedMap<ParticleType,std::string >","slug":"bidirectionalunorderedmap-particletype-std-string","link":"#bidirectionalunorderedmap-particletype-std-string","children":[]},{"level":3,"title":"BreakBlockDefinition","slug":"breakblockdefinition","link":"#breakblockdefinition","children":[]},{"level":3,"title":"BreakBlockNode","slug":"breakblocknode","link":"#breakblocknode","children":[]},{"level":3,"title":"BehaviorData::Data<BlockPos>","slug":"behaviordata-data-blockpos","link":"#behaviordata-data-blockpos","children":[]},{"level":3,"title":"BehaviorNode:480","slug":"behaviornode-480","link":"#behaviornode-480","children":[]},{"level":3,"title":"BehaviorData::Data<int>","slug":"behaviordata-data-int","link":"#behaviordata-data-int","children":[]},{"level":3,"title":"BehaviorData::Data<std::string >","slug":"behaviordata-data-std-string","link":"#behaviordata-data-std-string","children":[]},{"level":3,"title":"BehaviorData::Data<bool>","slug":"behaviordata-data-bool","link":"#behaviordata-data-bool","children":[]},{"level":3,"title":"BehaviorData::Data<Vec3>","slug":"behaviordata-data-vec3","link":"#behaviordata-data-vec3","children":[]},{"level":3,"title":"BeaconPaymentContainerController","slug":"beaconpaymentcontainercontroller","link":"#beaconpaymentcontainercontroller","children":[]},{"level":3,"title":"BrewingStandInputContainerController","slug":"brewingstandinputcontainercontroller","link":"#brewingstandinputcontainercontroller","children":[]},{"level":3,"title":"BrewingStandResultContainerController","slug":"brewingstandresultcontainercontroller","link":"#brewingstandresultcontainercontroller","children":[]},{"level":3,"title":"BrewingStandFuelContainerController","slug":"brewingstandfuelcontainercontroller","link":"#brewingstandfuelcontainercontroller","children":[]},{"level":3,"title":"BlockReducer","slug":"blockreducer","link":"#blockreducer","children":[]},{"level":3,"title":"BasePressurePlateBlock","slug":"basepressureplateblock","link":"#basepressureplateblock","children":[]},{"level":3,"title":"ButtonBlock","slug":"buttonblock","link":"#buttonblock","children":[]},{"level":3,"title":"BeehiveBlockActor::Occupant","slug":"beehiveblockactor-occupant","link":"#beehiveblockactor-occupant","children":[]},{"level":3,"title":"BehaviorData::DataProxy:352","slug":"behaviordata-dataproxy-352","link":"#behaviordata-dataproxy-352","children":[]},{"level":3,"title":"BehaviorData::Data<float>","slug":"behaviordata-data-float","link":"#behaviordata-data-float","children":[]},{"level":3,"title":"BehaviorData::DataProxy:328","slug":"behaviordata-dataproxy-328","link":"#behaviordata-dataproxy-328","children":[]},{"level":3,"title":"BedrockLog::CategoryLogFile","slug":"bedrocklog-categorylogfile","link":"#bedrocklog-categorylogfile","children":[]},{"level":3,"title":"BedrockLog::LogDetails","slug":"bedrocklog-logdetails","link":"#bedrocklog-logdetails","children":[]},{"level":3,"title":"BackwardsCompatTextureInfo","slug":"backwardscompattextureinfo","link":"#backwardscompattextureinfo","children":[]},{"level":3,"title":"Bedrock::Threading::AsyncResult::CompleteResult<void>","slug":"bedrock-threading-asyncresult-completeresult-void","link":"#bedrock-threading-asyncresult-completeresult-void","children":[]},{"level":3,"title":"Bedrock::Threading::UniqueLock<std::mutex>","slug":"bedrock-threading-uniquelock-std-mutex","link":"#bedrock-threading-uniquelock-std-mutex","children":[]},{"level":3,"title":"Bedrock::Threading::ThreadUtil","slug":"bedrock-threading-threadutil","link":"#bedrock-threading-threadutil","children":[]}],"git":{"updatedTime":1722099801000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1},{"name":"VinkyV","email":"75137786+VinkyV@users.noreply.github.com","commits":1}]},"filePathRelative":"1.14.60.5/structure/B.md"}');export{p as comp,b as data};
