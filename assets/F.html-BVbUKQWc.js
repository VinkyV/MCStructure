import{_ as e,c as s,o as a,d as n}from"./app-CsZ-F4rT.js";const l={},i=n(`<h1 id="f" tabindex="-1"><a class="header-anchor" href="#f"><span>F</span></a></h1><h3 id="featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288" tabindex="-1"><a class="header-anchor" href="#featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288"><span><code>FeatureToggles::_setupDependencies::__l2::&lt;lambda_1633bc3e3e0c6c838cb408cbbb547288&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18" tabindex="-1"><a class="header-anchor" href="#findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18"><span><code>FindTargetNode::_findTarget::__l2::&lt;lambda_97f0b4bbc84cd3d862b3eb5dbefdcf18&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="frame-t" tabindex="-1"><a class="header-anchor" href="#frame-t"><span><code>frame_t</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>_object *</code></td><td>filename</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>lineno</td></tr></tbody></table><h3 id="floatrange" tabindex="-1"><a class="header-anchor" href="#floatrange"><span><code>FloatRange</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>rangeMin</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>rangeMax</td></tr></tbody></table><h3 id="fsm-struct" tabindex="-1"><a class="header-anchor" href="#fsm-struct"><span><code>fsm_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>__int16</code></td><td>vocab_size</td></tr><tr><td>2</td><td>(2) <code>__int16</code></td><td>num_transitions</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int16 *</code></td><td>transitions</td></tr></tbody></table><h3 id="ft-service-propertiesrec" tabindex="-1"><a class="header-anchor" href="#ft-service-propertiesrec"><span><code>FT_Service_PropertiesRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_ModuleRec_ *, const char *, const void *, unsigned __int8)</code></td><td>set_property</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_ModuleRec_ *, const char *, void *)</code></td><td>get_property</td></tr></tbody></table><h3 id="ft-servicedescrec" tabindex="-1"><a class="header-anchor" href="#ft-servicedescrec"><span><code>FT_ServiceDescRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>serv_id</td></tr><tr><td>8</td><td>(8) <code>const void *</code></td><td>serv_data</td></tr></tbody></table><h3 id="ft-raccess-guess-rec" tabindex="-1"><a class="header-anchor" href="#ft-raccess-guess-rec"><span><code>ft_raccess_guess_rec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_LibraryRec_ *, FT_StreamRec_ *, char *, char **, int *)</code></td><td>func</td></tr><tr><td>8</td><td>(4) <code>FT_RFork_Rule_</code></td><td>type</td></tr></tbody></table><h3 id="ft-palette-data" tabindex="-1"><a class="header-anchor" href="#ft-palette-data"><span><code>FT_Palette_Data_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>unsigned __int16</code></td><td>num_palettes</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int16 *</code></td><td>palette_name_ids</td></tr><tr><td>16</td><td>(8) <code>const unsigned __int16 *</code></td><td>palette_flags</td></tr><tr><td>24</td><td>(2) <code>unsigned __int16</code></td><td>num_palette_entries</td></tr><tr><td>32</td><td>(8) <code>const unsigned __int16 *</code></td><td>palette_entry_name_ids</td></tr></tbody></table><h3 id="ft-outline" tabindex="-1"><a class="header-anchor" href="#ft-outline"><span><code>FT_Outline_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>__int16</code></td><td>n_contours</td></tr><tr><td>2</td><td>(2) <code>__int16</code></td><td>n_points</td></tr><tr><td>8</td><td>(8) <code>FT_Vector_ *</code></td><td>points</td></tr><tr><td>16</td><td>(8) <code>char *</code></td><td>tags</td></tr><tr><td>24</td><td>(8) <code>__int16 *</code></td><td>contours</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>flags</td></tr></tbody></table><h3 id="ft-outline-funcs" tabindex="-1"><a class="header-anchor" href="#ft-outline-funcs"><span><code>FT_Outline_Funcs_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(const FT_Vector_ *, void *)</code></td><td>move_to</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(const FT_Vector_ *, void *)</code></td><td>line_to</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(const FT_Vector_ *, const FT_Vector_ *, void *)</code></td><td>conic_to</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(const FT_Vector_ *, const FT_Vector_ *, const FT_Vector_ *, void *)</code></td><td>cubic_to</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>shift</td></tr><tr><td>36</td><td>(4) <code>int</code></td><td>delta</td></tr></tbody></table><h3 id="ft-bitmap" tabindex="-1"><a class="header-anchor" href="#ft-bitmap"><span><code>FT_Bitmap_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>rows</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>width</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>pitch</td></tr><tr><td>16</td><td>(8) <code>unsigned __int8 *</code></td><td>buffer</td></tr><tr><td>24</td><td>(2) <code>unsigned __int16</code></td><td>num_grays</td></tr><tr><td>26</td><td>(1) <code>unsigned __int8</code></td><td>pixel_mode</td></tr><tr><td>27</td><td>(1) <code>unsigned __int8</code></td><td>palette_mode</td></tr><tr><td>32</td><td>(8) <code>void *</code></td><td>palette</td></tr></tbody></table><h3 id="ft-color" tabindex="-1"><a class="header-anchor" href="#ft-color"><span><code>FT_Color_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>blue</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>green</td></tr><tr><td>2</td><td>(1) <code>unsigned __int8</code></td><td>red</td></tr><tr><td>3</td><td>(1) <code>unsigned __int8</code></td><td>alpha</td></tr></tbody></table><h3 id="ft-service-bdfrec" tabindex="-1"><a class="header-anchor" href="#ft-service-bdfrec"><span><code>FT_Service_BDFRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, const char **, const char **)</code></td><td>get_charset_id</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, const char *, BDF_PropertyRec_ *)</code></td><td>get_property</td></tr></tbody></table><h3 id="ft-cmap-classrec" tabindex="-1"><a class="header-anchor" href="#ft-cmap-classrec"><span><code>FT_CMap_ClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>size</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_CMapRec_ *, void *)</code></td><td>init</td></tr><tr><td>16</td><td>(8) <code>void (__fastcall *)(FT_CMapRec_ *)</code></td><td>done</td></tr><tr><td>24</td><td>(8) <code>unsigned int (__fastcall *)(FT_CMapRec_ *, unsigned int)</code></td><td>char_index</td></tr><tr><td>32</td><td>(8) <code>unsigned int (__fastcall *)(FT_CMapRec_ *, unsigned int *)</code></td><td>char_next</td></tr><tr><td>40</td><td>(8) <code>unsigned int (__fastcall *)(FT_CMapRec_ *, FT_CMapRec_ *, unsigned int, unsigned int)</code></td><td>char_var_index</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FT_CMapRec_ *, unsigned int, unsigned int)</code></td><td>char_var_default</td></tr><tr><td>56</td><td>(8) <code>unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *)</code></td><td>variant_list</td></tr><tr><td>64</td><td>(8) <code>unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *, unsigned int)</code></td><td>charvariant_list</td></tr><tr><td>72</td><td>(8) <code>unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *, unsigned int)</code></td><td>variantchar_list</td></tr></tbody></table><h3 id="ftc-mrulistclassrec" tabindex="-1"><a class="header-anchor" href="#ftc-mrulistclassrec"><span><code>FTC_MruListClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>node_size</td></tr><tr><td>8</td><td>(8) <code>unsigned __int8 (__fastcall *)(FTC_MruNodeRec_ *, void *)</code></td><td>node_compare</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FTC_MruNodeRec_ *, void *, void *)</code></td><td>node_init</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FTC_MruNodeRec_ *, void *, void *)</code></td><td>node_reset</td></tr><tr><td>32</td><td>(8) <code>void (__fastcall *)(FTC_MruNodeRec_ *, void *)</code></td><td>node_done</td></tr></tbody></table><h3 id="ftc-sfamilyclassrec" tabindex="-1"><a class="header-anchor" href="#ftc-sfamilyclassrec"><span><code>FTC_SFamilyClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>FTC_MruListClassRec_</code></td><td>clazz</td></tr><tr><td>40</td><td>(8) <code>unsigned int (__fastcall *)(FTC_FamilyRec_ *, FTC_ManagerRec_ *)</code></td><td>family_get_count</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FTC_FamilyRec_ *, unsigned int, FTC_ManagerRec_ *, FT_FaceRec_ **)</code></td><td>family_load_glyph</td></tr></tbody></table><h3 id="ftc-gcacheclassrec" tabindex="-1"><a class="header-anchor" href="#ftc-gcacheclassrec"><span><code>FTC_GCacheClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>FTC_CacheClassRec_</code></td><td>clazz</td></tr><tr><td>64</td><td>(8) <code>const FTC_MruListClassRec_ *</code></td><td>family_class</td></tr></tbody></table><h3 id="ftc-cacheclassrec" tabindex="-1"><a class="header-anchor" href="#ftc-cacheclassrec"><span><code>FTC_CacheClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FTC_NodeRec_ **, void *, FTC_CacheRec_ *)</code></td><td>node_new</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64 (__fastcall *)(FTC_NodeRec_ *, FTC_CacheRec_ *)</code></td><td>node_weight</td></tr><tr><td>16</td><td>(8) <code>unsigned __int8 (__fastcall *)(FTC_NodeRec_ *, void *, FTC_CacheRec_ *, unsigned __int8 *)</code></td><td>node_compare</td></tr><tr><td>24</td><td>(8) <code>unsigned __int8 (__fastcall *)(FTC_NodeRec_ *, void *, FTC_CacheRec_ *, unsigned __int8 *)</code></td><td>node_remove_faceid</td></tr><tr><td>32</td><td>(8) <code>void (__fastcall *)(FTC_NodeRec_ *, FTC_CacheRec_ *)</code></td><td>node_free</td></tr><tr><td>40</td><td>(8) <code>unsigned __int64</code></td><td>cache_size</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FTC_CacheRec_ *)</code></td><td>cache_init</td></tr><tr><td>56</td><td>(8) <code>void (__fastcall *)(FTC_CacheRec_ *)</code></td><td>cache_done</td></tr></tbody></table><h3 id="ftc-ifamilyclassrec" tabindex="-1"><a class="header-anchor" href="#ftc-ifamilyclassrec"><span><code>FTC_IFamilyClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>FTC_MruListClassRec_</code></td><td>clazz</td></tr><tr><td>40</td><td>(8) <code>int (__fastcall *)(FTC_FamilyRec_ *, unsigned int, FTC_CacheRec_ *, FT_GlyphRec_ **)</code></td><td>family_load_glyph</td></tr></tbody></table><h3 id="ft-service-glyphdictrec" tabindex="-1"><a class="header-anchor" href="#ft-service-glyphdictrec"><span><code>FT_Service_GlyphDictRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, void *, unsigned int)</code></td><td>get_name</td></tr><tr><td>8</td><td>(8) <code>unsigned int (__fastcall *)(FT_FaceRec_ *, const char *)</code></td><td>name_index</td></tr></tbody></table><h3 id="ft-service-cidrec" tabindex="-1"><a class="header-anchor" href="#ft-service-cidrec"><span><code>FT_Service_CIDRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, const char **, const char **, int *)</code></td><td>get_ros</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned __int8 *)</code></td><td>get_is_cid</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *)</code></td><td>get_cid_from_glyph_index</td></tr></tbody></table><h3 id="ft-service-psfontnamerec" tabindex="-1"><a class="header-anchor" href="#ft-service-psfontnamerec"><span><code>FT_Service_PsFontNameRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *(__fastcall *)(FT_FaceRec_ *)</code></td><td>get_ps_font_name</td></tr></tbody></table><h3 id="ft-service-cffloadrec" tabindex="-1"><a class="header-anchor" href="#ft-service-cffloadrec"><span><code>FT_Service_CFFLoadRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int16 (__fastcall *)(unsigned int)</code></td><td>get_standard_encoding</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(CFF_FontRec_ *, CFF_SubFontRec_ *, unsigned int, int *)</code></td><td>load_private_dict</td></tr><tr><td>16</td><td>(8) <code>unsigned __int8 (__fastcall *)(CFF_FDSelectRec_ *, unsigned int)</code></td><td>fd_select_get</td></tr><tr><td>24</td><td>(8) <code>unsigned __int8 (__fastcall *)(CFF_BlendRec_ *, unsigned int, unsigned int, int *)</code></td><td>blend_check_vector</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(CFF_BlendRec_ *, unsigned int, unsigned int, int *)</code></td><td>blend_build_vector</td></tr></tbody></table><h3 id="ft-service-ttcmapsrec" tabindex="-1"><a class="header-anchor" href="#ft-service-ttcmapsrec"><span><code>FT_Service_TTCMapsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_CharMapRec_ *, TT_CMapInfo_ *)</code></td><td>get_cmap_info</td></tr></tbody></table><h3 id="ft-service-metricsvariationsrec" tabindex="-1"><a class="header-anchor" href="#ft-service-metricsvariationsrec"><span><code>FT_Service_MetricsVariationsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>hadvance_adjust</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>lsb_adjust</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>rsb_adjust</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>vadvance_adjust</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>tsb_adjust</td></tr><tr><td>40</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>bsb_adjust</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>vorg_adjust</td></tr><tr><td>56</td><td>(8) <code>void (__fastcall *)(FT_FaceRec_ *)</code></td><td>metrics_adjust</td></tr></tbody></table><h3 id="ft-service-multimastersrec" tabindex="-1"><a class="header-anchor" href="#ft-service-multimastersrec"><span><code>FT_Service_MultiMastersRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, FT_Multi_Master_ *)</code></td><td>get_mm</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>set_mm_design</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>set_mm_blend</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>get_mm_blend</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, FT_MM_Var_ **)</code></td><td>get_mm_var</td></tr><tr><td>40</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>set_var_design</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>get_var_design</td></tr><tr><td>56</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int)</code></td><td>set_instance</td></tr><tr><td>64</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>set_mm_weightvector</td></tr><tr><td>72</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int *, int *)</code></td><td>get_mm_weightvector</td></tr><tr><td>80</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int *, int **, int **, FT_MM_Var_ **)</code></td><td>get_var_blend</td></tr><tr><td>88</td><td>(8) <code>void (__fastcall *)(FT_FaceRec_ *)</code></td><td>done_blend</td></tr></tbody></table><h3 id="ft-service-psinforec" tabindex="-1"><a class="header-anchor" href="#ft-service-psinforec"><span><code>FT_Service_PsInfoRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, PS_FontInfoRec_ *)</code></td><td>ps_get_font_info</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, PS_FontExtraRec_ *)</code></td><td>ps_get_font_extra</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *)</code></td><td>ps_has_glyph_names</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, PS_PrivateRec_ *)</code></td><td>ps_get_font_private</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, PS_Dict_Keys_, unsigned int, void *, int)</code></td><td>ps_get_font_value</td></tr></tbody></table><h3 id="ft-frame-field" tabindex="-1"><a class="header-anchor" href="#ft-frame-field"><span><code>FT_Frame_Field_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>value</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>size</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>offset</td></tr></tbody></table><h3 id="ft-service-pfrmetricsrec" tabindex="-1"><a class="header-anchor" href="#ft-service-pfrmetricsrec"><span><code>FT_Service_PfrMetricsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int *, unsigned int *, int *, int *)</code></td><td>get_metrics</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, FT_Vector_ *)</code></td><td>get_kerning</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)</code></td><td>get_advance</td></tr></tbody></table><h3 id="ft-service-pscmapsrec" tabindex="-1"><a class="header-anchor" href="#ft-service-pscmapsrec"><span><code>FT_Service_PsCMapsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned int (__fastcall *)(const char *)</code></td><td>unicode_value</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_MemoryRec_ *, PS_UnicodesRec_ *, unsigned int, const char *(__fastcall *)(void *, unsigned int), void (__fastcall *)(void *, const char *), void *)</code></td><td>unicodes_init</td></tr><tr><td>16</td><td>(8) <code>unsigned int (__fastcall *)(PS_UnicodesRec_ *, unsigned int)</code></td><td>unicodes_char_index</td></tr><tr><td>24</td><td>(8) <code>unsigned int (__fastcall *)(PS_UnicodesRec_ *, unsigned int *)</code></td><td>unicodes_char_next</td></tr><tr><td>32</td><td>(8) <code>const char *(__fastcall *)(unsigned int)</code></td><td>macintosh_name</td></tr><tr><td>40</td><td>(8) <code>const char *(__fastcall *)(unsigned int)</code></td><td>adobe_std_strings</td></tr><tr><td>48</td><td>(8) <code>const unsigned __int16 *</code></td><td>adobe_std_encoding</td></tr><tr><td>56</td><td>(8) <code>const unsigned __int16 *</code></td><td>adobe_expert_encoding</td></tr></tbody></table><h3 id="ft-service-sfnt-tablerec" tabindex="-1"><a class="header-anchor" href="#ft-service-sfnt-tablerec"><span><code>FT_Service_SFNT_TableRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, int, unsigned __int8 *, unsigned int *)</code></td><td>load_table</td></tr><tr><td>8</td><td>(8) <code>void *(__fastcall *)(FT_FaceRec_ *, FT_Sfnt_Tag_)</code></td><td>get_table</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *, unsigned int *, unsigned int *)</code></td><td>table_info</td></tr></tbody></table><h3 id="ft-service-ttglyfrec" tabindex="-1"><a class="header-anchor" href="#ft-service-ttglyfrec"><span><code>FT_Service_TTGlyfRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *)</code></td><td>get_location</td></tr></tbody></table><h3 id="ft-service-truetypeenginerec" tabindex="-1"><a class="header-anchor" href="#ft-service-truetypeenginerec"><span><code>FT_Service_TrueTypeEngineRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FT_TrueTypeEngineType_</code></td><td>engine_type</td></tr></tbody></table><h3 id="ft-service-kerningrec" tabindex="-1"><a class="header-anchor" href="#ft-service-kerningrec"><span><code>FT_Service_KerningRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, int, int, int *)</code></td><td>get_track</td></tr></tbody></table><h3 id="ft-service-winfntrec" tabindex="-1"><a class="header-anchor" href="#ft-service-winfntrec"><span><code>FT_Service_WinFntRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, FT_WinFNT_HeaderRec_ *)</code></td><td>get_header</td></tr></tbody></table><h3 id="filedescr" tabindex="-1"><a class="header-anchor" href="#filedescr"><span><code>filedescr</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>char *</code></td><td>suffix</td></tr><tr><td>8</td><td>(8) <code>char *</code></td><td>mode</td></tr><tr><td>16</td><td>(4) <code>filetype</code></td><td>type</td></tr></tbody></table><h3 id="fogdefinition" tabindex="-1"><a class="header-anchor" href="#fogdefinition"><span><code>FogDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>HashedString</code></td><td>mIdentifier</td></tr><tr><td>48</td><td>(32) <code>std::optional&lt;FogDistanceSetting&gt;</code></td><td>mDistanceAirSetting</td></tr><tr><td>80</td><td>(32) <code>std::optional&lt;FogDistanceSetting&gt;</code></td><td>mDistanceWeatherSetting</td></tr><tr><td>112</td><td>(32) <code>std::optional&lt;FogDistanceSetting&gt;</code></td><td>mDistanceWaterSetting</td></tr><tr><td>144</td><td>(32) <code>std::optional&lt;FogDistanceSetting&gt;</code></td><td>mDistanceLavaSetting</td></tr><tr><td>176</td><td>(32) <code>std::optional&lt;FogDistanceSetting&gt;</code></td><td>mDistanceLavaResistanceSetting</td></tr><tr><td>208</td><td>(20) <code>std::optional&lt;FogVolumetricDensitySetting&gt;</code></td><td>mVolumeDensityAirSetting</td></tr><tr><td>228</td><td>(20) <code>std::optional&lt;FogVolumetricDensitySetting&gt;</code></td><td>mVolumeDensityWeatherSetting</td></tr><tr><td>248</td><td>(20) <code>std::optional&lt;FogVolumetricDensitySetting&gt;</code></td><td>mVolumeDensityWaterSetting</td></tr><tr><td>268</td><td>(20) <code>std::optional&lt;FogVolumetricDensitySetting&gt;</code></td><td>mVolumeDensityLavaSetting</td></tr><tr><td>288</td><td>(20) <code>std::optional&lt;FogVolumetricDensitySetting&gt;</code></td><td>mVolumeDensityLavaResistanceSetting</td></tr><tr><td>308</td><td>(36) <code>std::optional&lt;FogVolumetricCoefficientSetting&gt;</code></td><td>mVolumeCoefficientAirSetting</td></tr><tr><td>344</td><td>(36) <code>std::optional&lt;FogVolumetricCoefficientSetting&gt;</code></td><td>mVolumeCoefficientWaterSetting</td></tr><tr><td>380</td><td>(36) <code>std::optional&lt;FogVolumetricCoefficientSetting&gt;</code></td><td>mVolumeCoefficientCloudSetting</td></tr></tbody></table><h3 id="fogdistancesetting" tabindex="-1"><a class="header-anchor" href="#fogdistancesetting"><span><code>FogDistanceSetting</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>mce::Color</code></td><td>mColor</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>mStart</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>mEnd</td></tr><tr><td>24</td><td>(4) <code>_BYTE[4]</code></td><td>mType</td></tr></tbody></table><h3 id="fogvolumetricdensitysetting" tabindex="-1"><a class="header-anchor" href="#fogvolumetricdensitysetting"><span><code>FogVolumetricDensitySetting</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mMaxDensity</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mMaxDensityHeight</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mZeroDensityHeight</td></tr><tr><td>12</td><td>(1) <code>bool</code></td><td>mUniform</td></tr></tbody></table><h3 id="fogvolumetriccoefficientsetting" tabindex="-1"><a class="header-anchor" href="#fogvolumetriccoefficientsetting"><span><code>FogVolumetricCoefficientSetting</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>mce::Color</code></td><td>mScattering</td></tr><tr><td>16</td><td>(16) <code>mce::Color</code></td><td>mAbsorption</td></tr></tbody></table><h3 id="filterparamdefinition" tabindex="-1"><a class="header-anchor" href="#filterparamdefinition"><span><code>FilterParamDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FilterParamType</code></td><td>mType</td></tr><tr><td>4</td><td>(4) <code>FilterParamRequirement</code></td><td>mRequirement</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mDescription</td></tr><tr><td>40</td><td>(48) <code>FilterInput</code></td><td>mDefault</td></tr><tr><td>88</td><td>(64) <code>FilterStringMap</code></td><td>mStringMap</td></tr><tr><td>152</td><td>(1) <code>FilterParamOption</code></td><td>mParamOption</td></tr></tbody></table><h3 id="filterinput" tabindex="-1"><a class="header-anchor" href="#filterinput"><span><code>FilterInput</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FilterParamType</code></td><td>mType</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mString</td></tr><tr><td>40</td><td>(4) <code>int</code></td><td>mIValue</td></tr><tr><td>44</td><td>(4) <code>float</code></td><td>mFValue</td></tr></tbody></table><h3 id="filterstringmap" tabindex="-1"><a class="header-anchor" href="#filterstringmap"><span><code>FilterStringMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::unordered_map&lt;std::string,FilterInputDefinition&gt;</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="ft-unitvector" tabindex="-1"><a class="header-anchor" href="#ft-unitvector"><span><code>FT_UnitVector_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>__int16</code></td><td>x</td></tr><tr><td>2</td><td>(2) <code>__int16</code></td><td>y</td></tr></tbody></table><h3 id="ft-driver-classrec" tabindex="-1"><a class="header-anchor" href="#ft-driver-classrec"><span><code>FT_Driver_ClassRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>FT_Module_Class_</code></td><td>root</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>face_object_size</td></tr><tr><td>60</td><td>(4) <code>int</code></td><td>size_object_size</td></tr><tr><td>64</td><td>(4) <code>int</code></td><td>slot_object_size</td></tr><tr><td>72</td><td>(8) <code>int (__fastcall *)(FT_StreamRec_ *, FT_FaceRec_ *, int, int, FT_Parameter_ *)</code></td><td>init_face</td></tr><tr><td>80</td><td>(8) <code>void (__fastcall *)(FT_FaceRec_ *)</code></td><td>done_face</td></tr><tr><td>88</td><td>(8) <code>int (__fastcall *)(FT_SizeRec_ *)</code></td><td>init_size</td></tr><tr><td>96</td><td>(8) <code>void (__fastcall *)(FT_SizeRec_ *)</code></td><td>done_size</td></tr><tr><td>104</td><td>(8) <code>int (__fastcall *)(FT_GlyphSlotRec_ *)</code></td><td>init_slot</td></tr><tr><td>112</td><td>(8) <code>void (__fastcall *)(FT_GlyphSlotRec_ *)</code></td><td>done_slot</td></tr><tr><td>120</td><td>(8) <code>int (__fastcall *)(FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, int)</code></td><td>load_glyph</td></tr><tr><td>128</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, FT_Vector_ *)</code></td><td>get_kerning</td></tr><tr><td>136</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, FT_StreamRec_ *)</code></td><td>attach_file</td></tr><tr><td>144</td><td>(8) <code>int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, int, int *)</code></td><td>get_advances</td></tr><tr><td>152</td><td>(8) <code>int (__fastcall *)(FT_SizeRec_ *, FT_Size_RequestRec_ *)</code></td><td>request_size</td></tr><tr><td>160</td><td>(8) <code>int (__fastcall *)(FT_SizeRec_ *, unsigned int)</code></td><td>select_size</td></tr></tbody></table><h3 id="ft-module-class" tabindex="-1"><a class="header-anchor" href="#ft-module-class"><span><code>FT_Module_Class_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>module_flags</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>module_size</td></tr><tr><td>8</td><td>(8) <code>const char *</code></td><td>module_name</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>module_version</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>module_requires</td></tr><tr><td>24</td><td>(8) <code>const void *</code></td><td>module_interface</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(FT_ModuleRec_ *)</code></td><td>module_init</td></tr><tr><td>40</td><td>(8) <code>void (__fastcall *)(FT_ModuleRec_ *)</code></td><td>module_done</td></tr><tr><td>48</td><td>(8) <code>void *(__fastcall *)(FT_ModuleRec_ *, const char *)</code></td><td>get_interface</td></tr></tbody></table><h3 id="flameodds" tabindex="-1"><a class="header-anchor" href="#flameodds"><span><code>FlameOdds</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mChance</td></tr></tbody></table><h3 id="fonthandle" tabindex="-1"><a class="header-anchor" href="#fonthandle"><span><code>FontHandle</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;FontRepository&gt;</code></td><td>mFontRepository</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;Font&gt;</code></td><td>mDefaultFont</td></tr><tr><td>32</td><td>(8) <code>unsigned __int64</code></td><td>mFontId</td></tr><tr><td>40</td><td>(1) <code>bool</code></td><td>mIsDummyHandle</td></tr></tbody></table><h3 id="ft-renderer-class" tabindex="-1"><a class="header-anchor" href="#ft-renderer-class"><span><code>FT_Renderer_Class_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>FT_Module_Class_</code></td><td>root</td></tr><tr><td>56</td><td>(4) <code>FT_Glyph_Format_</code></td><td>glyph_format</td></tr><tr><td>64</td><td>(8) <code>int (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_Render_Mode_, const FT_Vector_ *)</code></td><td>render_glyph</td></tr><tr><td>72</td><td>(8) <code>int (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, const FT_Matrix_ *, const FT_Vector_ *)</code></td><td>transform_glyph</td></tr><tr><td>80</td><td>(8) <code>void (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_BBox_ *)</code></td><td>get_glyph_cbox</td></tr><tr><td>88</td><td>(8) <code>int (__fastcall *)(FT_RendererRec_ *, unsigned int, void *)</code></td><td>set_mode</td></tr><tr><td>96</td><td>(8) <code>FT_Raster_Funcs_ *</code></td><td>raster_class</td></tr></tbody></table><h3 id="fileaccesstransforms" tabindex="-1"><a class="header-anchor" href="#fileaccesstransforms"><span><code>FileAccessTransforms</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FileAccessTransforms_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="frustum" tabindex="-1"><a class="header-anchor" href="#frustum"><span><code>Frustum</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(96) <code>glm::tvec4&lt;float,0&gt;[6]</code></td><td>mFrustumPlanes</td></tr><tr><td>96</td><td>(48) <code>FrustumEdges</code></td><td>mNearClippingPlaneEdges</td></tr><tr><td>144</td><td>(48) <code>FrustumEdges</code></td><td>mFarClippingPlaneEdges</td></tr></tbody></table><h3 id="frustumedges" tabindex="-1"><a class="header-anchor" href="#frustumedges"><span><code>FrustumEdges</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>topLeft</td></tr><tr><td>12</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>topRight</td></tr><tr><td>24</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>bottomLeft</td></tr><tr><td>36</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>bottomRight</td></tr></tbody></table><h3 id="ft-raster-funcs" tabindex="-1"><a class="header-anchor" href="#ft-raster-funcs"><span><code>FT_Raster_Funcs_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FT_Glyph_Format_</code></td><td>glyph_format</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(void *, struct FT_RasterRec_ **)</code></td><td>raster_new</td></tr><tr><td>16</td><td>(8) <code>void (__fastcall *)(struct FT_RasterRec_ *, unsigned __int8 *, unsigned int)</code></td><td>raster_reset</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(struct FT_RasterRec_ *, unsigned int, void *)</code></td><td>raster_set_mode</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(struct FT_RasterRec_ *, const FT_Raster_Params_ *)</code></td><td>raster_render</td></tr><tr><td>40</td><td>(8) <code>void (__fastcall *)(struct FT_RasterRec_ *)</code></td><td>raster_done</td></tr></tbody></table><h3 id="ft-glyph-class" tabindex="-1"><a class="header-anchor" href="#ft-glyph-class"><span><code>FT_Glyph_Class_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>glyph_size</td></tr><tr><td>4</td><td>(4) <code>FT_Glyph_Format_</code></td><td>glyph_format</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *)</code></td><td>glyph_init</td></tr><tr><td>16</td><td>(8) <code>void (__fastcall *)(FT_GlyphRec_ *)</code></td><td>glyph_done</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphRec_ *)</code></td><td>glyph_copy</td></tr><tr><td>32</td><td>(8) <code>void (__fastcall *)(FT_GlyphRec_ *, const FT_Matrix_ *, const FT_Vector_ *)</code></td><td>glyph_transform</td></tr><tr><td>40</td><td>(8) <code>void (__fastcall *)(FT_GlyphRec_ *, FT_BBox_ *)</code></td><td>glyph_bbox</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *)</code></td><td>glyph_prepare</td></tr></tbody></table><h3 id="ft-autohinter-interfacerec" tabindex="-1"><a class="header-anchor" href="#ft-autohinter-interfacerec"><span><code>FT_AutoHinter_InterfaceRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void (__fastcall *)(FT_AutoHinterRec_ *, FT_FaceRec_ *)</code></td><td>reset_face</td></tr><tr><td>8</td><td>(8) <code>void (__fastcall *)(FT_AutoHinterRec_ *, FT_FaceRec_ *, void **, int *)</code></td><td>get_global_hints</td></tr><tr><td>16</td><td>(8) <code>void (__fastcall *)(FT_AutoHinterRec_ *, void *)</code></td><td>done_global_hints</td></tr><tr><td>24</td><td>(8) <code>int (__fastcall *)(FT_AutoHinterRec_ *, FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, int)</code></td><td>load_glyph</td></tr></tbody></table><h3 id="funcinfo" tabindex="-1"><a class="header-anchor" href="#funcinfo"><span><code>FuncInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) \`\`</td><td>magicNumber</td></tr><tr><td>4</td><td>(4) \`\`</td><td>maxState</td></tr><tr><td>8</td><td>(4) \`\`</td><td>pUnwindMap</td></tr><tr><td>12</td><td>(4) \`\`</td><td>nTryBlocks</td></tr><tr><td>16</td><td>(4) \`\`</td><td>pTryBlockMap</td></tr><tr><td>20</td><td>(4) \`\`</td><td>nIPMapEntries</td></tr><tr><td>24</td><td>(4) \`\`</td><td>pIPtoStateMap</td></tr><tr><td>28</td><td>(4) \`\`</td><td>dispUnwindHelp</td></tr><tr><td>32</td><td>(4) \`\`</td><td>pESTypeList</td></tr><tr><td>36</td><td>(4) \`\`</td><td>EHFlags</td></tr></tbody></table><h3 id="filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9"><span><code>FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;::()::__l8::&lt;lambda_b7919b453013e6c018d3eb2079af3ac9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileDownloadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(Core::Path const &amp;,enum DownloaderResult)&gt;</code></td><td>onCompleteCallback</td></tr></tbody></table><h3 id="frameupdatecontext" tabindex="-1"><a class="header-anchor" href="#frameupdatecontext"><span><code>FrameUpdateContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>mce::RenderContext *</code></td><td>renderContext</td></tr><tr><td>8</td><td>(8) <code>MinecraftGameplayGraphicsResources *</code></td><td>minecraftGameplayGraphicsResources</td></tr><tr><td>16</td><td>(8) <code>mce::TextureGroup *</code></td><td>textureGroup</td></tr><tr><td>24</td><td>(8) <code>Tessellator *</code></td><td>tessellator</td></tr></tbody></table><h3 id="focusmovescreeneventdata" tabindex="-1"><a class="header-anchor" href="#focusmovescreeneventdata"><span><code>FocusMoveScreenEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>float[2]</code></td><td>position</td></tr></tbody></table><h3 id="font-sheetid" tabindex="-1"><a class="header-anchor" href="#font-sheetid"><span><code>Font::SheetId</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const void *</code></td><td>rawFontPtr</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>index</td></tr></tbody></table><h3 id="font-textobject" tabindex="-1"><a class="header-anchor" href="#font-textobject"><span><code>Font::TextObject</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;Font::TextObject::Page&gt;</code></td><td>mPages</td></tr><tr><td>24</td><td>(16) <code>mce::Color</code></td><td>mColor</td></tr><tr><td>40</td><td>(1) <code>bool</code></td><td>mContainsUnicode</td></tr><tr><td>41</td><td>(1) <code>bool</code></td><td>mShadow</td></tr><tr><td>44</td><td>(16) <code>mce::Color</code></td><td>mShadowColor</td></tr><tr><td>60</td><td>(8) <code>glm::tvec2&lt;float,0&gt;</code></td><td>mShadowOffset</td></tr></tbody></table><h3 id="fontalias-referencedata" tabindex="-1"><a class="header-anchor" href="#fontalias-referencedata"><span><code>FontAlias::ReferenceData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>FontHandle</code></td><td>mFontHandle</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mLanguageCode</td></tr><tr><td>80</td><td>(24) <code>std::vector&lt;std::pair&lt;int,int&gt;&gt;</code></td><td>mIncludedUnicodeRanges</td></tr></tbody></table><h3 id="fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599" tabindex="-1"><a class="header-anchor" href="#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599"><span><code>FontRepository::loadDefaultFonts::__l2::&lt;lambda_4f422798d8e19b20911552d15f97b207&gt;::()::__l2::&lt;lambda_9f7ee64e5f52351a246105fa89b76599&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FontRepository *const</code></td><td>__this</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>alias</td></tr><tr><td>40</td><td>(16) <code>std::shared_ptr&lt;std::shared_ptr&lt;BitmapFont&gt; &gt;</code></td><td>loadedFont</td></tr></tbody></table><h3 id="fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3" tabindex="-1"><a class="header-anchor" href="#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3"><span><code>FontRepository::loadDefaultFonts::__l2::&lt;lambda_7fe000d9f42c358f49b7b7b1aeed026a&gt;::()::__l2::&lt;lambda_fb53307a4bf33dc8a2da341738d6f3d3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FontRepository *const</code></td><td>__this</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>alias</td></tr><tr><td>40</td><td>(16) <code>std::shared_ptr&lt;std::shared_ptr&lt;MSDFFont&gt; &gt;</code></td><td>loadedFont</td></tr></tbody></table><h3 id="font-glyphquad" tabindex="-1"><a class="header-anchor" href="#font-glyphquad"><span><code>Font::GlyphQuad</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>x</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>y</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>width</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>height</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>ix</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>iy</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>ixb</td></tr><tr><td>28</td><td>(4) <code>float</code></td><td>iyb</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>shear</td></tr><tr><td>36</td><td>(16) <code>mce::Color</code></td><td>color</td></tr></tbody></table><h3 id="filechunkinfo" tabindex="-1"><a class="header-anchor" href="#filechunkinfo"><span><code>FileChunkInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>chunkID</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>startByte</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>endByte</td></tr></tbody></table><h3 id="fogcommandsettings" tabindex="-1"><a class="header-anchor" href="#fogcommandsettings"><span><code>FogCommandSettings</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mFogIdentifier</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mUserProvidedId</td></tr></tbody></table><h3 id="framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb" tabindex="-1"><a class="header-anchor" href="#framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb"><span><code>framebuilderInsertTerrainCommandsForChunks::__l2::&lt;lambda_c1fa93ce778fd992669707126a079fcb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CommandListQueue *</code></td><td>commandListQueue</td></tr><tr><td>8</td><td>(2) <code>const dragon::frameobject::components::ViewSetId</code></td><td>viewSetId</td></tr><tr><td>16</td><td>(8) <code>const ViewRenderData *</code></td><td>viewData</td></tr><tr><td>24</td><td>(8) <code>const ChunkRenderObjectCollection *</code></td><td>chunkState</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;unsigned char,mce::AlignmentHelper::AlignmentAllocator&lt;unsigned char,16&gt; &gt;</code></td><td>perFrameConstantsMemory</td></tr><tr><td>56</td><td>(1) <code>const bool</code></td><td>shouldRenderBarrierBlocks</td></tr><tr><td>57</td><td>(1) <code>const bool</code></td><td>shouldRenderStructureVoidBlocks</td></tr></tbody></table><h3 id="fogmanager-layer" tabindex="-1"><a class="header-anchor" href="#fogmanager-layer"><span><code>FogManager::Layer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FogManager::LayerType</code></td><td>mType</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;WeakRefT&lt;SharePtrRefTraits&lt;FogDefinition const &gt; &gt;&gt;</code></td><td>mDefinitions</td></tr></tbody></table><h3 id="flipbooktexturedescription" tabindex="-1"><a class="header-anchor" href="#flipbooktexturedescription"><span><code>FlipbookTextureDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>ResourceLocation</code></td><td>resourceLocation</td></tr><tr><td>56</td><td>(24) <code>std::vector&lt;int&gt;</code></td><td>frames</td></tr><tr><td>80</td><td>(4) <code>int</code></td><td>replicate</td></tr><tr><td>84</td><td>(4) <code>int</code></td><td>ticksPerFrame</td></tr><tr><td>88</td><td>(1) <code>bool</code></td><td>blend</td></tr><tr><td>92</td><td>(4) <code>int</code></td><td>blockVariant</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>tileName</td></tr><tr><td>128</td><td>(1) <code>bool</code></td><td>tickOnlyOnce</td></tr><tr><td>132</td><td>(8) <code>std::optional&lt;int&gt;</code></td><td>textureVariant</td></tr></tbody></table><h3 id="flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f" tabindex="-1"><a class="header-anchor" href="#flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f"><span><code>FlightingService::_fetch::__l2::&lt;lambda_03023acb2b69c9a5fef635df5c64a11f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FlightingService&gt;</code></td><td>weakThis</td></tr></tbody></table><h3 id="filepickersettings-filedescription" tabindex="-1"><a class="header-anchor" href="#filepickersettings-filedescription"><span><code>FilePickerSettings::FileDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>Extension</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>Name</td></tr></tbody></table><h3 id="filterformattedstringcontructor" tabindex="-1"><a class="header-anchor" href="#filterformattedstringcontructor"><span><code>FilterFormattedStringContructor</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mFormattedStr</td></tr><tr><td>32</td><td>(4) <code>const unsigned int</code></td><td>mTotalSelected</td></tr><tr><td>36</td><td>(4) <code>unsigned int</code></td><td>mFiltersAddedCount</td></tr><tr><td>40</td><td>(4) <code>unsigned int</code></td><td>mFilterStringsAdded</td></tr></tbody></table><h3 id="filearchiver-result" tabindex="-1"><a class="header-anchor" href="#filearchiver-result"><span><code>FileArchiver::Result</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FileArchiver::Outcome</code></td><td>outcome</td></tr><tr><td>8</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>fileName</td></tr></tbody></table><h3 id="fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation" tabindex="-1"><a class="header-anchor" href="#fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation"><span><code>FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::ScopedAllocation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer::Buffer&gt;</code></td><td>mBuffer</td></tr><tr><td>16</td><td>(8) <code>const unsigned __int64</code></td><td>mOffset</td></tr><tr><td>24</td><td>(8) <code>const unsigned __int64</code></td><td>mSize</td></tr><tr><td>32</td><td>(8) <code>const unsigned __int64</code></td><td>mAlignmentPrefixSize</td></tr><tr><td>40</td><td>(8) <code>const unsigned __int64</code></td><td>mFenceValue</td></tr></tbody></table><h3 id="filtergroup" tabindex="-1"><a class="header-anchor" href="#filtergroup"><span><code>FilterGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FilterGroup_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(4) <code>FilterGroup::CollectionType</code></td><td>mCollectionType</td></tr><tr><td>16</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;FilterGroup&gt;&gt;</code></td><td>mChildren</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;FilterTest&gt;&gt;</code></td><td>mMembers</td></tr></tbody></table><h3 id="flockingcomponent" tabindex="-1"><a class="header-anchor" href="#flockingcomponent"><span><code>FlockingComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;ActorUniqueID&gt;</code></td><td>mNeighborhood</td></tr><tr><td>24</td><td>(12) <code>Vec3</code></td><td>mCenterOfMass</td></tr><tr><td>36</td><td>(12) <code>Vec3</code></td><td>mGroupVelocity</td></tr><tr><td>48</td><td>(12) <code>Vec3</code></td><td>mGoalHeading</td></tr><tr><td>60</td><td>(12) <code>Vec3</code></td><td>mCurrentHeading</td></tr><tr><td>72</td><td>(1) <code>bool</code></td><td>mInWater</td></tr><tr><td>73</td><td>(1) <code>bool</code></td><td>mMatchVariant</td></tr><tr><td>74</td><td>(1) <code>bool</code></td><td>mUseCenterOfMass</td></tr><tr><td>75</td><td>(1) <code>bool</code></td><td>mIsLeader</td></tr><tr><td>76</td><td>(1) <code>bool</code></td><td>mInFlock</td></tr><tr><td>77</td><td>(1) <code>bool</code></td><td>mIsEnabled</td></tr><tr><td>78</td><td>(1) <code>bool</code></td><td>mHasTargetGoal</td></tr><tr><td>79</td><td>(1) <code>bool</code></td><td>mUsingDirection</td></tr><tr><td>80</td><td>(4) <code>int</code></td><td>mFlockLimit</td></tr><tr><td>84</td><td>(4) <code>float</code></td><td>mLonerChance</td></tr><tr><td>88</td><td>(4) <code>float</code></td><td>mGoalWeight</td></tr><tr><td>92</td><td>(4) <code>float</code></td><td>mInfluenceRadius</td></tr><tr><td>96</td><td>(4) <code>float</code></td><td>mBreachInfluence</td></tr><tr><td>100</td><td>(4) <code>float</code></td><td>mSeparationWeight</td></tr><tr><td>104</td><td>(4) <code>float</code></td><td>mSeparationThreshold</td></tr><tr><td>108</td><td>(4) <code>float</code></td><td>mCohesionWeight</td></tr><tr><td>112</td><td>(4) <code>float</code></td><td>mCohesionThreshold</td></tr><tr><td>116</td><td>(4) <code>float</code></td><td>mInnerCohesionThreshold</td></tr><tr><td>120</td><td>(4) <code>float</code></td><td>mMinHeight</td></tr><tr><td>124</td><td>(4) <code>float</code></td><td>mMaxHeight</td></tr><tr><td>128</td><td>(4) <code>float</code></td><td>mBlockDist</td></tr><tr><td>132</td><td>(4) <code>float</code></td><td>mBlockWeight</td></tr><tr><td>136</td><td>(1) <code>bool</code></td><td>mOverspeedRequired</td></tr></tbody></table><h3 id="floattag" tabindex="-1"><a class="header-anchor" href="#floattag"><span><code>FloatTag</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Tag</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>data</td></tr></tbody></table><h3 id="featuretoggles-featuretoggle" tabindex="-1"><a class="header-anchor" href="#featuretoggles-featuretoggle"><span><code>FeatureToggles::FeatureToggle</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>_BYTE[4]</code></td><td>featureID</td></tr><tr><td>4</td><td>(4) <code>_BYTE[4]</code></td><td>dependencyFeatureID</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Option&gt;</code></td><td>option</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(Option &amp;)&gt;</code></td><td>setup</td></tr><tr><td>80</td><td>(64) <code>std::function&lt;void __cdecl(bool &amp;)&gt;</code></td><td>lock</td></tr></tbody></table><h3 id="functionmanager-originmapping" tabindex="-1"><a class="header-anchor" href="#functionmanager-originmapping"><span><code>FunctionManager::OriginMapping</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;CommandOrigin&gt;</code></td><td>mOrigin</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>mRefCount</td></tr></tbody></table><h3 id="fullplayerinventorywrapper" tabindex="-1"><a class="header-anchor" href="#fullplayerinventorywrapper"><span><code>FullPlayerInventoryWrapper</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>PlayerInventory *</code></td><td>mPlayerInventory</td></tr><tr><td>8</td><td>(8) <code>SimpleContainer *</code></td><td>mArmorInventory</td></tr><tr><td>16</td><td>(8) <code>SimpleContainer *</code></td><td>mHandInventory</td></tr><tr><td>24</td><td>(8) <code>InventoryTransactionManager *</code></td><td>mTransactionManager</td></tr><tr><td>32</td><td>(8) <code>Player *</code></td><td>mPlayer</td></tr></tbody></table><h3 id="filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e"><span><code>FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileDownloadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(Core::Path const &amp;,enum DownloaderResult)&gt;</code></td><td>onCompleteCallback</td></tr></tbody></table><h3 id="filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c"><span><code>FileDownloadManager::_writeData::__l2::&lt;lambda_6f81f195f94e9beac581973bed159d3c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileDownloadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>progress</td></tr><tr><td>24</td><td>(64) <code>std::function&lt;void __cdecl(unsigned __int64,bool)&gt;</code></td><td>writeComplete</td></tr></tbody></table><h3 id="filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89"><span><code>FileDownloadManager::_writeData::__l2::&lt;lambda_e1119d03447226ec2640e6a1b57aad89&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileDownloadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(24) <code>std::vector&lt;unsigned char&gt;</code></td><td>data</td></tr><tr><td>40</td><td>(8) <code>unsigned __int64</code></td><td>writeBytes</td></tr><tr><td>48</td><td>(8) <code>unsigned __int64</code></td><td>offset</td></tr></tbody></table><h3 id="fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9"><span><code>FileUploadManager::uploadFile::__l13::&lt;lambda_74760951e5721fb9dafc828e7e1ca7c9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileUploadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(32) <code>const std::string</code></td><td>uploadId</td></tr><tr><td>48</td><td>(1) <code>bool</code></td><td>autoStartUpload</td></tr><tr><td>56</td><td>(16) <code>const Json::Value</code></td><td>uploadOptions</td></tr></tbody></table><h3 id="fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b"><span><code>FileUploadManager::_uploadChunk::__l13::&lt;lambda_beec154458228c4f1efa54daecb2bd49&gt;::()::__l5::&lt;lambda_b942687c99a128d38d4a3acdf5208e9b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileUploadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(24) <code>const FileChunkInfo</code></td><td>chunk</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;unsigned char&gt;</code></td><td>buffer</td></tr></tbody></table><h3 id="fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4"><span><code>FileUploadManager::_uploadStream::__l2::&lt;lambda_704199bdd8ef4b5e4b61022e06e9c849&gt;::()::__l5::&lt;lambda_159c837b6a142bd3dc90b4a04b18c5b4&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileUploadManager&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(16) <code>FileUploadManager::_uploadStream::__l2::&lt;lambda_7c32c70c440907d77e4081b7aef620a1&gt;</code></td><td>fetchStreamDataCallback</td></tr><tr><td>32</td><td>(16) <code>FileUploadManager::_uploadStream::__l2::&lt;lambda_ab8d111204de64d325c648c9d712e8ea&gt;</code></td><td>onStreamFinishedCallback</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>boundary</td></tr></tbody></table><h3 id="fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1"><span><code>FileUploadManager::_uploadStream::__l2::&lt;lambda_7c32c70c440907d77e4081b7aef620a1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileUploadManager&gt;</code></td><td>weak_this</td></tr></tbody></table><h3 id="fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea"><span><code>FileUploadManager::_uploadStream::__l2::&lt;lambda_ab8d111204de64d325c648c9d712e8ea&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileUploadManager&gt;</code></td><td>weak_this</td></tr></tbody></table><h3 id="filechunk" tabindex="-1"><a class="header-anchor" href="#filechunk"><span><code>FileChunk</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;unsigned char&gt;</code></td><td>data</td></tr><tr><td>24</td><td>(24) <code>FileChunkInfo</code></td><td>info</td></tr></tbody></table><h3 id="fileinfo" tabindex="-1"><a class="header-anchor" href="#fileinfo"><span><code>FileInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>filePath</td></tr><tr><td>32</td><td>(8) <code>unsigned __int64</code></td><td>fileSize</td></tr><tr><td>40</td><td>(32) <code>std::string</code></td><td>fileHash</td></tr></tbody></table><h3 id="filtercontext" tabindex="-1"><a class="header-anchor" href="#filtercontext"><span><code>FilterContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Actor *</code></td><td>mHost</td></tr><tr><td>8</td><td>(8) <code>const Actor *</code></td><td>mSubject</td></tr><tr><td>16</td><td>(8) <code>const VariantParameterList *</code></td><td>mParams</td></tr><tr><td>24</td><td>(8) <code>const BlockSource *</code></td><td>mRegion</td></tr><tr><td>32</td><td>(8) <code>const Dimension *</code></td><td>mDimension</td></tr><tr><td>40</td><td>(8) <code>const Level *</code></td><td>mLevel</td></tr><tr><td>48</td><td>(8) <code>const Biome *</code></td><td>mBiome</td></tr><tr><td>56</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr><tr><td>72</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr><tr><td>80</td><td>(8) <code>const TagRegistry&lt;IDType&lt;BiomeTagIDType&gt;,IDType&lt;BiomeTagSetIDType&gt; &gt; *</code></td><td>mTagRegistry</td></tr></tbody></table><h3 id="filterinputdefinition" tabindex="-1"><a class="header-anchor" href="#filterinputdefinition"><span><code>FilterInputDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>FilterInput</code></td><td>mInput</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mDescription</td></tr></tbody></table><h3 id="filtertestdaytime" tabindex="-1"><a class="header-anchor" href="#filtertestdaytime"><span><code>FilterTestDaytime</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleBoolFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertest" tabindex="-1"><a class="header-anchor" href="#filtertest"><span><code>FilterTest</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FilterTest_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(2) <code>_BYTE[2]</code></td><td>mSubject</td></tr><tr><td>10</td><td>(2) <code>FilterOperator</code></td><td>mOperator</td></tr></tbody></table><h3 id="filterinputs" tabindex="-1"><a class="header-anchor" href="#filterinputs"><span><code>FilterInputs</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mSubject</td></tr><tr><td>8</td><td>(48) <code>FilterInput</code></td><td>mDomain</td></tr><tr><td>56</td><td>(2) <code>FilterOperator</code></td><td>mOperator</td></tr><tr><td>64</td><td>(48) <code>FilterInput</code></td><td>mValue</td></tr></tbody></table><h3 id="filtertestdifficulty" tabindex="-1"><a class="header-anchor" href="#filtertestdifficulty"><span><code>FilterTestDifficulty</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleIntFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestgamerule" tabindex="-1"><a class="header-anchor" href="#filtertestgamerule"><span><code>FilterTestGameRule</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>FilterTest</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(32) <code>std::string</code></td><td>mGameRule</td></tr><tr><td>48</td><td>(1) <code>bool</code></td><td>mValue</td></tr></tbody></table><h3 id="filtertesthourlyclock" tabindex="-1"><a class="header-anchor" href="#filtertesthourlyclock"><span><code>FilterTestHourlyClock</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleIntFilterTest</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>mValue</td></tr></tbody></table><h3 id="filtertestbiome" tabindex="-1"><a class="header-anchor" href="#filtertestbiome"><span><code>FilterTestBiome</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleIntFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestbiomehastag" tabindex="-1"><a class="header-anchor" href="#filtertestbiomehastag"><span><code>FilterTestBiomeHasTag</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(80) <code>SimpleTagIDFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestbiomesnowcovered" tabindex="-1"><a class="header-anchor" href="#filtertestbiomesnowcovered"><span><code>FilterTestBiomeSnowCovered</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleBoolFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestbiomehumid" tabindex="-1"><a class="header-anchor" href="#filtertestbiomehumid"><span><code>FilterTestBiomeHumid</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleBoolFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertesttemperaturetype" tabindex="-1"><a class="header-anchor" href="#filtertesttemperaturetype"><span><code>FilterTestTemperatureType</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleIntFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertesttemperaturevalue" tabindex="-1"><a class="header-anchor" href="#filtertesttemperaturevalue"><span><code>FilterTestTemperatureValue</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleFloatFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestbrightness" tabindex="-1"><a class="header-anchor" href="#filtertestbrightness"><span><code>FilterTestBrightness</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleFloatFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertestaltitude" tabindex="-1"><a class="header-anchor" href="#filtertestaltitude"><span><code>FilterTestAltitude</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleIntFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filtertesthastradesupply" tabindex="-1"><a class="header-anchor" href="#filtertesthastradesupply"><span><code>FilterTestHasTradeSupply</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>SimpleBoolFilterTest</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="filteredtransformationattributes-postshoreedgetransformation" tabindex="-1"><a class="header-anchor" href="#filteredtransformationattributes-postshoreedgetransformation"><span><code>FilteredTransformationAttributes&lt;PostShoreEdgeTransformation&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;PosibleTransformation&gt;</code></td><td>mTransformations</td></tr></tbody></table><h3 id="feature" tabindex="-1"><a class="header-anchor" href="#feature"><span><code>Feature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>IFeature</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>Actor *</code></td><td>mPlacer</td></tr><tr><td>16</td><td>(8) <code>WorldChangeTransaction *</code></td><td>mTransaction</td></tr></tbody></table><h3 id="filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79"><span><code>FileArchiver::archivePack::__l2::&lt;lambda_e4861c6342045bae76278851b5db2c79&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FileArchiver *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(FileArchiver::Result &amp;)&gt;</code></td><td>exportCallback</td></tr><tr><td>72</td><td>(32) <code>const Core::Path</code></td><td>path</td></tr><tr><td>104</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>outputName</td></tr></tbody></table><h3 id="filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e"><span><code>FileArchiver::archiveLevel::__l2::&lt;lambda_ef06c283a4b2b877a6778581d3ec778e&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FileArchiver *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(FileArchiver::Result &amp;)&gt;</code></td><td>exportCallback</td></tr><tr><td>72</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>outputName</td></tr><tr><td>1112</td><td>(32) <code>const std::string</code></td><td>worldId</td></tr><tr><td>1144</td><td>(1) <code>bool</code></td><td>isBundle</td></tr><tr><td>1152</td><td>(8) <code>unsigned __int64</code></td><td>numFiles</td></tr></tbody></table><h3 id="filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783"><span><code>FileArchiver::archiveLevel::__l2::&lt;lambda_ac943e513845c7fd6e6317395fc32783&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Level *</code></td><td>level</td></tr><tr><td>8</td><td>(8) <code>FileArchiver *const</code></td><td>__this</td></tr><tr><td>16</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>outputName</td></tr><tr><td>1056</td><td>(1) <code>bool</code></td><td>isBundle</td></tr><tr><td>1064</td><td>(64) <code>std::function&lt;void __cdecl(FileArchiver::Result &amp;)&gt;</code></td><td>exportCallback</td></tr><tr><td>1128</td><td>(16) <code>std::shared_ptr&lt;FileArchiver::Result&gt;</code></td><td>exportResult</td></tr></tbody></table><h3 id="filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd"><span><code>FileArchiver::archiveLevel::__l2::&lt;lambda_ac943e513845c7fd6e6317395fc32783&gt;::()::__l2::&lt;lambda_f3dbac58284b04dc57297a0858a258fd&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FileArchiver *const</code></td><td>__this</td></tr><tr><td>8</td><td>(8) <code>Level *</code></td><td>level</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(FileArchiver::Result &amp;)&gt;</code></td><td>exportCallback</td></tr><tr><td>80</td><td>(16) <code>std::shared_ptr&lt;FileArchiver::Result&gt;</code></td><td>exportResult</td></tr></tbody></table><h3 id="filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e"><span><code>FileArchiver::archiveLevel::__l2::&lt;lambda_ac943e513845c7fd6e6317395fc32783&gt;::()::__l2::&lt;lambda_70145daf2eda0b02012b6d6f8f2ca40e&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Level *</code></td><td>level</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>numFiles</td></tr><tr><td>16</td><td>(8) <code>FileArchiver *const</code></td><td>__this</td></tr><tr><td>24</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>outputName</td></tr><tr><td>1064</td><td>(1) <code>bool</code></td><td>isBundle</td></tr><tr><td>1072</td><td>(16) <code>std::shared_ptr&lt;FileArchiver::Result&gt;</code></td><td>exportResult</td></tr></tbody></table><h3 id="filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0" tabindex="-1"><a class="header-anchor" href="#filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0"><span><code>FileArchiver::_importVanillaLevel::__l2::&lt;lambda_982a8571ec925d774f47b3ea87936fc0&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileArchiver&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;FileArchiver::Result&gt;</code></td><td>currentResult</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;void __cdecl(FileArchiver::Result &amp;)&gt;</code></td><td>importCallback</td></tr><tr><td>96</td><td>(16) <code>std::shared_ptr&lt;std::promise&lt;FileArchiver::Result&gt; &gt;</code></td><td>currentPromise</td></tr></tbody></table><h3 id="filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172" tabindex="-1"><a class="header-anchor" href="#filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172"><span><code>FileArchiver::_importVanillaLevel::__l2::&lt;lambda_17892f377568356bdd0cc70fc9fbd172&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;FileArchiver&gt;</code></td><td>weak_this</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;FileArchiver::Result&gt;</code></td><td>currentResult</td></tr><tr><td>32</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>archivedWorldFile</td></tr></tbody></table><h3 id="fancytreetrunk-foliagecoords" tabindex="-1"><a class="header-anchor" href="#fancytreetrunk-foliagecoords"><span><code>FancyTreeTrunk::FoliageCoords</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>BlockPos</code></td><td>baseclass_0</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mBranchBase</td></tr></tbody></table><h3 id="flatworldgeneratoroptions" tabindex="-1"><a class="header-anchor" href="#flatworldgeneratoroptions"><span><code>FlatWorldGeneratorOptions</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mEncodingVersion</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;BlockLayer&gt;</code></td><td>mBlockLayers</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>mBiomeId</td></tr><tr><td>40</td><td>(16) <code>Json::Value</code></td><td>mStructureOptions</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>mTotalLayers</td></tr></tbody></table><h3 id="fixedbiomesource" tabindex="-1"><a class="header-anchor" href="#fixedbiomesource"><span><code>FixedBiomeSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BiomeSource</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>const Biome *</code></td><td>mFixedBiome</td></tr></tbody></table><h3 id="foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8"><span><code>FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::&lt;lambda_d700cb1b2a11b77f5ca7cb09e25db2b8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;bool __cdecl(void)&gt;</code></td><td>getValue</td></tr></tbody></table><h3 id="fd-set" tabindex="-1"><a class="header-anchor" href="#fd-set"><span><code>fd_set</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>fd_count</td></tr><tr><td>8</td><td>(512) <code>unsigned __int64[64]</code></td><td>fd_array</td></tr></tbody></table><h3 id="furnacescreencontrollerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxycallbacks"><span><code>FurnaceScreenControllerProxyCallbacks</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;ContainerController * __cdecl(std::string const &amp;)&gt;</code></td><td>mGetContainerController</td></tr><tr><td>64</td><td>(64) <code>std::function&lt;int __cdecl(void)&gt;</code></td><td>mGetBurnProgress</td></tr><tr><td>128</td><td>(64) <code>std::function&lt;int __cdecl(void)&gt;</code></td><td>mGetLitProgress</td></tr><tr><td>192</td><td>(64) <code>std::function&lt;bool __cdecl(std::string &amp;,int &amp;,int &amp;)&gt;</code></td><td>mIsFinished</td></tr></tbody></table><h3 id="flowerfeature" tabindex="-1"><a class="header-anchor" href="#flowerfeature"><span><code>FlowerFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr></tbody></table><h3 id="fmod-sound" tabindex="-1"><a class="header-anchor" href="#fmod-sound"><span><code>FMOD::Sound</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="ft-matrix" tabindex="-1"><a class="header-anchor" href="#ft-matrix"><span><code>FT_Matrix_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>xx</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>xy</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>yx</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>yy</td></tr></tbody></table><h3 id="ft-vector" tabindex="-1"><a class="header-anchor" href="#ft-vector"><span><code>FT_Vector_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>x</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>y</td></tr></tbody></table><h3 id="ft-bbox" tabindex="-1"><a class="header-anchor" href="#ft-bbox"><span><code>FT_BBox_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>xMin</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>yMin</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>xMax</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>yMax</td></tr></tbody></table><h3 id="ft-open-args" tabindex="-1"><a class="header-anchor" href="#ft-open-args"><span><code>FT_Open_Args_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>flags</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int8 *</code></td><td>memory_base</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>memory_size</td></tr><tr><td>24</td><td>(8) <code>char *</code></td><td>pathname</td></tr><tr><td>32</td><td>(8) <code>FT_StreamRec_ *</code></td><td>stream</td></tr><tr><td>40</td><td>(8) <code>FT_ModuleRec_ *</code></td><td>driver</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>num_params</td></tr><tr><td>56</td><td>(8) <code>FT_Parameter_ *</code></td><td>params</td></tr></tbody></table><h3 id="ft-size-requestrec" tabindex="-1"><a class="header-anchor" href="#ft-size-requestrec"><span><code>FT_Size_RequestRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>FT_Size_Request_Type_</code></td><td>type</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>width</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>height</td></tr><tr><td>12</td><td>(4) <code>unsigned int</code></td><td>horiResolution</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>vertResolution</td></tr></tbody></table><h3 id="ft-raster-params" tabindex="-1"><a class="header-anchor" href="#ft-raster-params"><span><code>FT_Raster_Params_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const FT_Bitmap_ *</code></td><td>target</td></tr><tr><td>8</td><td>(8) <code>const void *</code></td><td>source</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>flags</td></tr><tr><td>24</td><td>(8) <code>void (__fastcall *)(int, int, const FT_Span_ *, void *)</code></td><td>gray_spans</td></tr><tr><td>32</td><td>(8) <code>void (__fastcall *)(int, int, const FT_Span_ *, void *)</code></td><td>black_spans</td></tr><tr><td>40</td><td>(8) <code>int (__fastcall *)(int, int, void *)</code></td><td>bit_test</td></tr><tr><td>48</td><td>(8) <code>void (__fastcall *)(int, int, void *)</code></td><td>bit_set</td></tr><tr><td>56</td><td>(8) <code>void *</code></td><td>user</td></tr><tr><td>64</td><td>(16) <code>FT_BBox_</code></td><td>clip_box</td></tr></tbody></table><h3 id="ft-glyphslotrec" tabindex="-1"><a class="header-anchor" href="#ft-glyphslotrec"><span><code>FT_GlyphSlotRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_LibraryRec_ *</code></td><td>library</td></tr><tr><td>8</td><td>(8) <code>FT_FaceRec_ *</code></td><td>face</td></tr><tr><td>16</td><td>(8) <code>FT_GlyphSlotRec_ *</code></td><td>next</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>glyph_index</td></tr><tr><td>32</td><td>(16) <code>FT_Generic_</code></td><td>generic</td></tr><tr><td>48</td><td>(32) <code>FT_Glyph_Metrics_</code></td><td>metrics</td></tr><tr><td>80</td><td>(4) <code>int</code></td><td>linearHoriAdvance</td></tr><tr><td>84</td><td>(4) <code>int</code></td><td>linearVertAdvance</td></tr><tr><td>88</td><td>(8) <code>FT_Vector_</code></td><td>advance</td></tr><tr><td>96</td><td>(4) <code>FT_Glyph_Format_</code></td><td>format</td></tr><tr><td>104</td><td>(40) <code>FT_Bitmap_</code></td><td>bitmap</td></tr><tr><td>144</td><td>(4) <code>int</code></td><td>bitmap_left</td></tr><tr><td>148</td><td>(4) <code>int</code></td><td>bitmap_top</td></tr><tr><td>152</td><td>(40) <code>FT_Outline_</code></td><td>outline</td></tr><tr><td>192</td><td>(4) <code>unsigned int</code></td><td>num_subglyphs</td></tr><tr><td>200</td><td>(8) <code>FT_SubGlyphRec_ *</code></td><td>subglyphs</td></tr><tr><td>208</td><td>(8) <code>void *</code></td><td>control_data</td></tr><tr><td>216</td><td>(4) <code>int</code></td><td>control_len</td></tr><tr><td>220</td><td>(4) <code>int</code></td><td>lsb_delta</td></tr><tr><td>224</td><td>(4) <code>int</code></td><td>rsb_delta</td></tr><tr><td>232</td><td>(8) <code>void *</code></td><td>other</td></tr><tr><td>240</td><td>(8) <code>FT_Slot_InternalRec_ *</code></td><td>internal</td></tr></tbody></table><h3 id="ft-generic" tabindex="-1"><a class="header-anchor" href="#ft-generic"><span><code>FT_Generic_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void *</code></td><td>data</td></tr><tr><td>8</td><td>(8) <code>void (__fastcall *)(void *)</code></td><td>finalizer</td></tr></tbody></table><h3 id="ft-glyph-metrics" tabindex="-1"><a class="header-anchor" href="#ft-glyph-metrics"><span><code>FT_Glyph_Metrics_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>width</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>height</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>horiBearingX</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>horiBearingY</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>horiAdvance</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>vertBearingX</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>vertBearingY</td></tr><tr><td>28</td><td>(4) <code>int</code></td><td>vertAdvance</td></tr></tbody></table><h3 id="ft-hashkey" tabindex="-1"><a class="header-anchor" href="#ft-hashkey"><span><code>FT_Hashkey_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>num</td></tr><tr><td>1</td><td>(8) <code>const char *</code></td><td>str</td></tr></tbody></table><h3 id="ft-charmaprec" tabindex="-1"><a class="header-anchor" href="#ft-charmaprec"><span><code>FT_CharMapRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_FaceRec_ *</code></td><td>face</td></tr><tr><td>8</td><td>(4) <code>FT_Encoding_</code></td><td>encoding</td></tr><tr><td>12</td><td>(2) <code>unsigned __int16</code></td><td>platform_id</td></tr><tr><td>14</td><td>(2) <code>unsigned __int16</code></td><td>encoding_id</td></tr></tbody></table><h3 id="ft-span" tabindex="-1"><a class="header-anchor" href="#ft-span"><span><code>FT_Span_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>__int16</code></td><td>x</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>len</td></tr><tr><td>4</td><td>(1) <code>unsigned __int8</code></td><td>coverage</td></tr></tbody></table><h3 id="ft-listrec" tabindex="-1"><a class="header-anchor" href="#ft-listrec"><span><code>FT_ListRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_ListNodeRec_ *</code></td><td>head</td></tr><tr><td>8</td><td>(8) <code>FT_ListNodeRec_ *</code></td><td>tail</td></tr></tbody></table><h3 id="ft-data" tabindex="-1"><a class="header-anchor" href="#ft-data"><span><code>FT_Data_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned __int8 *</code></td><td>pointer</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>length</td></tr></tbody></table><h3 id="fieldnameiterator" tabindex="-1"><a class="header-anchor" href="#fieldnameiterator"><span><code>FieldNameIterator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>SubString</code></td><td>str</td></tr><tr><td>16</td><td>(8) <code>wchar_t *</code></td><td>ptr</td></tr></tbody></table><h3 id="floattag-vtbl" tabindex="-1"><a class="header-anchor" href="#floattag-vtbl"><span><code>FloatTag_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FloatTag_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Tag)(Tag *this);</span>
<span class="line">  void (__fastcall *deleteChildren)(Tag *this);</span>
<span class="line">  void (__fastcall *write)(Tag *this, IDataOutput *);</span>
<span class="line">  void (__fastcall *load)(Tag *this, IDataInput *);</span>
<span class="line">  void (__fastcall *writeScriptData)(Tag *this, IDataOutput *);</span>
<span class="line">  void (__fastcall *loadScriptData)(Tag *this, IDataInput *);</span>
<span class="line">  std::string *(__fastcall *toString)(Tag *this, std::string *result);</span>
<span class="line">  Tag::Type (__fastcall *getId)(Tag *this);</span>
<span class="line">  bool (__fastcall *equals)(Tag *this, const Tag *);</span>
<span class="line">  void (__fastcall *print)(Tag *this, const std::string *, PrintStream *);</span>
<span class="line">  void (__fastcall *print)(Tag *this, PrintStream *);</span>
<span class="line">  std::unique_ptr&lt;Tag&gt; *(__fastcall *copy)(Tag *this, std::unique_ptr&lt;Tag&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *hash)(Tag *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertextpacket" tabindex="-1"><a class="header-anchor" href="#filtertextpacket"><span><code>FilterTextPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) FilterTextPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::string mText;</span>
<span class="line">  bool mFromServer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertextpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertextpacket-vtbl"><span><code>FilterTextPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTextPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filechunkmanager" tabindex="-1"><a class="header-anchor" href="#filechunkmanager"><span><code>FileChunkManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileChunkManager</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mTotalSize;</span>
<span class="line">  unsigned int mChunkSize;</span>
<span class="line">  unsigned __int64 mTotalNbChunks;</span>
<span class="line">  unsigned __int64 mRequestedChunks;</span>
<span class="line">  unsigned __int64 mReceivedChunks;</span>
<span class="line">  unsigned __int64 mWrittenChunks;</span>
<span class="line">  std::vector&lt;FileChunkInfo&gt; mChunkInfo;</span>
<span class="line">  MovePriorityQueue&lt;FileChunk,std::less&lt;FileChunk&gt; &gt; mChunkQueue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager"><span><code>FileUploadManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager : std::enable_shared_from_this&lt;FileUploadManager&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadManager_vtbl *__vftable /*VFT*/;</span>
<span class="line">  FileInfo mFile;</span>
<span class="line">  FileUploadManager::MultiPartStreamHelper mMultiPartHelper;</span>
<span class="line">  UploadState mState;</span>
<span class="line">  _BYTE mUploadError[4];</span>
<span class="line">  std::shared_ptr&lt;IFilePicker&gt; mFilePicker;</span>
<span class="line">  std::shared_ptr&lt;IFileChunkUploader&gt; mFileUploader;</span>
<span class="line">  TaskGroup *mIOTaskGroup;</span>
<span class="line">  std::weak_ptr&lt;FileArchiver&gt; mFileArchiver;</span>
<span class="line">  bool mUploadAllAtOnce;</span>
<span class="line">  bool mContinueOnReception;</span>
<span class="line">  bool mUseStream;</span>
<span class="line">  MPMCQueue&lt;std::function&lt;void __cdecl(void)&gt; &gt; mCallbackQueue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-vtbl" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-vtbl"><span><code>FileUploadManager_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileUploadManager_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileUploadManager)(FileUploadManager *this);</span>
<span class="line">  float (__fastcall *getUploadProgress)(FileUploadManager *this);</span>
<span class="line">  void (__fastcall *uploadFileToRealmStorage)(FileUploadManager *this, const std::string *, const Core::Path *, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-multipartstreamhelper" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-multipartstreamhelper"><span><code>FileUploadManager::MultiPartStreamHelper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager::MultiPartStreamHelper</span>
<span class="line">{</span>
<span class="line">  bool needHeader;</span>
<span class="line">  bool needTrailer;</span>
<span class="line">  std::string header;</span>
<span class="line">  std::string trailer;</span>
<span class="line">  unsigned __int64 currentFileByte;</span>
<span class="line">  unsigned __int64 totalFileByte;</span>
<span class="line">  unsigned __int64 totalStreamSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="font" tabindex="-1"><a class="header-anchor" href="#font"><span><code>Font</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Font</span>
<span class="line">{</span>
<span class="line">  Font_vtbl *__vftable /*VFT*/;</span>
<span class="line">  int mFontTexture;</span>
<span class="line">  bool mAutoResetFormat;</span>
<span class="line">  bool mUseCache;</span>
<span class="line">  bool mRenderUnicodeSmooth;</span>
<span class="line">  bool mAlwaysUnicode;</span>
<span class="line">  mce::Color mCurrentColor;</span>
<span class="line">  mce::Color mCaretColor;</span>
<span class="line">  bool mItalic;</span>
<span class="line">  bool mBold;</span>
<span class="line">  bool mStrikethrough;</span>
<span class="line">  bool mUnderlined;</span>
<span class="line">  bool mObfuscated;</span>
<span class="line">  mce::MaterialPtr mFontMat;</span>
<span class="line">  mce::Color mColors[32];</span>
<span class="line">  mce::TextureGroup *mTextures;</span>
<span class="line">  std::map&lt;std::tuple&lt;std::string,mce::Color,float&gt;,std::vector&lt;Font::TextObject&gt;,std::less&lt;std::tuple&lt;std::string,mce::Color,float&gt; &gt;,std::allocator&lt;std::pair&lt;std::tuple&lt;std::string,mce::Color,float&gt; const ,std::vector&lt;Font::TextObject&gt; &gt; &gt; &gt; mStringCache;</span>
<span class="line">  int mObfuscatedIndex;</span>
<span class="line">  float mObfuscatedTextTime;</span>
<span class="line">  Vec2 mCaretRenderPosition;</span>
<span class="line">  Vec2 mCaretRenderSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="font-vtbl" tabindex="-1"><a class="header-anchor" href="#font-vtbl"><span><code>Font_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Font_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Font)(Font *this);</span>
<span class="line">  float (__fastcall *getCharWidth)(Font *this, int);</span>
<span class="line">  void (__fastcall *switchFontsource)(Font *this, const Core::Path *, const Core::Path *);</span>
<span class="line">  std::pair&lt;Core::PathBuffer&lt;std::string &gt; const &amp;,Core::PathBuffer&lt;std::string &gt; const &amp;&gt; *(__fastcall *getFontSources)(Font *this, std::pair&lt;Core::PathBuffer&lt;std::string &gt; const &amp;,Core::PathBuffer&lt;std::string &gt; const &amp;&gt; *result);</span>
<span class="line">  void (__fastcall *fetchPage)(Font *this, int);</span>
<span class="line">  Font::SheetId *(__fastcall *getSheet)(Font *this, Font::SheetId *result, int, int *, bool);</span>
<span class="line">  bool (__fastcall *supportsChar)(Font *this, const int *);</span>
<span class="line">  bool (__fastcall *_supportsShadowInSingleDraw)(Font *this);</span>
<span class="line">  int (__fastcall *getLineLength)(Font *this, const std::string *, float, bool);</span>
<span class="line">  float (__fastcall *getWrapHeight)(Font *this);</span>
<span class="line">  float (__fastcall *getScaleFactor)(Font *this);</span>
<span class="line">  Vec2 *(__fastcall *getTranslationFactor)(Font *this, Vec2 *result);</span>
<span class="line">  bool (__fastcall *isScreenPixelAligned)(Font *this);</span>
<span class="line">  bool (__fastcall *materialCanBeOverridden)(Font *this);</span>
<span class="line">  void (__fastcall *uploadTextureToGPU)(Font *this);</span>
<span class="line">  void (__fastcall *setTextConstantsInScreenContext)(Font *this, ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool);</span>
<span class="line">  float (__fastcall *_getCharWidth)(Font *this, int, bool);</span>
<span class="line">  bool (__fastcall *_isIconPage)(Font *this, const Font::SheetId *);</span>
<span class="line">  mce::Font::Type (__fastcall *getType)(Font *this, const Font::SheetId *);</span>
<span class="line">  std::optional&lt;mce::Font::RenderingParameters&gt; *(__fastcall *tryGetRenderingParameters)(Font *this, std::optional&lt;mce::Font::RenderingParameters&gt; *result, const ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool, const mce::Color *, const glm::tvec2&lt;float,0&gt; *);</span>
<span class="line">  void (__fastcall *drawCached)(Font *this, ScreenContext *, const std::string *, float, float, const mce::Color *, const mce::Color *, const glm::tvec2&lt;float,0&gt; *, bool, bool, mce::MaterialPtr *, int, bool, float, const mce::Color *);</span>
<span class="line">  void (__fastcall *onAppSuspended)(Font *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(Font *this);</span>
<span class="line">  void (__fastcall *reloadFontTextures)(Font *this, ResourceLoadManager *, bool);</span>
<span class="line">  bool (__fastcall *isReloadingTextures)(Font *this);</span>
<span class="line">  void (__fastcall *unloadTextures)(Font *this);</span>
<span class="line">  void (__fastcall *_scanUnicodeCharacterSize)(Font *this, int, const Font::SheetId *, bool);</span>
<span class="line">  bool (__fastcall *isSheetMatch)(Font *this, const Font::SheetId *);</span>
<span class="line">  bool (__fastcall *_containsWideChar)(Font *this, const std::string *);</span>
<span class="line">  float (__fastcall *_buildChar)(Font *this, std::vector&lt;Font::GlyphQuad&gt; *, int, const mce::Color *, bool, float, float, bool);</span>
<span class="line">  ResourceLocation *(__fastcall *_getFontSheetLocation)(Font *this, ResourceLocation *result, const Font::SheetId *, bool);</span>
<span class="line">  const mce::MaterialPtr *(__fastcall *getMaterial)(Font *this, const Font::SheetId *, bool);</span>
<span class="line">  void (__fastcall *flushQueuedImageUploads)(Font *this);</span>
<span class="line">  void (__fastcall *onLanguageChanged)(Font *this, const std::string *);</span>
<span class="line">  void (__fastcall *loadFontData)(Font *this, bool);</span>
<span class="line">  int (__fastcall *_getReplacementCharacter)(Font *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="font-textobject-page" tabindex="-1"><a class="header-anchor" href="#font-textobject-page"><span><code>Font::TextObject::Page</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Font::TextObject::Page</span>
<span class="line">{</span>
<span class="line">  mce::Mesh mMesh;</span>
<span class="line">  mce::TexturePtr mTexture;</span>
<span class="line">  bool mRenderSmooth;</span>
<span class="line">  Font::SheetId mSheet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository" tabindex="-1"><a class="header-anchor" href="#fontrepository"><span><code>FontRepository</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FontRepository : AppPlatformListener, std::enable_shared_from_this&lt;FontRepository&gt;</span>
<span class="line">{</span>
<span class="line">  bool mIsInitialized;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Font&gt;&gt; mLoadedFonts;</span>
<span class="line">  std::unordered_map&lt;std::string,unsigned __int64&gt; mFontNameToIdentifier;</span>
<span class="line">  unsigned __int64 mDefaultFontId;</span>
<span class="line">  unsigned __int64 mRuneFontId;</span>
<span class="line">  unsigned __int64 mUnicodeFontId;</span>
<span class="line">  unsigned __int64 mSmoothFontLatinFontId;</span>
<span class="line">  unsigned __int64 mUIFontId;</span>
<span class="line">  unsigned __int64 mSmoothSmallFontID;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;Font&gt;&gt; mOriginalMinecraftFonts;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;Font&gt;&gt; mOverriddenFonts;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;void&gt; &gt;&gt; mFontLoadingTaskTrackers;</span>
<span class="line">  std::string mLanguageCode;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Font&gt;&gt; mDelayedFontDelete;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository-vtbl" tabindex="-1"><a class="header-anchor" href="#fontrepository-vtbl"><span><code>FontRepository_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FontRepository_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filewatcherupdate" tabindex="-1"><a class="header-anchor" href="#filewatcherupdate"><span><code>FileWatcherUpdate</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileWatcherUpdate</span>
<span class="line">{</span>
<span class="line">  std::optional&lt;std::weak_ptr&lt;mce::Image&gt; &gt; newSkin;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flipbooktexture" tabindex="-1"><a class="header-anchor" href="#flipbooktexture"><span><code>FlipbookTexture</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) FlipbookTexture</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;int&gt; mFrames;</span>
<span class="line">  TextureUVCoordinateSet mTexUVCoordSet;</span>
<span class="line">  int mReplicate;</span>
<span class="line">  mce::TexturePtr mTexturePtr;</span>
<span class="line">  mce::MaterialPtr m2DBlitMaterial;</span>
<span class="line">  std::unique_ptr&lt;Tessellator&gt; mTessellator;</span>
<span class="line">  mce::Mesh mMesh;</span>
<span class="line">  const ResourceLocation mResourceLocation;</span>
<span class="line">  float mCurrFrame;</span>
<span class="line">  int mNumFrames;</span>
<span class="line">  int mFrameSequenceLength;</span>
<span class="line">  int mTicksPerFrame;</span>
<span class="line">  int mWidth;</span>
<span class="line">  int mHeight;</span>
<span class="line">  int mPadSize;</span>
<span class="line">  bool mBlendFrames;</span>
<span class="line">  bool mTickOnlyOnce;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frameupdatecontextbase" tabindex="-1"><a class="header-anchor" href="#frameupdatecontextbase"><span><code>FrameUpdateContextBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrameUpdateContextBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="framerenderobject" tabindex="-1"><a class="header-anchor" href="#framerenderobject"><span><code>FrameRenderObject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj FrameRenderObject</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ViewRenderObject,LinearAllocator&lt;ViewRenderObject&gt; &gt; mViews;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanagerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#focusmanagerproxycallbacks"><span><code>FocusManagerProxyCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj FocusManagerProxyCallbacks</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(std::string const &amp;)&gt; mSetFocusControl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanagerproxy" tabindex="-1"><a class="header-anchor" href="#focusmanagerproxy"><span><code>FocusManagerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusManagerProxy</span>
<span class="line">{</span>
<span class="line">  const FocusManagerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingitemcommand" tabindex="-1"><a class="header-anchor" href="#flyingitemcommand"><span><code>FlyingItemCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FlyingItemCommand</span>
<span class="line">{</span>
<span class="line">  std::string mFromContainer;</span>
<span class="line">  int mFromIndex;</span>
<span class="line">  std::string mToContainer;</span>
<span class="line">  int mToIndex;</span>
<span class="line">  int mFlyingItemIdAux;</span>
<span class="line">  int mColor;</span>
<span class="line">  std::string mBannerPatterns;</span>
<span class="line">  std::string mBannerColors;</span>
<span class="line">  int mModId;</span>
<span class="line">  std::string mModExtendValue;</span>
<span class="line">  int mBannerType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanager" tabindex="-1"><a class="header-anchor" href="#focusmanager"><span><code>FocusManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusManager</span>
<span class="line">{</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mSize;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;UIControl&gt;&gt; mFocusControls;</span>
<span class="line">  __int8 mFocusActive : 1;</span>
<span class="line">  __int8 mFocusResetFlag : 1;</span>
<span class="line">  __int8 mFindClosestControl : 1;</span>
<span class="line">  __int8 mFocusPositionCaptured : 1;</span>
<span class="line">  __int8 mNeedsDefaultFocusUpdate : 1;</span>
<span class="line">  __int8 mIncludeMagnetControls : 1;</span>
<span class="line">  int mFocusedControlIndex;</span>
<span class="line">  std::weak_ptr&lt;UIControl&gt; mFocusedControl;</span>
<span class="line">  std::weak_ptr&lt;UIControl&gt; mLostFocusControl;</span>
<span class="line">  std::weak_ptr&lt;UIControl&gt; mCurrentModalRoot;</span>
<span class="line">  std::weak_ptr&lt;UIControl&gt; mCurrentFocusContainer;</span>
<span class="line">  RecentFocusVector mRecentFocusList;</span>
<span class="line">  std::unique_ptr&lt;FocusManagerProxy&gt; mProxy;</span>
<span class="line">  std::string mPendingFocusControlID;</span>
<span class="line">  int mPendingFocusControlIndex;</span>
<span class="line">  bool mHasPendingFocusControl;</span>
<span class="line">  std::string mPendingFocusCollectionIndexName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingservice" tabindex="-1"><a class="header-anchor" href="#flightingservice"><span><code>FlightingService</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(2)) FlightingService : ServiceClient, std::enable_shared_from_this&lt;FlightingService&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;FlightingToggles&gt; mFlightingToggles;</span>
<span class="line">  IMinecraftEventing *mEventing;</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mCacheLocation;</span>
<span class="line">  const std::string mHostUrl;</span>
<span class="line">  const std::string mClientId;</span>
<span class="line">  std::string mCurrentLanguage;</span>
<span class="line">  std::atomic&lt;enum FlightingService::FetchState&gt; mFetchState;</span>
<span class="line">  std::vector&lt;std::string&gt; mCurrentTreatments;</span>
<span class="line">  std::vector&lt;std::string&gt; mCurrentProgressions;</span>
<span class="line">  std::vector&lt;std::string&gt; mOverrideTreatments;</span>
<span class="line">  std::vector&lt;std::string&gt; mOverrideProgressions;</span>
<span class="line">  std::mutex mQueuedCallbacksMutex;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(std::vector&lt;std::string&gt; const &amp;)&gt;&gt; mQueuedCallbacks;</span>
<span class="line">  std::mutex mTreatmentsMonitorCallbacksMutex;</span>
<span class="line">  std::vector&lt;FlightingService::TreatmentsMonitor&gt; mTreatmentsMonitorCallbacks;</span>
<span class="line">  std::atomic&lt;unsigned int&gt; mNextTreatmentsMonitorHandle;</span>
<span class="line">  std::mutex mProgressionsMonitorCallbacksMutex;</span>
<span class="line">  std::vector&lt;FlightingService::ProgressionsMonitor&gt; mProgressionsMonitorCallbacks;</span>
<span class="line">  std::atomic&lt;unsigned int&gt; mNextProgressionsMonitorHandle;</span>
<span class="line">  bool mTreatmentsOverriden;</span>
<span class="line">  bool mProgressionsOverriden;</span>
<span class="line">  bool mIsNetworkAllowed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingtoggles-flightingtoggle" tabindex="-1"><a class="header-anchor" href="#flightingtoggles-flightingtoggle"><span><code>FlightingToggles::FlightingToggle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingToggles::FlightingToggle</span>
<span class="line">{</span>
<span class="line">  FlightingToggleId toggleId;</span>
<span class="line">  std::unique_ptr&lt;Option&gt; option;</span>
<span class="line">  std::string progressionId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingtoggles" tabindex="-1"><a class="header-anchor" href="#flightingtoggles"><span><code>FlightingToggles</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingToggles : IFlightingToggles</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;FlightingToggles::FlightingToggle&gt; mToggles;</span>
<span class="line">  FlightingService *mFlightingService;</span>
<span class="line">  bool mFlightServiceIsAvailable;</span>
<span class="line">  unsigned int mMonitorHandle;</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mStorageLocation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingtoggles-vtbl" tabindex="-1"><a class="header-anchor" href="#flightingtoggles-vtbl"><span><code>FlightingToggles_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlightingToggles_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFlightingToggles)(IFlightingToggles *this);</span>
<span class="line">  bool (__fastcall *isEnabled)(IFlightingToggles *this, FlightingToggleId);</span>
<span class="line">  void (__fastcall *registerOptionObserverCallback)(IFlightingToggles *this, Bedrock::PubSub::ScopedSubscription *, FlightingToggleId, std::function&lt;void __cdecl(Option const &amp;)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingservice-treatmentsmonitor" tabindex="-1"><a class="header-anchor" href="#flightingservice-treatmentsmonitor"><span><code>FlightingService::TreatmentsMonitor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingService::TreatmentsMonitor</span>
<span class="line">{</span>
<span class="line">  unsigned int handle;</span>
<span class="line">  std::function&lt;void __cdecl(std::vector&lt;std::string&gt; const &amp;)&gt; callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingservice-progressionsmonitor" tabindex="-1"><a class="header-anchor" href="#flightingservice-progressionsmonitor"><span><code>FlightingService::ProgressionsMonitor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingService::ProgressionsMonitor</span>
<span class="line">{</span>
<span class="line">  unsigned int handle;</span>
<span class="line">  std::function&lt;void __cdecl(std::vector&lt;std::string&gt; const &amp;)&gt; callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingservice-vtbl" tabindex="-1"><a class="header-anchor" href="#flightingservice-vtbl"><span><code>FlightingService_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlightingService_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ServiceClient)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *update)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr&lt;RequestHandler&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadmanager" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager"><span><code>FileDownloadManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FileDownloadManager : std::enable_shared_from_this&lt;FileDownloadManager&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadManager_vtbl *__vftable /*VFT*/;</span>
<span class="line">  FileInfo mFile;</span>
<span class="line">  DownloadState mState;</span>
<span class="line">  _BYTE mDownloadError[4];</span>
<span class="line">  std::shared_ptr&lt;IFilePicker&gt; mFilePicker;</span>
<span class="line">  std::shared_ptr&lt;IFileChunkDownloader&gt; mFileDownloader;</span>
<span class="line">  std::shared_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  bool mOwnsTaskGroup;</span>
<span class="line">  MPMCQueue&lt;std::function&lt;void __cdecl(void)&gt; &gt; mCallbackQueue;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mDataBuffer;</span>
<span class="line">  unsigned __int64 mCurrentBufferSize;</span>
<span class="line">  unsigned __int64 mCurrentBufferOffset;</span>
<span class="line">  bool mHasWriteError;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadmanager-vtbl" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-vtbl"><span><code>FileDownloadManager_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDownloadManager_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileDownloadManager)(FileDownloadManager *this);</span>
<span class="line">  void (__fastcall *update)(FileDownloadManager *this);</span>
<span class="line">  void (__fastcall *cancelDownload)(FileDownloadManager *this);</span>
<span class="line">  float (__fastcall *getDownloadProgress)(FileDownloadManager *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frustumculler" tabindex="-1"><a class="header-anchor" href="#frustumculler"><span><code>FrustumCuller</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrustumCuller</span>
<span class="line">{</span>
<span class="line">  Frustum mFrustumData;</span>
<span class="line">  Vec3 mOff;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange" tabindex="-1"><a class="header-anchor" href="#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange"><span><code>FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearRange</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearRange</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mOffset;</span>
<span class="line">  unsigned __int64 mSize;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mCurrentOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fencedringbuffer-core-cpuringbufferallocation-buffer-0" tabindex="-1"><a class="header-anchor" href="#fencedringbuffer-core-cpuringbufferallocation-buffer-0"><span><code>FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer::Buffer&gt; mBuffer;</span>
<span class="line">  const unsigned __int64 mSize;</span>
<span class="line">  std::queue&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::ScopedAllocation,std::deque&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::ScopedAllocation,std::allocator&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::ScopedAllocation&gt; &gt; &gt; mAllocations;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mCurrentAllocationScopeSize;</span>
<span class="line">  FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearRange mHeadRange;</span>
<span class="line">  FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearRange mTailRange;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mUsedSize;</span>
<span class="line">  std::atomic&lt;unsigned short&gt; mCurrentAllocationId;</span>
<span class="line">  unsigned __int64 mCurrentFence;</span>
<span class="line">  std::optional&lt;unsigned __int64&gt; mLastFenceWithAllocation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0" tabindex="-1"><a class="header-anchor" href="#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0"><span><code>FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt; *&gt; mLastPageAllocatedFrom;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mAllocationScopeCheck;</span>
<span class="line">  const unsigned __int64 mInitialSize;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mUsedSize;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mAllocationSize;</span>
<span class="line">  boost::container::flat_map&lt;unsigned __int64,std::shared_ptr&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt; &gt;,std::less&lt;unsigned __int64&gt;,boost::container::new_allocator&lt;std::pair&lt;unsigned __int64,std::shared_ptr&lt;FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt; &gt; &gt; &gt; &gt; mRings;</span>
<span class="line">  unsigned __int16 mRingLifetimeWithNoAllocation;</span>
<span class="line">  unsigned __int64 mCurrentFence;</span>
<span class="line">  std::optional&lt;unsigned __int64&gt; mLastCompletedFenceValue;</span>
<span class="line">  std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer&gt; mBufferImpl;</span>
<span class="line">  std::shared_mutex mAccessLock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-channelcontrol" tabindex="-1"><a class="header-anchor" href="#fmod-channelcontrol"><span><code>FMOD::ChannelControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMOD::ChannelControl</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-channelgroup" tabindex="-1"><a class="header-anchor" href="#fmod-channelgroup"><span><code>FMOD::ChannelGroup</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMOD::ChannelGroup : FMOD::ChannelControl</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-channel" tabindex="-1"><a class="header-anchor" href="#fmod-channel"><span><code>FMOD::Channel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMOD::Channel : FMOD::ChannelControl</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-system" tabindex="-1"><a class="header-anchor" href="#fmod-system"><span><code>FMOD::System</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMOD::System</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfmod" tabindex="-1"><a class="header-anchor" href="#filesystemfmod"><span><code>FileSystemFMOD</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileSystemFMOD</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillingcontainer" tabindex="-1"><a class="header-anchor" href="#fillingcontainer"><span><code>FillingContainer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FillingContainer : Container</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemStack&gt; mItems;</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillingcontainer-vtbl" tabindex="-1"><a class="header-anchor" href="#fillingcontainer-vtbl"><span><code>FillingContainer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FillingContainer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Container)(Container *this);</span>
<span class="line">  void (__fastcall *init)(Container *this);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(Container *this, int, int, std::function&lt;void __cdecl(int,ItemStack const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *addContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  void (__fastcall *removeContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  const ItemStack *(__fastcall *getItem)(Container *this, int);</span>
<span class="line">  bool (__fastcall *hasRoomForItem)(Container *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *addItem)(Container *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *addItemToFirstEmptySlot)(Container *this, ItemStack *);</span>
<span class="line">  void (__fastcall *setItem)(Container *this, int, const ItemStack *);</span>
<span class="line">  void (__fastcall *setItemWithForceBalance)(Container *this, int, const ItemStack *, bool);</span>
<span class="line">  void (__fastcall *removeItem)(Container *this, int, int);</span>
<span class="line">  void (__fastcall *removeAllItems)(Container *this);</span>
<span class="line">  void (__fastcall *dropContents)(Container *this, BlockSource *, const Vec3 *, bool);</span>
<span class="line">  int (__fastcall *getContainerSize)(Container *this);</span>
<span class="line">  int (__fastcall *getMaxStackSize)(Container *this);</span>
<span class="line">  void (__fastcall *startOpen)(Container *this, Player *);</span>
<span class="line">  void (__fastcall *stopOpen)(Container *this, Player *);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getSlotCopies)(Container *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  const std::vector&lt;ItemStack const *&gt; *(__fastcall *getSlots)(Container *this, const std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getItemCount)(Container *this, const ItemStack *);</span>
<span class="line">  int (__fastcall *findFirstSlotForItem)(Container *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canPushInItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  bool (__fastcall *canPullOutItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  void (__fastcall *setContainerChanged)(Container *this, int);</span>
<span class="line">  void (__fastcall *setContainerMoved)(Container *this);</span>
<span class="line">  void (__fastcall *setCustomName)(Container *this, const std::string *);</span>
<span class="line">  bool (__fastcall *hasCustomName)(Container *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Container *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Container *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *createTransactionContext)(Container *this, std::function&lt;void __cdecl(Container &amp;,int,ItemStack const &amp;,ItemStack const &amp;)&gt;, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *initializeContainerContents)(Container *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *reviewItems)(Container *this, Level *);</span>
<span class="line">  bool (__fastcall *add)(FillingContainer *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *canAdd)(FillingContainer *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *clearSlot)(FillingContainer *this, int);</span>
<span class="line">  int (__fastcall *clearInventory)(FillingContainer *this, int);</span>
<span class="line">  void (__fastcall *load)(FillingContainer *this, const ListTag *, const SemVersion *, Level *);</span>
<span class="line">  int (__fastcall *getEmptySlotsCount)(FillingContainer *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinitionregistry" tabindex="-1"><a class="header-anchor" href="#fogdefinitionregistry"><span><code>FogDefinitionRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinitionRegistry : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  WeakRefT&lt;SharePtrRefTraits&lt;FogDefinition const &gt; &gt; mDefaultFogDefinition;</span>
<span class="line">  std::unordered_map&lt;HashedString,OwnerPtrT&lt;SharePtrRefTraits&lt;FogDefinition const &gt; &gt;&gt; mFogDefinitionMap;</span>
<span class="line">  std::unordered_map&lt;HashedString,OwnerPtrT&lt;SharePtrRefTraits&lt;FogDefinition const &gt; &gt;&gt; mBackCompatFogDefinitionMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogmanager" tabindex="-1"><a class="header-anchor" href="#fogmanager"><span><code>FogManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogManager : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;FogManager::Layer&gt; mFogLayers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flushableenv" tabindex="-1"><a class="header-anchor" href="#flushableenv"><span><code>FlushableEnv</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlushableEnv : leveldb::EnvWrapper</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flushableenv-vtbl" tabindex="-1"><a class="header-anchor" href="#flushableenv-vtbl"><span><code>FlushableEnv_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlushableEnv_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Env)(leveldb::Env *this);</span>
<span class="line">  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector&lt;std::string&gt; *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);</span>
<span class="line">  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);</span>
<span class="line">  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);</span>
<span class="line">  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);</span>
<span class="line">  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);</span>
<span class="line">  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);</span>
<span class="line">  void (__fastcall *flushToPermanentStorage)(FlushableEnv *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionmanager" tabindex="-1"><a class="header-anchor" href="#functionmanager"><span><code>FunctionManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FunctionManager</span>
<span class="line">{</span>
<span class="line">  FunctionManager_vtbl *__vftable /*VFT*/;</span>
<span class="line">  const GameRule *mGameRule;</span>
<span class="line">  bool mIsProcessingStack;</span>
<span class="line">  std::vector&lt;FunctionManager::QueuedCommand&gt; mCommandList;</span>
<span class="line">  std::unordered_map&lt;CommandOrigin const *,FunctionManager::OriginMapping&gt; mOriginMap;</span>
<span class="line">  std::unique_ptr&lt;ICommandDispatcher&gt; mCommandDispatcher;</span>
<span class="line">  std::unique_ptr&lt;CommandOrigin&gt; mTickOrigin;</span>
<span class="line">  std::unordered_map&lt;std::string,std::unique_ptr&lt;FunctionEntry&gt;&gt; mFunctions;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;FunctionEntry *&gt;&gt; mTickFunctions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionmanager-vtbl" tabindex="-1"><a class="header-anchor" href="#functionmanager-vtbl"><span><code>FunctionManager_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FunctionManager_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FunctionManager)(FunctionManager *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionmanager-queuedcommand" tabindex="-1"><a class="header-anchor" href="#functionmanager-queuedcommand"><span><code>FunctionManager::QueuedCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FunctionManager::QueuedCommand</span>
<span class="line">{</span>
<span class="line">  IFunctionEntry *mFunction;</span>
<span class="line">  const CommandOrigin *mOrigin;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionentry" tabindex="-1"><a class="header-anchor" href="#functionentry"><span><code>FunctionEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FunctionEntry : IFunctionEntry</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;IFunctionEntry&gt;&gt; mCommandList;</span>
<span class="line">  _BYTE mState[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionentry-vtbl" tabindex="-1"><a class="header-anchor" href="#functionentry-vtbl"><span><code>FunctionEntry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FunctionEntry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFunctionEntry)(IFunctionEntry *this);</span>
<span class="line">  void (__fastcall *execute)(IFunctionEntry *this, FunctionManager *, const CommandOrigin *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filearchiver" tabindex="-1"><a class="header-anchor" href="#filearchiver"><span><code>FileArchiver</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileArchiver : Bedrock::EnableNonOwnerReferences, std::enable_shared_from_this&lt;FileArchiver&gt;</span>
<span class="line">{</span>
<span class="line">  Core::ZipUtils::ZipProgress mProgress;</span>
<span class="line">  std::promise&lt;FileArchiver::Result&gt; mLastResult;</span>
<span class="line">  FileArchiver::State mCurrentState;</span>
<span class="line">  Core::FilePathManager *mFilePathManager;</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;)&gt; mDisplayMessageCallback;</span>
<span class="line">  ResourcePackRepository *mResourcePackRepository;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedataresponse" tabindex="-1"><a class="header-anchor" href="#filedataresponse"><span><code>FileDataResponse</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDataResponse</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFullPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedatarequest" tabindex="-1"><a class="header-anchor" href="#filedatarequest"><span><code>FileDataRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDataRequest : RequestHandler</span>
<span class="line">{</span>
<span class="line">  const std::string mContentUrl;</span>
<span class="line">  std::function&lt;void __cdecl(Core::Path const &amp;)&gt; mCallback;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFileCacheLocation;</span>
<span class="line">  std::vector&lt;std::basic_regex&lt;char,std::regex_traits&lt;char&gt; &gt;&gt; mRequiredContentTypes;</span>
<span class="line">  std::shared_ptr&lt;FileDataResponse&gt; mFileDataResponse;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedatarequest-vtbl" tabindex="-1"><a class="header-anchor" href="#filedatarequest-vtbl"><span><code>FileDataRequest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDataRequest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureregistry" tabindex="-1"><a class="header-anchor" href="#featureregistry"><span><code>FeatureRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureRegistry</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;IFeature&gt;&gt; mFeatureRegistry;</span>
<span class="line">  std::vector&lt;OwnerPtrT&lt;FeatureRefTraits&gt;&gt; mFeatureSlots;</span>
<span class="line">  std::unordered_map&lt;HashedString,unsigned __int64&gt; mFeatureLookupMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-abstractfeatureholder" tabindex="-1"><a class="header-anchor" href="#featureloading-abstractfeatureholder"><span><code>FeatureLoading::AbstractFeatureHolder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  FeatureLoading::AbstractFeatureHolder_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-abstractfeatureholder-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-abstractfeatureholder-vtbl"><span><code>FeatureLoading::AbstractFeatureHolder_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::AbstractFeatureHolder_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-featurerootparsecontext" tabindex="-1"><a class="header-anchor" href="#featureloading-featurerootparsecontext"><span><code>FeatureLoading::FeatureRootParseContext</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::FeatureRootParseContext</span>
<span class="line">{</span>
<span class="line">  std::reference_wrapper&lt;std::string &gt; mFeatureName;</span>
<span class="line">  std::reference_wrapper&lt;IWorldRegistriesProvider&gt; mRegistryProvider;</span>
<span class="line">  std::reference_wrapper&lt;ResourcePackManager const &gt; mPackManager;</span>
<span class="line">  std::unique_ptr&lt;FeatureLoading::AbstractFeatureHolder&gt; mFeatureHolder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretypefactory" tabindex="-1"><a class="header-anchor" href="#featuretypefactory"><span><code>FeatureTypeFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureTypeFactory</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::function&lt;IFeature * __cdecl(FeatureRegistry &amp;,std::string const &amp;)&gt;&gt; mFeatureGenerators;</span>
<span class="line">  std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,FeatureLoading::FeatureRootParseContext&gt; &gt; mSchema;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(Documentation::Node &amp;)&gt;&gt; mDocumentationGenerators;</span>
<span class="line">  std::unique_ptr&lt;JsonDefinitionUpgrader::IJsonDefinitionUpgrader&gt; mFeatureDefinitionUpgrader;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factory-dimension-level-scheduler-automaticid-dimension-int" tabindex="-1"><a class="header-anchor" href="#factory-dimension-level-scheduler-automaticid-dimension-int"><span><code>Factory&lt;Dimension,Level &amp;,Scheduler &amp;,AutomaticID&lt;Dimension,int&gt; &amp;&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Factory&lt;Dimension,Level &amp;,Scheduler &amp;,AutomaticID&lt;Dimension,int&gt; &amp;&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::function&lt;std::unique_ptr&lt;Dimension&gt; __cdecl(Level &amp;,Scheduler &amp;,AutomaticID&lt;Dimension,int&gt; &amp;)&gt;&gt; mFactoryMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feature-vtbl" tabindex="-1"><a class="header-anchor" href="#feature-vtbl"><span><code>Feature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Feature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertest-definition" tabindex="-1"><a class="header-anchor" href="#filtertest-definition"><span><code>FilterTest::Definition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj FilterTest::Definition</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mDescription;</span>
<span class="line">  const FilterParamDefinition *mSubjectDefinition;</span>
<span class="line">  const FilterParamDefinition *mDomainDefinition;</span>
<span class="line">  const FilterParamDefinition *mOperatorDefinition;</span>
<span class="line">  const FilterParamDefinition *mValueDefinition;</span>
<span class="line">  std::function&lt;std::shared_ptr&lt;FilterTest&gt; __cdecl(void)&gt; mFactory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertest-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertest-vtbl"><span><code>FilterTest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factory-eventresponse" tabindex="-1"><a class="header-anchor" href="#factory-eventresponse"><span><code>Factory&lt;EventResponse&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj Factory&lt;EventResponse&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::function&lt;std::unique_ptr&lt;EventResponse&gt; __cdecl(void)&gt;&gt; mFactoryMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fuelitemcomponent" tabindex="-1"><a class="header-anchor" href="#fuelitemcomponent"><span><code>FuelItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) FuelItemComponent : ItemComponent</span>
<span class="line">{</span>
<span class="line">  float mFuelDuration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fuelitemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#fuelitemcomponent-vtbl"><span><code>FuelItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FuelItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemComponent)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);</span>
<span class="line">  void (__fastcall *writeSettings)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(ItemComponent *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponentlegacy-effect" tabindex="-1"><a class="header-anchor" href="#fooditemcomponentlegacy-effect"><span><code>FoodItemComponentLegacy::Effect</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FoodItemComponentLegacy::Effect</span>
<span class="line">{</span>
<span class="line">  const char *descriptionId;</span>
<span class="line">  int id;</span>
<span class="line">  int duration;</span>
<span class="line">  int amplifier;</span>
<span class="line">  float chance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponentlegacy" tabindex="-1"><a class="header-anchor" href="#fooditemcomponentlegacy"><span><code>FoodItemComponentLegacy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoodItemComponentLegacy : IFoodItemComponent</span>
<span class="line">{</span>
<span class="line">  const Item *mOwner;</span>
<span class="line">  int mNutrition;</span>
<span class="line">  float mSaturationModifier;</span>
<span class="line">  std::string mUsingConvertsTo;</span>
<span class="line">  _BYTE mOnUseAction[4];</span>
<span class="line">  Vec3 mOnUseRange;</span>
<span class="line">  std::string mCoolDownType;</span>
<span class="line">  int mCooldownTime;</span>
<span class="line">  bool mCanAlwaysEat;</span>
<span class="line">  std::vector&lt;FoodItemComponentLegacy::Effect&gt; mEffects;</span>
<span class="line">  std::vector&lt;unsigned int&gt; mRemoveEffects;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponentlegacy-vtbl" tabindex="-1"><a class="header-anchor" href="#fooditemcomponentlegacy-vtbl"><span><code>FoodItemComponentLegacy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FoodItemComponentLegacy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFoodItemComponent)(IFoodItemComponent *this);</span>
<span class="line">  int (__fastcall *getNutrition)(IFoodItemComponent *this);</span>
<span class="line">  float (__fastcall *getSaturationModifier)(IFoodItemComponent *this);</span>
<span class="line">  const Item *(__fastcall *eatItem)(IFoodItemComponent *this, ItemStack *, Actor *, Level *);</span>
<span class="line">  bool (__fastcall *use)(IFoodItemComponent *this, ItemStack *, Player *);</span>
<span class="line">  const Item *(__fastcall *useTimeDepleted)(IFoodItemComponent *this, ItemStack *, Player *, Level *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factory-baselighttextureimagebuilder-level-scheduler" tabindex="-1"><a class="header-anchor" href="#factory-baselighttextureimagebuilder-level-scheduler"><span><code>Factory&lt;BaseLightTextureImageBuilder,Level &amp;,Scheduler &amp;&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Factory&lt;BaseLightTextureImageBuilder,Level &amp;,Scheduler &amp;&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::function&lt;std::unique_ptr&lt;BaseLightTextureImageBuilder&gt; __cdecl(Level &amp;,Scheduler &amp;)&gt;&gt; mFactoryMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factory-blockcomponentdescription" tabindex="-1"><a class="header-anchor" href="#factory-blockcomponentdescription"><span><code>Factory&lt;BlockComponentDescription&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Factory&lt;BlockComponentDescription&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::function&lt;std::unique_ptr&lt;BlockComponentDescription&gt; __cdecl(void)&gt;&gt; mFactoryMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fishinghook" tabindex="-1"><a class="header-anchor" href="#fishinghook"><span><code>FishingHook</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FishingHook : Actor</span>
<span class="line">{</span>
<span class="line">  const float SHOOT_SPEED;</span>
<span class="line">  const float SHOOT_POWER;</span>
<span class="line">  const int NUM_PERCENTAGE_STEPS;</span>
<span class="line">  bool mInGround;</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  float mFishAngle;</span>
<span class="line">  int mLife;</span>
<span class="line">  int mFlightTime;</span>
<span class="line">  int mTimeUntilHooked;</span>
<span class="line">  int mTimeUntilLured;</span>
<span class="line">  int mTimeUntilNibble;</span>
<span class="line">  int mFishingSpeed;</span>
<span class="line">  int mLerpSteps;</span>
<span class="line">  Vec3 mLerpPos;</span>
<span class="line">  float mLerpRotX;</span>
<span class="line">  float mLerpRotY;</span>
<span class="line">  float mBobTimer;</span>
<span class="line">  Vec3 mTargetPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fishinghook-vtbl" tabindex="-1"><a class="header-anchor" href="#fishinghook-vtbl"><span><code>FishingHook_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FishingHook_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filepickersettings" tabindex="-1"><a class="header-anchor" href="#filepickersettings"><span><code>FilePickerSettings</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilePickerSettings</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(std::shared_ptr&lt;FilePickerSettings&gt;)&gt; onCancel;</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; onOperationComplete;</span>
<span class="line">  std::function&lt;void __cdecl(std::shared_ptr&lt;FilePickerSettings&gt;,Core::Path const &amp;)&gt; onPick;</span>
<span class="line">  std::vector&lt;FilePickerSettings::FileDescription&gt; mFileDescriptions;</span>
<span class="line">  unsigned __int64 mDefaultFileExtensionIndex;</span>
<span class="line">  FilePickerSettings::PickerType mPickerType;</span>
<span class="line">  std::string mDefaultFileName;</span>
<span class="line">  std::string mDefaultAlbumName;</span>
<span class="line">  std::string mFilePickerTitle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles" tabindex="-1"><a class="header-anchor" href="#featuretoggles"><span><code>FeatureToggles</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureToggles : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;FeatureToggles::FeatureToggle&gt; mFeatures;</span>
<span class="line">  std::vector&lt;Bedrock::PubSub::ScopedSubscription&gt; mOptionLockSubscriptions;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFilePath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facing" tabindex="-1"><a class="header-anchor" href="#facing"><span><code>Facing</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Facing</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facing-plane" tabindex="-1"><a class="header-anchor" href="#facing-plane"><span><code>Facing::Plane</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Facing::Plane</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-asyncreadinfo" tabindex="-1"><a class="header-anchor" href="#fmod-asyncreadinfo"><span><code>FMOD_ASYNCREADINFO</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FMOD_ASYNCREADINFO</span>
<span class="line">{</span>
<span class="line">  void *handle;</span>
<span class="line">  unsigned int offset;</span>
<span class="line">  unsigned int sizebytes;</span>
<span class="line">  int priority;</span>
<span class="line">  void *userdata;</span>
<span class="line">  void *buffer;</span>
<span class="line">  unsigned int bytesread;</span>
<span class="line">  void (__fastcall *done)(FMOD_ASYNCREADINFO *, FMOD_RESULT);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-guid" tabindex="-1"><a class="header-anchor" href="#fmod-guid"><span><code>FMOD_GUID</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FMOD_GUID</span>
<span class="line">{</span>
<span class="line">  unsigned int Data1;</span>
<span class="line">  unsigned __int16 Data2;</span>
<span class="line">  unsigned __int16 Data3;</span>
<span class="line">  unsigned __int8 Data4[8];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-createsoundexinfo" tabindex="-1"><a class="header-anchor" href="#fmod-createsoundexinfo"><span><code>FMOD_CREATESOUNDEXINFO</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FMOD_CREATESOUNDEXINFO</span>
<span class="line">{</span>
<span class="line">  int cbsize;</span>
<span class="line">  unsigned int length;</span>
<span class="line">  unsigned int fileoffset;</span>
<span class="line">  int numchannels;</span>
<span class="line">  int defaultfrequency;</span>
<span class="line">  FMOD_SOUND_FORMAT format;</span>
<span class="line">  unsigned int decodebuffersize;</span>
<span class="line">  int initialsubsound;</span>
<span class="line">  int numsubsounds;</span>
<span class="line">  int *inclusionlist;</span>
<span class="line">  int inclusionlistnum;</span>
<span class="line">  FMOD_RESULT (__fastcall *pcmreadcallback)(struct FMOD_SOUND *, void *, unsigned int);</span>
<span class="line">  FMOD_RESULT (__fastcall *pcmsetposcallback)(struct FMOD_SOUND *, int, unsigned int, unsigned int);</span>
<span class="line">  FMOD_RESULT (__fastcall *nonblockcallback)(struct FMOD_SOUND *, FMOD_RESULT);</span>
<span class="line">  const char *dlsname;</span>
<span class="line">  const char *encryptionkey;</span>
<span class="line">  int maxpolyphony;</span>
<span class="line">  void *userdata;</span>
<span class="line">  FMOD_SOUND_TYPE suggestedsoundtype;</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuseropen)(const char *, unsigned int *, void **, void *);</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuserclose)(void *, void *);</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuserread)(void *, void *, unsigned int, unsigned int *, void *);</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuserseek)(void *, unsigned int, void *);</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuserasyncread)(FMOD_ASYNCREADINFO *, void *);</span>
<span class="line">  FMOD_RESULT (__fastcall *fileuserasynccancel)(FMOD_ASYNCREADINFO *, void *);</span>
<span class="line">  void *fileuserdata;</span>
<span class="line">  int filebuffersize;</span>
<span class="line">  FMOD_CHANNELORDER channelorder;</span>
<span class="line">  unsigned int channelmask;</span>
<span class="line">  struct FMOD_SOUNDGROUP *initialsoundgroup;</span>
<span class="line">  unsigned int initialseekposition;</span>
<span class="line">  unsigned int initialseekpostype;</span>
<span class="line">  int ignoresetfilesystem;</span>
<span class="line">  unsigned int audioqueuepolicy;</span>
<span class="line">  unsigned int minmidigranularity;</span>
<span class="line">  int nonblockthreadid;</span>
<span class="line">  FMOD_GUID *fsbguid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmodfiledescriptor" tabindex="-1"><a class="header-anchor" href="#fmodfiledescriptor"><span><code>FMODFileDescriptor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMODFileDescriptor</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mFileSize;</span>
<span class="line">  std::string mFileName;</span>
<span class="line">  std::mutex mFileMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmodfiletracker" tabindex="-1"><a class="header-anchor" href="#fmodfiletracker"><span><code>FMODFileTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FMODFileTracker</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;void *,std::shared_ptr&lt;FMODFileDescriptor&gt;&gt; mFileDescriptorsMap;</span>
<span class="line">  std::mutex mMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fetchimageparams" tabindex="-1"><a class="header-anchor" href="#fetchimageparams"><span><code>FetchImageParams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FetchImageParams</span>
<span class="line">{</span>
<span class="line">  std::string mContentUrl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscomponent" tabindex="-1"><a class="header-anchor" href="#focuscomponent"><span><code>FocusComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FocusComponent : UIComponent</span>
<span class="line">{</span>
<span class="line">  FocusManager *mFocusManager;</span>
<span class="line">  int mDefaultFocusPrecedence;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mCapturedFocusPoint;</span>
<span class="line">  std::string mFocusIdentifier;</span>
<span class="line">  std::unordered_map&lt;enum ui::CardinalDirection,std::string&gt; mDirectionalFocusOverrides;</span>
<span class="line">  std::unordered_map&lt;std::string,std::unordered_map&lt;enum ui::CardinalDirection,std::string&gt;&gt; mNamedMappingLookupData;</span>
<span class="line">  __int8 mFocusEnabled : 1;</span>
<span class="line">  __int8 mFocusWrapEnabled : 1;</span>
<span class="line">  __int8 mFocusPointCaptured : 1;</span>
<span class="line">  __int8 mFocusMagnetEnabled : 1;</span>
<span class="line">  __int8 mResetOnFocusLost : 1;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#focuscomponent-vtbl"><span><code>FocusComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FocusComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="formattedachievementdata" tabindex="-1"><a class="header-anchor" href="#formattedachievementdata"><span><code>FormattedAchievementData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FormattedAchievementData</span>
<span class="line">{</span>
<span class="line">  std::string mAchievementId;</span>
<span class="line">  std::string mDisplayNames;</span>
<span class="line">  std::string mDisplayDescription;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mTexturePath;</span>
<span class="line">  std::string mTextureLocationType;</span>
<span class="line">  bool mVisibleWorldIcon;</span>
<span class="line">  bool mIsLocked;</span>
<span class="line">  std::string mAchievementGamerScore;</span>
<span class="line">  std::string mAchievementWorldScore;</span>
<span class="line">  float mProgressBar;</span>
<span class="line">  const StoreCatalogItem *mPersonaReward;</span>
<span class="line">  mce::UUID mPersonaRewardId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="formattedplayerstats" tabindex="-1"><a class="header-anchor" href="#formattedplayerstats"><span><code>FormattedPlayerStats</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FormattedPlayerStats</span>
<span class="line">{</span>
<span class="line">  std::string mGamerscoreValue;</span>
<span class="line">  std::string mAchievementValue;</span>
<span class="line">  std::string mTimePlayedValue;</span>
<span class="line">  std::string mAchievementPercentage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-id-descriptor" tabindex="-1"><a class="header-anchor" href="#file-id-descriptor"><span><code>FILE_ID_DESCRIPTOR</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FILE_ID_DESCRIPTOR</span>
<span class="line">{</span>
<span class="line">  unsigned int dwSize;</span>
<span class="line">  _FILE_ID_TYPE Type;</span>
<span class="line">  $DDC60D76A4217E10985A7D269A0E4857 ___u2;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flashwinfo" tabindex="-1"><a class="header-anchor" href="#flashwinfo"><span><code>FLASHWINFO</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) FLASHWINFO</span>
<span class="line">{</span>
<span class="line">  unsigned int cbSize;</span>
<span class="line">  HWND__ *hwnd;</span>
<span class="line">  unsigned int dwFlags;</span>
<span class="line">  unsigned int uCount;</span>
<span class="line">  unsigned int dwTimeout;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firstpersonlookbehavior" tabindex="-1"><a class="header-anchor" href="#firstpersonlookbehavior"><span><code>FirstPersonLookBehavior</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FirstPersonLookBehavior : CameraBehavior&lt;FirstPersonLookBehavior&gt;</span>
<span class="line">{</span>
<span class="line">  float mYaw;</span>
<span class="line">  float mPitch;</span>
<span class="line">  float mYawDelta;</span>
<span class="line">  float mPitchMin;</span>
<span class="line">  float mPitchMax;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firstpersonlookbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#firstpersonlookbehavior-vtbl"><span><code>FirstPersonLookBehavior_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FirstPersonLookBehavior_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flybehavior" tabindex="-1"><a class="header-anchor" href="#flybehavior"><span><code>FlyBehavior</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyBehavior : CameraBehavior&lt;FlyBehavior&gt;</span>
<span class="line">{</span>
<span class="line">  float mSpeed;</span>
<span class="line">  float mSpeedAlt;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flybehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#flybehavior-vtbl"><span><code>FlyBehavior_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyBehavior_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firstpersonlookbehaviorloader" tabindex="-1"><a class="header-anchor" href="#firstpersonlookbehaviorloader"><span><code>FirstPersonLookBehaviorLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FirstPersonLookBehaviorLoader : CameraBehaviorLoader</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firstpersonlookbehaviorloader-vtbl" tabindex="-1"><a class="header-anchor" href="#firstpersonlookbehaviorloader-vtbl"><span><code>FirstPersonLookBehaviorLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FirstPersonLookBehaviorLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);</span>
<span class="line">  std::unique_ptr&lt;ICameraBehavior&gt; *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr&lt;ICameraBehavior&gt; *result);</span>
<span class="line">  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flybehaviorloader" tabindex="-1"><a class="header-anchor" href="#flybehaviorloader"><span><code>FlyBehaviorLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyBehaviorLoader : CameraBehaviorLoader</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flybehaviorloader-vtbl" tabindex="-1"><a class="header-anchor" href="#flybehaviorloader-vtbl"><span><code>FlyBehaviorLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyBehaviorLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);</span>
<span class="line">  std::unique_ptr&lt;ICameraBehavior&gt; *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr&lt;ICameraBehavior&gt; *result);</span>
<span class="line">  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation" tabindex="-1"><a class="header-anchor" href="#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation"><span><code>FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearAllocation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,0&gt;::LinearAllocation</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mOffsetPrefix;</span>
<span class="line">  unsigned __int64 mDataOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireblock" tabindex="-1"><a class="header-anchor" href="#fireblock"><span><code>FireBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FireBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;BlockPos,std::string&gt; mFireSourceMap;</span>
<span class="line">  AABB mAabb;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireblock-vtbl" tabindex="-1"><a class="header-anchor" href="#fireblock-vtbl"><span><code>FireBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foliagecolor" tabindex="-1"><a class="header-anchor" href="#foliagecolor"><span><code>FoliageColor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoliageColor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileentry" tabindex="-1"><a class="header-anchor" href="#fileentry"><span><code>FileEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FileEntry</span>
<span class="line">{</span>
<span class="line">  int file_id;</span>
<span class="line">  unsigned int offset;</span>
<span class="line">  unsigned int length;</span>
<span class="line">  unsigned int origin_len;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frontloadedresources" tabindex="-1"><a class="header-anchor" href="#frontloadedresources"><span><code>FrontloadedResources</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrontloadedResources</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factorycomponent" tabindex="-1"><a class="header-anchor" href="#factorycomponent"><span><code>FactoryComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FactoryComponent : UIComponent</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;UIControlFactory&gt; mControlFactory;</span>
<span class="line">  std::string mFactoryName;</span>
<span class="line">  std::unordered_map&lt;std::string,std::string&gt; mControlIdToTemplateLookup;</span>
<span class="line">  std::vector&lt;std::pair&lt;std::string const ,Json::Value const &gt;&gt; mVariables;</span>
<span class="line">  std::shared_ptr&lt;UIControl&gt; mControlTemplate;</span>
<span class="line">  std::vector&lt;std::weak_ptr&lt;UIControl&gt;&gt; mProgeny;</span>
<span class="line">  bool mFactoryIsChild;</span>
<span class="line">  int mMaxSize;</span>
<span class="line">  _BYTE mInsertPosition[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factorycomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#factorycomponent-vtbl"><span><code>FactoryComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FactoryComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscontainercustomdata" tabindex="-1"><a class="header-anchor" href="#focuscontainercustomdata"><span><code>FocusContainerCustomData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusContainerCustomData</span>
<span class="line">{</span>
<span class="line">  std::string otherFocusContainerName;</span>
<span class="line">  std::string focusIdInside;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscontainercomponent" tabindex="-1"><a class="header-anchor" href="#focuscontainercomponent"><span><code>FocusContainerComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FocusContainerComponent : UIComponent</span>
<span class="line">{</span>
<span class="line">  RecentFocusVector mRecentFocusList;</span>
<span class="line">  std::weak_ptr&lt;UIControl&gt; mLastFocusedControl;</span>
<span class="line">  std::unordered_map&lt;enum ui::CardinalDirection,enum FocusNavigationMode&gt; mDirectionalFocusOverrides;</span>
<span class="line">  std::unordered_map&lt;enum ui::CardinalDirection,std::vector&lt;FocusContainerCustomData&gt;&gt; mFocusContainerCustomOverrides;</span>
<span class="line">  bool mUseLastFocus;</span>
<span class="line">  bool mWrappingAllowed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscontainercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#focuscontainercomponent-vtbl"><span><code>FocusContainerComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FocusContainerComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50" tabindex="-1"><a class="header-anchor" href="#focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50"><span><code>FocusComponent::_captureFocusPoint::__l2::&lt;lambda_0e51f1eba29be0dc80ad7fe30da0fb50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusComponent::_captureFocusPoint::__l2::&lt;lambda_0e51f1eba29be0dc80ad7fe30da0fb50&gt;</span>
<span class="line">{</span>
<span class="line">  const UIControl *owner;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967" tabindex="-1"><a class="header-anchor" href="#factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967"><span><code>FactoryComponent::create::__l52::&lt;lambda_98dfe690793ad1dd20aceb51ef2d7967&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FactoryComponent::create::__l52::&lt;lambda_98dfe690793ad1dd20aceb51ef2d7967&gt;</span>
<span class="line">{</span>
<span class="line">  const UIPropertyBag *properties;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingitemrenderer" tabindex="-1"><a class="header-anchor" href="#flyingitemrenderer"><span><code>FlyingItemRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyingItemRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ui::FlyingItem&gt; mFlyingItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingitemrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#flyingitemrenderer-vtbl"><span><code>FlyingItemRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyingItemRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedeleteprogresshandler" tabindex="-1"><a class="header-anchor" href="#filedeleteprogresshandler"><span><code>FileDeleteProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FileDeleteProgressHandler : ProgressHandler</span>
<span class="line">{</span>
<span class="line">  ContentManager *mContentManager;</span>
<span class="line">  std::vector&lt;ContentItem const *&gt; mToDelete;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  bool mDeleteComplete;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedeleteprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#filedeleteprogresshandler-vtbl"><span><code>FileDeleteProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDeleteProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontalias" tabindex="-1"><a class="header-anchor" href="#fontalias"><span><code>FontAlias</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FontAlias : Font</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;FontAlias::ReferenceData&gt; mFontReferences;</span>
<span class="line">  std::string mCurrentLanguageCode;</span>
<span class="line">  bool mAllReferencesMaterialsCanBeOverridden;</span>
<span class="line">  bool mAllReferencesScreenPixelAligned;</span>
<span class="line">  bool mAllReferencesSupportShadowInSingleDraw;</span>
<span class="line">  float mMaxWrapHeight;</span>
<span class="line">  float mMaxScalar;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontalias-vtbl" tabindex="-1"><a class="header-anchor" href="#fontalias-vtbl"><span><code>FontAlias_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FontAlias_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Font)(Font *this);</span>
<span class="line">  float (__fastcall *getCharWidth)(Font *this, int);</span>
<span class="line">  void (__fastcall *switchFontsource)(Font *this, const Core::Path *, const Core::Path *);</span>
<span class="line">  std::pair&lt;Core::PathBuffer&lt;std::string &gt; const &amp;,Core::PathBuffer&lt;std::string &gt; const &amp;&gt; *(__fastcall *getFontSources)(Font *this, std::pair&lt;Core::PathBuffer&lt;std::string &gt; const &amp;,Core::PathBuffer&lt;std::string &gt; const &amp;&gt; *result);</span>
<span class="line">  void (__fastcall *fetchPage)(Font *this, int);</span>
<span class="line">  Font::SheetId *(__fastcall *getSheet)(Font *this, Font::SheetId *result, int, int *, bool);</span>
<span class="line">  bool (__fastcall *supportsChar)(Font *this, const int *);</span>
<span class="line">  bool (__fastcall *_supportsShadowInSingleDraw)(Font *this);</span>
<span class="line">  int (__fastcall *getLineLength)(Font *this, const std::string *, float, bool);</span>
<span class="line">  float (__fastcall *getWrapHeight)(Font *this);</span>
<span class="line">  float (__fastcall *getScaleFactor)(Font *this);</span>
<span class="line">  Vec2 *(__fastcall *getTranslationFactor)(Font *this, Vec2 *result);</span>
<span class="line">  bool (__fastcall *isScreenPixelAligned)(Font *this);</span>
<span class="line">  bool (__fastcall *materialCanBeOverridden)(Font *this);</span>
<span class="line">  void (__fastcall *uploadTextureToGPU)(Font *this);</span>
<span class="line">  void (__fastcall *setTextConstantsInScreenContext)(Font *this, ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool);</span>
<span class="line">  float (__fastcall *_getCharWidth)(Font *this, int, bool);</span>
<span class="line">  bool (__fastcall *_isIconPage)(Font *this, const Font::SheetId *);</span>
<span class="line">  mce::Font::Type (__fastcall *getType)(Font *this, const Font::SheetId *);</span>
<span class="line">  std::optional&lt;mce::Font::RenderingParameters&gt; *(__fastcall *tryGetRenderingParameters)(Font *this, std::optional&lt;mce::Font::RenderingParameters&gt; *result, const ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool, const mce::Color *, const glm::tvec2&lt;float,0&gt; *);</span>
<span class="line">  void (__fastcall *drawCached)(Font *this, ScreenContext *, const std::string *, float, float, const mce::Color *, const mce::Color *, const glm::tvec2&lt;float,0&gt; *, bool, bool, mce::MaterialPtr *, int, bool, float, const mce::Color *);</span>
<span class="line">  void (__fastcall *onAppSuspended)(Font *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(Font *this);</span>
<span class="line">  void (__fastcall *reloadFontTextures)(Font *this, ResourceLoadManager *, bool);</span>
<span class="line">  bool (__fastcall *isReloadingTextures)(Font *this);</span>
<span class="line">  void (__fastcall *unloadTextures)(Font *this);</span>
<span class="line">  void (__fastcall *_scanUnicodeCharacterSize)(Font *this, int, const Font::SheetId *, bool);</span>
<span class="line">  bool (__fastcall *isSheetMatch)(Font *this, const Font::SheetId *);</span>
<span class="line">  bool (__fastcall *_containsWideChar)(Font *this, const std::string *);</span>
<span class="line">  float (__fastcall *_buildChar)(Font *this, std::vector&lt;Font::GlyphQuad&gt; *, int, const mce::Color *, bool, float, float, bool);</span>
<span class="line">  ResourceLocation *(__fastcall *_getFontSheetLocation)(Font *this, ResourceLocation *result, const Font::SheetId *, bool);</span>
<span class="line">  const mce::MaterialPtr *(__fastcall *getMaterial)(Font *this, const Font::SheetId *, bool);</span>
<span class="line">  void (__fastcall *flushQueuedImageUploads)(Font *this);</span>
<span class="line">  void (__fastcall *onLanguageChanged)(Font *this, const std::string *);</span>
<span class="line">  void (__fastcall *loadFontData)(Font *this, bool);</span>
<span class="line">  int (__fastcall *_getReplacementCharacter)(Font *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-memoryrec" tabindex="-1"><a class="header-anchor" href="#ft-memoryrec"><span><code>FT_MemoryRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_MemoryRec_</span>
<span class="line">{</span>
<span class="line">  void *user;</span>
<span class="line">  void *(__fastcall *alloc)(FT_MemoryRec_ *, int);</span>
<span class="line">  void (__fastcall *free)(FT_MemoryRec_ *, void *);</span>
<span class="line">  void *(__fastcall *realloc)(FT_MemoryRec_ *, int, int, void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-streamrec" tabindex="-1"><a class="header-anchor" href="#ft-streamrec"><span><code>FT_StreamRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_StreamRec_</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 *base;</span>
<span class="line">  unsigned int size;</span>
<span class="line">  unsigned int pos;</span>
<span class="line">  FT_StreamDesc_ descriptor;</span>
<span class="line">  FT_StreamDesc_ pathname;</span>
<span class="line">  unsigned int (__fastcall *read)(FT_StreamRec_ *, unsigned int, unsigned __int8 *, unsigned int);</span>
<span class="line">  void (__fastcall *close)(FT_StreamRec_ *);</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">  unsigned __int8 *cursor;</span>
<span class="line">  unsigned __int8 *limit;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-listnoderec" tabindex="-1"><a class="header-anchor" href="#ft-listnoderec"><span><code>FT_ListNodeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_ListNodeRec_</span>
<span class="line">{</span>
<span class="line">  FT_ListNodeRec_ *prev;</span>
<span class="line">  FT_ListNodeRec_ *next;</span>
<span class="line">  void *data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-bitmap-size" tabindex="-1"><a class="header-anchor" href="#ft-bitmap-size"><span><code>FT_Bitmap_Size_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Bitmap_Size_</span>
<span class="line">{</span>
<span class="line">  __int16 height;</span>
<span class="line">  __int16 width;</span>
<span class="line">  int size;</span>
<span class="line">  int x_ppem;</span>
<span class="line">  int y_ppem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-modulerec" tabindex="-1"><a class="header-anchor" href="#ft-modulerec"><span><code>FT_ModuleRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_ModuleRec_</span>
<span class="line">{</span>
<span class="line">  FT_Module_Class_ *clazz;</span>
<span class="line">  FT_LibraryRec_ *library;</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-libraryrec" tabindex="-1"><a class="header-anchor" href="#ft-libraryrec"><span><code>FT_LibraryRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) FT_LibraryRec_</span>
<span class="line">{</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">  int version_major;</span>
<span class="line">  int version_minor;</span>
<span class="line">  int version_patch;</span>
<span class="line">  unsigned int num_modules;</span>
<span class="line">  FT_ModuleRec_ *modules[32];</span>
<span class="line">  FT_ListRec_ renderers;</span>
<span class="line">  FT_RendererRec_ *cur_renderer;</span>
<span class="line">  FT_ModuleRec_ *auto_hinter;</span>
<span class="line">  int (__fastcall *debug_hooks[4])(void *);</span>
<span class="line">  FT_Vector_ lcd_geometry[3];</span>
<span class="line">  int refcount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-rendererrec" tabindex="-1"><a class="header-anchor" href="#ft-rendererrec"><span><code>FT_RendererRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_RendererRec_</span>
<span class="line">{</span>
<span class="line">  FT_ModuleRec_ root;</span>
<span class="line">  FT_Renderer_Class_ *clazz;</span>
<span class="line">  FT_Glyph_Format_ glyph_format;</span>
<span class="line">  FT_Glyph_Class_ glyph_class;</span>
<span class="line">  struct FT_RasterRec_ *raster;</span>
<span class="line">  int (__fastcall *raster_render)(struct FT_RasterRec_ *, const FT_Raster_Params_ *);</span>
<span class="line">  int (__fastcall *render)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_Render_Mode_, const FT_Vector_ *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-facerec" tabindex="-1"><a class="header-anchor" href="#ft-facerec"><span><code>FT_FaceRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_FaceRec_</span>
<span class="line">{</span>
<span class="line">  int num_faces;</span>
<span class="line">  int face_index;</span>
<span class="line">  int face_flags;</span>
<span class="line">  int style_flags;</span>
<span class="line">  int num_glyphs;</span>
<span class="line">  char *family_name;</span>
<span class="line">  char *style_name;</span>
<span class="line">  int num_fixed_sizes;</span>
<span class="line">  FT_Bitmap_Size_ *available_sizes;</span>
<span class="line">  int num_charmaps;</span>
<span class="line">  FT_CharMapRec_ **charmaps;</span>
<span class="line">  FT_Generic_ generic;</span>
<span class="line">  FT_BBox_ bbox;</span>
<span class="line">  unsigned __int16 units_per_EM;</span>
<span class="line">  __int16 ascender;</span>
<span class="line">  __int16 descender;</span>
<span class="line">  __int16 height;</span>
<span class="line">  __int16 max_advance_width;</span>
<span class="line">  __int16 max_advance_height;</span>
<span class="line">  __int16 underline_position;</span>
<span class="line">  __int16 underline_thickness;</span>
<span class="line">  FT_GlyphSlotRec_ *glyph;</span>
<span class="line">  FT_SizeRec_ *size;</span>
<span class="line">  FT_CharMapRec_ *charmap;</span>
<span class="line">  FT_DriverRec_ *driver;</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">  FT_StreamRec_ *stream;</span>
<span class="line">  FT_ListRec_ sizes_list;</span>
<span class="line">  FT_Generic_ autohint;</span>
<span class="line">  void *extensions;</span>
<span class="line">  FT_Face_InternalRec_ *internal;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-size-metrics" tabindex="-1"><a class="header-anchor" href="#ft-size-metrics"><span><code>FT_Size_Metrics_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Size_Metrics_</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 x_ppem;</span>
<span class="line">  unsigned __int16 y_ppem;</span>
<span class="line">  int x_scale;</span>
<span class="line">  int y_scale;</span>
<span class="line">  int ascender;</span>
<span class="line">  int descender;</span>
<span class="line">  int height;</span>
<span class="line">  int max_advance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-size-internalrec" tabindex="-1"><a class="header-anchor" href="#ft-size-internalrec"><span><code>FT_Size_InternalRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Size_InternalRec_</span>
<span class="line">{</span>
<span class="line">  void *module_data;</span>
<span class="line">  FT_Render_Mode_ autohint_mode;</span>
<span class="line">  FT_Size_Metrics_ autohint_metrics;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-sizerec" tabindex="-1"><a class="header-anchor" href="#ft-sizerec"><span><code>FT_SizeRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_SizeRec_</span>
<span class="line">{</span>
<span class="line">  FT_FaceRec_ *face;</span>
<span class="line">  FT_Generic_ generic;</span>
<span class="line">  FT_Size_Metrics_ metrics;</span>
<span class="line">  FT_Size_InternalRec_ *internal;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-parameter" tabindex="-1"><a class="header-anchor" href="#ft-parameter"><span><code>FT_Parameter_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Parameter_</span>
<span class="line">{</span>
<span class="line">  unsigned int tag;</span>
<span class="line">  void *data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-subglyphrec" tabindex="-1"><a class="header-anchor" href="#ft-subglyphrec"><span><code>FT_SubGlyphRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_SubGlyphRec_</span>
<span class="line">{</span>
<span class="line">  int index;</span>
<span class="line">  unsigned __int16 flags;</span>
<span class="line">  int arg1;</span>
<span class="line">  int arg2;</span>
<span class="line">  FT_Matrix_ transform;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-glyphloadrec" tabindex="-1"><a class="header-anchor" href="#ft-glyphloadrec"><span><code>FT_GlyphLoadRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_GlyphLoadRec_</span>
<span class="line">{</span>
<span class="line">  FT_Outline_ outline;</span>
<span class="line">  FT_Vector_ *extra_points;</span>
<span class="line">  FT_Vector_ *extra_points2;</span>
<span class="line">  unsigned int num_subglyphs;</span>
<span class="line">  FT_SubGlyphRec_ *subglyphs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-glyphloaderrec" tabindex="-1"><a class="header-anchor" href="#ft-glyphloaderrec"><span><code>FT_GlyphLoaderRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_GlyphLoaderRec_</span>
<span class="line">{</span>
<span class="line">  FT_MemoryRec_ *memory;</span>
<span class="line">  unsigned int max_points;</span>
<span class="line">  unsigned int max_contours;</span>
<span class="line">  unsigned int max_subglyphs;</span>
<span class="line">  unsigned __int8 use_extra;</span>
<span class="line">  FT_GlyphLoadRec_ base;</span>
<span class="line">  FT_GlyphLoadRec_ current;</span>
<span class="line">  void *other;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-driverrec" tabindex="-1"><a class="header-anchor" href="#ft-driverrec"><span><code>FT_DriverRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_DriverRec_</span>
<span class="line">{</span>
<span class="line">  FT_ModuleRec_ root;</span>
<span class="line">  FT_Driver_ClassRec_ *clazz;</span>
<span class="line">  FT_ListRec_ faces_list;</span>
<span class="line">  FT_GlyphLoaderRec_ *glyph_loader;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-servicecacherec" tabindex="-1"><a class="header-anchor" href="#ft-servicecacherec"><span><code>FT_ServiceCacheRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_ServiceCacheRec_</span>
<span class="line">{</span>
<span class="line">  void *service_POSTSCRIPT_FONT_NAME;</span>
<span class="line">  void *service_MULTI_MASTERS;</span>
<span class="line">  void *service_METRICS_VARIATIONS;</span>
<span class="line">  void *service_GLYPH_DICT;</span>
<span class="line">  void *service_PFR_METRICS;</span>
<span class="line">  void *service_WINFNT;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-incremental-metricsrec" tabindex="-1"><a class="header-anchor" href="#ft-incremental-metricsrec"><span><code>FT_Incremental_MetricsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Incremental_MetricsRec_</span>
<span class="line">{</span>
<span class="line">  int bearing_x;</span>
<span class="line">  int bearing_y;</span>
<span class="line">  int advance;</span>
<span class="line">  int advance_v;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-incremental-funcsrec" tabindex="-1"><a class="header-anchor" href="#ft-incremental-funcsrec"><span><code>FT_Incremental_FuncsRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct FT_Incremental_FuncsRec_</span>
<span class="line">{</span>
<span class="line">  int (__fastcall *get_glyph_data)(struct FT_IncrementalRec_ *, unsigned int, FT_Data_ *);</span>
<span class="line">  void (__fastcall *free_glyph_data)(struct FT_IncrementalRec_ *, FT_Data_ *);</span>
<span class="line">  int (__fastcall *get_glyph_metrics)(struct FT_IncrementalRec_ *, unsigned int, unsigned __int8, FT_Incremental_MetricsRec_ *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-incremental-interfacerec" tabindex="-1"><a class="header-anchor" href="#ft-incremental-interfacerec"><span><code>FT_Incremental_InterfaceRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FT_Incremental_InterfaceRec_</span>
<span class="line">{</span>
<span class="line">  const FT_Incremental_FuncsRec_ *funcs;</span>
<span class="line">  struct FT_IncrementalRec_ *object;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-face-internalrec" tabindex="-1"><a class="header-anchor" href="#ft-face-internalrec"><span><code>FT_Face_InternalRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) FT_Face_InternalRec_</span>
<span class="line">{</span>
<span class="line">  FT_Matrix_ transform_matrix;</span>
<span class="line">  FT_Vector_ transform_delta;</span>
<span class="line">  int transform_flags;</span>
<span class="line">  FT_ServiceCacheRec_ services;</span>
<span class="line">  FT_Incremental_InterfaceRec_ *incremental_interface;</span>
<span class="line">  char no_stem_darkening;</span>
<span class="line">  int random_seed;</span>
<span class="line">  int refcount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-slot-internalrec" tabindex="-1"><a class="header-anchor" href="#ft-slot-internalrec"><span><code>FT_Slot_InternalRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) FT_Slot_InternalRec_</span>
<span class="line">{</span>
<span class="line">  FT_GlyphLoaderRec_ *loader;</span>
<span class="line">  unsigned int flags;</span>
<span class="line">  unsigned __int8 glyph_transformed;</span>
<span class="line">  FT_Matrix_ glyph_matrix;</span>
<span class="line">  FT_Vector_ glyph_delta;</span>
<span class="line">  void *glyph_hints;</span>
<span class="line">  int load_flags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ft-glyphrec" tabindex="-1"><a class="header-anchor" href="#ft-glyphrec"><span><code>FT_GlyphRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) FT_GlyphRec_</span>
<span class="line">{</span>
<span class="line">  FT_LibraryRec_ *library;</span>
<span class="line">  const FT_Glyph_Class_ *clazz;</span>
<span class="line">  FT_Glyph_Format_ format;</span>
<span class="line">  FT_Vector_ advance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91" tabindex="-1"><a class="header-anchor" href="#fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91"><span><code>FontRepository::parseAndLoadMetadataFonts::__l2::&lt;lambda_88925860aafd3405404c7e1df5755f91&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FontRepository::parseAndLoadMetadataFonts::__l2::&lt;lambda_88925860aafd3405404c7e1df5755f91&gt;</span>
<span class="line">{</span>
<span class="line">  FontRepository *const __this;</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;std::shared_ptr&lt;Font&gt;&gt; &gt; fontsLoaded;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947" tabindex="-1"><a class="header-anchor" href="#fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947"><span><code>FontRepository::parseAndLoadMetadataFonts::__l2::&lt;lambda_31bdad871b22ac7caa6a500c31451947&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FontRepository::parseAndLoadMetadataFonts::__l2::&lt;lambda_31bdad871b22ac7caa6a500c31451947&gt;</span>
<span class="line">{</span>
<span class="line">  FontRepository *const __this;</span>
<span class="line">  mce::TextureGroup *textureGroup;</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;std::shared_ptr&lt;Font&gt;&gt; &gt; fontsLoaded;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9" tabindex="-1"><a class="header-anchor" href="#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9"><span><code>FontRepository::loadDefaultFonts::__l2::&lt;lambda_7fe000d9f42c358f49b7b7b1aeed026a&gt;::()::__l2::&lt;lambda_ac0252748f91156e691c7d207fae26a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FontRepository::loadDefaultFonts::__l2::&lt;lambda_7fe000d9f42c358f49b7b7b1aeed026a&gt;::()::__l2::&lt;lambda_ac0252748f91156e691c7d207fae26a9&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string alias;</span>
<span class="line">  const Core::Path fontPagePrefix;</span>
<span class="line">  std::shared_ptr&lt;std::shared_ptr&lt;MSDFFont&gt; &gt; loadedFont;</span>
<span class="line">  mce::TextureGroup *textureGroup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef" tabindex="-1"><a class="header-anchor" href="#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef"><span><code>FontRepository::loadDefaultFonts::__l2::&lt;lambda_4f422798d8e19b20911552d15f97b207&gt;::()::__l2::&lt;lambda_97de77aa165493b1e2383fa55c9aadef&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FontRepository::loadDefaultFonts::__l2::&lt;lambda_4f422798d8e19b20911552d15f97b207&gt;::()::__l2::&lt;lambda_97de77aa165493b1e2383fa55c9aadef&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string alias;</span>
<span class="line">  const Core::Path asciiName;</span>
<span class="line">  const Core::Path unicodeName;</span>
<span class="line">  std::shared_ptr&lt;std::shared_ptr&lt;BitmapFont&gt; &gt; loadedFont;</span>
<span class="line">  mce::TextureGroup *textureGroup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6" tabindex="-1"><a class="header-anchor" href="#font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6"><span><code>Font::getTextHeight::__l2::&lt;lambda_1e8f76698c9e82e8bd78f1bc5facf7f6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Font::getTextHeight::__l2::&lt;lambda_1e8f76698c9e82e8bd78f1bc5facf7f6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4" tabindex="-1"><a class="header-anchor" href="#font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4"><span><code>Font::_drawWordWrap::__l2::&lt;lambda_109e8cc2ec8061788bcb30eaf502d4f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Font::_drawWordWrap::__l2::&lt;lambda_109e8cc2ec8061788bcb30eaf502d4f4&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *text;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e" tabindex="-1"><a class="header-anchor" href="#filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e"><span><code>FileDeleteProgressHandler::onStart::__l2::&lt;lambda_f66a9fb0340462681c16b2ec2802629e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDeleteProgressHandler::onStart::__l2::&lt;lambda_f66a9fb0340462681c16b2ec2802629e&gt;</span>
<span class="line">{</span>
<span class="line">  MinecraftScreenModel *minecraftScreenModel;</span>
<span class="line">  FileDeleteProgressHandler *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a" tabindex="-1"><a class="header-anchor" href="#filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a"><span><code>FileDeleteProgressHandler::onStart::__l2::&lt;lambda_d001b78764dbe0c23a6aa3eb590da16a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDeleteProgressHandler::onStart::__l2::&lt;lambda_d001b78764dbe0c23a6aa3eb590da16a&gt;</span>
<span class="line">{</span>
<span class="line">  FileDeleteProgressHandler *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filecopyprogresshandler" tabindex="-1"><a class="header-anchor" href="#filecopyprogresshandler"><span><code>FileCopyProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileCopyProgressHandler : ProgressHandler</span>
<span class="line">{</span>
<span class="line">  std::string mTitle;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mDestPath;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mCallback;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  ResourceLocation mSrcLocation;</span>
<span class="line">  bool mSrcZip;</span>
<span class="line">  bool mDestZip;</span>
<span class="line">  bool mCopyComplete;</span>
<span class="line">  bool mCopySuccess;</span>
<span class="line">  std::vector&lt;std::string&gt; mExcludeDirs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filecopyprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#filecopyprogresshandler-vtbl"><span><code>FileCopyProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileCopyProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484" tabindex="-1"><a class="header-anchor" href="#filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484"><span><code>FileCopyProgressHandler::onStart::__l2::&lt;lambda_845c8ae8b621017e79b44eea229b9484&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileCopyProgressHandler::onStart::__l2::&lt;lambda_845c8ae8b621017e79b44eea229b9484&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;bool&gt; weak_existence;</span>
<span class="line">  FileCopyProgressHandler *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileaccesstransforms-vtbl" tabindex="-1"><a class="header-anchor" href="#fileaccesstransforms-vtbl"><span><code>FileAccessTransforms_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileAccessTransforms_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileAccessTransforms)(FileAccessTransforms *this);</span>
<span class="line">  bool (__fastcall *readTransform)(FileAccessTransforms *this, std::vector&lt;unsigned char&gt; *);</span>
<span class="line">  bool (__fastcall *writeTransform)(FileAccessTransforms *this, std::vector&lt;unsigned char&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filteredcontainermodel" tabindex="-1"><a class="header-anchor" href="#filteredcontainermodel"><span><code>FilteredContainerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilteredContainerModel : ExpandoContainerModel</span>
<span class="line">{</span>
<span class="line">  bool mDoExpandoGroups;</span>
<span class="line">  bool mIsFiltering;</span>
<span class="line">  int mFilteredItemCount;</span>
<span class="line">  std::vector&lt;std::pair&lt;ItemInstance,unsigned int&gt;&gt; mSavedItems;</span>
<span class="line">  std::vector&lt;std::pair&lt;ItemInstance,unsigned int&gt;&gt; mActiveFilteredExpandableSetHeads;</span>
<span class="line">  std::function&lt;enum FilterResult __cdecl(ItemInstance const &amp;)&gt; mFilterRule;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filteredcontainermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#filteredcontainermodel-vtbl"><span><code>FilteredContainerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilteredContainerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *postInit)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *releaseResources)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getContainerSize)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *tick)(ContainerModel *this, int);</span>
<span class="line">  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);</span>
<span class="line">  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);</span>
<span class="line">  const std::vector&lt;ItemStack&gt; *(__fastcall *getItems)(ContainerModel *this);</span>
<span class="line">  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);</span>
<span class="line">  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerModel *this);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);</span>
<span class="line">  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);</span>
<span class="line">  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);</span>
<span class="line">  void (__fastcall *switchItemExpando)(ContainerModel *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *_getContainerOffset)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);</span>
<span class="line">  void (__fastcall *setItemInstance)(ExpandoContainerModel *this, int, const ItemInstance *);</span>
<span class="line">  void (__fastcall *refreshContainer)(ExpandoContainerModel *this, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatoption" tabindex="-1"><a class="header-anchor" href="#floatoption"><span><code>FloatOption</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FloatOption : Option</span>
<span class="line">{</span>
<span class="line">  const float VALUE_MIN;</span>
<span class="line">  const float VALUE_MAX;</span>
<span class="line">  float mValue;</span>
<span class="line">  float mDefaultValue;</span>
<span class="line">  const float DELTA;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatoption-vtbl" tabindex="-1"><a class="header-anchor" href="#floatoption-vtbl"><span><code>FloatOption_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FloatOption_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Option)(Option *this);</span>
<span class="line">  void (__fastcall *save)(Option *this, std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *load)(Option *this, const Json::Value *);</span>
<span class="line">  void (__fastcall *load)(Option *this, std::map&lt;std::string,std::string&gt; *);</span>
<span class="line">  void (__fastcall *load)(Option *this, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller"><span><code>FeedbackPromptController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController : ClientInstanceScreenController</span>
<span class="line">{</span>
<span class="line">  const std::string mTitleId;</span>
<span class="line">  const std::string mImage;</span>
<span class="line">  const std::string mButtonName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-vtbl"><span><code>FeedbackPromptController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeedbackPromptController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-realmdata" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-realmdata"><span><code>FileDownloadScreenController::RealmData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::RealmData</span>
<span class="line">{</span>
<span class="line">  std::string realmID;</span>
<span class="line">  std::string realmName;</span>
<span class="line">  std::string realmVersion;</span>
<span class="line">  std::string realmVersionName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller"><span><code>FileDownloadScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FileDownloadScreenController : MainMenuScreenController</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController::RealmData mRealmData;</span>
<span class="line">  float mDownloadProgress;</span>
<span class="line">  bool mContinueOnWifi;</span>
<span class="line">  bool mWifiWarningDisplaying;</span>
<span class="line">  bool mDownloadStarted;</span>
<span class="line">  bool mIsWaitingForCancel;</span>
<span class="line">  DownloadState mDownloadState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-vtbl"><span><code>FileDownloadScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDownloadScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller"><span><code>FileUploadScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController : MainMenuScreenController</span>
<span class="line">{</span>
<span class="line">  std::string mRealmdID;</span>
<span class="line">  std::string mFileID;</span>
<span class="line">  bool mNeedArchiving;</span>
<span class="line">  float mUploadProgress;</span>
<span class="line">  bool mContinueOnWifi;</span>
<span class="line">  bool mWifiWarningDisplaying;</span>
<span class="line">  bool mUploadStarted;</span>
<span class="line">  UploadState mUploadState;</span>
<span class="line">  Core::FileUploadType mFileUploadType;</span>
<span class="line">  std::function&lt;void __cdecl(enum UploadState)&gt; mCallback;</span>
<span class="line">  std::shared_ptr&lt;FileUploadManager&gt; mFileUploadManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-vtbl"><span><code>FileUploadScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileUploadScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3"><span><code>FurnaceScreenControllerProxyCallbacks::&lt;lambda_68069f7fbd4730b8b6a4b64cd4ec15f3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceScreenControllerProxyCallbacks::&lt;lambda_68069f7fbd4730b8b6a4b64cd4ec15f3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b"><span><code>FurnaceScreenControllerProxyCallbacks::&lt;lambda_9f2f11c7cc5957bbdf8a1f458419fc5b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceScreenControllerProxyCallbacks::&lt;lambda_9f2f11c7cc5957bbdf8a1f458419fc5b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b"><span><code>FurnaceScreenControllerProxyCallbacks::&lt;lambda_6e9c8476017789a33bb2e3f39ef6501b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceScreenControllerProxyCallbacks::&lt;lambda_6e9c8476017789a33bb2e3f39ef6501b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacescreencontrollerproxy" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxy"><span><code>FurnaceScreenControllerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceScreenControllerProxy : ScreenControllerProxy</span>
<span class="line">{</span>
<span class="line">  const FurnaceScreenControllerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacescreencontrollerproxy-vtbl" tabindex="-1"><a class="header-anchor" href="#furnacescreencontrollerproxy-vtbl"><span><code>FurnaceScreenControllerProxy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FurnaceScreenControllerProxy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4"><span><code>FileUploadScreenController::_displayUploadErrorPopup::__l2::&lt;lambda_56479a187dcfd6ee8d9902a0e71991b4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_displayUploadErrorPopup::__l2::&lt;lambda_56479a187dcfd6ee8d9902a0e71991b4&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadScreenController&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_8ee8e9c67e75344676445575aa03028f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_8ee8e9c67e75344676445575aa03028f&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_a41320f59fb4cdb7cf30ce6c99707a59&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_a41320f59fb4cdb7cf30ce6c99707a59&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_5d144608546dbfd12362935a26df5fe2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_5d144608546dbfd12362935a26df5fe2&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_e9304b7a424ecfbe227e796bc2e63013&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_e9304b7a424ecfbe227e796bc2e63013&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_33c32188ae4ce4f1a02432932a76c7c1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_33c32188ae4ce4f1a02432932a76c7c1&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_53068d20d0cb864e1047432b0d9cdc33&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_53068d20d0cb864e1047432b0d9cdc33&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_cdf8cce4febf7d2f4dae8b6771bbb5b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_cdf8cce4febf7d2f4dae8b6771bbb5b0&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_6218337b9af756811c5a0c44f91959a1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_6218337b9af756811c5a0c44f91959a1&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_590fca01935110f4321c59eab36a6688&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_590fca01935110f4321c59eab36a6688&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_63c99c602725913d46f15e1db4705954&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_63c99c602725913d46f15e1db4705954&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_44e7db5e29f5d557c5a0fc50a4e0360e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_44e7db5e29f5d557c5a0fc50a4e0360e&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_bec49fcaff1cdd081d60664ec8b895ec&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_bec49fcaff1cdd081d60664ec8b895ec&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_b5162ffa6e174b6687e4fce666835e1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_b5162ffa6e174b6687e4fce666835e1e&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_82b9e20ea4e5e480bc08d809da2c4815&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_82b9e20ea4e5e480bc08d809da2c4815&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_b00c115ac684d8c7428ecfbed066a03c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_b00c115ac684d8c7428ecfbed066a03c&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4"><span><code>FileUploadScreenController::_registerBindings::__l2::&lt;lambda_9a195338068e0741805c9ba0c4634bf4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerBindings::__l2::&lt;lambda_9a195338068e0741805c9ba0c4634bf4&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf"><span><code>FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_10f62041708a9870311deb91f897c1bf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_10f62041708a9870311deb91f897c1bf&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e"><span><code>FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_a0267568ae2a9f2a627ec27bf4e9481e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_a0267568ae2a9f2a627ec27bf4e9481e&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d"><span><code>FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_c32e1d45ca7729f5575d04896f9c582d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::&lt;lambda_c32e1d45ca7729f5575d04896f9c582d&gt;</span>
<span class="line">{</span>
<span class="line">  FileUploadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363" tabindex="-1"><a class="header-anchor" href="#fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363"><span><code>FileUploadScreenController::_startUpload::__l13::&lt;lambda_2d9bac4d3ebd66077c58a3e88c390363&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadScreenController::_startUpload::__l13::&lt;lambda_2d9bac4d3ebd66077c58a3e88c390363&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadScreenController&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0"><span><code>FileDownloadScreenController::_displayDownloadErrorPopup::__l2::&lt;lambda_016f9441dc96df5e1212767102cffed0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_displayDownloadErrorPopup::__l2::&lt;lambda_016f9441dc96df5e1212767102cffed0&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileDownloadScreenController&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_7da7beb6a65d54a1547704035d2c60dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_7da7beb6a65d54a1547704035d2c60dd&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_6392fad553f144397ab5bcc2a1d34410&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_6392fad553f144397ab5bcc2a1d34410&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_d634eb97b82394f3e97dcded9545e06c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_d634eb97b82394f3e97dcded9545e06c&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_bf7ee73a20735c45f364febe848a40dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_bf7ee73a20735c45f364febe848a40dc&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_da21480f755e865b17249a84b077e41e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_da21480f755e865b17249a84b077e41e&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_9d75819f3dfd579957095ef2ceb945c5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_9d75819f3dfd579957095ef2ceb945c5&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_f99f8a6b71a89bd7283c91f2e01d22cc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_f99f8a6b71a89bd7283c91f2e01d22cc&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_d9aab4afec3fedb3c12b0897b272bc41&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_d9aab4afec3fedb3c12b0897b272bc41&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_b60d51e9e7c65f65d9f81d6be7ae464e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_b60d51e9e7c65f65d9f81d6be7ae464e&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_996752e5deef7428293288b78e380631&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_996752e5deef7428293288b78e380631&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_b1ff2e52ed7aa2dee4b9f89ce6c1d862&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_b1ff2e52ed7aa2dee4b9f89ce6c1d862&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_05336d8bcda55d6e0b4f646905c793e0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_05336d8bcda55d6e0b4f646905c793e0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_316a697dff604b8b60e9d793ceae3786&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_316a697dff604b8b60e9d793ceae3786&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_498a0262eabc38b6226b47f518d4c077&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_498a0262eabc38b6226b47f518d4c077&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_07f3a1b857c8b974fed3caa7b4f0db34&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_07f3a1b857c8b974fed3caa7b4f0db34&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4"><span><code>FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_271488a91b26a46f85ad51579d06d1a4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerBindings::__l2::&lt;lambda_271488a91b26a46f85ad51579d06d1a4&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060"><span><code>FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_44f09b874ee9fcdf631c347a92c94060&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_44f09b874ee9fcdf631c347a92c94060&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119"><span><code>FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_cd96aaa67025ff6782d0910f7df6f119&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_cd96aaa67025ff6782d0910f7df6f119&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5" tabindex="-1"><a class="header-anchor" href="#filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5"><span><code>FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_74500b1f1908729aafc9a10e57877dd5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::&lt;lambda_74500b1f1908729aafc9a10e57877dd5&gt;</span>
<span class="line">{</span>
<span class="line">  FileDownloadScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa"><span><code>FeedbackPromptController::_registerBindings::__l2::&lt;lambda_bbece4f512b264b74faf5ba26b7d54aa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController::_registerBindings::__l2::&lt;lambda_bbece4f512b264b74faf5ba26b7d54aa&gt;</span>
<span class="line">{</span>
<span class="line">  FeedbackPromptController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb"><span><code>FeedbackPromptController::_registerBindings::__l2::&lt;lambda_5e849c6e2f41680228c07a77ce688bfb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController::_registerBindings::__l2::&lt;lambda_5e849c6e2f41680228c07a77ce688bfb&gt;</span>
<span class="line">{</span>
<span class="line">  FeedbackPromptController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e"><span><code>FeedbackPromptController::_registerBindings::__l2::&lt;lambda_b03504ae3a90eba43bc483a487f7bf8e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController::_registerBindings::__l2::&lt;lambda_b03504ae3a90eba43bc483a487f7bf8e&gt;</span>
<span class="line">{</span>
<span class="line">  FeedbackPromptController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e"><span><code>FeedbackPromptController::_registerEventHandlers::__l2::&lt;lambda_64f43d278793f4163eaa5b14f6e2ef4e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController::_registerEventHandlers::__l2::&lt;lambda_64f43d278793f4163eaa5b14f6e2ef4e&gt;</span>
<span class="line">{</span>
<span class="line">  FeedbackPromptController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8" tabindex="-1"><a class="header-anchor" href="#feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8"><span><code>FeedbackPromptController::_registerEventHandlers::__l2::&lt;lambda_e5d09be02c5d2616caaafaec652597f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedbackPromptController::_registerEventHandlers::__l2::&lt;lambda_e5d09be02c5d2616caaafaec652597f8&gt;</span>
<span class="line">{</span>
<span class="line">  FeedbackPromptController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalactorblock" tabindex="-1"><a class="header-anchor" href="#facedirectionalactorblock"><span><code>FaceDirectionalActorBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FaceDirectionalActorBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  bool mHorizontalOnly;</span>
<span class="line">  float mYRotOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalactorblock-vtbl" tabindex="-1"><a class="header-anchor" href="#facedirectionalactorblock-vtbl"><span><code>FaceDirectionalActorBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FaceDirectionalActorBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="formjsonvalidator" tabindex="-1"><a class="header-anchor" href="#formjsonvalidator"><span><code>FormJsonValidator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FormJsonValidator</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtercollection" tabindex="-1"><a class="header-anchor" href="#filtercollection"><span><code>FilterCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FilterCollection</span>
<span class="line">{</span>
<span class="line">  std::string mPrefix;</span>
<span class="line">  StoreFilter::MenuScreenType mScreenType;</span>
<span class="line">  std::vector&lt;StoreFilter::Toggle&gt; mCollection;</span>
<span class="line">  unsigned int mSelectedCount;</span>
<span class="line">  unsigned int mDirty;</span>
<span class="line">  bool mOneFilterSelection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623" tabindex="-1"><a class="header-anchor" href="#focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623"><span><code>FocusManager::updatePendingFocusControl::__l2::&lt;lambda_2e50f233adf9bc85cb1c5a5ad8433623&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusManager::updatePendingFocusControl::__l2::&lt;lambda_2e50f233adf9bc85cb1c5a5ad8433623&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac" tabindex="-1"><a class="header-anchor" href="#focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac"><span><code>FocusManager::_sweepToNextFocusObject::__l26::&lt;lambda_fd9f72a95693dd52737e0c11d36d84ac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusManager::_sweepToNextFocusObject::__l26::&lt;lambda_fd9f72a95693dd52737e0c11d36d84ac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b" tabindex="-1"><a class="header-anchor" href="#focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b"><span><code>FocusManager::{ctor}::__l2::&lt;lambda_db482c4c922ab9a00f2e95c83a532c5b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FocusManager::{ctor}::__l2::&lt;lambda_db482c4c922ab9a00f2e95c83a532c5b&gt;</span>
<span class="line">{</span>
<span class="line">  FocusManager *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fullscreeneffectrenderer" tabindex="-1"><a class="header-anchor" href="#fullscreeneffectrenderer"><span><code>FullScreenEffectRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FullScreenEffectRenderer : AppPlatformListener</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;unsigned int,mce::Mesh&gt; mMeshes;</span>
<span class="line">  mce::Mesh mHeadlockedOverlayMesh;</span>
<span class="line">  mce::Mesh mHeadlockedOverlayMeshFill;</span>
<span class="line">  mce::TexturePtr mAtlasTexture;</span>
<span class="line">  mce::TexturePtr mPumpkinTex;</span>
<span class="line">  mce::MaterialPtr mFullscreenCubeOpaqueMaterial;</span>
<span class="line">  mce::MaterialPtr mFullscreenCubeBlendMaterial;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fullscreeneffectrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#fullscreeneffectrenderer-vtbl"><span><code>FullScreenEffectRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FullScreenEffectRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firstchargeinfo" tabindex="-1"><a class="header-anchor" href="#firstchargeinfo"><span><code>FirstChargeInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FirstChargeInfo</span>
<span class="line">{</span>
<span class="line">  bool mIsBuy;</span>
<span class="line">  std::string mTextureUrl;</span>
<span class="line">  std::string mTextureMD5;</span>
<span class="line">  std::unique_ptr&lt;ResourceLocation&gt; mResourceLocation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller"><span><code>FoldMeuScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  bool isInit;</span>
<span class="line">  const std::string mScreenName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-vtbl"><span><code>FoldMeuScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FoldMeuScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flameparticle" tabindex="-1"><a class="header-anchor" href="#flameparticle"><span><code>FlameParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FlameParticle : Particle</span>
<span class="line">{</span>
<span class="line">  float oSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flameparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#flameparticle-vtbl"><span><code>FlameParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlameParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksstarter" tabindex="-1"><a class="header-anchor" href="#fireworksstarter"><span><code>FireworksStarter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksStarter : Particle</span>
<span class="line">{</span>
<span class="line">  ParticleEngine *mEngine;</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; mTag;</span>
<span class="line">  const ListTag *mExplosions;</span>
<span class="line">  bool mTwinkleDelay;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksstarter-vtbl" tabindex="-1"><a class="header-anchor" href="#fireworksstarter-vtbl"><span><code>FireworksStarter_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireworksStarter_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworkchargeitem" tabindex="-1"><a class="header-anchor" href="#fireworkchargeitem"><span><code>FireworkChargeItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworkChargeItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksitem" tabindex="-1"><a class="header-anchor" href="#fireworksitem"><span><code>FireworksItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworkssparkparticle" tabindex="-1"><a class="header-anchor" href="#fireworkssparkparticle"><span><code>FireworksSparkParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksSparkParticle : Particle</span>
<span class="line">{</span>
<span class="line">  bool mTrail;</span>
<span class="line">  bool mFlicker;</span>
<span class="line">  bool mHasFade;</span>
<span class="line">  int mBaseTex;</span>
<span class="line">  int mSpriteCount;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">  mce::Color mFade;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworkssparkparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#fireworkssparkparticle-vtbl"><span><code>FireworksSparkParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireworksSparkParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksoverlayparticle" tabindex="-1"><a class="header-anchor" href="#fireworksoverlayparticle"><span><code>FireworksOverlayParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksOverlayParticle : Particle</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksoverlayparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#fireworksoverlayparticle-vtbl"><span><code>FireworksOverlayParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireworksOverlayParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingdustparticle" tabindex="-1"><a class="header-anchor" href="#fallingdustparticle"><span><code>FallingDustParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) FallingDustParticle : Particle</span>
<span class="line">{</span>
<span class="line">  float oSize;</span>
<span class="line">  const int maxLifetime;</span>
<span class="line">  float rotSpeed;</span>
<span class="line">  bool insideBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingdustparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#fallingdustparticle-vtbl"><span><code>FallingDustParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FallingDustParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponent-saturationmodifier" tabindex="-1"><a class="header-anchor" href="#fooditemcomponent-saturationmodifier"><span><code>FoodItemComponent::SaturationModifier</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoodItemComponent::SaturationModifier</span>
<span class="line">{</span>
<span class="line">  float mSaturationValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponent" tabindex="-1"><a class="header-anchor" href="#fooditemcomponent"><span><code>FoodItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoodItemComponent : ItemComponent, IFoodItemComponent</span>
<span class="line">{</span>
<span class="line">  int mNutrition;</span>
<span class="line">  FoodItemComponent::SaturationModifier mSaturationModifier;</span>
<span class="line">  ItemDescriptor mUsingConvertsTo;</span>
<span class="line">  bool mCanAlwaysEat;</span>
<span class="line">  DefinitionTrigger mOnConsume;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fooditemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#fooditemcomponent-vtbl"><span><code>FoodItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FoodItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemComponent)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);</span>
<span class="line">  void (__fastcall *writeSettings)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(ItemComponent *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingblockrenderer" tabindex="-1"><a class="header-anchor" href="#fallingblockrenderer"><span><code>FallingBlockRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FallingBlockRenderer : ActorRenderer</span>
<span class="line">{</span>
<span class="line">  BlockTessellator *mBlockTessellator;</span>
<span class="line">  mce::MaterialPtr mHeavyBlockMaterial;</span>
<span class="line">  mce::MaterialPtr mHeavyBlockMaterialWithColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingblockrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#fallingblockrenderer-vtbl"><span><code>FallingBlockRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FallingBlockRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);</span>
<span class="line">  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);</span>
<span class="line">  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);</span>
<span class="line">  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);</span>
<span class="line">  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);</span>
<span class="line">  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);</span>
<span class="line">  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingblock" tabindex="-1"><a class="header-anchor" href="#fallingblock"><span><code>FallingBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FallingBlock : PredictableProjectile</span>
<span class="line">{</span>
<span class="line">  bool mCreative;</span>
<span class="line">  FallingBlock::State mState;</span>
<span class="line">  int mWaitTicks;</span>
<span class="line">  int mTime;</span>
<span class="line">  bool mCancelDrop;</span>
<span class="line">  bool mHurtEntities;</span>
<span class="line">  int mFallDamageMax;</span>
<span class="line">  float mFallDamageAmount;</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; mFallingBlockSerId;</span>
<span class="line">  NewBlockID mFallingBlockId;</span>
<span class="line">  unsigned __int16 mFallingBlockData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallingblock-vtbl" tabindex="-1"><a class="header-anchor" href="#fallingblock-vtbl"><span><code>FallingBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FallingBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="freezeonhitsubcomponent" tabindex="-1"><a class="header-anchor" href="#freezeonhitsubcomponent"><span><code>FreezeOnHitSubcomponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FreezeOnHitSubcomponent : OnHitSubcomponent</span>
<span class="line">{</span>
<span class="line">  FreezeOnHitSubcomponent::Shape mShape;</span>
<span class="line">  float mSize;</span>
<span class="line">  bool mSnapToBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="freezeonhitsubcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#freezeonhitsubcomponent-vtbl"><span><code>FreezeOnHitSubcomponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FreezeOnHitSubcomponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~OnHitSubcomponent)(OnHitSubcomponent *this);</span>
<span class="line">  void (__fastcall *readfromJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *writetoJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *doOnHitEffect)(OnHitSubcomponent *this, Actor *, ProjectileComponent *);</span>
<span class="line">  const char *(__fastcall *getName)(OnHitSubcomponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fenceblock" tabindex="-1"><a class="header-anchor" href="#fenceblock"><span><code>FenceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FenceBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fenceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#fenceblock-vtbl"><span><code>FenceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FenceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerpotblock" tabindex="-1"><a class="header-anchor" href="#flowerpotblock"><span><code>FlowerPotBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlowerPotBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerpotblock-vtbl" tabindex="-1"><a class="header-anchor" href="#flowerpotblock-vtbl"><span><code>FlowerPotBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlowerPotBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerpotblockactor" tabindex="-1"><a class="header-anchor" href="#flowerpotblockactor"><span><code>FlowerPotBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlowerPotBlockActor : BlockActor</span>
<span class="line">{</span>
<span class="line">  const Block *mPlant;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerpotblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#flowerpotblockactor-vtbl"><span><code>FlowerPotBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlowerPotBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalcomponentdescription" tabindex="-1"><a class="header-anchor" href="#facedirectionalcomponentdescription"><span><code>FaceDirectionalComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FaceDirectionalComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool mHorizontalOnly;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalcomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#facedirectionalcomponentdescription-vtbl"><span><code>FaceDirectionalComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FaceDirectionalComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalcomponent" tabindex="-1"><a class="header-anchor" href="#facedirectionalcomponent"><span><code>FaceDirectionalComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FaceDirectionalComponent</span>
<span class="line">{</span>
<span class="line">  BlockLegacy *mBlockLegacy;</span>
<span class="line">  bool mHorizontalOnly;</span>
<span class="line">  float mYRotOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesizerequest" tabindex="-1"><a class="header-anchor" href="#filesizerequest"><span><code>FileSizeRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileSizeRequest : RequestHandler</span>
<span class="line">{</span>
<span class="line">  const std::string mContentUrl;</span>
<span class="line">  std::function&lt;void __cdecl(unsigned __int64)&gt; mCallback;</span>
<span class="line">  std::shared_ptr&lt;unsigned __int64&gt; mContentLength;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesizerequest-vtbl" tabindex="-1"><a class="header-anchor" href="#filesizerequest-vtbl"><span><code>FileSizeRequest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileSizeRequest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileimagerequest" tabindex="-1"><a class="header-anchor" href="#fileimagerequest"><span><code>FileImageRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileImageRequest : FileDataRequest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileimagerequest-vtbl" tabindex="-1"><a class="header-anchor" href="#fileimagerequest-vtbl"><span><code>FileImageRequest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileImageRequest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingresponse" tabindex="-1"><a class="header-anchor" href="#flightingresponse"><span><code>FlightingResponse</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj FlightingResponse</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; mTreatments;</span>
<span class="line">  std::vector&lt;std::string&gt; mProgressions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingrequest-cachemetadata" tabindex="-1"><a class="header-anchor" href="#flightingrequest-cachemetadata"><span><code>FlightingRequest::CacheMetadata</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingRequest::CacheMetadata</span>
<span class="line">{</span>
<span class="line">  std::string mEntityTag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingrequest" tabindex="-1"><a class="header-anchor" href="#flightingrequest"><span><code>FlightingRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingRequest : CachedRequest</span>
<span class="line">{</span>
<span class="line">  const std::string mClientId;</span>
<span class="line">  const std::string mCurrentLanguage;</span>
<span class="line">  const std::string mHostUrl;</span>
<span class="line">  std::function&lt;void __cdecl(FlightingResponse const &amp;)&gt; mCallback;</span>
<span class="line">  FlightingResponse mFlightingResponse;</span>
<span class="line">  FlightingRequest::CacheMetadata mCacheMetadata;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingrequest-vtbl" tabindex="-1"><a class="header-anchor" href="#flightingrequest-vtbl"><span><code>FlightingRequest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlightingRequest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66" tabindex="-1"><a class="header-anchor" href="#flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66"><span><code>FlightingToggles::{ctor}::__l2::&lt;lambda_38d0b82f17466d32b7c7c17849ffae66&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlightingToggles::{ctor}::__l2::&lt;lambda_38d0b82f17466d32b7c7c17849ffae66&gt;</span>
<span class="line">{</span>
<span class="line">  FlightingToggles *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filettsoutput" tabindex="-1"><a class="header-anchor" href="#filettsoutput"><span><code>FileTTSOutput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileTTSOutput : TTSOutputInterface</span>
<span class="line">{</span>
<span class="line">  std::function&lt;Core::PathBuffer&lt;std::string &gt; __cdecl(void)&gt; mOutputPathCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filettsoutput-vtbl" tabindex="-1"><a class="header-anchor" href="#filettsoutput-vtbl"><span><code>FileTTSOutput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileTTSOutput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TTSOutputInterface)(TTSOutputInterface *this);</span>
<span class="line">  void (__fastcall *synthesizeAndOutput)(TTSOutputInterface *this, const std::string *, cst_voice_struct *);</span>
<span class="line">  void (__fastcall *stop)(TTSOutputInterface *this);</span>
<span class="line">  bool (__fastcall *isIdle)(TTSOutputInterface *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer" tabindex="-1"><a class="header-anchor" href="#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer"><span><code>FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;::is_shared_ptr&lt;std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;::is_shared_ptr&lt;std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer&gt; &gt; : std::integral_constant&lt;bool,1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7" tabindex="-1"><a class="header-anchor" href="#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7"><span><code>FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;::setLastCompletedFenceValue::__l2::&lt;lambda_be601a93d3a973414038685af37130e7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt;::setLastCompletedFenceValue::__l2::&lt;lambda_be601a93d3a973414038685af37130e7&gt;</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 *completedFenceValue;</span>
<span class="line">  FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt; *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogcommandcomponent" tabindex="-1"><a class="header-anchor" href="#fogcommandcomponent"><span><code>FogCommandComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogCommandComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;FogCommandSettings&gt; mFogStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flagcomponent-actortickedflag" tabindex="-1"><a class="header-anchor" href="#flagcomponent-actortickedflag"><span><code>FlagComponent&lt;ActorTickedFlag&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlagComponent&lt;ActorTickedFlag&gt; : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogcommand" tabindex="-1"><a class="header-anchor" href="#fogcommand"><span><code>FogCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  FogCommand::Mode mMode;</span>
<span class="line">  std::string mFogId;</span>
<span class="line">  std::string mUserProvidedId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#fogcommand-vtbl"><span><code>FogCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FogCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionaction" tabindex="-1"><a class="header-anchor" href="#functionaction"><span><code>FunctionAction</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FunctionAction : IChunkLoadedAction</span>
<span class="line">{</span>
<span class="line">  std::string mFilePath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionaction-vtbl" tabindex="-1"><a class="header-anchor" href="#functionaction-vtbl"><span><code>FunctionAction_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FunctionAction_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IChunkLoadedAction)(IChunkLoadedAction *this);</span>
<span class="line">  void (__fastcall *execute)(IChunkLoadedAction *this, ServerLevel *, Dimension *);</span>
<span class="line">  void (__fastcall *serialize)(IChunkLoadedAction *this, CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksrocketactor" tabindex="-1"><a class="header-anchor" href="#fireworksrocketactor"><span><code>FireworksRocketActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FireworksRocketActor : PredictableProjectile</span>
<span class="line">{</span>
<span class="line">  int mLife;</span>
<span class="line">  int mLifeTime;</span>
<span class="line">  bool mDispensed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksrocketactor-vtbl" tabindex="-1"><a class="header-anchor" href="#fireworksrocketactor-vtbl"><span><code>FireworksRocketActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireworksRocketActor_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceblockactor" tabindex="-1"><a class="header-anchor" href="#furnaceblockactor"><span><code>FurnaceBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FurnaceBlockActor : BlockActor, Container</span>
<span class="line">{</span>
<span class="line">  int mLitTime;</span>
<span class="line">  int mLitDuration;</span>
<span class="line">  int mCookingProgress;</span>
<span class="line">  unsigned int mStoredXP;</span>
<span class="line">  ItemStack mItems[3];</span>
<span class="line">  bool mDirty[3];</span>
<span class="line">  std::unordered_set&lt;ActorUniqueID&gt; mPlayers;</span>
<span class="line">  const HashedString mRecipeTag;</span>
<span class="line">  const int mBurnInterval;</span>
<span class="line">  LevelSoundEvent mSmeltSoundEvent;</span>
<span class="line">  int mSoundTick;</span>
<span class="line">  int mSoundTickTarget;</span>
<span class="line">  Random mRandom;</span>
<span class="line">  const Block *mUnlitFurnace;</span>
<span class="line">  const Block *mLitFurnace;</span>
<span class="line">  ItemInstance mLastFuelItem;</span>
<span class="line">  bool mCanBeFinished;</span>
<span class="line">  bool mFinished;</span>
<span class="line">  bool mNoDrop;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#furnaceblockactor-vtbl"><span><code>FurnaceBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FurnaceBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517" tabindex="-1"><a class="header-anchor" href="#functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517"><span><code>FunctionAction::_printOutput::__l2::&lt;lambda_29a6859966874ed56bdad0b621ece517&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FunctionAction::_printOutput::__l2::&lt;lambda_29a6859966874ed56bdad0b621ece517&gt;</span>
<span class="line">{</span>
<span class="line">  TextObjectRoot *textObjectRoot;</span>
<span class="line">  _BYTE opPermLevel[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_c388d79e814dd4ff849cbad3604bc61d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_c388d79e814dd4ff849cbad3604bc61d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_0a8ee2cd4bd4a4731c71a57d4abd4de2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_0a8ee2cd4bd4a4731c71a57d4abd4de2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_b6ab99318bc34040c23c84728383dea2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l8::&lt;lambda_b6ab99318bc34040c23c84728383dea2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_aa019d3dd92124d59bef87041ba622b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_aa019d3dd92124d59bef87041ba622b0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_00880b92af31f968791c4eed7e6c61a8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_00880b92af31f968791c4eed7e6c61a8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_f97cbdba0d2385587c63cedbaed4cbc4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_f97cbdba0d2385587c63cedbaed4cbc4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_2d9619e7737f7b9ef352678014760872&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l7::&lt;lambda_2d9619e7737f7b9ef352678014760872&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_dec754abcac794b6da96a720eded68bf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_dec754abcac794b6da96a720eded68bf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_caeb69210887eb326d6a99ae06ff7020&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_caeb69210887eb326d6a99ae06ff7020&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_2c1b06c9f0a2c5248839b21168fc798c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_2c1b06c9f0a2c5248839b21168fc798c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_9c00dedd5332c3e2cd5037afcff10e0e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_9c00dedd5332c3e2cd5037afcff10e0e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_a595d4db4302e152869dfff914040933&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l5::&lt;lambda_a595d4db4302e152869dfff914040933&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l4::&lt;lambda_455a293d6b2c8ad2f10c131dbc53c5d4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l4::&lt;lambda_455a293d6b2c8ad2f10c131dbc53c5d4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79" tabindex="-1"><a class="header-anchor" href="#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79"><span><code>FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l4::&lt;lambda_2cf1aefae47b2796c9704e85ed50ae79&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::&lt;lambda_7dad882e37f33ff82791872eb65e74f2&gt;::()::__l4::&lt;lambda_2cf1aefae47b2796c9704e85ed50ae79&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571" tabindex="-1"><a class="header-anchor" href="#fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571"><span><code>FogManager::calculateCurrentCoefficientSetting::__l2::&lt;lambda_12ef8424d68d1b5554d461cc50e22571&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogManager::calculateCurrentCoefficientSetting::__l2::&lt;lambda_12ef8424d68d1b5554d461cc50e22571&gt;</span>
<span class="line">{</span>
<span class="line">  FogDefinition::CoefficientSettingType settingType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba" tabindex="-1"><a class="header-anchor" href="#fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba"><span><code>FogManager::calculateCurrentDensitySetting::__l2::&lt;lambda_6ba298e373dadcb52a3d9720e76557ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogManager::calculateCurrentDensitySetting::__l2::&lt;lambda_6ba298e373dadcb52a3d9720e76557ba&gt;</span>
<span class="line">{</span>
<span class="line">  FogDefinition::DensitySettingType settingType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e" tabindex="-1"><a class="header-anchor" href="#fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e"><span><code>FogManager::calculateCurrentDistanceSetting::__l2::&lt;lambda_fd7ebdbd98023fd0d9a821e51c7a6b3e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FogManager::calculateCurrentDistanceSetting::__l2::&lt;lambda_fd7ebdbd98023fd0d9a821e51c7a6b3e&gt;</span>
<span class="line">{</span>
<span class="line">  FogDefinition::DistanceSettingType settingType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="familytypedefinition" tabindex="-1"><a class="header-anchor" href="#familytypedefinition"><span><code>FamilyTypeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FamilyTypeDefinition</span>
<span class="line">{</span>
<span class="line">  std::set&lt;HashedString,std::hash&lt;HashedString&gt;,std::allocator&lt;HashedString&gt; &gt; mFamilySet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flockingdefinition" tabindex="-1"><a class="header-anchor" href="#flockingdefinition"><span><code>FlockingDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlockingDefinition</span>
<span class="line">{</span>
<span class="line">  bool mInWater;</span>
<span class="line">  bool mMatchVariant;</span>
<span class="line">  bool mUseCenterOfMass;</span>
<span class="line">  int mLowFlockLimit;</span>
<span class="line">  int mHighFlockLimit;</span>
<span class="line">  float mGoalWeight;</span>
<span class="line">  float mLonerChance;</span>
<span class="line">  float mInfluenceRadius;</span>
<span class="line">  float mBreachInfluence;</span>
<span class="line">  float mSeparationWeight;</span>
<span class="line">  float mSeparationThreshold;</span>
<span class="line">  float mCohesionWeight;</span>
<span class="line">  float mCohesionThreshold;</span>
<span class="line">  float mInnerCohesionThres;</span>
<span class="line">  float mMinHeight;</span>
<span class="line">  float mMaxHeight;</span>
<span class="line">  float mBlockDistance;</span>
<span class="line">  float mBlockWeight;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feeditem-effect" tabindex="-1"><a class="header-anchor" href="#feeditem-effect"><span><code>FeedItem::Effect</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedItem::Effect</span>
<span class="line">{</span>
<span class="line">  std::string descriptionId;</span>
<span class="line">  int id;</span>
<span class="line">  int duration;</span>
<span class="line">  int amplifier;</span>
<span class="line">  float chance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="feeditem" tabindex="-1"><a class="header-anchor" href="#feeditem"><span><code>FeedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeedItem</span>
<span class="line">{</span>
<span class="line">  ItemDescriptor mItemDescriptor;</span>
<span class="line">  int mValue;</span>
<span class="line">  std::vector&lt;FeedItem::Effect&gt; mEffects;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flymovecontrol" tabindex="-1"><a class="header-anchor" href="#flymovecontrol"><span><code>FlyMoveControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyMoveControl : MoveControl</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flymovecontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#flymovecontrol-vtbl"><span><code>FlyMoveControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyMoveControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Control)(Control *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(MoveControl *this, Mob *, MoveControlDescription *);</span>
<span class="line">  void (__fastcall *tick)(MoveControl *this, MoveControlComponent *, Mob *);</span>
<span class="line">  void (__fastcall *setWantedPosition)(MoveControl *this, MoveControlComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatnavigation" tabindex="-1"><a class="header-anchor" href="#floatnavigation"><span><code>FloatNavigation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FloatNavigation : PathNavigation</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatnavigation-vtbl" tabindex="-1"><a class="header-anchor" href="#floatnavigation-vtbl"><span><code>FloatNavigation_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FloatNavigation_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PathNavigation)(PathNavigation *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(PathNavigation *this, Mob *, NavigationDescription *);</span>
<span class="line">  void (__fastcall *tick)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  Vec3 *(__fastcall *getTempMobPos)(PathNavigation *this, Vec3 *result, const Mob *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, Actor *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, std::unique_ptr&lt;Path&gt;, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, Actor *, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">  void (__fastcall *stop)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  bool (__fastcall *travel)(PathNavigation *this, NavigationComponent *, Mob *, float *, float *, float *);</span>
<span class="line">  bool (__fastcall *canUpdatePath)(PathNavigation *this, const Mob *);</span>
<span class="line">  void (__fastcall *updatePath)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingpathnavigation" tabindex="-1"><a class="header-anchor" href="#flyingpathnavigation"><span><code>FlyingPathNavigation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyingPathNavigation : PathNavigation</span>
<span class="line">{</span>
<span class="line">  bool mHadGravity;</span>
<span class="line">  bool mCanPathFromAir;</span>
<span class="line">  const float mMinWaypointRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingpathnavigation-vtbl" tabindex="-1"><a class="header-anchor" href="#flyingpathnavigation-vtbl"><span><code>FlyingPathNavigation_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyingPathNavigation_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PathNavigation)(PathNavigation *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(PathNavigation *this, Mob *, NavigationDescription *);</span>
<span class="line">  void (__fastcall *tick)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  Vec3 *(__fastcall *getTempMobPos)(PathNavigation *this, Vec3 *result, const Mob *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, Actor *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, std::unique_ptr&lt;Path&gt;, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, Actor *, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">  void (__fastcall *stop)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  bool (__fastcall *travel)(PathNavigation *this, NavigationComponent *, Mob *, float *, float *, float *);</span>
<span class="line">  bool (__fastcall *canUpdatePath)(PathNavigation *this, const Mob *);</span>
<span class="line">  void (__fastcall *updatePath)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flockingsystem" tabindex="-1"><a class="header-anchor" href="#flockingsystem"><span><code>FlockingSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlockingSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flockingsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#flockingsystem-vtbl"><span><code>FlockingSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlockingSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="friendlysize" tabindex="-1"><a class="header-anchor" href="#friendlysize"><span><code>FriendlySize</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FriendlySize</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 bytes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksrecipe" tabindex="-1"><a class="header-anchor" href="#fireworksrecipe"><span><code>FireworksRecipe</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksRecipe : MultiRecipe</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksrecipe-vtbl" tabindex="-1"><a class="header-anchor" href="#fireworksrecipe-vtbl"><span><code>FireworksRecipe_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireworksRecipe_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Recipe)(Recipe *this);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *assemble)(Recipe *this, CraftingContainer *);</span>
<span class="line">  int (__fastcall *getCraftingSize)(Recipe *this);</span>
<span class="line">  const RecipeIngredient *(__fastcall *getIngredient)(Recipe *this, int, int);</span>
<span class="line">  const std::vector&lt;ItemInstance&gt; *(__fastcall *getResultItem)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isShapeless)(Recipe *this);</span>
<span class="line">  bool (__fastcall *matches)(Recipe *this, CraftingContainer *, Level *);</span>
<span class="line">  int (__fastcall *size)(Recipe *this);</span>
<span class="line">  const mce::UUID *(__fastcall *getId)(Recipe *this);</span>
<span class="line">  const ItemPack *(__fastcall *getItemPack)(Recipe *this);</span>
<span class="line">  bool (__fastcall *isMultiRecipe)(Recipe *this);</span>
<span class="line">  std::string *(__fastcall *getTypeString)(Recipe *this, std::string *result);</span>
<span class="line">  bool (__fastcall *itemValidForRecipe)(Recipe *this, const ItemDescriptor *, const ItemStack *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, int, int, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *, const CompoundTag *);</span>
<span class="line">  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff" tabindex="-1"><a class="header-anchor" href="#featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff"><span><code>FeatureToggles::_getDisabledLockedCallback::__l2::&lt;lambda_5dbb485860e64799dd5864728b4946ff&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FeatureToggles::_getDisabledLockedCallback::__l2::&lt;lambda_5dbb485860e64799dd5864728b4946ff&gt;</span>
<span class="line">{</span>
<span class="line">  FeatureToggles *const __this;</span>
<span class="line">  _BYTE optionIdToCheck[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2" tabindex="-1"><a class="header-anchor" href="#featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2"><span><code>FeatureToggles::_getDisabledSetupCallback::__l2::&lt;lambda_7d67b21fbe351c2d84afc65451e90be2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FeatureToggles::_getDisabledSetupCallback::__l2::&lt;lambda_7d67b21fbe351c2d84afc65451e90be2&gt;</span>
<span class="line">{</span>
<span class="line">  FeatureToggles *const __this;</span>
<span class="line">  _BYTE optionIdToCheck[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203" tabindex="-1"><a class="header-anchor" href="#featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203"><span><code>FeatureToggles::_getEnabledLockedCallback::__l2::&lt;lambda_e21ea8f733186111a070e29c202e5203&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FeatureToggles::_getEnabledLockedCallback::__l2::&lt;lambda_e21ea8f733186111a070e29c202e5203&gt;</span>
<span class="line">{</span>
<span class="line">  FeatureToggles *const __this;</span>
<span class="line">  _BYTE optionIdToCheck[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3" tabindex="-1"><a class="header-anchor" href="#featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3"><span><code>FeatureToggles::_getEnabledSetupCallback::__l2::&lt;lambda_5db25955c5ba18bb6f909f1c95a0c4c3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FeatureToggles::_getEnabledSetupCallback::__l2::&lt;lambda_5db25955c5ba18bb6f909f1c95a0c4c3&gt;</span>
<span class="line">{</span>
<span class="line">  FeatureToggles *const __this;</span>
<span class="line">  _BYTE optionIdToCheck[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039" tabindex="-1"><a class="header-anchor" href="#featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039"><span><code>FeatureToggles::_initialize::__l2::&lt;lambda_56780e8a1121adf4efc9847217156039&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureToggles::_initialize::__l2::&lt;lambda_56780e8a1121adf4efc9847217156039&gt;</span>
<span class="line">{</span>
<span class="line">  FeatureToggles *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess-filesystemfilereadaccess" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess-filesystemfilereadaccess"><span><code>FileSystemFileAccess::FileSystemFileReadAccess</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileSystemFileAccess::FileSystemFileReadAccess : IFileReadAccess</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess-filesystemfilereadaccess-vtbl" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess-filesystemfilereadaccess-vtbl"><span><code>FileSystemFileAccess::FileSystemFileReadAccess_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileSystemFileAccess::FileSystemFileReadAccess_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFileReadAccess)(IFileReadAccess *this);</span>
<span class="line">  unsigned __int64 (__fastcall *fread)(IFileReadAccess *this, void *, unsigned __int64, unsigned __int64, void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess-filesystemfilewriteaccess" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess-filesystemfilewriteaccess"><span><code>FileSystemFileAccess::FileSystemFileWriteAccess</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileSystemFileAccess::FileSystemFileWriteAccess : IFileWriteAccess</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess-filesystemfilewriteaccess-vtbl" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess-filesystemfilewriteaccess-vtbl"><span><code>FileSystemFileAccess::FileSystemFileWriteAccess_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileSystemFileAccess::FileSystemFileWriteAccess_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFileWriteAccess)(IFileWriteAccess *this);</span>
<span class="line">  unsigned __int64 (__fastcall *fwrite)(IFileWriteAccess *this, const void *, unsigned __int64, unsigned __int64, void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess"><span><code>FileSystemFileAccess</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileSystemFileAccess : IFileAccess</span>
<span class="line">{</span>
<span class="line">  FileSystemMode mMode;</span>
<span class="line">  FileSystemFileAccess::FileSystemFileReadAccess mReadInterface;</span>
<span class="line">  FileSystemFileAccess::FileSystemFileWriteAccess mWriteInterface;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filesystemfileaccess-vtbl" tabindex="-1"><a class="header-anchor" href="#filesystemfileaccess-vtbl"><span><code>FileSystemFileAccess_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileSystemFileAccess_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFileAccess)(IFileAccess *this);</span>
<span class="line">  void *(__fastcall *fopen)(IFileAccess *this, const Core::Path *, const std::string *);</span>
<span class="line">  int (__fastcall *fclose)(IFileAccess *this, void *);</span>
<span class="line">  int (__fastcall *fseek)(IFileAccess *this, void *, __int64, int);</span>
<span class="line">  __int64 (__fastcall *ftell)(IFileAccess *this, void *);</span>
<span class="line">  const IFileReadAccess *(__fastcall *getReadInterface)(IFileAccess *this);</span>
<span class="line">  IFileWriteAccess *(__fastcall *getWriteInterface)(IFileAccess *this);</span>
<span class="line">  void (__fastcall *unload)(IFileAccess *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featurereftraits" tabindex="-1"><a class="header-anchor" href="#featurereftraits"><span><code>FeatureRefTraits</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureRefTraits</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureconstreftraits" tabindex="-1"><a class="header-anchor" href="#featureconstreftraits"><span><code>FeatureConstRefTraits</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureConstRefTraits</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1" tabindex="-1"><a class="header-anchor" href="#functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1"><span><code>FunctionManager::load::__l7::&lt;lambda_83470faaeb21466e721bad93b29e86d1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FunctionManager::load::__l7::&lt;lambda_83470faaeb21466e721bad93b29e86d1&gt;</span>
<span class="line">{</span>
<span class="line">  FunctionManager *const __this;</span>
<span class="line">  const SemVersion *minEngineVersion;</span>
<span class="line">  ResourcePackManager *serverPackManager;</span>
<span class="line">  const CurrentCmdVersion *packCommandVersion;</span>
<span class="line">  CommandRegistry *registry;</span>
<span class="line">  std::vector&lt;std::string&gt; *functionSoftEnumNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillcommand" tabindex="-1"><a class="header-anchor" href="#fillcommand"><span><code>FillCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FillCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandPosition mFrom;</span>
<span class="line">  CommandPosition mTo;</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  const Block *mReplaceBlock;</span>
<span class="line">  FillCommand::FillMode mMode;</span>
<span class="line">  int mBlockData;</span>
<span class="line">  int mReplaceBlockData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#fillcommand-vtbl"><span><code>FillCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FillCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functioncommand" tabindex="-1"><a class="header-anchor" href="#functioncommand"><span><code>FunctionCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FunctionCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandFilePath mFilePath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functioncommand-vtbl" tabindex="-1"><a class="header-anchor" href="#functioncommand-vtbl"><span><code>FunctionCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FunctionCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedataoutput" tabindex="-1"><a class="header-anchor" href="#filedataoutput"><span><code>FileDataOutput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDataOutput : BytesDataOutput</span>
<span class="line">{</span>
<span class="line">  bool mIsOk;</span>
<span class="line">  Core::File mFile;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedataoutput-vtbl" tabindex="-1"><a class="header-anchor" href="#filedataoutput-vtbl"><span><code>FileDataOutput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDataOutput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IDataOutput)(IDataOutput *this);</span>
<span class="line">  void (__fastcall *writeString)(IDataOutput *this, gsl::basic_string_span&lt;char const ,-1&gt;);</span>
<span class="line">  void (__fastcall *writeLongString)(IDataOutput *this, gsl::basic_string_span&lt;char const ,-1&gt;);</span>
<span class="line">  void (__fastcall *writeFloat)(IDataOutput *this, float);</span>
<span class="line">  void (__fastcall *writeDouble)(IDataOutput *this, long double);</span>
<span class="line">  void (__fastcall *writeByte)(IDataOutput *this, char);</span>
<span class="line">  void (__fastcall *writeShort)(IDataOutput *this, __int16);</span>
<span class="line">  void (__fastcall *writeInt)(IDataOutput *this, int);</span>
<span class="line">  void (__fastcall *writeLongLong)(IDataOutput *this, __int64);</span>
<span class="line">  void (__fastcall *writeBytes)(IDataOutput *this, const void *, unsigned __int64);</span>
<span class="line">  bool (__fastcall *isOk)(IDataOutput *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedatainput" tabindex="-1"><a class="header-anchor" href="#filedatainput"><span><code>FileDataInput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDataInput : BytesDataInput</span>
<span class="line">{</span>
<span class="line">  bool mIsOk;</span>
<span class="line">  Core::File mFile;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedatainput-vtbl" tabindex="-1"><a class="header-anchor" href="#filedatainput-vtbl"><span><code>FileDataInput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileDataInput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IDataInput)(IDataInput *this);</span>
<span class="line">  std::string *(__fastcall *readString)(IDataInput *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *readLongString)(IDataInput *this, std::string *result);</span>
<span class="line">  float (__fastcall *readFloat)(IDataInput *this);</span>
<span class="line">  long double (__fastcall *readDouble)(IDataInput *this);</span>
<span class="line">  char (__fastcall *readByte)(IDataInput *this);</span>
<span class="line">  __int16 (__fastcall *readShort)(IDataInput *this);</span>
<span class="line">  int (__fastcall *readInt)(IDataInput *this);</span>
<span class="line">  __int64 (__fastcall *readLongLong)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *readBytes)(IDataInput *this, void *, unsigned __int64);</span>
<span class="line">  unsigned __int64 (__fastcall *numBytesLeft)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *isOk)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *seek)(IDataInput *this, unsigned __int64);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016" tabindex="-1"><a class="header-anchor" href="#filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016"><span><code>FilePickerSettings::&lt;lambda_129896ef764bb08519885b7ab5ca9016&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilePickerSettings::&lt;lambda_129896ef764bb08519885b7ab5ca9016&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b" tabindex="-1"><a class="header-anchor" href="#filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b"><span><code>FilePickerSettings::&lt;lambda_1c69aa04d55bac9dab0ac921a14d8c2b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilePickerSettings::&lt;lambda_1c69aa04d55bac9dab0ac921a14d8c2b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5" tabindex="-1"><a class="header-anchor" href="#filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5"><span><code>FilePickerSettings::&lt;lambda_3b83f32960a2e8aa93e0654bf1d2fbe5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilePickerSettings::&lt;lambda_3b83f32960a2e8aa93e0654bf1d2fbe5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849"><span><code>FileUploadManager::_uploadStream::__l2::&lt;lambda_704199bdd8ef4b5e4b61022e06e9c849&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager::_uploadStream::__l2::&lt;lambda_704199bdd8ef4b5e4b61022e06e9c849&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadManager&gt; weak_this;</span>
<span class="line">  FileUploadManager::_uploadStream::__l2::&lt;lambda_7c32c70c440907d77e4081b7aef620a1&gt; fetchStreamDataCallback;</span>
<span class="line">  FileUploadManager::_uploadStream::__l2::&lt;lambda_ab8d111204de64d325c648c9d712e8ea&gt; onStreamFinishedCallback;</span>
<span class="line">  std::string boundary;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49"><span><code>FileUploadManager::_uploadChunk::__l13::&lt;lambda_beec154458228c4f1efa54daecb2bd49&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager::_uploadChunk::__l13::&lt;lambda_beec154458228c4f1efa54daecb2bd49&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadManager&gt; weak_this;</span>
<span class="line">  const FileChunkInfo chunk;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b"><span><code>FileUploadManager::_uploadChunk::__l13::&lt;lambda_beec154458228c4f1efa54daecb2bd49&gt;::()::__l5::&lt;lambda_b942687c99a128d38d4a3acdf5208e9b&gt;::()::__l5::&lt;lambda_0e10341a96d156a6650052c442f8bc7b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager::_uploadChunk::__l13::&lt;lambda_beec154458228c4f1efa54daecb2bd49&gt;::()::__l5::&lt;lambda_b942687c99a128d38d4a3acdf5208e9b&gt;::()::__l5::&lt;lambda_0e10341a96d156a6650052c442f8bc7b&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadManager&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c"><span><code>FileUploadManager::_resumeUpload::__l2::&lt;lambda_edbb1383cf59043f3a41a84683bc4a8c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUploadManager::_resumeUpload::__l2::&lt;lambda_edbb1383cf59043f3a41a84683bc4a8c&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadManager&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f" tabindex="-1"><a class="header-anchor" href="#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f"><span><code>FileUploadManager::uploadFile::__l13::&lt;lambda_74760951e5721fb9dafc828e7e1ca7c9&gt;::()::__l11::&lt;lambda_aa179f462ff3a856f50c63ee1659ca3f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FileUploadManager::uploadFile::__l13::&lt;lambda_74760951e5721fb9dafc828e7e1ca7c9&gt;::()::__l11::&lt;lambda_aa179f462ff3a856f50c63ee1659ca3f&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileUploadManager&gt; weak_this;</span>
<span class="line">  bool autoStartUpload;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a"><span><code>FileDownloadManager::pauseDownload::__l5::&lt;lambda_411b52f0bd9ccf2ab6e8671e1b98316a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadManager::pauseDownload::__l5::&lt;lambda_411b52f0bd9ccf2ab6e8671e1b98316a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20"><span><code>FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;::()::__l8::&lt;lambda_d89c88a6ec3abc173214fdc98b971c20&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;::()::__l8::&lt;lambda_d89c88a6ec3abc173214fdc98b971c20&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileDownloadManager&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd" tabindex="-1"><a class="header-anchor" href="#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd"><span><code>FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;::()::__l8::&lt;lambda_2443bc6f7ea8a704e54426e60ed6d6fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileDownloadManager::downloadFile::__l13::&lt;lambda_0e52f60533a747952835c01f8836253e&gt;::()::__l8::&lt;lambda_2443bc6f7ea8a704e54426e60ed6d6fd&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FileDownloadManager&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fish" tabindex="-1"><a class="header-anchor" href="#fish"><span><code>Fish</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Fish : WaterAnimal</span>
<span class="line">{</span>
<span class="line">  float mAnimationAmount;</span>
<span class="line">  float mAnimationAmountPrev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdaytime-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestdaytime-vtbl"><span><code>FilterTestDaytime_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestDaytime_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestclock" tabindex="-1"><a class="header-anchor" href="#filtertestclock"><span><code>FilterTestClock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestClock : SimpleFloatFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestclock-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestclock-vtbl"><span><code>FilterTestClock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestClock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestmoonintensity" tabindex="-1"><a class="header-anchor" href="#filtertestmoonintensity"><span><code>FilterTestMoonIntensity</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestMoonIntensity : SimpleFloatFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestmoonintensity-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestmoonintensity-vtbl"><span><code>FilterTestMoonIntensity_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestMoonIntensity_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestmoonphase" tabindex="-1"><a class="header-anchor" href="#filtertestmoonphase"><span><code>FilterTestMoonPhase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestMoonPhase : SimpleFloatFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestmoonphase-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestmoonphase-vtbl"><span><code>FilterTestMoonPhase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestMoonPhase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdistancetonearestplayer" tabindex="-1"><a class="header-anchor" href="#filtertestdistancetonearestplayer"><span><code>FilterTestDistanceToNearestPlayer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestDistanceToNearestPlayer : SimpleFloatFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdistancetonearestplayer-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestdistancetonearestplayer-vtbl"><span><code>FilterTestDistanceToNearestPlayer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestDistanceToNearestPlayer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdimensionweather" tabindex="-1"><a class="header-anchor" href="#filtertestdimensionweather"><span><code>FilterTestDimensionWeather</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FilterTestDimensionWeather : FilterTest</span>
<span class="line">{</span>
<span class="line">  FilterTestDimensionWeather::WeatherType mWeather;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdimensionweather-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestdimensionweather-vtbl"><span><code>FilterTestDimensionWeather_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestDimensionWeather_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdifficulty-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestdifficulty-vtbl"><span><code>FilterTestDifficulty_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestDifficulty_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertesthourlyclock-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertesthourlyclock-vtbl"><span><code>FilterTestHourlyClock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestHourlyClock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestgamerule-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestgamerule-vtbl"><span><code>FilterTestGameRule_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestGameRule_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestbiome-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestbiome-vtbl"><span><code>FilterTestBiome_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestBiome_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestbiomesnowcovered-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestbiomesnowcovered-vtbl"><span><code>FilterTestBiomeSnowCovered_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestBiomeSnowCovered_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestbiomehumid-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestbiomehumid-vtbl"><span><code>FilterTestBiomeHumid_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestBiomeHumid_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertesttemperaturetype-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertesttemperaturetype-vtbl"><span><code>FilterTestTemperatureType_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestTemperatureType_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertesttemperaturevalue-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertesttemperaturevalue-vtbl"><span><code>FilterTestTemperatureValue_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestTemperatureValue_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestbrightness-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestbrightness-vtbl"><span><code>FilterTestBrightness_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestBrightness_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestaltitude-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestaltitude-vtbl"><span><code>FilterTestAltitude_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestAltitude_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestbiomehastag-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestbiomehastag-vtbl"><span><code>FilterTestBiomeHasTag_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestBiomeHasTag_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertesthastradesupply-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertesthastradesupply-vtbl"><span><code>FilterTestHasTradeSupply_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestHasTradeSupply_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestlightlevel" tabindex="-1"><a class="header-anchor" href="#filtertestlightlevel"><span><code>FilterTestLightLevel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestLightLevel : SimpleIntFilterTest</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestlightlevel-vtbl" tabindex="-1"><a class="header-anchor" href="#filtertestlightlevel-vtbl"><span><code>FilterTestLightLevel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FilterTestLightLevel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FilterTest)(FilterTest *this);</span>
<span class="line">  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);</span>
<span class="line">  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);</span>
<span class="line">  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span&lt;char const ,-1&gt; *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);</span>
<span class="line">  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireimmunedefinition" tabindex="-1"><a class="header-anchor" href="#fireimmunedefinition"><span><code>FireImmuneDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireImmuneDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatsinliquiddefinition" tabindex="-1"><a class="header-anchor" href="#floatsinliquiddefinition"><span><code>FloatsInLiquidDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FloatsInLiquidDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flyingspeeddefinition" tabindex="-1"><a class="header-anchor" href="#flyingspeeddefinition"><span><code>FlyingSpeedDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyingSpeedDefinition</span>
<span class="line">{</span>
<span class="line">  float mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frictionmodifierdefinition" tabindex="-1"><a class="header-anchor" href="#frictionmodifierdefinition"><span><code>FrictionModifierDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrictionModifierDefinition</span>
<span class="line">{</span>
<span class="line">  float mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findcovergoal" tabindex="-1"><a class="header-anchor" href="#findcovergoal"><span><code>FindCoverGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FindCoverGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mSpeed;</span>
<span class="line">  int mCooldownTicks;</span>
<span class="line">  Tick mCooldownTimer;</span>
<span class="line">  Vec3 mWantedPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findcovergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#findcovergoal-vtbl"><span><code>FindCoverGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindCoverGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fleesungoal" tabindex="-1"><a class="header-anchor" href="#fleesungoal"><span><code>FleeSunGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FleeSunGoal : FindCoverGoal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fleesungoal-vtbl" tabindex="-1"><a class="header-anchor" href="#fleesungoal-vtbl"><span><code>FleeSunGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FleeSunGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="followflockgoal" tabindex="-1"><a class="header-anchor" href="#followflockgoal"><span><code>FollowFlockGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FollowFlockGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mCooldownTicks;</span>
<span class="line">  int mNotInFlockTicks;</span>
<span class="line">  float mSpeed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="followflockgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#followflockgoal-vtbl"><span><code>FollowFlockGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FollowFlockGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findblocknode" tabindex="-1"><a class="header-anchor" href="#findblocknode"><span><code>FindBlockNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) FindBlockNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  int mSearchRadius;</span>
<span class="line">  bool mJumping;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findblocknode-vtbl" tabindex="-1"><a class="header-anchor" href="#findblocknode-vtbl"><span><code>FindBlockNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindBlockNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findblockdefinition" tabindex="-1"><a class="header-anchor" href="#findblockdefinition"><span><code>FindBlockDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindBlockDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mBlockName;</span>
<span class="line">  std::string mBlockNameId;</span>
<span class="line">  int mSearchRadius;</span>
<span class="line">  std::string mSearchRadiusId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findblockdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#findblockdefinition-vtbl"><span><code>FindBlockDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindBlockDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findactornode" tabindex="-1"><a class="header-anchor" href="#findactornode"><span><code>FindActorNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindActorNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  ActorType mActorType;</span>
<span class="line">  int mSearchRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findactornode-vtbl" tabindex="-1"><a class="header-anchor" href="#findactornode-vtbl"><span><code>FindActorNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindActorNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findactordefinition" tabindex="-1"><a class="header-anchor" href="#findactordefinition"><span><code>FindActorDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindActorDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mEntityName;</span>
<span class="line">  std::string mEntityType;</span>
<span class="line">  int mSearchRadius;</span>
<span class="line">  std::string mSearchRadiusId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findactordefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#findactordefinition-vtbl"><span><code>FindActorDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindActorDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flynode" tabindex="-1"><a class="header-anchor" href="#flynode"><span><code>FlyNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) FlyNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  bool mHaveCheckedFlightStatus;</span>
<span class="line">  bool mJumpedLastTick;</span>
<span class="line">  bool mJumpedOnce;</span>
<span class="line">  bool mShouldBeFlying;</span>
<span class="line">  bool mShouldThrowEventIfNoStateChangeNecessary;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flynode-vtbl" tabindex="-1"><a class="header-anchor" href="#flynode-vtbl"><span><code>FlyNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flydefinition" tabindex="-1"><a class="header-anchor" href="#flydefinition"><span><code>FlyDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlyDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  bool mShouldBeFlying;</span>
<span class="line">  std::string mShouldBeFlyingId;</span>
<span class="line">  bool mShouldThrowEventIfNoStateChangeNecessary;</span>
<span class="line">  std::string mShouldThrowEventIfNoStateChangeNecessaryId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flydefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#flydefinition-vtbl"><span><code>FlyDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlyDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findtargetnode" tabindex="-1"><a class="header-anchor" href="#findtargetnode"><span><code>FindTargetNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FindTargetNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  bool mReselectTargets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findtargetnode-vtbl" tabindex="-1"><a class="header-anchor" href="#findtargetnode-vtbl"><span><code>FindTargetNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindTargetNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findtargetdefinition" tabindex="-1"><a class="header-anchor" href="#findtargetdefinition"><span><code>FindTargetDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindTargetDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mOperation;</span>
<span class="line">  std::string mOperationId;</span>
<span class="line">  float mDist;</span>
<span class="line">  std::string mDistId;</span>
<span class="line">  Vec3 mTargetPos;</span>
<span class="line">  std::string mTargetPosId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findtargetdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#findtargetdefinition-vtbl"><span><code>FindTargetDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindTargetDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findharvestdefinition" tabindex="-1"><a class="header-anchor" href="#findharvestdefinition"><span><code>FindHarvestDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindHarvestDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mItemName;</span>
<span class="line">  std::string mItemNameId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findharvestdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#findharvestdefinition-vtbl"><span><code>FindHarvestDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindHarvestDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findrecipedefinition" tabindex="-1"><a class="header-anchor" href="#findrecipedefinition"><span><code>FindRecipeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindRecipeDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mItemName;</span>
<span class="line">  std::string mItemNameId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findrecipedefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#findrecipedefinition-vtbl"><span><code>FindRecipeDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindRecipeDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findrecipenode" tabindex="-1"><a class="header-anchor" href="#findrecipenode"><span><code>FindRecipeNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FindRecipeNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  std::string mTargetItemName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findrecipenode-vtbl" tabindex="-1"><a class="header-anchor" href="#findrecipenode-vtbl"><span><code>FindRecipeNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FindRecipeNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399" tabindex="-1"><a class="header-anchor" href="#fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399"><span><code>FireworksRocketActor::checkAchievement::__l21::&lt;lambda_c73dc455ce730d1f42b1b56fbc1f5399&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireworksRocketActor::checkAchievement::__l21::&lt;lambda_c73dc455ce730d1f42b1b56fbc1f5399&gt;</span>
<span class="line">{</span>
<span class="line">  AABB *areaofeffect;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireball" tabindex="-1"><a class="header-anchor" href="#fireball"><span><code>Fireball</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Fireball : PredictableProjectile</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID ownerId;</span>
<span class="line">  bool mInGround;</span>
<span class="line">  MovementInterpolator mInterpolation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireball-vtbl" tabindex="-1"><a class="header-anchor" href="#fireball-vtbl"><span><code>Fireball_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Fireball_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  float (__fastcall *getInertia)(Fireball *this);</span>
<span class="line">  void (__fastcall *onHit)(Fireball *this, const HitResult *);</span>
<span class="line">  ParticleType (__fastcall *getTrailParticle)(Fireball *this);</span>
<span class="line">  bool (__fastcall *shouldBurn)(Fireball *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceinputcontainercontroller" tabindex="-1"><a class="header-anchor" href="#furnaceinputcontainercontroller"><span><code>FurnaceInputContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceInputContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">  HashedString mRecipeTag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceinputcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#furnaceinputcontainercontroller-vtbl"><span><code>FurnaceInputContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FurnaceInputContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db"><span><code>FilterList::initialize::__l2::&lt;lambda_53e6ff47ca84784fadfa6f6ea435d0db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_53e6ff47ca84784fadfa6f6ea435d0db&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6"><span><code>FilterList::initialize::__l2::&lt;lambda_0b20278bf0b6617c64212f827fc3f6c6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_0b20278bf0b6617c64212f827fc3f6c6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315"><span><code>FilterList::initialize::__l2::&lt;lambda_70127f048990374f535f74a1b0a14315&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_70127f048990374f535f74a1b0a14315&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68"><span><code>FilterList::initialize::__l2::&lt;lambda_c08235eaf234640396c8d9d4980e4d68&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_c08235eaf234640396c8d9d4980e4d68&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541"><span><code>FilterList::initialize::__l2::&lt;lambda_2277542b59c4fb23b9fa70a8ed97c541&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_2277542b59c4fb23b9fa70a8ed97c541&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3"><span><code>FilterList::initialize::__l2::&lt;lambda_93c18a3b380a6e7a33442d3c0483fbe3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_93c18a3b380a6e7a33442d3c0483fbe3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8"><span><code>FilterList::initialize::__l2::&lt;lambda_2d06b743fa8020ab3d8bf3c094340db8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_2d06b743fa8020ab3d8bf3c094340db8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a"><span><code>FilterList::initialize::__l2::&lt;lambda_c3f8d4e5adf6bce18ffcdda2e15ecf8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_c3f8d4e5adf6bce18ffcdda2e15ecf8a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324" tabindex="-1"><a class="header-anchor" href="#filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324"><span><code>FilterList::initialize::__l2::&lt;lambda_695aad19b31fab8d5eb858d6aa1aa324&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterList::initialize::__l2::&lt;lambda_695aad19b31fab8d5eb858d6aa1aa324&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946" tabindex="-1"><a class="header-anchor" href="#filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946"><span><code>FilterTestDistanceToNearestPlayer::evaluate::__l2::&lt;lambda_ac2cf845ac1aa3efb9503cdba1ff5946&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilterTestDistanceToNearestPlayer::evaluate::__l2::&lt;lambda_ac2cf845ac1aa3efb9503cdba1ff5946&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 pos;</span>
<span class="line">  float *best;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fertilizeritem" tabindex="-1"><a class="header-anchor" href="#fertilizeritem"><span><code>FertilizerItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FertilizerItem : Item</span>
<span class="line">{</span>
<span class="line">  FertilizerType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fishingenchant" tabindex="-1"><a class="header-anchor" href="#fishingenchant"><span><code>FishingEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FishingEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fishingenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#fishingenchant-vtbl"><span><code>FishingEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FishingEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frostwalkerenchant" tabindex="-1"><a class="header-anchor" href="#frostwalkerenchant"><span><code>FrostWalkerEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrostWalkerEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frostwalkerenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#frostwalkerenchant-vtbl"><span><code>FrostWalkerEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FrostWalkerEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firechargeitem" tabindex="-1"><a class="header-anchor" href="#firechargeitem"><span><code>FireChargeItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireChargeItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fishingroditem" tabindex="-1"><a class="header-anchor" href="#fishingroditem"><span><code>FishingRodItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FishingRodItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureUVCoordinateSet mFrame[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flintandsteelitem" tabindex="-1"><a class="header-anchor" href="#flintandsteelitem"><span><code>FlintAndSteelItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlintAndSteelItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flagcomponent-noisebasedcolorpalette" tabindex="-1"><a class="header-anchor" href="#flagcomponent-noisebasedcolorpalette"><span><code>FlagComponent&lt;NoiseBasedColorPalette&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlagComponent&lt;NoiseBasedColorPalette&gt; : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filteredtransformationattributes-prehillsedgetransformation" tabindex="-1"><a class="header-anchor" href="#filteredtransformationattributes-prehillsedgetransformation"><span><code>FilteredTransformationAttributes&lt;PreHillsEdgeTransformation&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilteredTransformationAttributes&lt;PreHillsEdgeTransformation&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;PosibleTransformation&gt; mTransformations;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filteredtransformationattributes-legacyprehillsedgetransformation" tabindex="-1"><a class="header-anchor" href="#filteredtransformationattributes-legacyprehillsedgetransformation"><span><code>FilteredTransformationAttributes&lt;LegacyPreHillsEdgeTransformation&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FilteredTransformationAttributes&lt;LegacyPreHillsEdgeTransformation&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;PosibleTransformation&gt; mTransformations;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fixedbiomesource-vtbl" tabindex="-1"><a class="header-anchor" href="#fixedbiomesource-vtbl"><span><code>FixedBiomeSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FixedBiomeSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BiomeSource)(BiomeSource *this);</span>
<span class="line">  void (__fastcall *fillBiomes)(BiomeSource *this, LevelChunk *);</span>
<span class="line">  BiomeArea *(__fastcall *getBiomeArea)(BiomeSource *this, BiomeArea *result, const BoundingBox *, unsigned int);</span>
<span class="line">  bool (__fastcall *containsOnly)(BiomeSource *this, int, int, int, gsl::span&lt;int const ,-1&gt;);</span>
<span class="line">  const Biome *(__fastcall *getBiome)(BiomeSource *this, int, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalblock" tabindex="-1"><a class="header-anchor" href="#facedirectionalblock"><span><code>FaceDirectionalBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FaceDirectionalBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  bool mHorizontalOnly;</span>
<span class="line">  float mYRotOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalblock-vtbl" tabindex="-1"><a class="header-anchor" href="#facedirectionalblock-vtbl"><span><code>FaceDirectionalBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FaceDirectionalBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceblock" tabindex="-1"><a class="header-anchor" href="#furnaceblock"><span><code>FurnaceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FurnaceBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  const bool mLit;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnaceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#furnaceblock-vtbl"><span><code>FurnaceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FurnaceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frostediceblock" tabindex="-1"><a class="header-anchor" href="#frostediceblock"><span><code>FrostedIceBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FrostedIceBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="frostediceblock-vtbl" tabindex="-1"><a class="header-anchor" href="#frostediceblock-vtbl"><span><code>FrostedIceBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FrostedIceBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireresistantcomponentdescription" tabindex="-1"><a class="header-anchor" href="#fireresistantcomponentdescription"><span><code>FireResistantComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FireResistantComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  bool fireResistant;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireresistantcomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#fireresistantcomponentdescription-vtbl"><span><code>FireResistantComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FireResistantComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="farmblock" tabindex="-1"><a class="header-anchor" href="#farmblock"><span><code>FarmBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FarmBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="farmblock-vtbl" tabindex="-1"><a class="header-anchor" href="#farmblock-vtbl"><span><code>FarmBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FarmBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fencegateblock" tabindex="-1"><a class="header-anchor" href="#fencegateblock"><span><code>FenceGateBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FenceGateBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fencegateblock-vtbl" tabindex="-1"><a class="header-anchor" href="#fencegateblock-vtbl"><span><code>FenceGateBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FenceGateBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerblock" tabindex="-1"><a class="header-anchor" href="#flowerblock"><span><code>FlowerBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FlowerBlock : BushBlock</span>
<span class="line">{</span>
<span class="line">  _BYTE mType[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flowerblock-vtbl" tabindex="-1"><a class="header-anchor" href="#flowerblock-vtbl"><span><code>FlowerBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlowerBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc" tabindex="-1"><a class="header-anchor" href="#farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc"><span><code>FarmBlock::transformOnFall::__l16::&lt;lambda_6f1c6586e35323b556ccaad789196afc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FarmBlock::transformOnFall::__l16::&lt;lambda_6f1c6586e35323b556ccaad789196afc&gt;</span>
<span class="line">{</span>
<span class="line">  Actor **entity;</span>
<span class="line">  const FarmBlock *const __this;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fungusstem" tabindex="-1"><a class="header-anchor" href="#fungusstem"><span><code>FungusStem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FungusStem : RotatedPillarBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fungusstem-vtbl" tabindex="-1"><a class="header-anchor" href="#fungusstem-vtbl"><span><code>FungusStem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FungusStem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db" tabindex="-1"><a class="header-anchor" href="#filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db"><span><code>FileArchiver::_importLegacyWorld::__l16::&lt;lambda_538357a0a1f30c0e58914473ed9ae7db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileArchiver::_importLegacyWorld::__l16::&lt;lambda_538357a0a1f30c0e58914473ed9ae7db&gt;</span>
<span class="line">{</span>
<span class="line">  Core::File *fOut;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba" tabindex="-1"><a class="header-anchor" href="#filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba"><span><code>FileArchiver::_importLegacyWorld::__l2::&lt;lambda_30db252728e558b809611799e47d6aba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileArchiver::_importLegacyWorld::__l2::&lt;lambda_30db252728e558b809611799e47d6aba&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a" tabindex="-1"><a class="header-anchor" href="#filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a"><span><code>FileArchiver::_importWorld::__l2::&lt;lambda_80dd2c13733dd620134364ce61fd290a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileArchiver::_importWorld::__l2::&lt;lambda_80dd2c13733dd620134364ce61fd290a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f" tabindex="-1"><a class="header-anchor" href="#filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f"><span><code>FileArchiver::archiveLevel::__l2::&lt;lambda_e96768593f2d4ea24e6f0259355ea06f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileArchiver::archiveLevel::__l2::&lt;lambda_e96768593f2d4ea24e6f0259355ea06f&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 *numFiles;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-aggregatefeature-0" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-aggregatefeature-0"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;0&gt; &gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  AggregateFeature&lt;0&gt; *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-aggregatefeature-0-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-aggregatefeature-0-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;0&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;0&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-aggregatefeature-1" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-aggregatefeature-1"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;1&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;1&gt; &gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  AggregateFeature&lt;1&gt; *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-aggregatefeature-1-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-aggregatefeature-1-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;1&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;AggregateFeature&lt;1&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flagcomponent-ignoreautomaticfeaturerules" tabindex="-1"><a class="header-anchor" href="#flagcomponent-ignoreautomaticfeaturerules"><span><code>FlagComponent&lt;IgnoreAutomaticFeatureRules&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlagComponent&lt;IgnoreAutomaticFeatureRules&gt; : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallentreetrunk" tabindex="-1"><a class="header-anchor" href="#fallentreetrunk"><span><code>FallenTreeTrunk</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FallenTreeTrunk : ITreeTrunk</span>
<span class="line">{</span>
<span class="line">  IntRange mLogLength;</span>
<span class="line">  IntRange mHeightModifier;</span>
<span class="line">  IntRange mStumpHeight;</span>
<span class="line">  BlockDescriptor mTrunkBlockDescriptor;</span>
<span class="line">  WeakRefT&lt;FeatureRefTraits&gt; mLogDecorationFeature;</span>
<span class="line">  TreeHelper::AttachableDecoration mDecoration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallentreetrunk-vtbl" tabindex="-1"><a class="header-anchor" href="#fallentreetrunk-vtbl"><span><code>FallenTreeTrunk_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FallenTreeTrunk_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITreeTrunk)(ITreeTrunk *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *placeTrunk)(ITreeTrunk *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *, const ITreeCanopy *);</span>
<span class="line">  bool (__fastcall *parse)(ITreeTrunk *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fancytreecanopy" tabindex="-1"><a class="header-anchor" href="#fancytreecanopy"><span><code>FancyTreeCanopy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FancyTreeCanopy : ITreeCanopy</span>
<span class="line">{</span>
<span class="line">  int mHeight;</span>
<span class="line">  int mRadius;</span>
<span class="line">  BlockDescriptor mLeafBlockDescriptor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fancytreecanopy-vtbl" tabindex="-1"><a class="header-anchor" href="#fancytreecanopy-vtbl"><span><code>FancyTreeCanopy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FancyTreeCanopy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITreeCanopy)(ITreeCanopy *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *placeCanopy)(ITreeCanopy *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *);</span>
<span class="line">  bool (__fastcall *parseTreeCanopy)(ITreeCanopy *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fancytreetrunk" tabindex="-1"><a class="header-anchor" href="#fancytreetrunk"><span><code>FancyTreeTrunk</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) FancyTreeTrunk : ITreeTrunk</span>
<span class="line">{</span>
<span class="line">  int mBaseHeight;</span>
<span class="line">  int mHeightVariance;</span>
<span class="line">  int mTrunkWidth;</span>
<span class="line">  float mHeightScale;</span>
<span class="line">  float mBranchSlope;</span>
<span class="line">  float mBranchDensity;</span>
<span class="line">  float mBranchAltitudeFactor;</span>
<span class="line">  float mFoliageAltitudeFactor;</span>
<span class="line">  BlockDescriptor mTrunkBlockDescriptor;</span>
<span class="line">  float mWidthScale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fancytreetrunk-vtbl" tabindex="-1"><a class="header-anchor" href="#fancytreetrunk-vtbl"><span><code>FancyTreeTrunk_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FancyTreeTrunk_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITreeTrunk)(ITreeTrunk *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *placeTrunk)(ITreeTrunk *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *, const ITreeCanopy *);</span>
<span class="line">  bool (__fastcall *parse)(ITreeTrunk *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-orefeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-orefeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;OreFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;OreFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  OreFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-orefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-orefeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;OreFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;OreFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-scatterfeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-scatterfeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;ScatterFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;ScatterFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  ScatterFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-scatterfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-scatterfeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;ScatterFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;ScatterFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-searchfeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-searchfeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;SearchFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;SearchFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  SearchFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-searchfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-searchfeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;SearchFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;SearchFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-singleblockfeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-singleblockfeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;SingleBlockFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;SingleBlockFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  SingleBlockFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-singleblockfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-singleblockfeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;SingleBlockFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;SingleBlockFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-structuretemplatefeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-structuretemplatefeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;StructureTemplateFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;StructureTemplateFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  StructureTemplateFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-structuretemplatefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-structuretemplatefeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;StructureTemplateFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;StructureTemplateFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-weightedrandomfeature" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-weightedrandomfeature"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;WeightedRandomFeature&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::ConcreteFeatureHolder&lt;WeightedRandomFeature&gt; : FeatureLoading::AbstractFeatureHolder</span>
<span class="line">{</span>
<span class="line">  WeightedRandomFeature *mFeaturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-concretefeatureholder-weightedrandomfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#featureloading-concretefeatureholder-weightedrandomfeature-vtbl"><span><code>FeatureLoading::ConcreteFeatureHolder&lt;WeightedRandomFeature&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder&lt;WeightedRandomFeature&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_070746fd668a8863cbe2a3fa42ef5d69&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_070746fd668a8863cbe2a3fa42ef5d69&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_d26feffea4ae0d0b0b8b4d6cae78c5cf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_d26feffea4ae0d0b0b8b4d6cae78c5cf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_af5d1f29c06df3f1db5b8f80f70364da&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_af5d1f29c06df3f1db5b8f80f70364da&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_269493b156b355f6873e78f5de861254&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_269493b156b355f6873e78f5de861254&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_534deace486ba3fe58b054318be7d5d3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_534deace486ba3fe58b054318be7d5d3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_ab790779e99eb67e9d8c5c8fd9cc4c45&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_ab790779e99eb67e9d8c5c8fd9cc4c45&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_4037a9070031ea00ecf26a17b8deac9a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_4037a9070031ea00ecf26a17b8deac9a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_58c2dcc1193277e90b7e9d1eb1c15558&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_58c2dcc1193277e90b7e9d1eb1c15558&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_4299ec9b57c324e4ed6c59adea430d1b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_4299ec9b57c324e4ed6c59adea430d1b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_39ac3505671351be2f07089f45af80d4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_39ac3505671351be2f07089f45af80d4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_62a233d718e72e6d45d8be1832f214d7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_62a233d718e72e6d45d8be1832f214d7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_765a9a9c0c55c35967e3b8f28c6a4eb6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_765a9a9c0c55c35967e3b8f28c6a4eb6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_897e6fcd2a422a00b9d9c4a201bfd773&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_897e6fcd2a422a00b9d9c4a201bfd773&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_42561c5376106a2d36a76d95d16bfeed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_42561c5376106a2d36a76d95d16bfeed&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_3353d277619da3d5cd138ecb16b20a40&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_3353d277619da3d5cd138ecb16b20a40&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_2555eade625bb966e8a1cb8c17c7d650&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_2555eade625bb966e8a1cb8c17c7d650&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_a0eedeb0869af7a0f96ac76dc92d0031&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_a0eedeb0869af7a0f96ac76dc92d0031&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_4bf39c4a9b08fca0df43481eceb092dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_4bf39c4a9b08fca0df43481eceb092dc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_5ae05df8699a59f68386294438b05b14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_5ae05df8699a59f68386294438b05b14&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_72c5c6cc5f5dd19ec9b756a6f4aa1c7e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_72c5c6cc5f5dd19ec9b756a6f4aa1c7e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_45506032ba1c7b9bbd1df26c52850076&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_45506032ba1c7b9bbd1df26c52850076&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_bca5b7ec8dc84ccd012b20d3dd8504ec&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_bca5b7ec8dc84ccd012b20d3dd8504ec&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_13ccba55549a4f3cd8e4c2c51a107ddd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_13ccba55549a4f3cd8e4c2c51a107ddd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_3aa76ff1487ac6670529bd834c913005&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_3aa76ff1487ac6670529bd834c913005&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_5cb6d1b77b80274727750302cf95eef8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_5cb6d1b77b80274727750302cf95eef8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_2db0a06029a62470922787888580f857&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_2db0a06029a62470922787888580f857&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_e3ab05455b51e5b1eb353e38d6a02e5a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_e3ab05455b51e5b1eb353e38d6a02e5a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_a341f3a50e60c6ed529981a28c90aaac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_a341f3a50e60c6ed529981a28c90aaac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_8d80157009857924b75728f5593a8ff8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_8d80157009857924b75728f5593a8ff8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_b79033f7b1569ed146e124133fdbcc0c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_b79033f7b1569ed146e124133fdbcc0c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_ff651ceb1e4b05630dbf709c5689b4b1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_ff651ceb1e4b05630dbf709c5689b4b1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_5c3870871285efa3a3aa788bcc59a6a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_5c3870871285efa3a3aa788bcc59a6a5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e"><span><code>FeatureLoading::_buildSchema::__l3::&lt;lambda_30a0658175a01da0b1d017c3a844bd3e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l3::&lt;lambda_30a0658175a01da0b1d017c3a844bd3e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_8863387e98ecef072021858bd81ad446&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_8863387e98ecef072021858bd81ad446&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_5345261c4062f4e77220602c18289610&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_5345261c4062f4e77220602c18289610&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_8fb55b46049a0200c7143f7ba4895532&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_8fb55b46049a0200c7143f7ba4895532&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_64df30a075a0c8c674bb3f6f828c52ca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_64df30a075a0c8c674bb3f6f828c52ca&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_0d7cacde3fd40c099b69258499db96d6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_0d7cacde3fd40c099b69258499db96d6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_e34e6baeca6179063c960b15821263e0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_e34e6baeca6179063c960b15821263e0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f"><span><code>FeatureLoading::_buildSchema::__l5::&lt;lambda_bd812f17ea40517b41fdb6a37c75611f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l5::&lt;lambda_bd812f17ea40517b41fdb6a37c75611f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a"><span><code>FeatureLoading::_buildSchema::__l5::&lt;lambda_0bab2de68df3204c165f75450ef8e72a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l5::&lt;lambda_0bab2de68df3204c165f75450ef8e72a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe"><span><code>FeatureLoading::_buildSchema::__l5::&lt;lambda_332a15757cb5a2ca55e4629941ee6bfe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l5::&lt;lambda_332a15757cb5a2ca55e4629941ee6bfe&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_03b0ae550376e085f07188b9454238fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_03b0ae550376e085f07188b9454238fd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_6b158c2e512a8d1fbc8831cf780ee4dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_6b158c2e512a8d1fbc8831cf780ee4dc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e"><span><code>FeatureLoading::_buildSchema::__l4::&lt;lambda_83079f870ce1353e2d06423894cf973e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l4::&lt;lambda_83079f870ce1353e2d06423894cf973e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_97556ef3bb7e60132ee693ff92d4f682&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_97556ef3bb7e60132ee693ff92d4f682&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_ed2b13013692bdd7f19a91b5afd86826&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_ed2b13013692bdd7f19a91b5afd86826&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_d222b44934b5477be8e0cf5e6eaab932&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_d222b44934b5477be8e0cf5e6eaab932&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_c8bd75ad40874126e6105b6c5b3170a4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_c8bd75ad40874126e6105b6c5b3170a4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_6820c32e3003b153c2b3cea1bdc8d1b3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_6820c32e3003b153c2b3cea1bdc8d1b3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_374f89a74208a5ae69066c135eeec787&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_374f89a74208a5ae69066c135eeec787&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_90c035c83f69abd1911d31525619f974&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_90c035c83f69abd1911d31525619f974&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_8d4f36e87c6e3e131780a3a2f22c6d9d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_8d4f36e87c6e3e131780a3a2f22c6d9d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_6de0fdb9a2c3ef41e1fef4cdd647078c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_6de0fdb9a2c3ef41e1fef4cdd647078c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flatworldgenerator-threaddata" tabindex="-1"><a class="header-anchor" href="#flatworldgenerator-threaddata"><span><code>FlatWorldGenerator::ThreadData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlatWorldGenerator::ThreadData</span>
<span class="line">{</span>
<span class="line">  Random random;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flatworldgenerator" tabindex="-1"><a class="header-anchor" href="#flatworldgenerator"><span><code>FlatWorldGenerator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlatWorldGenerator : ChunkSource, WorldGenerator</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Block const *&gt; mPrototypeBlocks;</span>
<span class="line">  BlockVolume mPrototype;</span>
<span class="line">  const Biome *mBiome;</span>
<span class="line">  Bedrock::Threading::InstancedThreadLocal&lt;FlatWorldGenerator::ThreadData,std::allocator&lt;FlatWorldGenerator::ThreadData&gt; &gt; generatorHelpersPool;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flatworldgenerator-vtbl" tabindex="-1"><a class="header-anchor" href="#flatworldgenerator-vtbl"><span><code>FlatWorldGenerator_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlatWorldGenerator_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkSource)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *shutdown)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isShutdownDone)(ChunkSource *this);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, Random *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);</span>
<span class="line">  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);</span>
<span class="line">  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr&lt;LevelChunk,LevelChunkFinalDeleter&gt;);</span>
<span class="line">  void (__fastcall *compact)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *flushPendingWrites)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getChunkMap)(ChunkSource *this);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getStorage)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *clearDeletedEntities)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set&lt;AutomaticID&lt;Dimension,int&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *canCreateViews)(ChunkSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featurepoolelement" tabindex="-1"><a class="header-anchor" href="#featurepoolelement"><span><code>FeaturePoolElement</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeaturePoolElement : StructurePoolElement</span>
<span class="line">{</span>
<span class="line">  WeakRefT&lt;FeatureRefTraits&gt; mFeature;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featurepoolelement-vtbl" tabindex="-1"><a class="header-anchor" href="#featurepoolelement-vtbl"><span><code>FeaturePoolElement_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FeaturePoolElement_vtbl</span>
<span class="line">{</span>
<span class="line">  BlockPos *(__fastcall *getSize)(StructurePoolElement *this, BlockPos *result, Rotation);</span>
<span class="line">  std::vector&lt;JigsawBlockInfo&gt; *(__fastcall *getJigsawMarkers)(StructurePoolElement *this, std::vector&lt;JigsawBlockInfo&gt; *result, BlockPos, LegacyStructureSettings *, BlockSource *);</span>
<span class="line">  std::vector&lt;JigsawBlockInfo&gt; *(__fastcall *getJigsawMarkers)(StructurePoolElement *this, std::vector&lt;JigsawBlockInfo&gt; *result, BlockPos, Rotation);</span>
<span class="line">  BoundingBox *(__fastcall *getBoundingBox)(StructurePoolElement *this, BoundingBox *result, BlockPos, Rotation);</span>
<span class="line">  void (__fastcall *setProjection)(StructurePoolElement *this, Projection);</span>
<span class="line">  Projection (__fastcall *getProjection)(StructurePoolElement *this);</span>
<span class="line">  PostProcessSettings (__fastcall *getPostProcessSettings)(StructurePoolElement *this);</span>
<span class="line">  bool (__fastcall *place)(StructurePoolElement *this, BlockSource *, BlockPos, Rotation, BoundingBox, Random *, std::unordered_map&lt;BlockPos,std::optional&lt;ActorDefinitionIdentifier&gt;&gt; *, BlockPos);</span>
<span class="line">  void (__fastcall *placeActors)(StructurePoolElement *this, BlockSource *, BlockPos, Rotation, Random *);</span>
<span class="line">  void (__fastcall *handleJigsawBlock)(StructurePoolElement *this, BlockSource *, JigsawBlockInfo *, LegacyStructureSettings *);</span>
<span class="line">  void (__fastcall *handleDataMarker)(StructurePoolElement *this, BlockSource *, BlockPos, std::string, std::unordered_map&lt;BlockPos,std::optional&lt;ActorDefinitionIdentifier&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *isValid)(StructurePoolElement *this);</span>
<span class="line">  void (__fastcall *~StructurePoolElement)(StructurePoolElement *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flushablestorageareaenv" tabindex="-1"><a class="header-anchor" href="#flushablestorageareaenv"><span><code>FlushableStorageAreaEnv</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FlushableStorageAreaEnv : FlushableEnv</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Core::FileStorageArea&gt; mStorageArea;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flushablestorageareaenv-vtbl" tabindex="-1"><a class="header-anchor" href="#flushablestorageareaenv-vtbl"><span><code>FlushableStorageAreaEnv_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FlushableStorageAreaEnv_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Env)(leveldb::Env *this);</span>
<span class="line">  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector&lt;std::string&gt; *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);</span>
<span class="line">  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);</span>
<span class="line">  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);</span>
<span class="line">  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);</span>
<span class="line">  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);</span>
<span class="line">  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);</span>
<span class="line">  void (__fastcall *flushToPermanentStorage)(FlushableEnv *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillcontainerfunction" tabindex="-1"><a class="header-anchor" href="#fillcontainerfunction"><span><code>FillContainerFunction</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FillContainerFunction : LootItemFunction</span>
<span class="line">{</span>
<span class="line">  std::string mLootTable;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fillcontainerfunction-vtbl" tabindex="-1"><a class="header-anchor" href="#fillcontainerfunction-vtbl"><span><code>FillContainerFunction_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FillContainerFunction_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LootItemFunction)(LootItemFunction *this);</span>
<span class="line">  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);</span>
<span class="line">  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);</span>
<span class="line">  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);</span>
<span class="line">  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileentrycomparer" tabindex="-1"><a class="header-anchor" href="#fileentrycomparer"><span><code>FileEntryComparer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileEntryComparer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findtargetnode-findtarget-l2-sortedentity" tabindex="-1"><a class="header-anchor" href="#findtargetnode-findtarget-l2-sortedentity"><span><code>FindTargetNode::_findTarget::__l2::SortedEntity</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct FindTargetNode::_findTarget::__l2::SortedEntity</span>
<span class="line">{</span>
<span class="line">  float distSq;</span>
<span class="line">  Actor *ptr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6a6025a330bc32a52676484b89f42bc&gt;::()::__l5::&lt;lambda_8feab0bb6d6076ddaea0f0c6fdd2a476&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6a6025a330bc32a52676484b89f42bc&gt;::()::__l5::&lt;lambda_8feab0bb6d6076ddaea0f0c6fdd2a476&gt;</span>
<span class="line">{</span>
<span class="line">  LocalPlayer **player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_b501aa9096a8ed529fb12076180c73f1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_b501aa9096a8ed529fb12076180c73f1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_c083550131e71a55511296daac40f470&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_c083550131e71a55511296daac40f470&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_0f88f144beee21e5774357a5f78da137&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_0f88f144beee21e5774357a5f78da137&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_2483871e72b0a3a4918ebadc3d6ad9a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_2483871e72b0a3a4918ebadc3d6ad9a5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_ef2987bf3d9f28b29fff7aa0a64c5416&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_ef2987bf3d9f28b29fff7aa0a64c5416&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_64b49edc8ba5aeeb2f3476bd9b9c093a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_64b49edc8ba5aeeb2f3476bd9b9c093a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c"><span><code>FoldMeuScreenController::setUpCallbacksForBooleanOption::__l5::&lt;lambda_88a7b0e5f2761b34ffb9d0a84e730c1c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::setUpCallbacksForBooleanOption::__l5::&lt;lambda_88a7b0e5f2761b34ffb9d0a84e730c1c&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; isEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_918e92bc02a750928ba6a2b7978a22e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_918e92bc02a750928ba6a2b7978a22e3&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6fc73c80d8a9683560641429bd0ed96&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6fc73c80d8a9683560641429bd0ed96&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_e823ae91e9641fd1835e13f3c4ee3ca3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_e823ae91e9641fd1835e13f3c4ee3ca3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_6ec23c973f7b6a4da05b0939ba1a1eb0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_6ec23c973f7b6a4da05b0939ba1a1eb0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_5ade11331fe1558f519255d4b1202822&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_5ade11331fe1558f519255d4b1202822&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6"><span><code>FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::&lt;lambda_fa9d43b382490adf14339cf539e74ad6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::&lt;lambda_fa9d43b382490adf14339cf539e74ad6&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; setValue;</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; isEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_a5e9eed93727d5c4ebb5be06e9c90f04&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_a5e9eed93727d5c4ebb5be06e9c90f04&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_cb3d7b3d49701cb402d19becafe55657&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_cb3d7b3d49701cb402d19becafe55657&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_22fb87d39d0a867e7d00db491a10a129&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_22fb87d39d0a867e7d00db491a10a129&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_2f57f4b9490b0343616042fd9a3c990a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_2f57f4b9490b0343616042fd9a3c990a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_08424e551f27aafc65791bc8288cbde3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_08424e551f27aafc65791bc8288cbde3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_d157d9d5d6fdbca615e3caa8e0bf4222&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_d157d9d5d6fdbca615e3caa8e0bf4222&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_3ed8c7b17036d6d51f6c5b76009abbb0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_3ed8c7b17036d6d51f6c5b76009abbb0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_b5146d2372a6b1483802334539c53cff&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_b5146d2372a6b1483802334539c53cff&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_9ad56d1a09ac749d3b8f4649d9b1d636&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_9ad56d1a09ac749d3b8f4649d9b1d636&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_444e43ea276a91140d204a9cd9f398dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_444e43ea276a91140d204a9cd9f398dc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_0f9b4d753427a8d4bf03f7ba64413b92&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_0f9b4d753427a8d4bf03f7ba64413b92&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6a6025a330bc32a52676484b89f42bc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_a6a6025a330bc32a52676484b89f42bc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9"><span><code>FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_d0a328a4c1f934c10ffb505d9b5e76c9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::&lt;lambda_d0a328a4c1f934c10ffb505d9b5e76c9&gt;</span>
<span class="line">{</span>
<span class="line">  FoldMeuScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_b17e57dcd81ae199a0d252bf7005e06e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_b17e57dcd81ae199a0d252bf7005e06e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9" tabindex="-1"><a class="header-anchor" href="#foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9"><span><code>FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_3d3e37d1c4de3bdd812b3e051f0c85a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FoldMeuScreenController::_registerBindings::__l2::&lt;lambda_3d3e37d1c4de3bdd812b3e051f0c85a9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileupdatecallback" tabindex="-1"><a class="header-anchor" href="#fileupdatecallback"><span><code>FileUpdateCallback</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FileUpdateCallback : DownloadCallback</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(tDownloadInfo &amp;)&gt; succCallback;</span>
<span class="line">  std::function&lt;void __cdecl(tDownloadInfo &amp;)&gt; failCallback;</span>
<span class="line">  std::function&lt;void __cdecl(tDownloadInfo &amp;)&gt; progCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fileupdatecallback-vtbl" tabindex="-1"><a class="header-anchor" href="#fileupdatecallback-vtbl"><span><code>FileUpdateCallback_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ FileUpdateCallback_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *onSuccCallback)(DownloadCallback *this, tDownloadInfo *);</span>
<span class="line">  void (__fastcall *onFailCallback)(DownloadCallback *this, tDownloadInfo *);</span>
<span class="line">  void (__fastcall *onProgCallback)(DownloadCallback *this, tDownloadInfo *);</span>
<span class="line">  void (__fastcall *~DownloadCallback)(DownloadCallback *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b" tabindex="-1"><a class="header-anchor" href="#facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b"><span><code>FaceDirectionalComponentDescription::buildSchema::__l2::&lt;lambda_e384047c49a815c3752804224621532b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FaceDirectionalComponentDescription::buildSchema::__l2::&lt;lambda_e384047c49a815c3752804224621532b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d" tabindex="-1"><a class="header-anchor" href="#facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d"><span><code>FaceDirectionalComponentDescription::buildSchema::__l2::&lt;lambda_66c7ce4eb31239d7104331f3bfa7521d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FaceDirectionalComponentDescription::buildSchema::__l2::&lt;lambda_66c7ce4eb31239d7104331f3bfa7521d&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050" tabindex="-1"><a class="header-anchor" href="#fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050"><span><code>FireResistantComponentDescription::buildSchema::__l2::&lt;lambda_8759fb23e5c0a21392825d06d0b04050&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireResistantComponentDescription::buildSchema::__l2::&lt;lambda_8759fb23e5c0a21392825d06d0b04050&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockComponentFactory *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588" tabindex="-1"><a class="header-anchor" href="#fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588"><span><code>FireResistantComponentDescription::buildSchema::__l2::&lt;lambda_329954e13c2e3af67509eaea49dde588&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FireResistantComponentDescription::buildSchema::__l2::&lt;lambda_329954e13c2e3af67509eaea49dde588&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444" tabindex="-1"><a class="header-anchor" href="#featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444"><span><code>FeatureLoading::_buildSchema::__l2::&lt;lambda_b9b2bed89d2ad2db6dad7f2f0e544444&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FeatureLoading::_buildSchema::__l2::&lt;lambda_b9b2bed89d2ad2db6dad7f2f0e544444&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="furnacecontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#furnacecontainermanagermodel"><span><code>FurnaceContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj FurnaceContainerManagerModel : ContainerManagerModel</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  int mLastTickCount;</span>
<span class="line">  int mLastLitTime;</span>
<span class="line">  int mLastLitDuration;</span>
<span class="line">  int mLastStoredXP;</span>
<span class="line">  int mLastInputId;</span>
<span class="line">  int mLastInputAux;</span>
<span class="line">  std::string mLastOutputName;</span>
<span class="line">  int mLastResultDisplayId;</span>
<span class="line">  const BlockActorType mBlockActorType;</span>
<span class="line">  const ContainerEnumName mIngredientContainerName;</span>
<span class="line">  const HashedString mRecipeTag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1433),t=[i];function c(d,o){return a(),s("div",null,t)}const p=e(l,[["render",c],["__file","F.html.vue"]]),v=JSON.parse('{"path":"/1.16.201/structure/F.html","title":"F","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"FeatureToggles::_setupDependencies::__l2::<lambda_1633bc3e3e0c6c838cb408cbbb547288>","slug":"featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288","link":"#featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288","children":[]},{"level":3,"title":"FindTargetNode::_findTarget::__l2::<lambda_97f0b4bbc84cd3d862b3eb5dbefdcf18>","slug":"findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18","link":"#findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18","children":[]},{"level":3,"title":"frame_t","slug":"frame-t","link":"#frame-t","children":[]},{"level":3,"title":"FloatRange","slug":"floatrange","link":"#floatrange","children":[]},{"level":3,"title":"fsm_struct","slug":"fsm-struct","link":"#fsm-struct","children":[]},{"level":3,"title":"FT_Service_PropertiesRec_","slug":"ft-service-propertiesrec","link":"#ft-service-propertiesrec","children":[]},{"level":3,"title":"FT_ServiceDescRec_","slug":"ft-servicedescrec","link":"#ft-servicedescrec","children":[]},{"level":3,"title":"ft_raccess_guess_rec_","slug":"ft-raccess-guess-rec","link":"#ft-raccess-guess-rec","children":[]},{"level":3,"title":"FT_Palette_Data_","slug":"ft-palette-data","link":"#ft-palette-data","children":[]},{"level":3,"title":"FT_Outline_","slug":"ft-outline","link":"#ft-outline","children":[]},{"level":3,"title":"FT_Outline_Funcs_","slug":"ft-outline-funcs","link":"#ft-outline-funcs","children":[]},{"level":3,"title":"FT_Bitmap_","slug":"ft-bitmap","link":"#ft-bitmap","children":[]},{"level":3,"title":"FT_Color_","slug":"ft-color","link":"#ft-color","children":[]},{"level":3,"title":"FT_Service_BDFRec_","slug":"ft-service-bdfrec","link":"#ft-service-bdfrec","children":[]},{"level":3,"title":"FT_CMap_ClassRec_","slug":"ft-cmap-classrec","link":"#ft-cmap-classrec","children":[]},{"level":3,"title":"FTC_MruListClassRec_","slug":"ftc-mrulistclassrec","link":"#ftc-mrulistclassrec","children":[]},{"level":3,"title":"FTC_SFamilyClassRec_","slug":"ftc-sfamilyclassrec","link":"#ftc-sfamilyclassrec","children":[]},{"level":3,"title":"FTC_GCacheClassRec_","slug":"ftc-gcacheclassrec","link":"#ftc-gcacheclassrec","children":[]},{"level":3,"title":"FTC_CacheClassRec_","slug":"ftc-cacheclassrec","link":"#ftc-cacheclassrec","children":[]},{"level":3,"title":"FTC_IFamilyClassRec_","slug":"ftc-ifamilyclassrec","link":"#ftc-ifamilyclassrec","children":[]},{"level":3,"title":"FT_Service_GlyphDictRec_","slug":"ft-service-glyphdictrec","link":"#ft-service-glyphdictrec","children":[]},{"level":3,"title":"FT_Service_CIDRec_","slug":"ft-service-cidrec","link":"#ft-service-cidrec","children":[]},{"level":3,"title":"FT_Service_PsFontNameRec_","slug":"ft-service-psfontnamerec","link":"#ft-service-psfontnamerec","children":[]},{"level":3,"title":"FT_Service_CFFLoadRec_","slug":"ft-service-cffloadrec","link":"#ft-service-cffloadrec","children":[]},{"level":3,"title":"FT_Service_TTCMapsRec_","slug":"ft-service-ttcmapsrec","link":"#ft-service-ttcmapsrec","children":[]},{"level":3,"title":"FT_Service_MetricsVariationsRec_","slug":"ft-service-metricsvariationsrec","link":"#ft-service-metricsvariationsrec","children":[]},{"level":3,"title":"FT_Service_MultiMastersRec_","slug":"ft-service-multimastersrec","link":"#ft-service-multimastersrec","children":[]},{"level":3,"title":"FT_Service_PsInfoRec_","slug":"ft-service-psinforec","link":"#ft-service-psinforec","children":[]},{"level":3,"title":"FT_Frame_Field_","slug":"ft-frame-field","link":"#ft-frame-field","children":[]},{"level":3,"title":"FT_Service_PfrMetricsRec_","slug":"ft-service-pfrmetricsrec","link":"#ft-service-pfrmetricsrec","children":[]},{"level":3,"title":"FT_Service_PsCMapsRec_","slug":"ft-service-pscmapsrec","link":"#ft-service-pscmapsrec","children":[]},{"level":3,"title":"FT_Service_SFNT_TableRec_","slug":"ft-service-sfnt-tablerec","link":"#ft-service-sfnt-tablerec","children":[]},{"level":3,"title":"FT_Service_TTGlyfRec_","slug":"ft-service-ttglyfrec","link":"#ft-service-ttglyfrec","children":[]},{"level":3,"title":"FT_Service_TrueTypeEngineRec_","slug":"ft-service-truetypeenginerec","link":"#ft-service-truetypeenginerec","children":[]},{"level":3,"title":"FT_Service_KerningRec_","slug":"ft-service-kerningrec","link":"#ft-service-kerningrec","children":[]},{"level":3,"title":"FT_Service_WinFntRec_","slug":"ft-service-winfntrec","link":"#ft-service-winfntrec","children":[]},{"level":3,"title":"filedescr","slug":"filedescr","link":"#filedescr","children":[]},{"level":3,"title":"FogDefinition","slug":"fogdefinition","link":"#fogdefinition","children":[]},{"level":3,"title":"FogDistanceSetting","slug":"fogdistancesetting","link":"#fogdistancesetting","children":[]},{"level":3,"title":"FogVolumetricDensitySetting","slug":"fogvolumetricdensitysetting","link":"#fogvolumetricdensitysetting","children":[]},{"level":3,"title":"FogVolumetricCoefficientSetting","slug":"fogvolumetriccoefficientsetting","link":"#fogvolumetriccoefficientsetting","children":[]},{"level":3,"title":"FilterParamDefinition","slug":"filterparamdefinition","link":"#filterparamdefinition","children":[]},{"level":3,"title":"FilterInput","slug":"filterinput","link":"#filterinput","children":[]},{"level":3,"title":"FilterStringMap","slug":"filterstringmap","link":"#filterstringmap","children":[]},{"level":3,"title":"FT_UnitVector_","slug":"ft-unitvector","link":"#ft-unitvector","children":[]},{"level":3,"title":"FT_Driver_ClassRec_","slug":"ft-driver-classrec","link":"#ft-driver-classrec","children":[]},{"level":3,"title":"FT_Module_Class_","slug":"ft-module-class","link":"#ft-module-class","children":[]},{"level":3,"title":"FlameOdds","slug":"flameodds","link":"#flameodds","children":[]},{"level":3,"title":"FontHandle","slug":"fonthandle","link":"#fonthandle","children":[]},{"level":3,"title":"FT_Renderer_Class_","slug":"ft-renderer-class","link":"#ft-renderer-class","children":[]},{"level":3,"title":"FileAccessTransforms","slug":"fileaccesstransforms","link":"#fileaccesstransforms","children":[]},{"level":3,"title":"Frustum","slug":"frustum","link":"#frustum","children":[]},{"level":3,"title":"FrustumEdges","slug":"frustumedges","link":"#frustumedges","children":[]},{"level":3,"title":"FT_Raster_Funcs_","slug":"ft-raster-funcs","link":"#ft-raster-funcs","children":[]},{"level":3,"title":"FT_Glyph_Class_","slug":"ft-glyph-class","link":"#ft-glyph-class","children":[]},{"level":3,"title":"FT_AutoHinter_InterfaceRec_","slug":"ft-autohinter-interfacerec","link":"#ft-autohinter-interfacerec","children":[]},{"level":3,"title":"FuncInfo","slug":"funcinfo","link":"#funcinfo","children":[]},{"level":3,"title":"FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_b7919b453013e6c018d3eb2079af3ac9>","slug":"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9","link":"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9","children":[]},{"level":3,"title":"FrameUpdateContext","slug":"frameupdatecontext","link":"#frameupdatecontext","children":[]},{"level":3,"title":"FocusMoveScreenEventData","slug":"focusmovescreeneventdata","link":"#focusmovescreeneventdata","children":[]},{"level":3,"title":"Font::SheetId","slug":"font-sheetid","link":"#font-sheetid","children":[]},{"level":3,"title":"Font::TextObject","slug":"font-textobject","link":"#font-textobject","children":[]},{"level":3,"title":"FontAlias::ReferenceData","slug":"fontalias-referencedata","link":"#fontalias-referencedata","children":[]},{"level":3,"title":"FontRepository::loadDefaultFonts::__l2::<lambda_4f422798d8e19b20911552d15f97b207>::()::__l2::<lambda_9f7ee64e5f52351a246105fa89b76599>","slug":"fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599","link":"#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599","children":[]},{"level":3,"title":"FontRepository::loadDefaultFonts::__l2::<lambda_7fe000d9f42c358f49b7b7b1aeed026a>::()::__l2::<lambda_fb53307a4bf33dc8a2da341738d6f3d3>","slug":"fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3","link":"#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3","children":[]},{"level":3,"title":"Font::GlyphQuad","slug":"font-glyphquad","link":"#font-glyphquad","children":[]},{"level":3,"title":"FileChunkInfo","slug":"filechunkinfo","link":"#filechunkinfo","children":[]},{"level":3,"title":"FogCommandSettings","slug":"fogcommandsettings","link":"#fogcommandsettings","children":[]},{"level":3,"title":"framebuilderInsertTerrainCommandsForChunks::__l2::<lambda_c1fa93ce778fd992669707126a079fcb>","slug":"framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb","link":"#framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb","children":[]},{"level":3,"title":"FogManager::Layer","slug":"fogmanager-layer","link":"#fogmanager-layer","children":[]},{"level":3,"title":"FlipbookTextureDescription","slug":"flipbooktexturedescription","link":"#flipbooktexturedescription","children":[]},{"level":3,"title":"FlightingService::_fetch::__l2::<lambda_03023acb2b69c9a5fef635df5c64a11f>","slug":"flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f","link":"#flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f","children":[]},{"level":3,"title":"FilePickerSettings::FileDescription","slug":"filepickersettings-filedescription","link":"#filepickersettings-filedescription","children":[]},{"level":3,"title":"FilterFormattedStringContructor","slug":"filterformattedstringcontructor","link":"#filterformattedstringcontructor","children":[]},{"level":3,"title":"FileArchiver::Result","slug":"filearchiver-result","link":"#filearchiver-result","children":[]},{"level":3,"title":"FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::ScopedAllocation","slug":"fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation","link":"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation","children":[]},{"level":3,"title":"FilterGroup","slug":"filtergroup","link":"#filtergroup","children":[]},{"level":3,"title":"FlockingComponent","slug":"flockingcomponent","link":"#flockingcomponent","children":[]},{"level":3,"title":"FloatTag","slug":"floattag","link":"#floattag","children":[]},{"level":3,"title":"FeatureToggles::FeatureToggle","slug":"featuretoggles-featuretoggle","link":"#featuretoggles-featuretoggle","children":[]},{"level":3,"title":"FunctionManager::OriginMapping","slug":"functionmanager-originmapping","link":"#functionmanager-originmapping","children":[]},{"level":3,"title":"FullPlayerInventoryWrapper","slug":"fullplayerinventorywrapper","link":"#fullplayerinventorywrapper","children":[]},{"level":3,"title":"FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>","slug":"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e","link":"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e","children":[]},{"level":3,"title":"FileDownloadManager::_writeData::__l2::<lambda_6f81f195f94e9beac581973bed159d3c>","slug":"filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c","link":"#filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c","children":[]},{"level":3,"title":"FileDownloadManager::_writeData::__l2::<lambda_e1119d03447226ec2640e6a1b57aad89>","slug":"filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89","link":"#filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89","children":[]},{"level":3,"title":"FileUploadManager::uploadFile::__l13::<lambda_74760951e5721fb9dafc828e7e1ca7c9>","slug":"fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9","link":"#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9","children":[]},{"level":3,"title":"FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>::()::__l5::<lambda_b942687c99a128d38d4a3acdf5208e9b>","slug":"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b","link":"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b","children":[]},{"level":3,"title":"FileUploadManager::_uploadStream::__l2::<lambda_704199bdd8ef4b5e4b61022e06e9c849>::()::__l5::<lambda_159c837b6a142bd3dc90b4a04b18c5b4>","slug":"fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4","link":"#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4","children":[]},{"level":3,"title":"FileUploadManager::_uploadStream::__l2::<lambda_7c32c70c440907d77e4081b7aef620a1>","slug":"fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1","link":"#fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1","children":[]},{"level":3,"title":"FileUploadManager::_uploadStream::__l2::<lambda_ab8d111204de64d325c648c9d712e8ea>","slug":"fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea","link":"#fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea","children":[]},{"level":3,"title":"FileChunk","slug":"filechunk","link":"#filechunk","children":[]},{"level":3,"title":"FileInfo","slug":"fileinfo","link":"#fileinfo","children":[]},{"level":3,"title":"FilterContext","slug":"filtercontext","link":"#filtercontext","children":[]},{"level":3,"title":"FilterInputDefinition","slug":"filterinputdefinition","link":"#filterinputdefinition","children":[]},{"level":3,"title":"FilterTestDaytime","slug":"filtertestdaytime","link":"#filtertestdaytime","children":[]},{"level":3,"title":"FilterTest","slug":"filtertest","link":"#filtertest","children":[]},{"level":3,"title":"FilterInputs","slug":"filterinputs","link":"#filterinputs","children":[]},{"level":3,"title":"FilterTestDifficulty","slug":"filtertestdifficulty","link":"#filtertestdifficulty","children":[]},{"level":3,"title":"FilterTestGameRule","slug":"filtertestgamerule","link":"#filtertestgamerule","children":[]},{"level":3,"title":"FilterTestHourlyClock","slug":"filtertesthourlyclock","link":"#filtertesthourlyclock","children":[]},{"level":3,"title":"FilterTestBiome","slug":"filtertestbiome","link":"#filtertestbiome","children":[]},{"level":3,"title":"FilterTestBiomeHasTag","slug":"filtertestbiomehastag","link":"#filtertestbiomehastag","children":[]},{"level":3,"title":"FilterTestBiomeSnowCovered","slug":"filtertestbiomesnowcovered","link":"#filtertestbiomesnowcovered","children":[]},{"level":3,"title":"FilterTestBiomeHumid","slug":"filtertestbiomehumid","link":"#filtertestbiomehumid","children":[]},{"level":3,"title":"FilterTestTemperatureType","slug":"filtertesttemperaturetype","link":"#filtertesttemperaturetype","children":[]},{"level":3,"title":"FilterTestTemperatureValue","slug":"filtertesttemperaturevalue","link":"#filtertesttemperaturevalue","children":[]},{"level":3,"title":"FilterTestBrightness","slug":"filtertestbrightness","link":"#filtertestbrightness","children":[]},{"level":3,"title":"FilterTestAltitude","slug":"filtertestaltitude","link":"#filtertestaltitude","children":[]},{"level":3,"title":"FilterTestHasTradeSupply","slug":"filtertesthastradesupply","link":"#filtertesthastradesupply","children":[]},{"level":3,"title":"FilteredTransformationAttributes<PostShoreEdgeTransformation>","slug":"filteredtransformationattributes-postshoreedgetransformation","link":"#filteredtransformationattributes-postshoreedgetransformation","children":[]},{"level":3,"title":"Feature","slug":"feature","link":"#feature","children":[]},{"level":3,"title":"FileArchiver::archivePack::__l2::<lambda_e4861c6342045bae76278851b5db2c79>","slug":"filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79","link":"#filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79","children":[]},{"level":3,"title":"FileArchiver::archiveLevel::__l2::<lambda_ef06c283a4b2b877a6778581d3ec778e>","slug":"filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e","link":"#filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e","children":[]},{"level":3,"title":"FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>","slug":"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783","link":"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783","children":[]},{"level":3,"title":"FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>::()::__l2::<lambda_f3dbac58284b04dc57297a0858a258fd>","slug":"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd","link":"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd","children":[]},{"level":3,"title":"FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>::()::__l2::<lambda_70145daf2eda0b02012b6d6f8f2ca40e>","slug":"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e","link":"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e","children":[]},{"level":3,"title":"FileArchiver::_importVanillaLevel::__l2::<lambda_982a8571ec925d774f47b3ea87936fc0>","slug":"filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0","link":"#filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0","children":[]},{"level":3,"title":"FileArchiver::_importVanillaLevel::__l2::<lambda_17892f377568356bdd0cc70fc9fbd172>","slug":"filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172","link":"#filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172","children":[]},{"level":3,"title":"FancyTreeTrunk::FoliageCoords","slug":"fancytreetrunk-foliagecoords","link":"#fancytreetrunk-foliagecoords","children":[]},{"level":3,"title":"FlatWorldGeneratorOptions","slug":"flatworldgeneratoroptions","link":"#flatworldgeneratoroptions","children":[]},{"level":3,"title":"FixedBiomeSource","slug":"fixedbiomesource","link":"#fixedbiomesource","children":[]},{"level":3,"title":"FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::<lambda_d700cb1b2a11b77f5ca7cb09e25db2b8>","slug":"foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8","link":"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8","children":[]},{"level":3,"title":"fd_set","slug":"fd-set","link":"#fd-set","children":[]},{"level":3,"title":"FurnaceScreenControllerProxyCallbacks","slug":"furnacescreencontrollerproxycallbacks","link":"#furnacescreencontrollerproxycallbacks","children":[]},{"level":3,"title":"FlowerFeature","slug":"flowerfeature","link":"#flowerfeature","children":[]},{"level":3,"title":"FMOD::Sound","slug":"fmod-sound","link":"#fmod-sound","children":[]},{"level":3,"title":"FT_Matrix_","slug":"ft-matrix","link":"#ft-matrix","children":[]},{"level":3,"title":"FT_Vector_","slug":"ft-vector","link":"#ft-vector","children":[]},{"level":3,"title":"FT_BBox_","slug":"ft-bbox","link":"#ft-bbox","children":[]},{"level":3,"title":"FT_Open_Args_","slug":"ft-open-args","link":"#ft-open-args","children":[]},{"level":3,"title":"FT_Size_RequestRec_","slug":"ft-size-requestrec","link":"#ft-size-requestrec","children":[]},{"level":3,"title":"FT_Raster_Params_","slug":"ft-raster-params","link":"#ft-raster-params","children":[]},{"level":3,"title":"FT_GlyphSlotRec_","slug":"ft-glyphslotrec","link":"#ft-glyphslotrec","children":[]},{"level":3,"title":"FT_Generic_","slug":"ft-generic","link":"#ft-generic","children":[]},{"level":3,"title":"FT_Glyph_Metrics_","slug":"ft-glyph-metrics","link":"#ft-glyph-metrics","children":[]},{"level":3,"title":"FT_Hashkey_","slug":"ft-hashkey","link":"#ft-hashkey","children":[]},{"level":3,"title":"FT_CharMapRec_","slug":"ft-charmaprec","link":"#ft-charmaprec","children":[]},{"level":3,"title":"FT_Span_","slug":"ft-span","link":"#ft-span","children":[]},{"level":3,"title":"FT_ListRec_","slug":"ft-listrec","link":"#ft-listrec","children":[]},{"level":3,"title":"FT_Data_","slug":"ft-data","link":"#ft-data","children":[]},{"level":3,"title":"FieldNameIterator","slug":"fieldnameiterator","link":"#fieldnameiterator","children":[]},{"level":3,"title":"FloatTag_vtbl","slug":"floattag-vtbl","link":"#floattag-vtbl","children":[]},{"level":3,"title":"FilterTextPacket","slug":"filtertextpacket","link":"#filtertextpacket","children":[]},{"level":3,"title":"FilterTextPacket_vtbl","slug":"filtertextpacket-vtbl","link":"#filtertextpacket-vtbl","children":[]},{"level":3,"title":"FileChunkManager","slug":"filechunkmanager","link":"#filechunkmanager","children":[]},{"level":3,"title":"FileUploadManager","slug":"fileuploadmanager","link":"#fileuploadmanager","children":[]},{"level":3,"title":"FileUploadManager_vtbl","slug":"fileuploadmanager-vtbl","link":"#fileuploadmanager-vtbl","children":[]},{"level":3,"title":"FileUploadManager::MultiPartStreamHelper","slug":"fileuploadmanager-multipartstreamhelper","link":"#fileuploadmanager-multipartstreamhelper","children":[]},{"level":3,"title":"Font","slug":"font","link":"#font","children":[]},{"level":3,"title":"Font_vtbl","slug":"font-vtbl","link":"#font-vtbl","children":[]},{"level":3,"title":"Font::TextObject::Page","slug":"font-textobject-page","link":"#font-textobject-page","children":[]},{"level":3,"title":"FontRepository","slug":"fontrepository","link":"#fontrepository","children":[]},{"level":3,"title":"FontRepository_vtbl","slug":"fontrepository-vtbl","link":"#fontrepository-vtbl","children":[]},{"level":3,"title":"FileWatcherUpdate","slug":"filewatcherupdate","link":"#filewatcherupdate","children":[]},{"level":3,"title":"FlipbookTexture","slug":"flipbooktexture","link":"#flipbooktexture","children":[]},{"level":3,"title":"FrameUpdateContextBase","slug":"frameupdatecontextbase","link":"#frameupdatecontextbase","children":[]},{"level":3,"title":"FrameRenderObject","slug":"framerenderobject","link":"#framerenderobject","children":[]},{"level":3,"title":"FocusManagerProxyCallbacks","slug":"focusmanagerproxycallbacks","link":"#focusmanagerproxycallbacks","children":[]},{"level":3,"title":"FocusManagerProxy","slug":"focusmanagerproxy","link":"#focusmanagerproxy","children":[]},{"level":3,"title":"FlyingItemCommand","slug":"flyingitemcommand","link":"#flyingitemcommand","children":[]},{"level":3,"title":"FocusManager","slug":"focusmanager","link":"#focusmanager","children":[]},{"level":3,"title":"FlightingService","slug":"flightingservice","link":"#flightingservice","children":[]},{"level":3,"title":"FlightingToggles::FlightingToggle","slug":"flightingtoggles-flightingtoggle","link":"#flightingtoggles-flightingtoggle","children":[]},{"level":3,"title":"FlightingToggles","slug":"flightingtoggles","link":"#flightingtoggles","children":[]},{"level":3,"title":"FlightingToggles_vtbl","slug":"flightingtoggles-vtbl","link":"#flightingtoggles-vtbl","children":[]},{"level":3,"title":"FlightingService::TreatmentsMonitor","slug":"flightingservice-treatmentsmonitor","link":"#flightingservice-treatmentsmonitor","children":[]},{"level":3,"title":"FlightingService::ProgressionsMonitor","slug":"flightingservice-progressionsmonitor","link":"#flightingservice-progressionsmonitor","children":[]},{"level":3,"title":"FlightingService_vtbl","slug":"flightingservice-vtbl","link":"#flightingservice-vtbl","children":[]},{"level":3,"title":"FileDownloadManager","slug":"filedownloadmanager","link":"#filedownloadmanager","children":[]},{"level":3,"title":"FileDownloadManager_vtbl","slug":"filedownloadmanager-vtbl","link":"#filedownloadmanager-vtbl","children":[]},{"level":3,"title":"FrustumCuller","slug":"frustumculler","link":"#frustumculler","children":[]},{"level":3,"title":"FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearRange","slug":"fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange","link":"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange","children":[]},{"level":3,"title":"FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>","slug":"fencedringbuffer-core-cpuringbufferallocation-buffer-0","link":"#fencedringbuffer-core-cpuringbufferallocation-buffer-0","children":[]},{"level":3,"title":"FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>","slug":"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0","link":"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0","children":[]},{"level":3,"title":"FMOD::ChannelControl","slug":"fmod-channelcontrol","link":"#fmod-channelcontrol","children":[]},{"level":3,"title":"FMOD::ChannelGroup","slug":"fmod-channelgroup","link":"#fmod-channelgroup","children":[]},{"level":3,"title":"FMOD::Channel","slug":"fmod-channel","link":"#fmod-channel","children":[]},{"level":3,"title":"FMOD::System","slug":"fmod-system","link":"#fmod-system","children":[]},{"level":3,"title":"FileSystemFMOD","slug":"filesystemfmod","link":"#filesystemfmod","children":[]},{"level":3,"title":"FillingContainer","slug":"fillingcontainer","link":"#fillingcontainer","children":[]},{"level":3,"title":"FillingContainer_vtbl","slug":"fillingcontainer-vtbl","link":"#fillingcontainer-vtbl","children":[]},{"level":3,"title":"FogDefinitionRegistry","slug":"fogdefinitionregistry","link":"#fogdefinitionregistry","children":[]},{"level":3,"title":"FogManager","slug":"fogmanager","link":"#fogmanager","children":[]},{"level":3,"title":"FlushableEnv","slug":"flushableenv","link":"#flushableenv","children":[]},{"level":3,"title":"FlushableEnv_vtbl","slug":"flushableenv-vtbl","link":"#flushableenv-vtbl","children":[]},{"level":3,"title":"FunctionManager","slug":"functionmanager","link":"#functionmanager","children":[]},{"level":3,"title":"FunctionManager_vtbl","slug":"functionmanager-vtbl","link":"#functionmanager-vtbl","children":[]},{"level":3,"title":"FunctionManager::QueuedCommand","slug":"functionmanager-queuedcommand","link":"#functionmanager-queuedcommand","children":[]},{"level":3,"title":"FunctionEntry","slug":"functionentry","link":"#functionentry","children":[]},{"level":3,"title":"FunctionEntry_vtbl","slug":"functionentry-vtbl","link":"#functionentry-vtbl","children":[]},{"level":3,"title":"FileArchiver","slug":"filearchiver","link":"#filearchiver","children":[]},{"level":3,"title":"FileDataResponse","slug":"filedataresponse","link":"#filedataresponse","children":[]},{"level":3,"title":"FileDataRequest","slug":"filedatarequest","link":"#filedatarequest","children":[]},{"level":3,"title":"FileDataRequest_vtbl","slug":"filedatarequest-vtbl","link":"#filedatarequest-vtbl","children":[]},{"level":3,"title":"FeatureRegistry","slug":"featureregistry","link":"#featureregistry","children":[]},{"level":3,"title":"FeatureLoading::AbstractFeatureHolder","slug":"featureloading-abstractfeatureholder","link":"#featureloading-abstractfeatureholder","children":[]},{"level":3,"title":"FeatureLoading::AbstractFeatureHolder_vtbl","slug":"featureloading-abstractfeatureholder-vtbl","link":"#featureloading-abstractfeatureholder-vtbl","children":[]},{"level":3,"title":"FeatureLoading::FeatureRootParseContext","slug":"featureloading-featurerootparsecontext","link":"#featureloading-featurerootparsecontext","children":[]},{"level":3,"title":"FeatureTypeFactory","slug":"featuretypefactory","link":"#featuretypefactory","children":[]},{"level":3,"title":"Factory<Dimension,Level &,Scheduler &,AutomaticID<Dimension,int> &>","slug":"factory-dimension-level-scheduler-automaticid-dimension-int","link":"#factory-dimension-level-scheduler-automaticid-dimension-int","children":[]},{"level":3,"title":"Feature_vtbl","slug":"feature-vtbl","link":"#feature-vtbl","children":[]},{"level":3,"title":"FilterTest::Definition","slug":"filtertest-definition","link":"#filtertest-definition","children":[]},{"level":3,"title":"FilterTest_vtbl","slug":"filtertest-vtbl","link":"#filtertest-vtbl","children":[]},{"level":3,"title":"Factory<EventResponse>","slug":"factory-eventresponse","link":"#factory-eventresponse","children":[]},{"level":3,"title":"FuelItemComponent","slug":"fuelitemcomponent","link":"#fuelitemcomponent","children":[]},{"level":3,"title":"FuelItemComponent_vtbl","slug":"fuelitemcomponent-vtbl","link":"#fuelitemcomponent-vtbl","children":[]},{"level":3,"title":"FoodItemComponentLegacy::Effect","slug":"fooditemcomponentlegacy-effect","link":"#fooditemcomponentlegacy-effect","children":[]},{"level":3,"title":"FoodItemComponentLegacy","slug":"fooditemcomponentlegacy","link":"#fooditemcomponentlegacy","children":[]},{"level":3,"title":"FoodItemComponentLegacy_vtbl","slug":"fooditemcomponentlegacy-vtbl","link":"#fooditemcomponentlegacy-vtbl","children":[]},{"level":3,"title":"Factory<BaseLightTextureImageBuilder,Level &,Scheduler &>","slug":"factory-baselighttextureimagebuilder-level-scheduler","link":"#factory-baselighttextureimagebuilder-level-scheduler","children":[]},{"level":3,"title":"Factory<BlockComponentDescription>","slug":"factory-blockcomponentdescription","link":"#factory-blockcomponentdescription","children":[]},{"level":3,"title":"FishingHook","slug":"fishinghook","link":"#fishinghook","children":[]},{"level":3,"title":"FishingHook_vtbl","slug":"fishinghook-vtbl","link":"#fishinghook-vtbl","children":[]},{"level":3,"title":"FilePickerSettings","slug":"filepickersettings","link":"#filepickersettings","children":[]},{"level":3,"title":"FeatureToggles","slug":"featuretoggles","link":"#featuretoggles","children":[]},{"level":3,"title":"Facing","slug":"facing","link":"#facing","children":[]},{"level":3,"title":"Facing::Plane","slug":"facing-plane","link":"#facing-plane","children":[]},{"level":3,"title":"FMOD_ASYNCREADINFO","slug":"fmod-asyncreadinfo","link":"#fmod-asyncreadinfo","children":[]},{"level":3,"title":"FMOD_GUID","slug":"fmod-guid","link":"#fmod-guid","children":[]},{"level":3,"title":"FMOD_CREATESOUNDEXINFO","slug":"fmod-createsoundexinfo","link":"#fmod-createsoundexinfo","children":[]},{"level":3,"title":"FMODFileDescriptor","slug":"fmodfiledescriptor","link":"#fmodfiledescriptor","children":[]},{"level":3,"title":"FMODFileTracker","slug":"fmodfiletracker","link":"#fmodfiletracker","children":[]},{"level":3,"title":"FetchImageParams","slug":"fetchimageparams","link":"#fetchimageparams","children":[]},{"level":3,"title":"FocusComponent","slug":"focuscomponent","link":"#focuscomponent","children":[]},{"level":3,"title":"FocusComponent_vtbl","slug":"focuscomponent-vtbl","link":"#focuscomponent-vtbl","children":[]},{"level":3,"title":"FormattedAchievementData","slug":"formattedachievementdata","link":"#formattedachievementdata","children":[]},{"level":3,"title":"FormattedPlayerStats","slug":"formattedplayerstats","link":"#formattedplayerstats","children":[]},{"level":3,"title":"FILE_ID_DESCRIPTOR","slug":"file-id-descriptor","link":"#file-id-descriptor","children":[]},{"level":3,"title":"FLASHWINFO","slug":"flashwinfo","link":"#flashwinfo","children":[]},{"level":3,"title":"FirstPersonLookBehavior","slug":"firstpersonlookbehavior","link":"#firstpersonlookbehavior","children":[]},{"level":3,"title":"FirstPersonLookBehavior_vtbl","slug":"firstpersonlookbehavior-vtbl","link":"#firstpersonlookbehavior-vtbl","children":[]},{"level":3,"title":"FlyBehavior","slug":"flybehavior","link":"#flybehavior","children":[]},{"level":3,"title":"FlyBehavior_vtbl","slug":"flybehavior-vtbl","link":"#flybehavior-vtbl","children":[]},{"level":3,"title":"FirstPersonLookBehaviorLoader","slug":"firstpersonlookbehaviorloader","link":"#firstpersonlookbehaviorloader","children":[]},{"level":3,"title":"FirstPersonLookBehaviorLoader_vtbl","slug":"firstpersonlookbehaviorloader-vtbl","link":"#firstpersonlookbehaviorloader-vtbl","children":[]},{"level":3,"title":"FlyBehaviorLoader","slug":"flybehaviorloader","link":"#flybehaviorloader","children":[]},{"level":3,"title":"FlyBehaviorLoader_vtbl","slug":"flybehaviorloader-vtbl","link":"#flybehaviorloader-vtbl","children":[]},{"level":3,"title":"FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearAllocation","slug":"fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation","link":"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation","children":[]},{"level":3,"title":"FireBlock","slug":"fireblock","link":"#fireblock","children":[]},{"level":3,"title":"FireBlock_vtbl","slug":"fireblock-vtbl","link":"#fireblock-vtbl","children":[]},{"level":3,"title":"FoliageColor","slug":"foliagecolor","link":"#foliagecolor","children":[]},{"level":3,"title":"FileEntry","slug":"fileentry","link":"#fileentry","children":[]},{"level":3,"title":"FrontloadedResources","slug":"frontloadedresources","link":"#frontloadedresources","children":[]},{"level":3,"title":"FactoryComponent","slug":"factorycomponent","link":"#factorycomponent","children":[]},{"level":3,"title":"FactoryComponent_vtbl","slug":"factorycomponent-vtbl","link":"#factorycomponent-vtbl","children":[]},{"level":3,"title":"FocusContainerCustomData","slug":"focuscontainercustomdata","link":"#focuscontainercustomdata","children":[]},{"level":3,"title":"FocusContainerComponent","slug":"focuscontainercomponent","link":"#focuscontainercomponent","children":[]},{"level":3,"title":"FocusContainerComponent_vtbl","slug":"focuscontainercomponent-vtbl","link":"#focuscontainercomponent-vtbl","children":[]},{"level":3,"title":"FocusComponent::_captureFocusPoint::__l2::<lambda_0e51f1eba29be0dc80ad7fe30da0fb50>","slug":"focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50","link":"#focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50","children":[]},{"level":3,"title":"FactoryComponent::create::__l52::<lambda_98dfe690793ad1dd20aceb51ef2d7967>","slug":"factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967","link":"#factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967","children":[]},{"level":3,"title":"FlyingItemRenderer","slug":"flyingitemrenderer","link":"#flyingitemrenderer","children":[]},{"level":3,"title":"FlyingItemRenderer_vtbl","slug":"flyingitemrenderer-vtbl","link":"#flyingitemrenderer-vtbl","children":[]},{"level":3,"title":"FileDeleteProgressHandler","slug":"filedeleteprogresshandler","link":"#filedeleteprogresshandler","children":[]},{"level":3,"title":"FileDeleteProgressHandler_vtbl","slug":"filedeleteprogresshandler-vtbl","link":"#filedeleteprogresshandler-vtbl","children":[]},{"level":3,"title":"FontAlias","slug":"fontalias","link":"#fontalias","children":[]},{"level":3,"title":"FontAlias_vtbl","slug":"fontalias-vtbl","link":"#fontalias-vtbl","children":[]},{"level":3,"title":"FT_MemoryRec_","slug":"ft-memoryrec","link":"#ft-memoryrec","children":[]},{"level":3,"title":"FT_StreamRec_","slug":"ft-streamrec","link":"#ft-streamrec","children":[]},{"level":3,"title":"FT_ListNodeRec_","slug":"ft-listnoderec","link":"#ft-listnoderec","children":[]},{"level":3,"title":"FT_Bitmap_Size_","slug":"ft-bitmap-size","link":"#ft-bitmap-size","children":[]},{"level":3,"title":"FT_ModuleRec_","slug":"ft-modulerec","link":"#ft-modulerec","children":[]},{"level":3,"title":"FT_LibraryRec_","slug":"ft-libraryrec","link":"#ft-libraryrec","children":[]},{"level":3,"title":"FT_RendererRec_","slug":"ft-rendererrec","link":"#ft-rendererrec","children":[]},{"level":3,"title":"FT_FaceRec_","slug":"ft-facerec","link":"#ft-facerec","children":[]},{"level":3,"title":"FT_Size_Metrics_","slug":"ft-size-metrics","link":"#ft-size-metrics","children":[]},{"level":3,"title":"FT_Size_InternalRec_","slug":"ft-size-internalrec","link":"#ft-size-internalrec","children":[]},{"level":3,"title":"FT_SizeRec_","slug":"ft-sizerec","link":"#ft-sizerec","children":[]},{"level":3,"title":"FT_Parameter_","slug":"ft-parameter","link":"#ft-parameter","children":[]},{"level":3,"title":"FT_SubGlyphRec_","slug":"ft-subglyphrec","link":"#ft-subglyphrec","children":[]},{"level":3,"title":"FT_GlyphLoadRec_","slug":"ft-glyphloadrec","link":"#ft-glyphloadrec","children":[]},{"level":3,"title":"FT_GlyphLoaderRec_","slug":"ft-glyphloaderrec","link":"#ft-glyphloaderrec","children":[]},{"level":3,"title":"FT_DriverRec_","slug":"ft-driverrec","link":"#ft-driverrec","children":[]},{"level":3,"title":"FT_ServiceCacheRec_","slug":"ft-servicecacherec","link":"#ft-servicecacherec","children":[]},{"level":3,"title":"FT_Incremental_MetricsRec_","slug":"ft-incremental-metricsrec","link":"#ft-incremental-metricsrec","children":[]},{"level":3,"title":"FT_Incremental_FuncsRec_","slug":"ft-incremental-funcsrec","link":"#ft-incremental-funcsrec","children":[]},{"level":3,"title":"FT_Incremental_InterfaceRec_","slug":"ft-incremental-interfacerec","link":"#ft-incremental-interfacerec","children":[]},{"level":3,"title":"FT_Face_InternalRec_","slug":"ft-face-internalrec","link":"#ft-face-internalrec","children":[]},{"level":3,"title":"FT_Slot_InternalRec_","slug":"ft-slot-internalrec","link":"#ft-slot-internalrec","children":[]},{"level":3,"title":"FT_GlyphRec_","slug":"ft-glyphrec","link":"#ft-glyphrec","children":[]},{"level":3,"title":"FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_88925860aafd3405404c7e1df5755f91>","slug":"fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91","link":"#fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91","children":[]},{"level":3,"title":"FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_31bdad871b22ac7caa6a500c31451947>","slug":"fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947","link":"#fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947","children":[]},{"level":3,"title":"FontRepository::loadDefaultFonts::__l2::<lambda_7fe000d9f42c358f49b7b7b1aeed026a>::()::__l2::<lambda_ac0252748f91156e691c7d207fae26a9>","slug":"fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9","link":"#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9","children":[]},{"level":3,"title":"FontRepository::loadDefaultFonts::__l2::<lambda_4f422798d8e19b20911552d15f97b207>::()::__l2::<lambda_97de77aa165493b1e2383fa55c9aadef>","slug":"fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef","link":"#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef","children":[]},{"level":3,"title":"Font::getTextHeight::__l2::<lambda_1e8f76698c9e82e8bd78f1bc5facf7f6>","slug":"font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6","link":"#font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6","children":[]},{"level":3,"title":"Font::_drawWordWrap::__l2::<lambda_109e8cc2ec8061788bcb30eaf502d4f4>","slug":"font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4","link":"#font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4","children":[]},{"level":3,"title":"FileDeleteProgressHandler::onStart::__l2::<lambda_f66a9fb0340462681c16b2ec2802629e>","slug":"filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e","link":"#filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e","children":[]},{"level":3,"title":"FileDeleteProgressHandler::onStart::__l2::<lambda_d001b78764dbe0c23a6aa3eb590da16a>","slug":"filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a","link":"#filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a","children":[]},{"level":3,"title":"FileCopyProgressHandler","slug":"filecopyprogresshandler","link":"#filecopyprogresshandler","children":[]},{"level":3,"title":"FileCopyProgressHandler_vtbl","slug":"filecopyprogresshandler-vtbl","link":"#filecopyprogresshandler-vtbl","children":[]},{"level":3,"title":"FileCopyProgressHandler::onStart::__l2::<lambda_845c8ae8b621017e79b44eea229b9484>","slug":"filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484","link":"#filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484","children":[]},{"level":3,"title":"FileAccessTransforms_vtbl","slug":"fileaccesstransforms-vtbl","link":"#fileaccesstransforms-vtbl","children":[]},{"level":3,"title":"FilteredContainerModel","slug":"filteredcontainermodel","link":"#filteredcontainermodel","children":[]},{"level":3,"title":"FilteredContainerModel_vtbl","slug":"filteredcontainermodel-vtbl","link":"#filteredcontainermodel-vtbl","children":[]},{"level":3,"title":"FloatOption","slug":"floatoption","link":"#floatoption","children":[]},{"level":3,"title":"FloatOption_vtbl","slug":"floatoption-vtbl","link":"#floatoption-vtbl","children":[]},{"level":3,"title":"FeedbackPromptController","slug":"feedbackpromptcontroller","link":"#feedbackpromptcontroller","children":[]},{"level":3,"title":"FeedbackPromptController_vtbl","slug":"feedbackpromptcontroller-vtbl","link":"#feedbackpromptcontroller-vtbl","children":[]},{"level":3,"title":"FileDownloadScreenController::RealmData","slug":"filedownloadscreencontroller-realmdata","link":"#filedownloadscreencontroller-realmdata","children":[]},{"level":3,"title":"FileDownloadScreenController","slug":"filedownloadscreencontroller","link":"#filedownloadscreencontroller","children":[]},{"level":3,"title":"FileDownloadScreenController_vtbl","slug":"filedownloadscreencontroller-vtbl","link":"#filedownloadscreencontroller-vtbl","children":[]},{"level":3,"title":"FileUploadScreenController","slug":"fileuploadscreencontroller","link":"#fileuploadscreencontroller","children":[]},{"level":3,"title":"FileUploadScreenController_vtbl","slug":"fileuploadscreencontroller-vtbl","link":"#fileuploadscreencontroller-vtbl","children":[]},{"level":3,"title":"FurnaceScreenControllerProxyCallbacks::<lambda_68069f7fbd4730b8b6a4b64cd4ec15f3>","slug":"furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3","link":"#furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3","children":[]},{"level":3,"title":"FurnaceScreenControllerProxyCallbacks::<lambda_9f2f11c7cc5957bbdf8a1f458419fc5b>","slug":"furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b","link":"#furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b","children":[]},{"level":3,"title":"FurnaceScreenControllerProxyCallbacks::<lambda_6e9c8476017789a33bb2e3f39ef6501b>","slug":"furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b","link":"#furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b","children":[]},{"level":3,"title":"FurnaceScreenControllerProxy","slug":"furnacescreencontrollerproxy","link":"#furnacescreencontrollerproxy","children":[]},{"level":3,"title":"FurnaceScreenControllerProxy_vtbl","slug":"furnacescreencontrollerproxy-vtbl","link":"#furnacescreencontrollerproxy-vtbl","children":[]},{"level":3,"title":"FileUploadScreenController::_displayUploadErrorPopup::__l2::<lambda_56479a187dcfd6ee8d9902a0e71991b4>","slug":"fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4","link":"#fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_8ee8e9c67e75344676445575aa03028f>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_a41320f59fb4cdb7cf30ce6c99707a59>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_5d144608546dbfd12362935a26df5fe2>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_e9304b7a424ecfbe227e796bc2e63013>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_33c32188ae4ce4f1a02432932a76c7c1>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_53068d20d0cb864e1047432b0d9cdc33>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_cdf8cce4febf7d2f4dae8b6771bbb5b0>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_6218337b9af756811c5a0c44f91959a1>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_590fca01935110f4321c59eab36a6688>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_63c99c602725913d46f15e1db4705954>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_44e7db5e29f5d557c5a0fc50a4e0360e>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_bec49fcaff1cdd081d60664ec8b895ec>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_b5162ffa6e174b6687e4fce666835e1e>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_82b9e20ea4e5e480bc08d809da2c4815>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_b00c115ac684d8c7428ecfbed066a03c>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c","children":[]},{"level":3,"title":"FileUploadScreenController::_registerBindings::__l2::<lambda_9a195338068e0741805c9ba0c4634bf4>","slug":"fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4","link":"#fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4","children":[]},{"level":3,"title":"FileUploadScreenController::_registerEventHandlers::__l2::<lambda_10f62041708a9870311deb91f897c1bf>","slug":"fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf","link":"#fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf","children":[]},{"level":3,"title":"FileUploadScreenController::_registerEventHandlers::__l2::<lambda_a0267568ae2a9f2a627ec27bf4e9481e>","slug":"fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e","link":"#fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e","children":[]},{"level":3,"title":"FileUploadScreenController::_registerEventHandlers::__l2::<lambda_c32e1d45ca7729f5575d04896f9c582d>","slug":"fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d","link":"#fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d","children":[]},{"level":3,"title":"FileUploadScreenController::_startUpload::__l13::<lambda_2d9bac4d3ebd66077c58a3e88c390363>","slug":"fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363","link":"#fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363","children":[]},{"level":3,"title":"FileDownloadScreenController::_displayDownloadErrorPopup::__l2::<lambda_016f9441dc96df5e1212767102cffed0>","slug":"filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0","link":"#filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_7da7beb6a65d54a1547704035d2c60dd>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_6392fad553f144397ab5bcc2a1d34410>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_d634eb97b82394f3e97dcded9545e06c>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_bf7ee73a20735c45f364febe848a40dc>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_da21480f755e865b17249a84b077e41e>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_9d75819f3dfd579957095ef2ceb945c5>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_f99f8a6b71a89bd7283c91f2e01d22cc>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_d9aab4afec3fedb3c12b0897b272bc41>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_b60d51e9e7c65f65d9f81d6be7ae464e>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_996752e5deef7428293288b78e380631>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_b1ff2e52ed7aa2dee4b9f89ce6c1d862>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_05336d8bcda55d6e0b4f646905c793e0>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_316a697dff604b8b60e9d793ceae3786>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_498a0262eabc38b6226b47f518d4c077>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_07f3a1b857c8b974fed3caa7b4f0db34>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerBindings::__l2::<lambda_271488a91b26a46f85ad51579d06d1a4>","slug":"filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4","link":"#filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_44f09b874ee9fcdf631c347a92c94060>","slug":"filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060","link":"#filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_cd96aaa67025ff6782d0910f7df6f119>","slug":"filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119","link":"#filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119","children":[]},{"level":3,"title":"FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_74500b1f1908729aafc9a10e57877dd5>","slug":"filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5","link":"#filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5","children":[]},{"level":3,"title":"FeedbackPromptController::_registerBindings::__l2::<lambda_bbece4f512b264b74faf5ba26b7d54aa>","slug":"feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa","link":"#feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa","children":[]},{"level":3,"title":"FeedbackPromptController::_registerBindings::__l2::<lambda_5e849c6e2f41680228c07a77ce688bfb>","slug":"feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb","link":"#feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb","children":[]},{"level":3,"title":"FeedbackPromptController::_registerBindings::__l2::<lambda_b03504ae3a90eba43bc483a487f7bf8e>","slug":"feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e","link":"#feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e","children":[]},{"level":3,"title":"FeedbackPromptController::_registerEventHandlers::__l2::<lambda_64f43d278793f4163eaa5b14f6e2ef4e>","slug":"feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e","link":"#feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e","children":[]},{"level":3,"title":"FeedbackPromptController::_registerEventHandlers::__l2::<lambda_e5d09be02c5d2616caaafaec652597f8>","slug":"feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8","link":"#feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8","children":[]},{"level":3,"title":"FaceDirectionalActorBlock","slug":"facedirectionalactorblock","link":"#facedirectionalactorblock","children":[]},{"level":3,"title":"FaceDirectionalActorBlock_vtbl","slug":"facedirectionalactorblock-vtbl","link":"#facedirectionalactorblock-vtbl","children":[]},{"level":3,"title":"FormJsonValidator","slug":"formjsonvalidator","link":"#formjsonvalidator","children":[]},{"level":3,"title":"FilterCollection","slug":"filtercollection","link":"#filtercollection","children":[]},{"level":3,"title":"FocusManager::updatePendingFocusControl::__l2::<lambda_2e50f233adf9bc85cb1c5a5ad8433623>","slug":"focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623","link":"#focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623","children":[]},{"level":3,"title":"FocusManager::_sweepToNextFocusObject::__l26::<lambda_fd9f72a95693dd52737e0c11d36d84ac>","slug":"focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac","link":"#focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac","children":[]},{"level":3,"title":"FocusManager::{ctor}::__l2::<lambda_db482c4c922ab9a00f2e95c83a532c5b>","slug":"focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b","link":"#focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b","children":[]},{"level":3,"title":"FullScreenEffectRenderer","slug":"fullscreeneffectrenderer","link":"#fullscreeneffectrenderer","children":[]},{"level":3,"title":"FullScreenEffectRenderer_vtbl","slug":"fullscreeneffectrenderer-vtbl","link":"#fullscreeneffectrenderer-vtbl","children":[]},{"level":3,"title":"FirstChargeInfo","slug":"firstchargeinfo","link":"#firstchargeinfo","children":[]},{"level":3,"title":"FoldMeuScreenController","slug":"foldmeuscreencontroller","link":"#foldmeuscreencontroller","children":[]},{"level":3,"title":"FoldMeuScreenController_vtbl","slug":"foldmeuscreencontroller-vtbl","link":"#foldmeuscreencontroller-vtbl","children":[]},{"level":3,"title":"FlameParticle","slug":"flameparticle","link":"#flameparticle","children":[]},{"level":3,"title":"FlameParticle_vtbl","slug":"flameparticle-vtbl","link":"#flameparticle-vtbl","children":[]},{"level":3,"title":"FireworksStarter","slug":"fireworksstarter","link":"#fireworksstarter","children":[]},{"level":3,"title":"FireworksStarter_vtbl","slug":"fireworksstarter-vtbl","link":"#fireworksstarter-vtbl","children":[]},{"level":3,"title":"FireworkChargeItem","slug":"fireworkchargeitem","link":"#fireworkchargeitem","children":[]},{"level":3,"title":"FireworksItem","slug":"fireworksitem","link":"#fireworksitem","children":[]},{"level":3,"title":"FireworksSparkParticle","slug":"fireworkssparkparticle","link":"#fireworkssparkparticle","children":[]},{"level":3,"title":"FireworksSparkParticle_vtbl","slug":"fireworkssparkparticle-vtbl","link":"#fireworkssparkparticle-vtbl","children":[]},{"level":3,"title":"FireworksOverlayParticle","slug":"fireworksoverlayparticle","link":"#fireworksoverlayparticle","children":[]},{"level":3,"title":"FireworksOverlayParticle_vtbl","slug":"fireworksoverlayparticle-vtbl","link":"#fireworksoverlayparticle-vtbl","children":[]},{"level":3,"title":"FallingDustParticle","slug":"fallingdustparticle","link":"#fallingdustparticle","children":[]},{"level":3,"title":"FallingDustParticle_vtbl","slug":"fallingdustparticle-vtbl","link":"#fallingdustparticle-vtbl","children":[]},{"level":3,"title":"FoodItemComponent::SaturationModifier","slug":"fooditemcomponent-saturationmodifier","link":"#fooditemcomponent-saturationmodifier","children":[]},{"level":3,"title":"FoodItemComponent","slug":"fooditemcomponent","link":"#fooditemcomponent","children":[]},{"level":3,"title":"FoodItemComponent_vtbl","slug":"fooditemcomponent-vtbl","link":"#fooditemcomponent-vtbl","children":[]},{"level":3,"title":"FallingBlockRenderer","slug":"fallingblockrenderer","link":"#fallingblockrenderer","children":[]},{"level":3,"title":"FallingBlockRenderer_vtbl","slug":"fallingblockrenderer-vtbl","link":"#fallingblockrenderer-vtbl","children":[]},{"level":3,"title":"FallingBlock","slug":"fallingblock","link":"#fallingblock","children":[]},{"level":3,"title":"FallingBlock_vtbl","slug":"fallingblock-vtbl","link":"#fallingblock-vtbl","children":[]},{"level":3,"title":"FreezeOnHitSubcomponent","slug":"freezeonhitsubcomponent","link":"#freezeonhitsubcomponent","children":[]},{"level":3,"title":"FreezeOnHitSubcomponent_vtbl","slug":"freezeonhitsubcomponent-vtbl","link":"#freezeonhitsubcomponent-vtbl","children":[]},{"level":3,"title":"FenceBlock","slug":"fenceblock","link":"#fenceblock","children":[]},{"level":3,"title":"FenceBlock_vtbl","slug":"fenceblock-vtbl","link":"#fenceblock-vtbl","children":[]},{"level":3,"title":"FlowerPotBlock","slug":"flowerpotblock","link":"#flowerpotblock","children":[]},{"level":3,"title":"FlowerPotBlock_vtbl","slug":"flowerpotblock-vtbl","link":"#flowerpotblock-vtbl","children":[]},{"level":3,"title":"FlowerPotBlockActor","slug":"flowerpotblockactor","link":"#flowerpotblockactor","children":[]},{"level":3,"title":"FlowerPotBlockActor_vtbl","slug":"flowerpotblockactor-vtbl","link":"#flowerpotblockactor-vtbl","children":[]},{"level":3,"title":"FaceDirectionalComponentDescription","slug":"facedirectionalcomponentdescription","link":"#facedirectionalcomponentdescription","children":[]},{"level":3,"title":"FaceDirectionalComponentDescription_vtbl","slug":"facedirectionalcomponentdescription-vtbl","link":"#facedirectionalcomponentdescription-vtbl","children":[]},{"level":3,"title":"FaceDirectionalComponent","slug":"facedirectionalcomponent","link":"#facedirectionalcomponent","children":[]},{"level":3,"title":"FileSizeRequest","slug":"filesizerequest","link":"#filesizerequest","children":[]},{"level":3,"title":"FileSizeRequest_vtbl","slug":"filesizerequest-vtbl","link":"#filesizerequest-vtbl","children":[]},{"level":3,"title":"FileImageRequest","slug":"fileimagerequest","link":"#fileimagerequest","children":[]},{"level":3,"title":"FileImageRequest_vtbl","slug":"fileimagerequest-vtbl","link":"#fileimagerequest-vtbl","children":[]},{"level":3,"title":"FlightingResponse","slug":"flightingresponse","link":"#flightingresponse","children":[]},{"level":3,"title":"FlightingRequest::CacheMetadata","slug":"flightingrequest-cachemetadata","link":"#flightingrequest-cachemetadata","children":[]},{"level":3,"title":"FlightingRequest","slug":"flightingrequest","link":"#flightingrequest","children":[]},{"level":3,"title":"FlightingRequest_vtbl","slug":"flightingrequest-vtbl","link":"#flightingrequest-vtbl","children":[]},{"level":3,"title":"FlightingToggles::{ctor}::__l2::<lambda_38d0b82f17466d32b7c7c17849ffae66>","slug":"flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66","link":"#flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66","children":[]},{"level":3,"title":"FileTTSOutput","slug":"filettsoutput","link":"#filettsoutput","children":[]},{"level":3,"title":"FileTTSOutput_vtbl","slug":"filettsoutput-vtbl","link":"#filettsoutput-vtbl","children":[]},{"level":3,"title":"FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::is_shared_ptr<std::shared_ptr<Core::CpuRingBufferAllocation_Buffer> >","slug":"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer","link":"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer","children":[]},{"level":3,"title":"FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::setLastCompletedFenceValue::__l2::<lambda_be601a93d3a973414038685af37130e7>","slug":"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7","link":"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7","children":[]},{"level":3,"title":"FogCommandComponent","slug":"fogcommandcomponent","link":"#fogcommandcomponent","children":[]},{"level":3,"title":"FlagComponent<ActorTickedFlag>","slug":"flagcomponent-actortickedflag","link":"#flagcomponent-actortickedflag","children":[]},{"level":3,"title":"FogCommand","slug":"fogcommand","link":"#fogcommand","children":[]},{"level":3,"title":"FogCommand_vtbl","slug":"fogcommand-vtbl","link":"#fogcommand-vtbl","children":[]},{"level":3,"title":"FunctionAction","slug":"functionaction","link":"#functionaction","children":[]},{"level":3,"title":"FunctionAction_vtbl","slug":"functionaction-vtbl","link":"#functionaction-vtbl","children":[]},{"level":3,"title":"FireworksRocketActor","slug":"fireworksrocketactor","link":"#fireworksrocketactor","children":[]},{"level":3,"title":"FireworksRocketActor_vtbl","slug":"fireworksrocketactor-vtbl","link":"#fireworksrocketactor-vtbl","children":[]},{"level":3,"title":"FurnaceBlockActor","slug":"furnaceblockactor","link":"#furnaceblockactor","children":[]},{"level":3,"title":"FurnaceBlockActor_vtbl","slug":"furnaceblockactor-vtbl","link":"#furnaceblockactor-vtbl","children":[]},{"level":3,"title":"FunctionAction::_printOutput::__l2::<lambda_29a6859966874ed56bdad0b621ece517>","slug":"functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517","link":"#functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_c388d79e814dd4ff849cbad3604bc61d>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_0a8ee2cd4bd4a4731c71a57d4abd4de2>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_b6ab99318bc34040c23c84728383dea2>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_aa019d3dd92124d59bef87041ba622b0>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_00880b92af31f968791c4eed7e6c61a8>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_f97cbdba0d2385587c63cedbaed4cbc4>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_2d9619e7737f7b9ef352678014760872>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_dec754abcac794b6da96a720eded68bf>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_caeb69210887eb326d6a99ae06ff7020>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_2c1b06c9f0a2c5248839b21168fc798c>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_9c00dedd5332c3e2cd5037afcff10e0e>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_a595d4db4302e152869dfff914040933>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_455a293d6b2c8ad2f10c131dbc53c5d4>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4","children":[]},{"level":3,"title":"FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_2cf1aefae47b2796c9704e85ed50ae79>","slug":"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79","link":"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79","children":[]},{"level":3,"title":"FogManager::calculateCurrentCoefficientSetting::__l2::<lambda_12ef8424d68d1b5554d461cc50e22571>","slug":"fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571","link":"#fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571","children":[]},{"level":3,"title":"FogManager::calculateCurrentDensitySetting::__l2::<lambda_6ba298e373dadcb52a3d9720e76557ba>","slug":"fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba","link":"#fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba","children":[]},{"level":3,"title":"FogManager::calculateCurrentDistanceSetting::__l2::<lambda_fd7ebdbd98023fd0d9a821e51c7a6b3e>","slug":"fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e","link":"#fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e","children":[]},{"level":3,"title":"FamilyTypeDefinition","slug":"familytypedefinition","link":"#familytypedefinition","children":[]},{"level":3,"title":"FlockingDefinition","slug":"flockingdefinition","link":"#flockingdefinition","children":[]},{"level":3,"title":"FeedItem::Effect","slug":"feeditem-effect","link":"#feeditem-effect","children":[]},{"level":3,"title":"FeedItem","slug":"feeditem","link":"#feeditem","children":[]},{"level":3,"title":"FlyMoveControl","slug":"flymovecontrol","link":"#flymovecontrol","children":[]},{"level":3,"title":"FlyMoveControl_vtbl","slug":"flymovecontrol-vtbl","link":"#flymovecontrol-vtbl","children":[]},{"level":3,"title":"FloatNavigation","slug":"floatnavigation","link":"#floatnavigation","children":[]},{"level":3,"title":"FloatNavigation_vtbl","slug":"floatnavigation-vtbl","link":"#floatnavigation-vtbl","children":[]},{"level":3,"title":"FlyingPathNavigation","slug":"flyingpathnavigation","link":"#flyingpathnavigation","children":[]},{"level":3,"title":"FlyingPathNavigation_vtbl","slug":"flyingpathnavigation-vtbl","link":"#flyingpathnavigation-vtbl","children":[]},{"level":3,"title":"FlockingSystem","slug":"flockingsystem","link":"#flockingsystem","children":[]},{"level":3,"title":"FlockingSystem_vtbl","slug":"flockingsystem-vtbl","link":"#flockingsystem-vtbl","children":[]},{"level":3,"title":"FriendlySize","slug":"friendlysize","link":"#friendlysize","children":[]},{"level":3,"title":"FireworksRecipe","slug":"fireworksrecipe","link":"#fireworksrecipe","children":[]},{"level":3,"title":"FireworksRecipe_vtbl","slug":"fireworksrecipe-vtbl","link":"#fireworksrecipe-vtbl","children":[]},{"level":3,"title":"FeatureToggles::_getDisabledLockedCallback::__l2::<lambda_5dbb485860e64799dd5864728b4946ff>","slug":"featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff","link":"#featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff","children":[]},{"level":3,"title":"FeatureToggles::_getDisabledSetupCallback::__l2::<lambda_7d67b21fbe351c2d84afc65451e90be2>","slug":"featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2","link":"#featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2","children":[]},{"level":3,"title":"FeatureToggles::_getEnabledLockedCallback::__l2::<lambda_e21ea8f733186111a070e29c202e5203>","slug":"featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203","link":"#featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203","children":[]},{"level":3,"title":"FeatureToggles::_getEnabledSetupCallback::__l2::<lambda_5db25955c5ba18bb6f909f1c95a0c4c3>","slug":"featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3","link":"#featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3","children":[]},{"level":3,"title":"FeatureToggles::_initialize::__l2::<lambda_56780e8a1121adf4efc9847217156039>","slug":"featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039","link":"#featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039","children":[]},{"level":3,"title":"FileSystemFileAccess::FileSystemFileReadAccess","slug":"filesystemfileaccess-filesystemfilereadaccess","link":"#filesystemfileaccess-filesystemfilereadaccess","children":[]},{"level":3,"title":"FileSystemFileAccess::FileSystemFileReadAccess_vtbl","slug":"filesystemfileaccess-filesystemfilereadaccess-vtbl","link":"#filesystemfileaccess-filesystemfilereadaccess-vtbl","children":[]},{"level":3,"title":"FileSystemFileAccess::FileSystemFileWriteAccess","slug":"filesystemfileaccess-filesystemfilewriteaccess","link":"#filesystemfileaccess-filesystemfilewriteaccess","children":[]},{"level":3,"title":"FileSystemFileAccess::FileSystemFileWriteAccess_vtbl","slug":"filesystemfileaccess-filesystemfilewriteaccess-vtbl","link":"#filesystemfileaccess-filesystemfilewriteaccess-vtbl","children":[]},{"level":3,"title":"FileSystemFileAccess","slug":"filesystemfileaccess","link":"#filesystemfileaccess","children":[]},{"level":3,"title":"FileSystemFileAccess_vtbl","slug":"filesystemfileaccess-vtbl","link":"#filesystemfileaccess-vtbl","children":[]},{"level":3,"title":"FeatureRefTraits","slug":"featurereftraits","link":"#featurereftraits","children":[]},{"level":3,"title":"FeatureConstRefTraits","slug":"featureconstreftraits","link":"#featureconstreftraits","children":[]},{"level":3,"title":"FunctionManager::load::__l7::<lambda_83470faaeb21466e721bad93b29e86d1>","slug":"functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1","link":"#functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1","children":[]},{"level":3,"title":"FillCommand","slug":"fillcommand","link":"#fillcommand","children":[]},{"level":3,"title":"FillCommand_vtbl","slug":"fillcommand-vtbl","link":"#fillcommand-vtbl","children":[]},{"level":3,"title":"FunctionCommand","slug":"functioncommand","link":"#functioncommand","children":[]},{"level":3,"title":"FunctionCommand_vtbl","slug":"functioncommand-vtbl","link":"#functioncommand-vtbl","children":[]},{"level":3,"title":"FileDataOutput","slug":"filedataoutput","link":"#filedataoutput","children":[]},{"level":3,"title":"FileDataOutput_vtbl","slug":"filedataoutput-vtbl","link":"#filedataoutput-vtbl","children":[]},{"level":3,"title":"FileDataInput","slug":"filedatainput","link":"#filedatainput","children":[]},{"level":3,"title":"FileDataInput_vtbl","slug":"filedatainput-vtbl","link":"#filedatainput-vtbl","children":[]},{"level":3,"title":"FilePickerSettings::<lambda_129896ef764bb08519885b7ab5ca9016>","slug":"filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016","link":"#filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016","children":[]},{"level":3,"title":"FilePickerSettings::<lambda_1c69aa04d55bac9dab0ac921a14d8c2b>","slug":"filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b","link":"#filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b","children":[]},{"level":3,"title":"FilePickerSettings::<lambda_3b83f32960a2e8aa93e0654bf1d2fbe5>","slug":"filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5","link":"#filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5","children":[]},{"level":3,"title":"FileUploadManager::_uploadStream::__l2::<lambda_704199bdd8ef4b5e4b61022e06e9c849>","slug":"fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849","link":"#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849","children":[]},{"level":3,"title":"FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>","slug":"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49","link":"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49","children":[]},{"level":3,"title":"FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>::()::__l5::<lambda_b942687c99a128d38d4a3acdf5208e9b>::()::__l5::<lambda_0e10341a96d156a6650052c442f8bc7b>","slug":"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b","link":"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b","children":[]},{"level":3,"title":"FileUploadManager::_resumeUpload::__l2::<lambda_edbb1383cf59043f3a41a84683bc4a8c>","slug":"fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c","link":"#fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c","children":[]},{"level":3,"title":"FileUploadManager::uploadFile::__l13::<lambda_74760951e5721fb9dafc828e7e1ca7c9>::()::__l11::<lambda_aa179f462ff3a856f50c63ee1659ca3f>","slug":"fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f","link":"#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f","children":[]},{"level":3,"title":"FileDownloadManager::pauseDownload::__l5::<lambda_411b52f0bd9ccf2ab6e8671e1b98316a>","slug":"filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a","link":"#filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a","children":[]},{"level":3,"title":"FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_d89c88a6ec3abc173214fdc98b971c20>","slug":"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20","link":"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20","children":[]},{"level":3,"title":"FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_2443bc6f7ea8a704e54426e60ed6d6fd>","slug":"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd","link":"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd","children":[]},{"level":3,"title":"Fish","slug":"fish","link":"#fish","children":[]},{"level":3,"title":"FilterTestDaytime_vtbl","slug":"filtertestdaytime-vtbl","link":"#filtertestdaytime-vtbl","children":[]},{"level":3,"title":"FilterTestClock","slug":"filtertestclock","link":"#filtertestclock","children":[]},{"level":3,"title":"FilterTestClock_vtbl","slug":"filtertestclock-vtbl","link":"#filtertestclock-vtbl","children":[]},{"level":3,"title":"FilterTestMoonIntensity","slug":"filtertestmoonintensity","link":"#filtertestmoonintensity","children":[]},{"level":3,"title":"FilterTestMoonIntensity_vtbl","slug":"filtertestmoonintensity-vtbl","link":"#filtertestmoonintensity-vtbl","children":[]},{"level":3,"title":"FilterTestMoonPhase","slug":"filtertestmoonphase","link":"#filtertestmoonphase","children":[]},{"level":3,"title":"FilterTestMoonPhase_vtbl","slug":"filtertestmoonphase-vtbl","link":"#filtertestmoonphase-vtbl","children":[]},{"level":3,"title":"FilterTestDistanceToNearestPlayer","slug":"filtertestdistancetonearestplayer","link":"#filtertestdistancetonearestplayer","children":[]},{"level":3,"title":"FilterTestDistanceToNearestPlayer_vtbl","slug":"filtertestdistancetonearestplayer-vtbl","link":"#filtertestdistancetonearestplayer-vtbl","children":[]},{"level":3,"title":"FilterTestDimensionWeather","slug":"filtertestdimensionweather","link":"#filtertestdimensionweather","children":[]},{"level":3,"title":"FilterTestDimensionWeather_vtbl","slug":"filtertestdimensionweather-vtbl","link":"#filtertestdimensionweather-vtbl","children":[]},{"level":3,"title":"FilterTestDifficulty_vtbl","slug":"filtertestdifficulty-vtbl","link":"#filtertestdifficulty-vtbl","children":[]},{"level":3,"title":"FilterTestHourlyClock_vtbl","slug":"filtertesthourlyclock-vtbl","link":"#filtertesthourlyclock-vtbl","children":[]},{"level":3,"title":"FilterTestGameRule_vtbl","slug":"filtertestgamerule-vtbl","link":"#filtertestgamerule-vtbl","children":[]},{"level":3,"title":"FilterTestBiome_vtbl","slug":"filtertestbiome-vtbl","link":"#filtertestbiome-vtbl","children":[]},{"level":3,"title":"FilterTestBiomeSnowCovered_vtbl","slug":"filtertestbiomesnowcovered-vtbl","link":"#filtertestbiomesnowcovered-vtbl","children":[]},{"level":3,"title":"FilterTestBiomeHumid_vtbl","slug":"filtertestbiomehumid-vtbl","link":"#filtertestbiomehumid-vtbl","children":[]},{"level":3,"title":"FilterTestTemperatureType_vtbl","slug":"filtertesttemperaturetype-vtbl","link":"#filtertesttemperaturetype-vtbl","children":[]},{"level":3,"title":"FilterTestTemperatureValue_vtbl","slug":"filtertesttemperaturevalue-vtbl","link":"#filtertesttemperaturevalue-vtbl","children":[]},{"level":3,"title":"FilterTestBrightness_vtbl","slug":"filtertestbrightness-vtbl","link":"#filtertestbrightness-vtbl","children":[]},{"level":3,"title":"FilterTestAltitude_vtbl","slug":"filtertestaltitude-vtbl","link":"#filtertestaltitude-vtbl","children":[]},{"level":3,"title":"FilterTestBiomeHasTag_vtbl","slug":"filtertestbiomehastag-vtbl","link":"#filtertestbiomehastag-vtbl","children":[]},{"level":3,"title":"FilterTestHasTradeSupply_vtbl","slug":"filtertesthastradesupply-vtbl","link":"#filtertesthastradesupply-vtbl","children":[]},{"level":3,"title":"FilterTestLightLevel","slug":"filtertestlightlevel","link":"#filtertestlightlevel","children":[]},{"level":3,"title":"FilterTestLightLevel_vtbl","slug":"filtertestlightlevel-vtbl","link":"#filtertestlightlevel-vtbl","children":[]},{"level":3,"title":"FireImmuneDefinition","slug":"fireimmunedefinition","link":"#fireimmunedefinition","children":[]},{"level":3,"title":"FloatsInLiquidDefinition","slug":"floatsinliquiddefinition","link":"#floatsinliquiddefinition","children":[]},{"level":3,"title":"FlyingSpeedDefinition","slug":"flyingspeeddefinition","link":"#flyingspeeddefinition","children":[]},{"level":3,"title":"FrictionModifierDefinition","slug":"frictionmodifierdefinition","link":"#frictionmodifierdefinition","children":[]},{"level":3,"title":"FindCoverGoal","slug":"findcovergoal","link":"#findcovergoal","children":[]},{"level":3,"title":"FindCoverGoal_vtbl","slug":"findcovergoal-vtbl","link":"#findcovergoal-vtbl","children":[]},{"level":3,"title":"FleeSunGoal","slug":"fleesungoal","link":"#fleesungoal","children":[]},{"level":3,"title":"FleeSunGoal_vtbl","slug":"fleesungoal-vtbl","link":"#fleesungoal-vtbl","children":[]},{"level":3,"title":"FollowFlockGoal","slug":"followflockgoal","link":"#followflockgoal","children":[]},{"level":3,"title":"FollowFlockGoal_vtbl","slug":"followflockgoal-vtbl","link":"#followflockgoal-vtbl","children":[]},{"level":3,"title":"FindBlockNode","slug":"findblocknode","link":"#findblocknode","children":[]},{"level":3,"title":"FindBlockNode_vtbl","slug":"findblocknode-vtbl","link":"#findblocknode-vtbl","children":[]},{"level":3,"title":"FindBlockDefinition","slug":"findblockdefinition","link":"#findblockdefinition","children":[]},{"level":3,"title":"FindBlockDefinition_vtbl","slug":"findblockdefinition-vtbl","link":"#findblockdefinition-vtbl","children":[]},{"level":3,"title":"FindActorNode","slug":"findactornode","link":"#findactornode","children":[]},{"level":3,"title":"FindActorNode_vtbl","slug":"findactornode-vtbl","link":"#findactornode-vtbl","children":[]},{"level":3,"title":"FindActorDefinition","slug":"findactordefinition","link":"#findactordefinition","children":[]},{"level":3,"title":"FindActorDefinition_vtbl","slug":"findactordefinition-vtbl","link":"#findactordefinition-vtbl","children":[]},{"level":3,"title":"FlyNode","slug":"flynode","link":"#flynode","children":[]},{"level":3,"title":"FlyNode_vtbl","slug":"flynode-vtbl","link":"#flynode-vtbl","children":[]},{"level":3,"title":"FlyDefinition","slug":"flydefinition","link":"#flydefinition","children":[]},{"level":3,"title":"FlyDefinition_vtbl","slug":"flydefinition-vtbl","link":"#flydefinition-vtbl","children":[]},{"level":3,"title":"FindTargetNode","slug":"findtargetnode","link":"#findtargetnode","children":[]},{"level":3,"title":"FindTargetNode_vtbl","slug":"findtargetnode-vtbl","link":"#findtargetnode-vtbl","children":[]},{"level":3,"title":"FindTargetDefinition","slug":"findtargetdefinition","link":"#findtargetdefinition","children":[]},{"level":3,"title":"FindTargetDefinition_vtbl","slug":"findtargetdefinition-vtbl","link":"#findtargetdefinition-vtbl","children":[]},{"level":3,"title":"FindHarvestDefinition","slug":"findharvestdefinition","link":"#findharvestdefinition","children":[]},{"level":3,"title":"FindHarvestDefinition_vtbl","slug":"findharvestdefinition-vtbl","link":"#findharvestdefinition-vtbl","children":[]},{"level":3,"title":"FindRecipeDefinition","slug":"findrecipedefinition","link":"#findrecipedefinition","children":[]},{"level":3,"title":"FindRecipeDefinition_vtbl","slug":"findrecipedefinition-vtbl","link":"#findrecipedefinition-vtbl","children":[]},{"level":3,"title":"FindRecipeNode","slug":"findrecipenode","link":"#findrecipenode","children":[]},{"level":3,"title":"FindRecipeNode_vtbl","slug":"findrecipenode-vtbl","link":"#findrecipenode-vtbl","children":[]},{"level":3,"title":"FireworksRocketActor::checkAchievement::__l21::<lambda_c73dc455ce730d1f42b1b56fbc1f5399>","slug":"fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399","link":"#fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399","children":[]},{"level":3,"title":"Fireball","slug":"fireball","link":"#fireball","children":[]},{"level":3,"title":"Fireball_vtbl","slug":"fireball-vtbl","link":"#fireball-vtbl","children":[]},{"level":3,"title":"FurnaceInputContainerController","slug":"furnaceinputcontainercontroller","link":"#furnaceinputcontainercontroller","children":[]},{"level":3,"title":"FurnaceInputContainerController_vtbl","slug":"furnaceinputcontainercontroller-vtbl","link":"#furnaceinputcontainercontroller-vtbl","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_53e6ff47ca84784fadfa6f6ea435d0db>","slug":"filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db","link":"#filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_0b20278bf0b6617c64212f827fc3f6c6>","slug":"filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6","link":"#filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_70127f048990374f535f74a1b0a14315>","slug":"filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315","link":"#filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_c08235eaf234640396c8d9d4980e4d68>","slug":"filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68","link":"#filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_2277542b59c4fb23b9fa70a8ed97c541>","slug":"filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541","link":"#filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_93c18a3b380a6e7a33442d3c0483fbe3>","slug":"filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3","link":"#filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_2d06b743fa8020ab3d8bf3c094340db8>","slug":"filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8","link":"#filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_c3f8d4e5adf6bce18ffcdda2e15ecf8a>","slug":"filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a","link":"#filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a","children":[]},{"level":3,"title":"FilterList::initialize::__l2::<lambda_695aad19b31fab8d5eb858d6aa1aa324>","slug":"filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324","link":"#filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324","children":[]},{"level":3,"title":"FilterTestDistanceToNearestPlayer::evaluate::__l2::<lambda_ac2cf845ac1aa3efb9503cdba1ff5946>","slug":"filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946","link":"#filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946","children":[]},{"level":3,"title":"FertilizerItem","slug":"fertilizeritem","link":"#fertilizeritem","children":[]},{"level":3,"title":"FishingEnchant","slug":"fishingenchant","link":"#fishingenchant","children":[]},{"level":3,"title":"FishingEnchant_vtbl","slug":"fishingenchant-vtbl","link":"#fishingenchant-vtbl","children":[]},{"level":3,"title":"FrostWalkerEnchant","slug":"frostwalkerenchant","link":"#frostwalkerenchant","children":[]},{"level":3,"title":"FrostWalkerEnchant_vtbl","slug":"frostwalkerenchant-vtbl","link":"#frostwalkerenchant-vtbl","children":[]},{"level":3,"title":"FireChargeItem","slug":"firechargeitem","link":"#firechargeitem","children":[]},{"level":3,"title":"FishingRodItem","slug":"fishingroditem","link":"#fishingroditem","children":[]},{"level":3,"title":"FlintAndSteelItem","slug":"flintandsteelitem","link":"#flintandsteelitem","children":[]},{"level":3,"title":"FlagComponent<NoiseBasedColorPalette>","slug":"flagcomponent-noisebasedcolorpalette","link":"#flagcomponent-noisebasedcolorpalette","children":[]},{"level":3,"title":"FilteredTransformationAttributes<PreHillsEdgeTransformation>","slug":"filteredtransformationattributes-prehillsedgetransformation","link":"#filteredtransformationattributes-prehillsedgetransformation","children":[]},{"level":3,"title":"FilteredTransformationAttributes<LegacyPreHillsEdgeTransformation>","slug":"filteredtransformationattributes-legacyprehillsedgetransformation","link":"#filteredtransformationattributes-legacyprehillsedgetransformation","children":[]},{"level":3,"title":"FixedBiomeSource_vtbl","slug":"fixedbiomesource-vtbl","link":"#fixedbiomesource-vtbl","children":[]},{"level":3,"title":"FaceDirectionalBlock","slug":"facedirectionalblock","link":"#facedirectionalblock","children":[]},{"level":3,"title":"FaceDirectionalBlock_vtbl","slug":"facedirectionalblock-vtbl","link":"#facedirectionalblock-vtbl","children":[]},{"level":3,"title":"FurnaceBlock","slug":"furnaceblock","link":"#furnaceblock","children":[]},{"level":3,"title":"FurnaceBlock_vtbl","slug":"furnaceblock-vtbl","link":"#furnaceblock-vtbl","children":[]},{"level":3,"title":"FrostedIceBlock","slug":"frostediceblock","link":"#frostediceblock","children":[]},{"level":3,"title":"FrostedIceBlock_vtbl","slug":"frostediceblock-vtbl","link":"#frostediceblock-vtbl","children":[]},{"level":3,"title":"FireResistantComponentDescription","slug":"fireresistantcomponentdescription","link":"#fireresistantcomponentdescription","children":[]},{"level":3,"title":"FireResistantComponentDescription_vtbl","slug":"fireresistantcomponentdescription-vtbl","link":"#fireresistantcomponentdescription-vtbl","children":[]},{"level":3,"title":"FarmBlock","slug":"farmblock","link":"#farmblock","children":[]},{"level":3,"title":"FarmBlock_vtbl","slug":"farmblock-vtbl","link":"#farmblock-vtbl","children":[]},{"level":3,"title":"FenceGateBlock","slug":"fencegateblock","link":"#fencegateblock","children":[]},{"level":3,"title":"FenceGateBlock_vtbl","slug":"fencegateblock-vtbl","link":"#fencegateblock-vtbl","children":[]},{"level":3,"title":"FlowerBlock","slug":"flowerblock","link":"#flowerblock","children":[]},{"level":3,"title":"FlowerBlock_vtbl","slug":"flowerblock-vtbl","link":"#flowerblock-vtbl","children":[]},{"level":3,"title":"FarmBlock::transformOnFall::__l16::<lambda_6f1c6586e35323b556ccaad789196afc>","slug":"farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc","link":"#farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc","children":[]},{"level":3,"title":"FungusStem","slug":"fungusstem","link":"#fungusstem","children":[]},{"level":3,"title":"FungusStem_vtbl","slug":"fungusstem-vtbl","link":"#fungusstem-vtbl","children":[]},{"level":3,"title":"FileArchiver::_importLegacyWorld::__l16::<lambda_538357a0a1f30c0e58914473ed9ae7db>","slug":"filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db","link":"#filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db","children":[]},{"level":3,"title":"FileArchiver::_importLegacyWorld::__l2::<lambda_30db252728e558b809611799e47d6aba>","slug":"filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba","link":"#filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba","children":[]},{"level":3,"title":"FileArchiver::_importWorld::__l2::<lambda_80dd2c13733dd620134364ce61fd290a>","slug":"filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a","link":"#filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a","children":[]},{"level":3,"title":"FileArchiver::archiveLevel::__l2::<lambda_e96768593f2d4ea24e6f0259355ea06f>","slug":"filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f","link":"#filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> >","slug":"featureloading-concretefeatureholder-aggregatefeature-0","link":"#featureloading-concretefeatureholder-aggregatefeature-0","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> >_vtbl","slug":"featureloading-concretefeatureholder-aggregatefeature-0-vtbl","link":"#featureloading-concretefeatureholder-aggregatefeature-0-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> >","slug":"featureloading-concretefeatureholder-aggregatefeature-1","link":"#featureloading-concretefeatureholder-aggregatefeature-1","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> >_vtbl","slug":"featureloading-concretefeatureholder-aggregatefeature-1-vtbl","link":"#featureloading-concretefeatureholder-aggregatefeature-1-vtbl","children":[]},{"level":3,"title":"FlagComponent<IgnoreAutomaticFeatureRules>","slug":"flagcomponent-ignoreautomaticfeaturerules","link":"#flagcomponent-ignoreautomaticfeaturerules","children":[]},{"level":3,"title":"FallenTreeTrunk","slug":"fallentreetrunk","link":"#fallentreetrunk","children":[]},{"level":3,"title":"FallenTreeTrunk_vtbl","slug":"fallentreetrunk-vtbl","link":"#fallentreetrunk-vtbl","children":[]},{"level":3,"title":"FancyTreeCanopy","slug":"fancytreecanopy","link":"#fancytreecanopy","children":[]},{"level":3,"title":"FancyTreeCanopy_vtbl","slug":"fancytreecanopy-vtbl","link":"#fancytreecanopy-vtbl","children":[]},{"level":3,"title":"FancyTreeTrunk","slug":"fancytreetrunk","link":"#fancytreetrunk","children":[]},{"level":3,"title":"FancyTreeTrunk_vtbl","slug":"fancytreetrunk-vtbl","link":"#fancytreetrunk-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<OreFeature>","slug":"featureloading-concretefeatureholder-orefeature","link":"#featureloading-concretefeatureholder-orefeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<OreFeature>_vtbl","slug":"featureloading-concretefeatureholder-orefeature-vtbl","link":"#featureloading-concretefeatureholder-orefeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<ScatterFeature>","slug":"featureloading-concretefeatureholder-scatterfeature","link":"#featureloading-concretefeatureholder-scatterfeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<ScatterFeature>_vtbl","slug":"featureloading-concretefeatureholder-scatterfeature-vtbl","link":"#featureloading-concretefeatureholder-scatterfeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<SearchFeature>","slug":"featureloading-concretefeatureholder-searchfeature","link":"#featureloading-concretefeatureholder-searchfeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<SearchFeature>_vtbl","slug":"featureloading-concretefeatureholder-searchfeature-vtbl","link":"#featureloading-concretefeatureholder-searchfeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature>","slug":"featureloading-concretefeatureholder-singleblockfeature","link":"#featureloading-concretefeatureholder-singleblockfeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature>_vtbl","slug":"featureloading-concretefeatureholder-singleblockfeature-vtbl","link":"#featureloading-concretefeatureholder-singleblockfeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature>","slug":"featureloading-concretefeatureholder-structuretemplatefeature","link":"#featureloading-concretefeatureholder-structuretemplatefeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature>_vtbl","slug":"featureloading-concretefeatureholder-structuretemplatefeature-vtbl","link":"#featureloading-concretefeatureholder-structuretemplatefeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature>","slug":"featureloading-concretefeatureholder-weightedrandomfeature","link":"#featureloading-concretefeatureholder-weightedrandomfeature","children":[]},{"level":3,"title":"FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature>_vtbl","slug":"featureloading-concretefeatureholder-weightedrandomfeature-vtbl","link":"#featureloading-concretefeatureholder-weightedrandomfeature-vtbl","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_070746fd668a8863cbe2a3fa42ef5d69>","slug":"featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69","link":"#featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_d26feffea4ae0d0b0b8b4d6cae78c5cf>","slug":"featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf","link":"#featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_af5d1f29c06df3f1db5b8f80f70364da>","slug":"featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da","link":"#featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_269493b156b355f6873e78f5de861254>","slug":"featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254","link":"#featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_534deace486ba3fe58b054318be7d5d3>","slug":"featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3","link":"#featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_ab790779e99eb67e9d8c5c8fd9cc4c45>","slug":"featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45","link":"#featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_4037a9070031ea00ecf26a17b8deac9a>","slug":"featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a","link":"#featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_58c2dcc1193277e90b7e9d1eb1c15558>","slug":"featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558","link":"#featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_4299ec9b57c324e4ed6c59adea430d1b>","slug":"featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b","link":"#featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_39ac3505671351be2f07089f45af80d4>","slug":"featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4","link":"#featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_62a233d718e72e6d45d8be1832f214d7>","slug":"featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7","link":"#featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_765a9a9c0c55c35967e3b8f28c6a4eb6>","slug":"featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6","link":"#featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_897e6fcd2a422a00b9d9c4a201bfd773>","slug":"featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773","link":"#featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_42561c5376106a2d36a76d95d16bfeed>","slug":"featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed","link":"#featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_3353d277619da3d5cd138ecb16b20a40>","slug":"featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40","link":"#featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_2555eade625bb966e8a1cb8c17c7d650>","slug":"featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650","link":"#featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_a0eedeb0869af7a0f96ac76dc92d0031>","slug":"featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031","link":"#featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_4bf39c4a9b08fca0df43481eceb092dc>","slug":"featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc","link":"#featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_5ae05df8699a59f68386294438b05b14>","slug":"featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14","link":"#featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_72c5c6cc5f5dd19ec9b756a6f4aa1c7e>","slug":"featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e","link":"#featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_45506032ba1c7b9bbd1df26c52850076>","slug":"featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076","link":"#featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_bca5b7ec8dc84ccd012b20d3dd8504ec>","slug":"featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec","link":"#featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_13ccba55549a4f3cd8e4c2c51a107ddd>","slug":"featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd","link":"#featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_3aa76ff1487ac6670529bd834c913005>","slug":"featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005","link":"#featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_5cb6d1b77b80274727750302cf95eef8>","slug":"featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8","link":"#featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_2db0a06029a62470922787888580f857>","slug":"featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857","link":"#featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_e3ab05455b51e5b1eb353e38d6a02e5a>","slug":"featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a","link":"#featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_a341f3a50e60c6ed529981a28c90aaac>","slug":"featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac","link":"#featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_8d80157009857924b75728f5593a8ff8>","slug":"featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8","link":"#featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_b79033f7b1569ed146e124133fdbcc0c>","slug":"featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c","link":"#featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_ff651ceb1e4b05630dbf709c5689b4b1>","slug":"featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1","link":"#featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_5c3870871285efa3a3aa788bcc59a6a5>","slug":"featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5","link":"#featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l3::<lambda_30a0658175a01da0b1d017c3a844bd3e>","slug":"featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e","link":"#featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_8863387e98ecef072021858bd81ad446>","slug":"featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446","link":"#featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_5345261c4062f4e77220602c18289610>","slug":"featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610","link":"#featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_8fb55b46049a0200c7143f7ba4895532>","slug":"featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532","link":"#featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_64df30a075a0c8c674bb3f6f828c52ca>","slug":"featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca","link":"#featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_0d7cacde3fd40c099b69258499db96d6>","slug":"featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6","link":"#featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_e34e6baeca6179063c960b15821263e0>","slug":"featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0","link":"#featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l5::<lambda_bd812f17ea40517b41fdb6a37c75611f>","slug":"featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f","link":"#featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l5::<lambda_0bab2de68df3204c165f75450ef8e72a>","slug":"featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a","link":"#featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l5::<lambda_332a15757cb5a2ca55e4629941ee6bfe>","slug":"featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe","link":"#featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_03b0ae550376e085f07188b9454238fd>","slug":"featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd","link":"#featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_6b158c2e512a8d1fbc8831cf780ee4dc>","slug":"featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc","link":"#featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l4::<lambda_83079f870ce1353e2d06423894cf973e>","slug":"featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e","link":"#featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_97556ef3bb7e60132ee693ff92d4f682>","slug":"featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682","link":"#featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_ed2b13013692bdd7f19a91b5afd86826>","slug":"featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826","link":"#featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_d222b44934b5477be8e0cf5e6eaab932>","slug":"featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932","link":"#featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_c8bd75ad40874126e6105b6c5b3170a4>","slug":"featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4","link":"#featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_6820c32e3003b153c2b3cea1bdc8d1b3>","slug":"featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3","link":"#featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_374f89a74208a5ae69066c135eeec787>","slug":"featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787","link":"#featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_90c035c83f69abd1911d31525619f974>","slug":"featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974","link":"#featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_8d4f36e87c6e3e131780a3a2f22c6d9d>","slug":"featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d","link":"#featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_6de0fdb9a2c3ef41e1fef4cdd647078c>","slug":"featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c","link":"#featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c","children":[]},{"level":3,"title":"FlatWorldGenerator::ThreadData","slug":"flatworldgenerator-threaddata","link":"#flatworldgenerator-threaddata","children":[]},{"level":3,"title":"FlatWorldGenerator","slug":"flatworldgenerator","link":"#flatworldgenerator","children":[]},{"level":3,"title":"FlatWorldGenerator_vtbl","slug":"flatworldgenerator-vtbl","link":"#flatworldgenerator-vtbl","children":[]},{"level":3,"title":"FeaturePoolElement","slug":"featurepoolelement","link":"#featurepoolelement","children":[]},{"level":3,"title":"FeaturePoolElement_vtbl","slug":"featurepoolelement-vtbl","link":"#featurepoolelement-vtbl","children":[]},{"level":3,"title":"FlushableStorageAreaEnv","slug":"flushablestorageareaenv","link":"#flushablestorageareaenv","children":[]},{"level":3,"title":"FlushableStorageAreaEnv_vtbl","slug":"flushablestorageareaenv-vtbl","link":"#flushablestorageareaenv-vtbl","children":[]},{"level":3,"title":"FillContainerFunction","slug":"fillcontainerfunction","link":"#fillcontainerfunction","children":[]},{"level":3,"title":"FillContainerFunction_vtbl","slug":"fillcontainerfunction-vtbl","link":"#fillcontainerfunction-vtbl","children":[]},{"level":3,"title":"FileEntryComparer","slug":"fileentrycomparer","link":"#fileentrycomparer","children":[]},{"level":3,"title":"FindTargetNode::_findTarget::__l2::SortedEntity","slug":"findtargetnode-findtarget-l2-sortedentity","link":"#findtargetnode-findtarget-l2-sortedentity","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>::()::__l5::<lambda_8feab0bb6d6076ddaea0f0c6fdd2a476>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_b501aa9096a8ed529fb12076180c73f1>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_c083550131e71a55511296daac40f470>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_0f88f144beee21e5774357a5f78da137>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_2483871e72b0a3a4918ebadc3d6ad9a5>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_ef2987bf3d9f28b29fff7aa0a64c5416>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_64b49edc8ba5aeeb2f3476bd9b9c093a>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a","children":[]},{"level":3,"title":"FoldMeuScreenController::setUpCallbacksForBooleanOption::__l5::<lambda_88a7b0e5f2761b34ffb9d0a84e730c1c>","slug":"foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c","link":"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_918e92bc02a750928ba6a2b7978a22e3>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6fc73c80d8a9683560641429bd0ed96>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_e823ae91e9641fd1835e13f3c4ee3ca3>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_6ec23c973f7b6a4da05b0939ba1a1eb0>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_5ade11331fe1558f519255d4b1202822>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822","children":[]},{"level":3,"title":"FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::<lambda_fa9d43b382490adf14339cf539e74ad6>","slug":"foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6","link":"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_a5e9eed93727d5c4ebb5be06e9c90f04>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_cb3d7b3d49701cb402d19becafe55657>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_22fb87d39d0a867e7d00db491a10a129>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_2f57f4b9490b0343616042fd9a3c990a>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_08424e551f27aafc65791bc8288cbde3>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d157d9d5d6fdbca615e3caa8e0bf4222>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_3ed8c7b17036d6d51f6c5b76009abbb0>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_b5146d2372a6b1483802334539c53cff>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_9ad56d1a09ac749d3b8f4649d9b1d636>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_444e43ea276a91140d204a9cd9f398dc>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_0f9b4d753427a8d4bf03f7ba64413b92>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d0a328a4c1f934c10ffb505d9b5e76c9>","slug":"foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9","link":"#foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_b17e57dcd81ae199a0d252bf7005e06e>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e","children":[]},{"level":3,"title":"FoldMeuScreenController::_registerBindings::__l2::<lambda_3d3e37d1c4de3bdd812b3e051f0c85a9>","slug":"foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9","link":"#foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9","children":[]},{"level":3,"title":"FileUpdateCallback","slug":"fileupdatecallback","link":"#fileupdatecallback","children":[]},{"level":3,"title":"FileUpdateCallback_vtbl","slug":"fileupdatecallback-vtbl","link":"#fileupdatecallback-vtbl","children":[]},{"level":3,"title":"FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_e384047c49a815c3752804224621532b>","slug":"facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b","link":"#facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b","children":[]},{"level":3,"title":"FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_66c7ce4eb31239d7104331f3bfa7521d>","slug":"facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d","link":"#facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d","children":[]},{"level":3,"title":"FireResistantComponentDescription::buildSchema::__l2::<lambda_8759fb23e5c0a21392825d06d0b04050>","slug":"fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050","link":"#fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050","children":[]},{"level":3,"title":"FireResistantComponentDescription::buildSchema::__l2::<lambda_329954e13c2e3af67509eaea49dde588>","slug":"fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588","link":"#fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588","children":[]},{"level":3,"title":"FeatureLoading::_buildSchema::__l2::<lambda_b9b2bed89d2ad2db6dad7f2f0e544444>","slug":"featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444","link":"#featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444","children":[]},{"level":3,"title":"FurnaceContainerManagerModel","slug":"furnacecontainermanagermodel","link":"#furnacecontainermanagermodel","children":[]}],"git":{"updatedTime":1722099801000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1},{"name":"VinkyV","email":"75137786+VinkyV@users.noreply.github.com","commits":1}]},"filePathRelative":"1.16.201/structure/F.md"}');export{p as comp,v as data};
