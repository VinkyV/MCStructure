import{_ as e,c as s,o as n,d as a}from"./app-CsZ-F4rT.js";const l={},i=a(`<h1 id="h" tabindex="-1"><a class="header-anchor" href="#h"><span>H</span></a></h1><h3 id="hashedstring" tabindex="-1"><a class="header-anchor" href="#hashedstring"><span><code>HashedString</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mStrHash</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mStr</td></tr><tr><td>40</td><td>(8) <code>const HashedString *</code></td><td>mLastMatch</td></tr></tbody></table><h3 id="handlertype" tabindex="-1"><a class="header-anchor" href="#handlertype"><span><code>HandlerType</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) \`\`</td><td>adjectives</td></tr><tr><td>4</td><td>(4) \`\`</td><td>pType</td></tr><tr><td>8</td><td>(4) \`\`</td><td>dispCatchObj</td></tr><tr><td>12</td><td>(4) \`\`</td><td>addressOfHandler</td></tr><tr><td>16</td><td>(4) \`\`</td><td>dispFrame</td></tr></tbody></table><h3 id="historicalframetimes" tabindex="-1"><a class="header-anchor" href="#historicalframetimes"><span><code>HistoricalFrameTimes</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mFrameIndex</td></tr><tr><td>8</td><td>(120) <code>float[30]</code></td><td>mHistoricalMinimumFrameTimes</td></tr><tr><td>128</td><td>(120) <code>float[30]</code></td><td>mHistoricalMaximumFrameTimes</td></tr><tr><td>248</td><td>(120) <code>float[30]</code></td><td>mHistoricalAverageFrameTimes</td></tr><tr><td>368</td><td>(120) <code>float[30]</code></td><td>mLastFrameTime</td></tr></tbody></table><h3 id="hitresult" tabindex="-1"><a class="header-anchor" href="#hitresult"><span><code>HitResult</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Vec3</code></td><td>mStartPos</td></tr><tr><td>12</td><td>(12) <code>Vec3</code></td><td>mRayDir</td></tr><tr><td>24</td><td>(4) <code>HitResultType</code></td><td>mType</td></tr><tr><td>28</td><td>(1) <code>unsigned __int8</code></td><td>mFacing</td></tr><tr><td>32</td><td>(12) <code>BlockPos</code></td><td>mBlock</td></tr><tr><td>44</td><td>(12) <code>Vec3</code></td><td>mPos</td></tr><tr><td>56</td><td>(24) <code>WeakRefT&lt;EntityRefTraits&gt;</code></td><td>mEntity</td></tr><tr><td>80</td><td>(1) <code>bool</code></td><td>mIsHitLiquid</td></tr><tr><td>81</td><td>(1) <code>unsigned __int8</code></td><td>mLiquidFacing</td></tr><tr><td>84</td><td>(12) <code>BlockPos</code></td><td>mLiquid</td></tr><tr><td>96</td><td>(12) <code>Vec3</code></td><td>mLiquidPos</td></tr><tr><td>108</td><td>(1) <code>bool</code></td><td>mIndirectHit</td></tr></tbody></table><h3 id="holographicplatform-holoframeofreferencesetupdata" tabindex="-1"><a class="header-anchor" href="#holographicplatform-holoframeofreferencesetupdata"><span><code>HolographicPlatform::HoloFrameOfReferenceSetupData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Vec3</code></td><td>mMinecraftPlayerPos</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mUIWidth</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>mUIHeight</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>mUIGuiScale</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mVerticalFovRadians</td></tr><tr><td>28</td><td>(4) <code>float</code></td><td>mAspectRatio</td></tr><tr><td>32</td><td>(4) <code>float</code></td><td>mHoloUIWidth</td></tr><tr><td>36</td><td>(4) <code>float</code></td><td>mHoloUIHeight</td></tr><tr><td>40</td><td>(4) <code>float</code></td><td>mHoloHUDWidth</td></tr><tr><td>44</td><td>(4) <code>float</code></td><td>mHoloHUDHeight</td></tr><tr><td>48</td><td>(64) <code>Matrix</code></td><td>mMinecraftSteveRelativeSpaceToRealitySpaceTransform</td></tr><tr><td>112</td><td>(4) <code>float</code></td><td>mRealityFrameModeWorldScale</td></tr><tr><td>116</td><td>(64) <code>Matrix</code></td><td>mScreenAnchorAugmentationMatrix</td></tr><tr><td>180</td><td>(64) <code>Matrix</code></td><td>mMinecraftView</td></tr><tr><td>244</td><td>(64) <code>Matrix</code></td><td>mMinecraftProj</td></tr><tr><td>308</td><td>(1) <code>bool</code></td><td>mDrawUIHeadLocked</td></tr><tr><td>309</td><td>(1) <code>bool</code></td><td>mTrueMonoscopicModeEnabled</td></tr><tr><td>310</td><td>(1) <code>bool</code></td><td>mDrawFloatingHud</td></tr><tr><td>311</td><td>(1) <code>bool</code></td><td>mFixHud</td></tr><tr><td>312</td><td>(64) <code>Matrix</code></td><td>mHUDMatrixPatch</td></tr><tr><td>376</td><td>(64) <code>Matrix</code></td><td>mHUDToLeftHandPatch</td></tr><tr><td>440</td><td>(4) <code>HoloUIToPoseSource</code></td><td>mUIPoseSource</td></tr><tr><td>444</td><td>(64) <code>Matrix</code></td><td>mVRTransitionMatrixPatch</td></tr></tbody></table><h3 id="hbui-routerlocation" tabindex="-1"><a class="header-anchor" href="#hbui-routerlocation"><span><code>hbui::RouterLocation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;AbstractScene&gt;</code></td><td>mScene</td></tr><tr><td>16</td><td>(32) <code>std::string</code></td><td>mUrl</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mPath</td></tr><tr><td>80</td><td>(40) <code>std::optional&lt;std::string &gt;</code></td><td>mQuery</td></tr><tr><td>120</td><td>(40) <code>std::optional&lt;std::string &gt;</code></td><td>mFragment</td></tr><tr><td>160</td><td>(4) <code>_BYTE[4]</code></td><td>mMode</td></tr><tr><td>164</td><td>(4) <code>hbui::RouteType</code></td><td>mRouteType</td></tr><tr><td>168</td><td>(32) <code>std::string</code></td><td>mState</td></tr></tbody></table><h3 id="hoverscreeneventdata" tabindex="-1"><a class="header-anchor" href="#hoverscreeneventdata"><span><code>HoverScreenEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>UIPropertyBag *</code></td><td>properties</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>hover</td></tr></tbody></table><h3 id="holoinputmodechangescreeneventdata" tabindex="-1"><a class="header-anchor" href="#holoinputmodechangescreeneventdata"><span><code>HoloInputModeChangeScreenEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>_BYTE[4]</code></td><td>mode</td></tr></tbody></table><h3 id="hbui-facetregistry-facetentry" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-facetentry"><span><code>hbui::FacetRegistry::FacetEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>name</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;std::unique_ptr&lt;hbui::IFacet&gt; __cdecl(void)&gt;</code></td><td>constructor</td></tr><tr><td>96</td><td>(8) <code>std::unique_ptr&lt;hbui::IFacet&gt;</code></td><td>facet</td></tr></tbody></table><h3 id="hbui-feature-registerisenabledchangedcallback-l5-lambda-1ab57bcd99c576631ba41c810ebdfff7" tabindex="-1"><a class="header-anchor" href="#hbui-feature-registerisenabledchangedcallback-l5-lambda-1ab57bcd99c576631ba41c810ebdfff7"><span><code>hbui::Feature::registerIsEnabledChangedCallback::__l5::&lt;lambda_1ab57bcd99c576631ba41c810ebdfff7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;void __cdecl(bool)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="hbui-routerhistory-fullhistory" tabindex="-1"><a class="header-anchor" href="#hbui-routerhistory-fullhistory"><span><code>hbui::RouterHistory::FullHistory</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>entries</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>current</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-9198b0a63744d6caef4e6bf93514f963" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-9198b0a63744d6caef4e6bf93514f963"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_9198b0a63744d6caef4e6bf93514f963&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-03742a56a76ff97dd1e21e945eb64304" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-03742a56a76ff97dd1e21e945eb64304"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_03742a56a76ff97dd1e21e945eb64304&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-3ee6f9688302b02ab45782d3ee16d8ce" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-3ee6f9688302b02ab45782d3ee16d8ce"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_3ee6f9688302b02ab45782d3ee16d8ce&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-b4883a86f58b08e1adf25075f2619414" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-b4883a86f58b08e1adf25075f2619414"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_b4883a86f58b08e1adf25075f2619414&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-198843c04982cc508dc4bb1d040ed8de" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-198843c04982cc508dc4bb1d040ed8de"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_198843c04982cc508dc4bb1d040ed8de&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>featureFlags</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-304967065c66569af40ba27c5a2bf6f5" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-304967065c66569af40ba27c5a2bf6f5"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_304967065c66569af40ba27c5a2bf6f5&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-29ee3a92f3d498426295e1b7ffbcb6ea" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-29ee3a92f3d498426295e1b7ffbcb6ea"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_29ee3a92f3d498426295e1b7ffbcb6ea&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-df7288e7b03dfb70aec84d96b0a91b02" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-df7288e7b03dfb70aec84d96b0a91b02"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_df7288e7b03dfb70aec84d96b0a91b02&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-420fe536fd38216466f4e15beb7f8f35" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-420fe536fd38216466f4e15beb7f8f35"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_420fe536fd38216466f4e15beb7f8f35&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-4e8329eee189f5c87c78bda6854976e8" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-4e8329eee189f5c87c78bda6854976e8"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_4e8329eee189f5c87c78bda6854976e8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l2-lambda-b8cda2d613720fd8ef484f58bcce6777" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-b8cda2d613720fd8ef484f58bcce6777"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_b8cda2d613720fd8ef484f58bcce6777&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hbui-sceneprovider-createscene-l8-lambda-41cdb76c9bee798add5b424eb551b203" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l8-lambda-41cdb76c9bee798add5b424eb551b203"><span><code>hbui::SceneProvider::createScene::__l8::&lt;lambda_41cdb76c9bee798add5b424eb551b203&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>hbui::SceneProvider *const</code></td><td>__this</td></tr></tbody></table><h3 id="hummingbirdui-callbackentry" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-callbackentry"><span><code>HummingbirdUI::CallbackEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void *</code></td><td>token</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="hbui-hybridresourcelocation" tabindex="-1"><a class="header-anchor" href="#hbui-hybridresourcelocation"><span><code>hbui::HybridResourceLocation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>hbui::HybridResourceFileSystem</code></td><td>mFileSystem</td></tr><tr><td>8</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mPath</td></tr><tr><td>40</td><td>(8) <code>const PackInstance *</code></td><td>mPack</td></tr></tbody></table><h3 id="hbui-routematcher-entry" tabindex="-1"><a class="header-anchor" href="#hbui-routematcher-entry"><span><code>hbui::RouteMatcher::Entry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>const std::string</code></td><td>baseScreenId</td></tr><tr><td>32</td><td>(40) <code>const std::basic_regex&lt;char,std::regex_traits&lt;char&gt; &gt;</code></td><td>pattern</td></tr><tr><td>72</td><td>(4) <code>hbui::RouteType</code></td><td>type</td></tr><tr><td>76</td><td>(4) <code>_BYTE[4]</code></td><td>mode</td></tr><tr><td>80</td><td>(64) <code>std::function&lt;void __cdecl(std::string const &amp;)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="hbui-routerlocationeventing-screenchangedproperties" tabindex="-1"><a class="header-anchor" href="#hbui-routerlocationeventing-screenchangedproperties"><span><code>hbui::RouterLocationEventing::ScreenChangedProperties</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mShouldFireEvent</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,std::string&gt;</code></td><td>mEventProperties</td></tr></tbody></table><h3 id="hostoptionsubcommand" tabindex="-1"><a class="header-anchor" href="#hostoptionsubcommand"><span><code>HostOptionSubCommand</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mButtonText</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mTexture</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mSubCommand</td></tr></tbody></table><h3 id="hudscreencontroller" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller"><span><code>HudScreenController</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2672) <code>ClientInstanceScreenController</code></td><td>baseclass_0</td></tr><tr><td>2672</td><td>(8) <code>BossEventListener</code></td><td>baseclass_a70</td></tr><tr><td>2680</td><td>(1) <code>bool</code></td><td>mEDUDiscoveryObserved</td></tr><tr><td>2684</td><td>(4) <code>int</code></td><td>mInputDelayTimer</td></tr><tr><td>2688</td><td>(32) <code>std::string</code></td><td>mPopupItemText</td></tr><tr><td>2720</td><td>(32) <code>std::string</code></td><td>mPopupJukeboxText</td></tr><tr><td>2752</td><td>(32) <code>std::string</code></td><td>mTipText</td></tr><tr><td>2784</td><td>(12) <code>BlockPos</code></td><td>mPlayerPos</td></tr><tr><td>2796</td><td>(12) <code>BlockPos</code></td><td>mAgentPos</td></tr><tr><td>2808</td><td>(4) <code>_BYTE[4]</code></td><td>mRecordedDirtyState</td></tr><tr><td>2816</td><td>(16) <code>std::shared_ptr&lt;HudContainerManagerController&gt;</code></td><td>mHudScreenManagerController</td></tr><tr><td>2832</td><td>(16) <code>std::shared_ptr&lt;ScoreboardScreenController&gt;</code></td><td>mScoreboardScreenController</td></tr><tr><td>2848</td><td>(16) <code>std::shared_ptr&lt;GamePlayTipScreenController&gt;</code></td><td>mGamePlayTipScreenController</td></tr><tr><td>2864</td><td>(1) <code>bool</code></td><td>mIsPlayerRiding</td></tr><tr><td>2865</td><td>(1) <code>bool</code></td><td>mVRRiding</td></tr><tr><td>2866</td><td>(1) <code>bool</code></td><td>mIsCreative</td></tr><tr><td>2867</td><td>(1) <code>bool</code></td><td>mVR</td></tr><tr><td>2868</td><td>(1) <code>bool</code></td><td>mHasPresentedInitialChat</td></tr><tr><td>2869</td><td>(1) <code>bool</code></td><td>mIsAutoSaving</td></tr><tr><td>2870</td><td>(1) <code>bool</code></td><td>mIsAutoSaveTimerDone</td></tr><tr><td>2872</td><td>(48) <code>Stopwatch</code></td><td>mAutoSaveTimer</td></tr><tr><td>2920</td><td>(48) <code>Stopwatch</code></td><td>mHUDOpacityTimer</td></tr><tr><td>2968</td><td>(4) <code>float</code></td><td>mHUDOpacityOverride</td></tr><tr><td>2972</td><td>(1) <code>bool</code></td><td>mOverrideHUDOpacity</td></tr><tr><td>2973</td><td>(1) <code>bool</code></td><td>mVoiceTipsVisible</td></tr><tr><td>2976</td><td>(32) <code>std::string</code></td><td>mVoiceName</td></tr><tr><td>3008</td><td>(1) <code>bool</code></td><td>mIsTitleOnDisplay</td></tr><tr><td>3016</td><td>(112) <code>TitleMessage</code></td><td>mTitleQueuedData</td></tr><tr><td>3128</td><td>(112) <code>TitleMessage</code></td><td>mTitleOnDisplayData</td></tr><tr><td>3240</td><td>(24) <code>std::vector&lt;HudScreenController::Tooltip&gt;</code></td><td>mLeftTooltips</td></tr><tr><td>3264</td><td>(24) <code>std::vector&lt;HudScreenController::Tooltip&gt;</code></td><td>mRightTooltips</td></tr></tbody></table><h3 id="hudscreencontroller-tooltip" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-tooltip"><span><code>HudScreenController::Tooltip</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>Remapping::ActionEnum</code></td><td>action</td></tr><tr><td>4</td><td>(1) <code>HudScreenController::Tooltip::Type</code></td><td>type</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;std::string __cdecl(void)&gt;</code></td><td>getDescription</td></tr><tr><td>72</td><td>(32) <code>std::string</code></td><td>keyPostfix</td></tr></tbody></table><h3 id="hydrateparams" tabindex="-1"><a class="header-anchor" href="#hydrateparams"><span><code>HydrateParams</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mProductId</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mLastModifiedDate</td></tr><tr><td>64</td><td>(1) <code>bool</code></td><td>mDisableCachedResponseOnFailure</td></tr><tr><td>65</td><td>(1) <code>bool</code></td><td>mUsePersonaBackend</td></tr></tbody></table><h3 id="homesystem-tick-l2-lambda-13bc406ef66a336e9c00382282ba4146" tabindex="-1"><a class="header-anchor" href="#homesystem-tick-l2-lambda-13bc406ef66a336e9c00382282ba4146"><span><code>HomeSystem::tick::__l2::&lt;lambda_13bc406ef66a336e9c00382282ba4146&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>HomeSystem *const</code></td><td>__this</td></tr></tbody></table><h3 id="homecomponent" tabindex="-1"><a class="header-anchor" href="#homecomponent"><span><code>HomeComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mRestrictionRadius</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mRestrictionRadiusSqr</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mCooldownTicksMax</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mCooldownTicks</td></tr><tr><td>16</td><td>(24) <code>std::vector&lt;WeakPtr&lt;BlockLegacy&gt;&gt;</code></td><td>mHomeBlocks</td></tr><tr><td>40</td><td>(12) <code>BlockPos</code></td><td>mHomePos</td></tr><tr><td>52</td><td>(4) <code>AutomaticID&lt;Dimension,int&gt;</code></td><td>mDimensionId</td></tr></tbody></table><h3 id="healabledefinition" tabindex="-1"><a class="header-anchor" href="#healabledefinition"><span><code>HealableDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;FeedItem&gt;</code></td><td>mHealItems</td></tr><tr><td>24</td><td>(1) <code>bool</code></td><td>mForceUse</td></tr><tr><td>32</td><td>(64) <code>ActorFilterGroup</code></td><td>mFilter</td></tr></tbody></table><h3 id="hitboxcomponent" tabindex="-1"><a class="header-anchor" href="#hitboxcomponent"><span><code>HitboxComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;Hitbox&gt;</code></td><td>mHitboxes</td></tr></tbody></table><h3 id="historicpredictiondata" tabindex="-1"><a class="header-anchor" href="#historicpredictiondata"><span><code>HistoricPredictionData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>slot</td></tr><tr><td>8</td><td>(248) <code>ItemStack</code></td><td>item</td></tr></tbody></table><h3 id="hugemushroomfeature" tabindex="-1"><a class="header-anchor" href="#hugemushroomfeature"><span><code>HugeMushroomFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>mForcedType</td></tr></tbody></table><h3 id="hugefungusfeature" tabindex="-1"><a class="header-anchor" href="#hugefungusfeature"><span><code>HugeFungusFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>const Block *</code></td><td>mStemBlock</td></tr><tr><td>32</td><td>(8) <code>const Block *</code></td><td>mHatBlock</td></tr><tr><td>40</td><td>(8) <code>const Block *</code></td><td>mDecorBlock</td></tr><tr><td>48</td><td>(1) <code>const bool</code></td><td>mAllowedToPlaceVines</td></tr></tbody></table><h3 id="httprequest" tabindex="-1"><a class="header-anchor" href="#httprequest"><span><code>HTTPRequest</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mURL</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mRequestBody</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mContentType</td></tr><tr><td>96</td><td>(4) <code>HTTPRequest::Method</code></td><td>mRequestMethod</td></tr><tr><td>104</td><td>(104) <code>HTTPResponse</code></td><td>mResponse</td></tr><tr><td>208</td><td>(16) <code>std::shared_ptr&lt;HTTPRequestInternal&gt;</code></td><td>mRequest</td></tr><tr><td>224</td><td>(16) <code>std::map&lt;std::string,std::string&gt;</code></td><td>mCookies</td></tr><tr><td>240</td><td>(16) <code>std::map&lt;std::string,std::string&gt;</code></td><td>mHeaders</td></tr></tbody></table><h3 id="httpresponse" tabindex="-1"><a class="header-anchor" href="#httpresponse"><span><code>HTTPResponse</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>body</td></tr><tr><td>32</td><td>(64) <code>std::unordered_map&lt;std::string,std::string&gt;</code></td><td>headers</td></tr><tr><td>96</td><td>(4) <code>int</code></td><td>responseCode</td></tr><tr><td>100</td><td>(4) <code>HTTPResponse::Status</code></td><td>status</td></tr></tbody></table><h3 id="hellspringfeature" tabindex="-1"><a class="header-anchor" href="#hellspringfeature"><span><code>HellSpringFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr><tr><td>24</td><td>(8) <code>const Block *</code></td><td>mBlock</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mInsideRock</td></tr></tbody></table><h3 id="hellfirefeature" tabindex="-1"><a class="header-anchor" href="#hellfirefeature"><span><code>HellFireFeature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Feature</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="hinstance" tabindex="-1"><a class="header-anchor" href="#hinstance"><span><code>HINSTANCE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HINSTANCE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hungerattrpacket" tabindex="-1"><a class="header-anchor" href="#hungerattrpacket"><span><code>HungerAttrPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) HungerAttrPacket : Packet</span>
<span class="line">{</span>
<span class="line">  float mMaxExhaustion;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hungerattrpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#hungerattrpacket-vtbl"><span><code>HungerAttrPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HungerAttrPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtarmorpacket" tabindex="-1"><a class="header-anchor" href="#hurtarmorpacket"><span><code>HurtArmorPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj HurtArmorPacket : Packet</span>
<span class="line">{</span>
<span class="line">  _BYTE mCause[4];</span>
<span class="line">  int mDmg;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtarmorpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#hurtarmorpacket-vtbl"><span><code>HurtArmorPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HurtArmorPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hwnd" tabindex="-1"><a class="header-anchor" href="#hwnd"><span><code>HWND__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HWND__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httpheaders" tabindex="-1"><a class="header-anchor" href="#httpheaders"><span><code>HttpHeaders</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HttpHeaders</span>
<span class="line">{</span>
<span class="line">  std::map&lt;std::string,std::string&gt; mHeaders;</span>
<span class="line">  std::string mStatusLine;</span>
<span class="line">  HttpHeaders::ParseState mParseState;</span>
<span class="line">  std::string mParsedName;</span>
<span class="line">  std::string mParsedValue;</span>
<span class="line">  unsigned __int64 mCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headertimercomponent" tabindex="-1"><a class="header-anchor" href="#headertimercomponent"><span><code>HeaderTimerComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HeaderTimerComponent : StoreUIComponent</span>
<span class="line">{</span>
<span class="line">  std::string mTimerExpiredText;</span>
<span class="line">  std::string mTimerExpireOverride;</span>
<span class="line">  __int64 mTimerExpireTime;</span>
<span class="line">  bool mHideTimerOnExpiration;</span>
<span class="line">  TimerType mTimerType;</span>
<span class="line">  std::map&lt;int,std::string&gt; mTimerWarnings;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headertimercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#headertimercomponent-vtbl"><span><code>HeaderTimerComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HeaderTimerComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);</span>
<span class="line">  bool (__fastcall *canRemove)(StoreUIComponent *this);</span>
<span class="line">  int (__fastcall *getReadyCount)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headerbannercomponent" tabindex="-1"><a class="header-anchor" href="#headerbannercomponent"><span><code>HeaderBannerComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HeaderBannerComponent : StoreUIComponent</span>
<span class="line">{</span>
<span class="line">  BannerType mBannerType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headerbannercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#headerbannercomponent-vtbl"><span><code>HeaderBannerComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HeaderBannerComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);</span>
<span class="line">  bool (__fastcall *canRemove)(StoreUIComponent *this);</span>
<span class="line">  int (__fastcall *getReadyCount)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headercomponent" tabindex="-1"><a class="header-anchor" href="#headercomponent"><span><code>HeaderComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HeaderComponent : StoreUIComponent</span>
<span class="line">{</span>
<span class="line">  std::string mHeader;</span>
<span class="line">  std::string mNextSaleBeginsName;</span>
<span class="line">  std::unique_ptr&lt;HeaderTimerComponent&gt; mTimerComponent;</span>
<span class="line">  std::unique_ptr&lt;HeaderBannerComponent&gt; mBannerComponent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#headercomponent-vtbl"><span><code>HeaderComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HeaderComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);</span>
<span class="line">  bool (__fastcall *canRemove)(StoreUIComponent *this);</span>
<span class="line">  int (__fastcall *getReadyCount)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ilibrary" tabindex="-1"><a class="header-anchor" href="#hbui-ilibrary"><span><code>hbui::ILibrary</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ILibrary : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  hbui::ILibrary_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iviewrenderer" tabindex="-1"><a class="header-anchor" href="#hbui-iviewrenderer"><span><code>hbui::IViewRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IViewRenderer</span>
<span class="line">{</span>
<span class="line">  hbui::IViewRenderer_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iviewrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-iviewrenderer-vtbl"><span><code>hbui::IViewRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IViewRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IViewRenderer)(hbui::IViewRenderer *this);</span>
<span class="line">  void (__fastcall *render)(hbui::IViewRenderer *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *pushFrame)(hbui::IViewRenderer *this, unsigned int);</span>
<span class="line">  void (__fastcall *freeRenderingResources)(hbui::IViewRenderer *this);</span>
<span class="line">  void (__fastcall *recreateRenderingResources)(hbui::IViewRenderer *this);</span>
<span class="line">  void (__fastcall *resize)(hbui::IViewRenderer *this, unsigned int, unsigned int);</span>
<span class="line">  void (__fastcall *resolve)(hbui::IViewRenderer *this, ScreenContext *, std::optional&lt;RectangleArea&gt;, std::optional&lt;RectangleArea&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iview" tabindex="-1"><a class="header-anchor" href="#hbui-iview"><span><code>hbui::IView</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IView</span>
<span class="line">{</span>
<span class="line">  hbui::IView_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iviewlistener" tabindex="-1"><a class="header-anchor" href="#hbui-iviewlistener"><span><code>hbui::IViewListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IViewListener</span>
<span class="line">{</span>
<span class="line">  hbui::IViewListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iviewlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-iviewlistener-vtbl"><span><code>hbui::IViewListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IViewListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IViewListener)(hbui::IViewListener *this);</span>
<span class="line">  void (__fastcall *onLoadSucceeded)(hbui::IViewListener *this, const char *);</span>
<span class="line">  void (__fastcall *onLoadFailed)(hbui::IViewListener *this, const char *, const char *);</span>
<span class="line">  bool (__fastcall *isActive)(hbui::IViewListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-cachesnapshot" tabindex="-1"><a class="header-anchor" href="#hbui-cachesnapshot"><span><code>hbui::CacheSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::CacheSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned int filledBytes;</span>
<span class="line">  unsigned int capacityBytes;</span>
<span class="line">  unsigned int filledCount;</span>
<span class="line">  unsigned int capacityCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-viewcachesnapshot" tabindex="-1"><a class="header-anchor" href="#hbui-viewcachesnapshot"><span><code>hbui::ViewCacheSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::ViewCacheSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned int viewId;</span>
<span class="line">  hbui::CacheSnapshot shadows;</span>
<span class="line">  hbui::CacheSnapshot paths;</span>
<span class="line">  hbui::CacheSnapshot textures;</span>
<span class="line">  hbui::CacheSnapshot scratchLayerTextures;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-systemcachesnapshot" tabindex="-1"><a class="header-anchor" href="#hbui-systemcachesnapshot"><span><code>hbui::SystemCacheSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::SystemCacheSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned int aliveImagesCount;</span>
<span class="line">  unsigned int aliveTotalBytesUsed;</span>
<span class="line">  unsigned int orphanedImagesCount;</span>
<span class="line">  unsigned int orphanedBytesUsed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-buffersnapshot" tabindex="-1"><a class="header-anchor" href="#hbui-buffersnapshot"><span><code>hbui::BufferSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::BufferSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned int id;</span>
<span class="line">  unsigned int usedSize;</span>
<span class="line">  unsigned int size;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-debugdata" tabindex="-1"><a class="header-anchor" href="#hbui-debugdata"><span><code>hbui::DebugData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::DebugData</span>
<span class="line">{</span>
<span class="line">  const struct hbui::MemorySnapshot *mMemorySnapshot;</span>
<span class="line">  std::vector&lt;hbui::ViewCacheSnapshot&gt; mViewCacheSnapshots;</span>
<span class="line">  hbui::SystemCacheSnapshot mSystemCacheSnapshot;</span>
<span class="line">  std::vector&lt;hbui::BufferSnapshot&gt; mVertexBufferSnapshots;</span>
<span class="line">  std::vector&lt;hbui::BufferSnapshot&gt; mIndexBufferSnapshots;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iview-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-iview-vtbl"><span><code>hbui::IView_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IView_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IView)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *setViewListener)(hbui::IView *this, hbui::IViewListener *);</span>
<span class="line">  void (__fastcall *resetViewListener)(hbui::IView *this);</span>
<span class="line">  unsigned int (__fastcall *getId)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *update)(hbui::IView *this, long double);</span>
<span class="line">  unsigned int (__fastcall *getWidth)(hbui::IView *this);</span>
<span class="line">  unsigned int (__fastcall *getHeight)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *resize)(hbui::IView *this, unsigned int, unsigned int);</span>
<span class="line">  void (__fastcall *reload)(hbui::IView *this);</span>
<span class="line">  bool (__fastcall *isActive)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *deactivateTextInputAndFacets)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *updateInput)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *handleInput)(hbui::IView *this, const MouseAction *);</span>
<span class="line">  void (__fastcall *setTextboxText)(hbui::IView *this, const std::string *);</span>
<span class="line">  void (__fastcall *updateFacets)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *triggerEvent)(hbui::IView *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *setDebugFeature)(hbui::IView *this, UIDebugCommandFeature, bool);</span>
<span class="line">  void (__fastcall *fillDebugData)(hbui::IView *this, hbui::DebugData *);</span>
<span class="line">  void (__fastcall *handleMenuCancelButton)(hbui::IView *this);</span>
<span class="line">  void (__fastcall *keyboardClosed)(hbui::IView *this);</span>
<span class="line">  std::optional&lt;RectangleArea&gt; *(__fastcall *getTextInputControlArea)(hbui::IView *this, std::optional&lt;RectangleArea&gt; *result);</span>
<span class="line">  std::optional&lt;RectangleArea&gt; *(__fastcall *getTextInputCaretOffsetArea)(hbui::IView *this, std::optional&lt;RectangleArea&gt; *result);</span>
<span class="line">  void (__fastcall *routeChanged)(hbui::IView *this, const std::optional&lt;hbui::RouterLocation&gt; *, const hbui::RouterLocation *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifacetregistry" tabindex="-1"><a class="header-anchor" href="#hbui-ifacetregistry"><span><code>hbui::IFacetRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IFacetRegistry</span>
<span class="line">{</span>
<span class="line">  hbui::IFacetRegistry_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifacet" tabindex="-1"><a class="header-anchor" href="#hbui-ifacet"><span><code>hbui::IFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IFacet</span>
<span class="line">{</span>
<span class="line">  hbui::IFacet_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbinder" tabindex="-1"><a class="header-anchor" href="#hbui-facetbinder"><span><code>hbui::FacetBinder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBinder</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-ifacet-vtbl"><span><code>hbui::IFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifacetregistry-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-ifacetregistry-vtbl"><span><code>hbui::IFacetRegistry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IFacetRegistry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacetRegistry)(hbui::IFacetRegistry *this);</span>
<span class="line">  void (__fastcall *registerFacet)(hbui::IFacetRegistry *this, const std::string *, const std::function&lt;std::unique_ptr&lt;hbui::IFacet&gt; __cdecl(void)&gt; *);</span>
<span class="line">  std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *(__fastcall *activateFacet)(hbui::IFacetRegistry *this, std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *result, hbui::FacetBinder *, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *(__fastcall *deactivateFacet)(hbui::IFacetRegistry *this, std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *result, hbui::FacetBinder *, const std::string *);</span>
<span class="line">  void (__fastcall *deactivateAllFacets)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *bind)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *update)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ilibrary-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-ilibrary-vtbl"><span><code>hbui::ILibrary_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ILibrary_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ILibrary)(hbui::ILibrary *this);</span>
<span class="line">  void (__fastcall *update)(hbui::ILibrary *this, long double);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(hbui::ILibrary *this, mce::RenderContext *);</span>
<span class="line">  void (__fastcall *onAppResumed)(hbui::ILibrary *this, const Bedrock::NonOwnerPointer&lt;mce::ShaderGroup&gt;, const ResourcePackManager *);</span>
<span class="line">  void (__fastcall *onActiveResourcePacksChanged)(hbui::ILibrary *this);</span>
<span class="line">  std::tuple&lt;std::unique_ptr&lt;hbui::IView&gt;,std::unique_ptr&lt;hbui::IViewRenderer&gt; &gt; *(__fastcall *createViewAndRenderer)(hbui::ILibrary *this, std::tuple&lt;std::unique_ptr&lt;hbui::IView&gt;,std::unique_ptr&lt;hbui::IViewRenderer&gt; &gt; *result, const std::string *, unsigned int, unsigned int, std::unique_ptr&lt;hbui::IFacetRegistry&gt;, IClientInstance *, KeyboardManager *, bool);</span>
<span class="line">  void (__fastcall *reloadAllViews)(hbui::ILibrary *this);</span>
<span class="line">  void (__fastcall *setCompleteUninitialization)(hbui::ILibrary *this);</span>
<span class="line">  void (__fastcall *fillDebugData)(hbui::ILibrary *this, hbui::DebugData *);</span>
<span class="line">  void (__fastcall *initializeRendering)(hbui::ILibrary *this, const GuiData *, Bedrock::NonOwnerPointer&lt;mce::ShaderGroup&gt;, mce::RenderContext *);</span>
<span class="line">  void (__fastcall *initializeBitmapFonts)(hbui::ILibrary *this, const ResourcePackManager *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-sceneprovider" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider"><span><code>hbui::SceneProvider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::SceneProvider</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  hbui::ILibrary *mUILibrary;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicplatform" tabindex="-1"><a class="header-anchor" href="#holographicplatform"><span><code>HolographicPlatform</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(2)) HolographicPlatform</span>
<span class="line">{</span>
<span class="line">  HolographicPlatform_vtbl *__vftable /*VFT*/;</span>
<span class="line">  HolographicPlatform::HoloFrameOfReferenceSetupData mFrameData;</span>
<span class="line">  Vec3 mCurrentHMDPosSpring;</span>
<span class="line">  Vec3 mHoloRealityModeGazeDirMCSpace;</span>
<span class="line">  std::recursive_mutex mMutex;</span>
<span class="line">  std::unordered_map&lt;unsigned int,Matrix&gt; mTransformMap;</span>
<span class="line">  std::vector&lt;HolographicPlatform::HoloCursorWorldParams&gt; mWorldCursorParamsVec;</span>
<span class="line">  bool mBasicTransformsSet;</span>
<span class="line">  bool mStereoEnabled;</span>
<span class="line">  bool mVRLayeringActive;</span>
<span class="line">  bool mAllowMirrorPresent;</span>
<span class="line">  Matrix mHeadlockedUITransform;</span>
<span class="line">  float mDynamicMonoscopicEyeConvergenceDistance;</span>
<span class="line">  float mStereoPerformanceBlockPercentage;</span>
<span class="line">  float mUILayerAlpha;</span>
<span class="line">  int mRecenterHoloUITimeout;</span>
<span class="line">  HolographicPlatform::AimFromSpace mAimFromSpace;</span>
<span class="line">  bool mLeftHandAvailable;</span>
<span class="line">  bool mRightHandAvailable;</span>
<span class="line">  std::string mLivingRoomHintText;</span>
<span class="line">  unsigned int mHolographicFeatures;</span>
<span class="line">  Vec3 mHoloviewerGazePointMCSpace;</span>
<span class="line">  float mRealityFrameScale;</span>
<span class="line">  bool mStuckCursorTriggered;</span>
<span class="line">  float mHoloviewerRotY;</span>
<span class="line">  float mHoloscreenSize;</span>
<span class="line">  float mHoloviewerSize;</span>
<span class="line">  float mLastGazeXCoordNorm;</span>
<span class="line">  float mLastGazeYCoordNorm;</span>
<span class="line">  float mLastGazeXMouseCoordNorm;</span>
<span class="line">  float mLastGazeYMouseCoordNorm;</span>
<span class="line">  bool mGazeOnScreen;</span>
<span class="line">  bool mGestureStatePrimaryHandIsHeld;</span>
<span class="line">  bool mRecenterGazeActivationOriginPoint;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicplatform-luid" tabindex="-1"><a class="header-anchor" href="#holographicplatform-luid"><span><code>HolographicPlatform::LUID</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HolographicPlatform::LUID</span>
<span class="line">{</span>
<span class="line">  unsigned int LowPart;</span>
<span class="line">  int HighPart;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicplatform-vtbl" tabindex="-1"><a class="header-anchor" href="#holographicplatform-vtbl"><span><code>HolographicPlatform_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HolographicPlatform_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HolographicPlatform)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *init)(HolographicPlatform *this, std::shared_ptr&lt;Options&gt;);</span>
<span class="line">  void (__fastcall *preInitUpdate)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *update)(HolographicPlatform *this, IClientInstance *);</span>
<span class="line">  void (__fastcall *postRenderUpdate)(HolographicPlatform *this, IClientInstance *);</span>
<span class="line">  void (__fastcall *getSoundSystemOutputDevice)(HolographicPlatform *this, SoundSystemGUID *);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onHMDFocusGained)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onHMDFocusLost)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *onInitialResourcesLoaded)(HolographicPlatform *this);</span>
<span class="line">  std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;void&gt; &gt; *(__fastcall *waitForOutputMode)(HolographicPlatform *this, std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;void&gt; &gt; *result, VROutputMode);</span>
<span class="line">  bool (__fastcall *holographicMode)(HolographicPlatform *this);</span>
<span class="line">  int (__fastcall *getWorkerFramerate)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *allowVRFrameExperience)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *allowSplitScreen)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *supportsLoadingScreen)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *pauseIsDesired)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *allowThirdPersonView)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *useSinglePassStereo)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *drawCubemapInMono)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isVRMode)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isARMode)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isRenderingIn2D)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isSessionVisible)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *needsPostRenderUpdate)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *deviceHasPositionalTracking)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *deviceNeedsToBeRemovedForXblSignin)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *deviceNeedsToBeRemovedForSkinPicker)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *deviceNeedsToBeRemovedForFilePicker)(HolographicPlatform *this);</span>
<span class="line">  VRHUDPosition (__fastcall *getDefaultVRHUDPosition)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *setUndockHandler)(HolographicPlatform *this, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  int (__fastcall *numRequiredControllers)(HolographicPlatform *this);</span>
<span class="line">  std::string *(__fastcall *getPlatformRecalibrationMessage)(HolographicPlatform *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getPlatformRecalibrationMessageTTS)(HolographicPlatform *this, std::string *result, const GamePadRemappingLayout *);</span>
<span class="line">  std::string *(__fastcall *getPlatformAlignmentPrompt)(HolographicPlatform *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getPlatformAlignmentPromptTTS)(HolographicPlatform *this, std::string *result, const GamePadRemappingLayout *);</span>
<span class="line">  bool (__fastcall *forceControllerUsage)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *separateEyePasses)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *createRenderGraph)(HolographicPlatform *this, mce::RenderGraph *, IClientInstance *);</span>
<span class="line">  bool (__fastcall *isGazeDevicePresent)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isGestureDevicePresent)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *useAlternateTouchInput)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *resetBaseFrameOfReference)(HolographicPlatform *this, float, bool);</span>
<span class="line">  HolographicPlatform::LUID (__fastcall *getHoloDeviceAdapterLUID)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *captureRenderDevice)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isLocated)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isPrimaryHandHeld)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isSecondaryHandHeld)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *setScreenLocation)(HolographicPlatform *this, const Matrix *);</span>
<span class="line">  void (__fastcall *setScreenLocation)(HolographicPlatform *this, const Vec3 *, const Vec3 *, float);</span>
<span class="line">  void (__fastcall *setHeadlockedUITransform)(HolographicPlatform *this, const Matrix *, const float);</span>
<span class="line">  void (__fastcall *setScreenLocationOffset)(HolographicPlatform *this, const Vec3 *);</span>
<span class="line">  void (__fastcall *resetScreenLocationOffset)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *setHoloviewerLocation)(HolographicPlatform *this, const Matrix *);</span>
<span class="line">  void (__fastcall *setHoloviewerLocation)(HolographicPlatform *this, const Vec3 *, const Vec3 *, float, bool);</span>
<span class="line">  void (__fastcall *setRealityAnchorLocation)(HolographicPlatform *this, const Matrix *);</span>
<span class="line">  float (__fastcall *getViewableScreenSize)(HolographicPlatform *this, float);</span>
<span class="line">  void (__fastcall *defaultLSRPlane)(HolographicPlatform *this, HolographicPlatform::MCLocation);</span>
<span class="line">  void (__fastcall *updateLSRPlane)(HolographicPlatform *this, HolographicPlatform::MCLocation, const Vec3 *);</span>
<span class="line">  void (__fastcall *getLastLSRPlanePosAndNormPS)(HolographicPlatform *this, Vec3 *, Vec3 *);</span>
<span class="line">  float (__fastcall *getSRCastDistance)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *startEnvironmentScanning)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *stopEnvironmentScanning)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *resetEnvironmentScan)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *renderSRData)(HolographicPlatform *this, float, float);</span>
<span class="line">  bool (__fastcall *hideCursorOnFocusLost)(HolographicPlatform *this, IClientInstance *);</span>
<span class="line">  bool (__fastcall *getGazeCastResultPS)(HolographicPlatform *this, Vec3 *, Vec3 *, Vec3 *);</span>
<span class="line">  bool (__fastcall *getStereoEnabled)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *setStereoEnabled)(HolographicPlatform *this, bool);</span>
<span class="line">  void (__fastcall *delayForNextFingerPress)(HolographicPlatform *this, int);</span>
<span class="line">  float (__fastcall *getPreferredUIAspectRatio)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getPreferredLivingRoomLevelAspectRation)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getVRFOV)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getDefaultIngameUIDistance)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *shouldCompressHUDWidth)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *getUIScreenWidthHeightScale)(HolographicPlatform *this, unsigned int *, unsigned int *, float *);</span>
<span class="line">  void (__fastcall *getLivingRoomLevelTextureWidthHeight)(HolographicPlatform *this, unsigned int *, unsigned int *, float *);</span>
<span class="line">  void (__fastcall *getItemInHandOffset)(HolographicPlatform *this, Vec3 *);</span>
<span class="line">  const std::string *(__fastcall *getLivingRoomHintTextTTS)(HolographicPlatform *this, const std::string *result, const GamePadRemappingLayout *);</span>
<span class="line">  UIRenderMode (__fastcall *getUIRenderMode)(HolographicPlatform *this);</span>
<span class="line">  UIRenderMode (__fastcall *getVRHUDRenderMode)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getHudAlphaBlendFactor)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *getVRLowFrequencyHUD)(HolographicPlatform *this);</span>
<span class="line">  const char *(__fastcall *getHandMaterial)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *wantsToStealMouse)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *drawHolographicBordersForUI)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getDefaultHalfHoloScreenWidth)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getDefaultHalfHoloHUDWidth)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getAmbientBoost)(HolographicPlatform *this, float);</span>
<span class="line">  bool (__fastcall *clampToMinimumLight)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *setUIClipRect)(HolographicPlatform *this, const RectangleArea *);</span>
<span class="line">  float (__fastcall *getUIClipGrowPixels)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *isFeatureEnabled)(HolographicPlatform *this, unsigned int);</span>
<span class="line">  std::optional&lt;mce::framebuilder::gamecomponents::VrConfiguration&gt; *(__fastcall *getVrConfiguration)(HolographicPlatform *this, std::optional&lt;mce::framebuilder::gamecomponents::VrConfiguration&gt; *result);</span>
<span class="line">  void (__fastcall *frameUpdate)(HolographicPlatform *this, FrameUpdateContext *);</span>
<span class="line">  unsigned __int16 (__fastcall *getLivingRoomViewSetId)(HolographicPlatform *this);</span>
<span class="line">  const mce::framebuilder::LivingRoomDescription *(__fastcall *getLivingRoomDescription)(HolographicPlatform *this);</span>
<span class="line">  float (__fastcall *getMinimumLivingRoomFrameDistance)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *neverStealMouse)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *present)(HolographicPlatform *this, ScreenContext *);</span>
<span class="line">  bool (__fastcall *isWaitingForPresent)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *getAllowMirrorPresent)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *permitRendering)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *permitAudio)(HolographicPlatform *this);</span>
<span class="line">  void (__fastcall *_prepPlatformSpecificTransforms)(HolographicPlatform *this);</span>
<span class="line">  bool (__fastcall *_shouldRenderIn2D)(HolographicPlatform *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicplatform-holocursorworldparams" tabindex="-1"><a class="header-anchor" href="#holographicplatform-holocursorworldparams"><span><code>HolographicPlatform::HoloCursorWorldParams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(2)) HolographicPlatform::HoloCursorWorldParams</span>
<span class="line">{</span>
<span class="line">  HitResult hit;</span>
<span class="line">  float pickRange;</span>
<span class="line">  Vec3 pickDirectionMC;</span>
<span class="line">  Vec3 lastGazePntMC;</span>
<span class="line">  Vec3 lastGazeDirMC;</span>
<span class="line">  Vec3 linearizedJumpAdj;</span>
<span class="line">  float brightness;</span>
<span class="line">  float overallScale;</span>
<span class="line">  bool renderTextureMode;</span>
<span class="line">  bool renderAsACube;</span>
<span class="line">  bool forceFullyVisibleCrosshair;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoscenerenderer" tabindex="-1"><a class="header-anchor" href="#holoscenerenderer"><span><code>HolosceneRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HolosceneRenderer</span>
<span class="line">{</span>
<span class="line">  mce::Mesh mGazeIconMesh;</span>
<span class="line">  mce::Mesh mHoloScreenFrame;</span>
<span class="line">  mce::Mesh mHoloScreenLivingRoom;</span>
<span class="line">  mce::Mesh mHoloScreenLivingRoomTable;</span>
<span class="line">  mce::Mesh mUICursorMesh;</span>
<span class="line">  mce::Mesh mHandFrameMesh;</span>
<span class="line">  mce::Mesh mHandPointerMesh;</span>
<span class="line">  mce::Mesh mCoordFrameMesh;</span>
<span class="line">  mce::Mesh mGameCursorMesh;</span>
<span class="line">  mce::Mesh mGameCursorShadowMesh;</span>
<span class="line">  mce::Mesh mGameCursorCubeMesh;</span>
<span class="line">  mce::Mesh mHandMeshLeft;</span>
<span class="line">  mce::Mesh mHandMeshRight;</span>
<span class="line">  mce::TexturePtr mWhiteIconTexture;</span>
<span class="line">  mce::TexturePtr mHolographicWallTexture;</span>
<span class="line">  mce::TexturePtr mCrosshairTexture;</span>
<span class="line">  mce::TexturePtr mLivingRoomTexture;</span>
<span class="line">  mce::TexturePtr mHandTexture;</span>
<span class="line">  mce::MaterialPtr mHoloCursorPseudoShadowMaterial;</span>
<span class="line">  mce::MaterialPtr mHoloCursorMainPartMaterial;</span>
<span class="line">  mce::MaterialPtr mLivingRoomMaterial;</span>
<span class="line">  mce::MaterialPtr mTextMaterial;</span>
<span class="line">  mce::MaterialPtr mCoordFrameMaterial;</span>
<span class="line">  mce::MaterialPtr mHandPointerMaterial;</span>
<span class="line">  mce::MaterialPtr mHandMaterial;</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  mce::Color mVanishingColor;</span>
<span class="line">  std::string mHintTextLocId;</span>
<span class="line">  int mHintCycles;</span>
<span class="line">  float mUIDist;</span>
<span class="line">  float mHalfHoloScreenWidth;</span>
<span class="line">  float mHalfHoloHUDWidth;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-resourceregistry-pathcount" tabindex="-1"><a class="header-anchor" href="#hbui-resourceregistry-pathcount"><span><code>hbui::ResourceRegistry::PathCount</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ResourceRegistry::PathCount</span>
<span class="line">{</span>
<span class="line">  unsigned int mRefcount;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-resourceregistry" tabindex="-1"><a class="header-anchor" href="#hbui-resourceregistry"><span><code>hbui::ResourceRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ResourceRegistry</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,hbui::ResourceRegistry::PathCount&gt; mPaths;</span>
<span class="line">  unsigned __int64 mNextAutomaticallyIncrementedId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerhistory" tabindex="-1"><a class="header-anchor" href="#hbui-routerhistory"><span><code>hbui::RouterHistory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterHistory</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;hbui::RouterLocation&gt; mEntries;</span>
<span class="line">  int mCurrentIndex;</span>
<span class="line">  hbui::RouterAction mLastAction;</span>
<span class="line">  std::function&lt;void __cdecl(std::optional&lt;hbui::RouterLocation&gt; const &amp;,hbui::RouterLocation const &amp;)&gt; mOnChangeCallback;</span>
<span class="line">  std::string mGetActionHelper;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-router" tabindex="-1"><a class="header-anchor" href="#hbui-router"><span><code>hbui::Router</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Router</span>
<span class="line">{</span>
<span class="line">  hbui::RouterHistory mRouterHistory;</span>
<span class="line">  hbui::RouterHistoryAdapter mRouterHistoryAdapter;</span>
<span class="line">  std::unique_ptr&lt;hbui::IRouteMatcher&gt; mRouteMatcher;</span>
<span class="line">  std::queue&lt;hbui::Router::QueuedRoute&gt; mQueuedRoutes;</span>
<span class="line">  ISceneStack *mSceneStack;</span>
<span class="line">  Core::Subject&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; mSubject;</span>
<span class="line">  std::unique_ptr&lt;hbui::IRoutePrerequisiteHandler&gt; mPrerequisiteHandler;</span>
<span class="line">  IScreenChangedEventing *mScreenChangedEventing;</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  Social::IGameConnectionInfoProvider *mGameConnectionInfoProvider;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerhistoryadapter" tabindex="-1"><a class="header-anchor" href="#hbui-routerhistoryadapter"><span><code>hbui::RouterHistoryAdapter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterHistoryAdapter</span>
<span class="line">{</span>
<span class="line">  hbui::Router *mRouter;</span>
<span class="line">  hbui::RouterHistory *mRouterHistory;</span>
<span class="line">  hbui::RouterLocation mFallbackLocation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iroutematcher" tabindex="-1"><a class="header-anchor" href="#hbui-iroutematcher"><span><code>hbui::IRouteMatcher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IRouteMatcher</span>
<span class="line">{</span>
<span class="line">  hbui::IRouteMatcher_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-iroutematcher-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-iroutematcher-vtbl"><span><code>hbui::IRouteMatcher_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IRouteMatcher_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IRouteMatcher)(hbui::IRouteMatcher *this);</span>
<span class="line">  void (__fastcall *add)(hbui::IRouteMatcher *this, const std::string *, const std::basic_regex&lt;char,std::regex_traits&lt;char&gt; &gt; *, hbui::RouteType, hbui::RouteMode, std::function&lt;void __cdecl(std::string const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *addDefault)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *resolve)(hbui::IRouteMatcher *this, const std::string *);</span>
<span class="line">  bool (__fastcall *isSupported)(hbui::IRouteMatcher *this, const std::string *);</span>
<span class="line">  bool (__fastcall *areCompatible)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *isRouteInDirectory)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getDefaultRouteForFile)(hbui::IRouteMatcher *this, std::optional&lt;std::string &gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getDefaultRouteForDirectory)(hbui::IRouteMatcher *this, std::optional&lt;std::string &gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::RouteType&gt; *(__fastcall *getRouteType)(hbui::IRouteMatcher *this, std::optional&lt;enum hbui::RouteType&gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::RouteMode&gt; *(__fastcall *getRouteMode)(hbui::IRouteMatcher *this, std::optional&lt;enum hbui::RouteMode&gt; *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-router-queuedroute" tabindex="-1"><a class="header-anchor" href="#hbui-router-queuedroute"><span><code>hbui::Router::QueuedRoute</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::Router::QueuedRoute</span>
<span class="line">{</span>
<span class="line">  std::string route;</span>
<span class="line">  std::string state;</span>
<span class="line">  hbui::Router::QueuedRouteAction action;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerobserver" tabindex="-1"><a class="header-anchor" href="#hbui-routerobserver"><span><code>hbui::RouterObserver</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterObserver : Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerobserver-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-routerobserver-vtbl"><span><code>hbui::RouterObserver_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::RouterObserver_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *onRouteChanged)(hbui::RouterObserver *this, const std::optional&lt;hbui::RouterLocation&gt; *, const hbui::RouterLocation *, hbui::RouterAction);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-irouteprerequisitehandler" tabindex="-1"><a class="header-anchor" href="#hbui-irouteprerequisitehandler"><span><code>hbui::IRoutePrerequisiteHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IRoutePrerequisiteHandler</span>
<span class="line">{</span>
<span class="line">  hbui::IRoutePrerequisiteHandler_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-irouteprerequisitehandler-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-irouteprerequisitehandler-vtbl"><span><code>hbui::IRoutePrerequisiteHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IRoutePrerequisiteHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IRoutePrerequisiteHandler)(hbui::IRoutePrerequisiteHandler *this);</span>
<span class="line">  hbui::RoutePrerequisiteState (__fastcall *handleRoutePrerequisites)(hbui::IRoutePrerequisiteHandler *this, const std::string *, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifeature" tabindex="-1"><a class="header-anchor" href="#hbui-ifeature"><span><code>hbui::IFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IFeature</span>
<span class="line">{</span>
<span class="line">  hbui::IFeature_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-ifeature-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-ifeature-vtbl"><span><code>hbui::IFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(hbui::IFeature *this);</span>
<span class="line">  bool (__fastcall *isEnabled)(hbui::IFeature *this);</span>
<span class="line">  void (__fastcall *registerIsEnabledChangedCallback)(hbui::IFeature *this, Bedrock::PubSub::ScopedSubscription *, std::function&lt;void __cdecl(bool)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-feature" tabindex="-1"><a class="header-anchor" href="#hbui-feature"><span><code>hbui::Feature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Feature : hbui::IFeature</span>
<span class="line">{</span>
<span class="line">  Option *mMainToggle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-feature-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-feature-vtbl"><span><code>hbui::Feature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::Feature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(hbui::IFeature *this);</span>
<span class="line">  bool (__fastcall *isEnabled)(hbui::IFeature *this);</span>
<span class="line">  void (__fastcall *registerIsEnabledChangedCallback)(hbui::IFeature *this, Bedrock::PubSub::ScopedSubscription *, std::function&lt;void __cdecl(bool)&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration"><span><code>hbui::RouterConfiguration</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration</span>
<span class="line">{</span>
<span class="line">  hbui::RouterConfiguration_vtbl *__vftable /*VFT*/;</span>
<span class="line">  const ResourcePackManager *mPackManager;</span>
<span class="line">  IFileAccess *mFileAccess;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mDataPath;</span>
<span class="line">  std::vector&lt;hbui::Route&gt; mDefaultRoutes;</span>
<span class="line">  std::vector&lt;hbui::Route&gt; mInGameRoutes;</span>
<span class="line">  std::vector&lt;hbui::Route&gt; mOutOfGameRoutes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-vtbl"><span><code>hbui::RouterConfiguration_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::RouterConfiguration_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RouterConfiguration)(hbui::RouterConfiguration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-route" tabindex="-1"><a class="header-anchor" href="#hbui-route"><span><code>hbui::Route</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::Route</span>
<span class="line">{</span>
<span class="line">  std::string fileName;</span>
<span class="line">  std::string route;</span>
<span class="line">  _BYTE mode[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui" tabindex="-1"><a class="header-anchor" href="#hummingbirdui"><span><code>HummingbirdUI</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HummingbirdUI : IHummingbirdUI</span>
<span class="line">{</span>
<span class="line">  hbui::DebugData mDebugData;</span>
<span class="line">  hbui::Feature mFeatureToggle;</span>
<span class="line">  hbui::Feature mUIRefreshToggle;</span>
<span class="line">  hbui::Feature mUITextToSpeechToggle;</span>
<span class="line">  ARVRPlatform mArVrPlatform;</span>
<span class="line">  std::weak_ptr&lt;IFlightingToggles&gt; mFlightingToggles;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mResetToMainMenu;</span>
<span class="line">  Core::IFileSystem *mFileSystem;</span>
<span class="line">  IFileAccess *mAppPackageFileAccess;</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mPackagePath;</span>
<span class="line">  IFileAccess *mRawFileAccess;</span>
<span class="line">  const ResourcePackManager *mPackManager;</span>
<span class="line">  hbui::RouterConfiguration mRouterConfigurationLoader;</span>
<span class="line">  std::unique_ptr&lt;hbui::ILibrary&gt; mLibrary;</span>
<span class="line">  hbui::ResourceRegistry mResourceRegistry;</span>
<span class="line">  bool mAppWillRestart;</span>
<span class="line">  std::vector&lt;HummingbirdUI::CallbackEntry&gt; mRouteConfigurationChangeCallbacks;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mUIRefreshSubscription;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mUITextToSpeechSubscription;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mFlightingTogglesSubscription;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui-vtbl" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-vtbl"><span><code>HummingbirdUI_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HummingbirdUI_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IHummingbirdUI)(IHummingbirdUI *this);</span>
<span class="line">  bool (__fastcall *isUIRefreshEnabled)(IHummingbirdUI *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencapabilities" tabindex="-1"><a class="header-anchor" href="#hudscreencapabilities"><span><code>HudScreenCapabilities</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HudScreenCapabilities : TypedScreenCapabilities&lt;HudScreenCapabilities&gt;</span>
<span class="line">{</span>
<span class="line">  bool mDisplayChatInputMsg;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencapabilities-vtbl" tabindex="-1"><a class="header-anchor" href="#hudscreencapabilities-vtbl"><span><code>HudScreenCapabilities_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudScreenCapabilities_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenCapabilities)(IScreenCapabilities *this);</span>
<span class="line">  bool (__fastcall *isOfType)(IScreenCapabilities *this, typeid_t&lt;IScreenCapabilities&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitdetectsystem" tabindex="-1"><a class="header-anchor" href="#hitdetectsystem"><span><code>HitDetectSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitDetectSystem</span>
<span class="line">{</span>
<span class="line">  HitDetectSystem_vtbl *__vftable /*VFT*/;</span>
<span class="line">  float mPickRange;</span>
<span class="line">  float mInteractRange;</span>
<span class="line">  bool mEvaluated;</span>
<span class="line">  __declspec(align(8)) HitResult mViewHitResult;</span>
<span class="line">  HitResult mViewLastHitResult;</span>
<span class="line">  HitResult mViewLiquidHitResult;</span>
<span class="line">  HitResult mViewLastLiquidHitResult;</span>
<span class="line">  HitResult mPickHitResult;</span>
<span class="line">  HitResult mPickLastHitResult;</span>
<span class="line">  HitResult mPickLiquidHitResult;</span>
<span class="line">  HitResult mPickLastLiquidHitResult;</span>
<span class="line">  ClientHitDetectCoordinator *mEventCoordinator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitdetectsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hitdetectsystem-vtbl"><span><code>HitDetectSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HitDetectSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HitDetectSystem)(HitDetectSystem *this);</span>
<span class="line">  void (__fastcall *reset)(HitDetectSystem *this);</span>
<span class="line">  void (__fastcall *tick)(HitDetectSystem *this);</span>
<span class="line">  void (__fastcall *evaluate)(HitDetectSystem *this, IClientInstance *, float);</span>
<span class="line">  void (__fastcall *_evaluateType)(HitDetectSystem *this, IClientInstance *, float, Actor *, LocalPlayer *, bool, HitResult *, HitResult *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holohuddriftdynamics" tabindex="-1"><a class="header-anchor" href="#holohuddriftdynamics"><span><code>HoloHudDriftDynamics</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloHudDriftDynamics</span>
<span class="line">{</span>
<span class="line">  Matrix mMatrixPatch;</span>
<span class="line">  Vec3 mHudDirPoseSpace;</span>
<span class="line">  Vec3 mHudDirAVelPoseSpace;</span>
<span class="line">  Vec3 mLastHudTargetDir;</span>
<span class="line">  Vec3 mLastGazeToPoseDelta;</span>
<span class="line">  long double mLastHudDirUpdateTime;</span>
<span class="line">  bool mResetLastTargetDir;</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itelemetry" tabindex="-1"><a class="header-anchor" href="#hbui-itelemetry"><span><code>hbui::ITelemetry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ITelemetry</span>
<span class="line">{</span>
<span class="line">  hbui::ITelemetry_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itelemetry-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-itelemetry-vtbl"><span><code>hbui::ITelemetry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ITelemetry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITelemetry)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdScreenLoadFailed)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdRouteUnsupported)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdJsException)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventScreenLoaded)(hbui::ITelemetry *this, const std::string *, long double, long double, long double);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-telemetry" tabindex="-1"><a class="header-anchor" href="#hbui-telemetry"><span><code>hbui::Telemetry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Telemetry : hbui::ITelemetry</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  IMinecraftEventing *mEventing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-telemetry-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-telemetry-vtbl"><span><code>hbui::Telemetry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::Telemetry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITelemetry)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdScreenLoadFailed)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdRouteUnsupported)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventHummingbirdJsException)(hbui::ITelemetry *this);</span>
<span class="line">  void (__fastcall *fireEventScreenLoaded)(hbui::ITelemetry *this, const std::string *, long double, long double, long double);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hardcodedspawnarearegistry" tabindex="-1"><a class="header-anchor" href="#hardcodedspawnarearegistry"><span><code>HardcodedSpawnAreaRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HardcodedSpawnAreaRegistry</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;enum HardcodedSpawnAreaType,std::vector&lt;MobSpawnerData&gt;&gt; mMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hooknetworkpeer" tabindex="-1"><a class="header-anchor" href="#hooknetworkpeer"><span><code>HookNetworkPeer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HookNetworkPeer : NetworkPeer</span>
<span class="line">{</span>
<span class="line">  unsigned int mUserId;</span>
<span class="line">  NetworkHandler *mLobbyHandler;</span>
<span class="line">  std::unique_ptr&lt;MPMCQueue&lt;std::string &gt;&gt; mIncomingData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hooknetworkpeer-vtbl" tabindex="-1"><a class="header-anchor" href="#hooknetworkpeer-vtbl"><span><code>HookNetworkPeer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HookNetworkPeer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~NetworkPeer)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);</span>
<span class="line">  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);</span>
<span class="line">  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);</span>
<span class="line">  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);</span>
<span class="line">  void (__fastcall *update)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *flush)(NetworkPeer *this, std::function&lt;void __cdecl(void)&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#hudcontainermanagermodel"><span><code>HudContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudContainerManagerModel : ContainerManagerModel</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemStack&gt; mLastSlots;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermanagermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#hudcontainermanagermodel-vtbl"><span><code>HudContainerManagerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudContainerManagerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContainerManager)(IContainerManager *this);</span>
<span class="line">  ContainerID (__fastcall *getContainerId)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);</span>
<span class="line">  ContainerType (__fastcall *getContainerType)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getItemCopies)(IContainerManager *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);</span>
<span class="line">  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);</span>
<span class="line">  void (__fastcall *setData)(IContainerManager *this, int, int);</span>
<span class="line">  void (__fastcall *broadcastChanges)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *validateContainer)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerManagerModel *this, float);</span>
<span class="line">  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidedescription" tabindex="-1"><a class="header-anchor" href="#hidedescription"><span><code>HideDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HideDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidedescription-vtbl" tabindex="-1"><a class="header-anchor" href="#hidedescription-vtbl"><span><code>HideDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HideDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-animationfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-animationfacet"><span><code>hbui::FacetBase&lt;hbui::AnimationFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::AnimationFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-animationfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-animationfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::AnimationFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::AnimationFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-optionwrapper-bool" tabindex="-1"><a class="header-anchor" href="#hbui-optionwrapper-bool"><span><code>hbui::OptionWrapper&lt;bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::OptionWrapper&lt;bool&gt;</span>
<span class="line">{</span>
<span class="line">  Option *mOption;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mOptionSubscription;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-animationfacet" tabindex="-1"><a class="header-anchor" href="#hbui-animationfacet"><span><code>hbui::AnimationFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::AnimationFacet : hbui::FacetBase&lt;hbui::AnimationFacet&gt;</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  bool mScreenAnimations;</span>
<span class="line">  hbui::OptionWrapper&lt;bool&gt; mScreenAnimationsOption;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-animationfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-animationfacet-vtbl"><span><code>hbui::AnimationFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::AnimationFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-optionwrapper-bool-ctor-l5-lambda-0dd2ebf6df7ed0553bba2bc4c3b54465" tabindex="-1"><a class="header-anchor" href="#hbui-optionwrapper-bool-ctor-l5-lambda-0dd2ebf6df7ed0553bba2bc4c3b54465"><span><code>hbui::OptionWrapper&lt;bool&gt;::{ctor}::__l5::&lt;lambda_0dd2ebf6df7ed0553bba2bc4c3b54465&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::OptionWrapper&lt;bool&gt;::{ctor}::__l5::&lt;lambda_0dd2ebf6df7ed0553bba2bc4c3b54465&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::OptionWrapper&lt;bool&gt; *const __this;</span>
<span class="line">  bool *value;</span>
<span class="line">  bool *isDirty;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routeprerequisitehandlermc" tabindex="-1"><a class="header-anchor" href="#hbui-routeprerequisitehandlermc"><span><code>hbui::RoutePrerequisiteHandlerMC</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RoutePrerequisiteHandlerMC : hbui::IRoutePrerequisiteHandler</span>
<span class="line">{</span>
<span class="line">  IMinecraftGame *mMinecraftGame;</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routeprerequisitehandlermc-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-routeprerequisitehandlermc-vtbl"><span><code>hbui::RoutePrerequisiteHandlerMC_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::RoutePrerequisiteHandlerMC_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IRoutePrerequisiteHandler)(hbui::IRoutePrerequisiteHandler *this);</span>
<span class="line">  hbui::RoutePrerequisiteState (__fastcall *handleRoutePrerequisites)(hbui::IRoutePrerequisiteHandler *this, const std::string *, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homesection" tabindex="-1"><a class="header-anchor" href="#homesection"><span><code>HomeSection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HomeSection : PDPSection</span>
<span class="line">{</span>
<span class="line">  const StoreCatalogItem *mItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homesection-vtbl" tabindex="-1"><a class="header-anchor" href="#homesection-vtbl"><span><code>HomeSection_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HomeSection_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PDPSection)(PDPSection *this);</span>
<span class="line">  std::unique_ptr&lt;ScreenController&gt; *(__fastcall *makeScreenController)(PDPSection *this, std::unique_ptr&lt;ScreenController&gt; *result, std::shared_ptr&lt;MainMenuScreenModel&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hydrateresponsecallbackhandler" tabindex="-1"><a class="header-anchor" href="#hydrateresponsecallbackhandler"><span><code>HydrateResponseCallbackHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HydrateResponseCallbackHandler</span>
<span class="line">{</span>
<span class="line">  HydrateResponseCallbackHandler_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::string mAcceptLanguage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hydrateresponsecallbackhandler-vtbl" tabindex="-1"><a class="header-anchor" href="#hydrateresponsecallbackhandler-vtbl"><span><code>HydrateResponseCallbackHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HydrateResponseCallbackHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HydrateResponseCallbackHandler)(HydrateResponseCallbackHandler *this);</span>
<span class="line">  void (__fastcall *parseResponse)(HydrateResponseCallbackHandler *this, const struct web::json::value *, const CatalogBackend *);</span>
<span class="line">  void (__fastcall *handleResponseCallback)(HydrateResponseCallbackHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-routerfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-routerfacet"><span><code>hbui::FacetBase&lt;hbui::RouterFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::RouterFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-routerfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-routerfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::RouterFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::RouterFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerfacet" tabindex="-1"><a class="header-anchor" href="#hbui-routerfacet"><span><code>hbui::RouterFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterFacet : hbui::FacetBase&lt;hbui::RouterFacet&gt;, hbui::RouterObserver</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  hbui::Router *mRouter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-routerfacet-vtbl"><span><code>hbui::RouterFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::RouterFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routeprerequisitehandlermc-handleachievementprerequisites-l15-lambda-0cc03f2b69703d47831966b90071f608" tabindex="-1"><a class="header-anchor" href="#hbui-routeprerequisitehandlermc-handleachievementprerequisites-l15-lambda-0cc03f2b69703d47831966b90071f608"><span><code>hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l15::&lt;lambda_0cc03f2b69703d47831966b90071f608&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l15::&lt;lambda_0cc03f2b69703d47831966b90071f608&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::RoutePrerequisiteHandlerMC *const __this;</span>
<span class="line">  const std::string achievementDeepLinkId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routeprerequisitehandlermc-handleachievementprerequisites-l13-lambda-eeeb9f2af150426eb424d350f84fc216" tabindex="-1"><a class="header-anchor" href="#hbui-routeprerequisitehandlermc-handleachievementprerequisites-l13-lambda-eeeb9f2af150426eb424d350f84fc216"><span><code>hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l13::&lt;lambda_eeeb9f2af150426eb424d350f84fc216&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l13::&lt;lambda_eeeb9f2af150426eb424d350f84fc216&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermanagercontroller" tabindex="-1"><a class="header-anchor" href="#hudcontainermanagercontroller"><span><code>HudContainerManagerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudContainerManagerController : ContainerManagerController</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;HudContainerManagerModel&gt; mHudContainerManagerModel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermanagercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#hudcontainermanagercontroller-vtbl"><span><code>HudContainerManagerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudContainerManagerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);</span>
<span class="line">  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);</span>
<span class="line">  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);</span>
<span class="line">  void (__fastcall *closeContainers)(ContainerManagerController *this);</span>
<span class="line">  const std::vector&lt;ContainerSplitControl&gt; *(__fastcall *getSplitItems)(ContainerManagerController *this);</span>
<span class="line">  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);</span>
<span class="line">  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-tickmobreplay" tabindex="-1"><a class="header-anchor" href="#history-tickmobreplay"><span><code>History::TickMobReplay</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::TickMobReplay : IReplayableActorInput</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-tickmobreplay-vtbl" tabindex="-1"><a class="header-anchor" href="#history-tickmobreplay-vtbl"><span><code>History::TickMobReplay_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ History::TickMobReplay_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayableActorInput)(IReplayableActorInput *this);</span>
<span class="line">  void (__fastcall *advanceFrame)(IReplayableActorInput *this, IActorMovementProxy *);</span>
<span class="line">  AdvanceFrameResult (__fastcall *advanceLiveFrame)(IReplayableActorInput *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-synchedactordatareplay" tabindex="-1"><a class="header-anchor" href="#history-synchedactordatareplay"><span><code>History::SynchedActorDataReplay</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::SynchedActorDataReplay : IReplayableActorInput</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;DataItem&gt;&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-synchedactordatareplay-vtbl" tabindex="-1"><a class="header-anchor" href="#history-synchedactordatareplay-vtbl"><span><code>History::SynchedActorDataReplay_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ History::SynchedActorDataReplay_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayableActorInput)(IReplayableActorInput *this);</span>
<span class="line">  void (__fastcall *advanceFrame)(IReplayableActorInput *this, IActorMovementProxy *);</span>
<span class="line">  AdvanceFrameResult (__fastcall *advanceLiveFrame)(IReplayableActorInput *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-attributereplay" tabindex="-1"><a class="header-anchor" href="#history-attributereplay"><span><code>History::AttributeReplay</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::AttributeReplay : IReplayableActorInput</span>
<span class="line">{</span>
<span class="line">  const UpdateAttributesPacket mPacket;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-attributereplay-vtbl" tabindex="-1"><a class="header-anchor" href="#history-attributereplay-vtbl"><span><code>History::AttributeReplay_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ History::AttributeReplay_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayableActorInput)(IReplayableActorInput *this);</span>
<span class="line">  void (__fastcall *advanceFrame)(IReplayableActorInput *this, IActorMovementProxy *);</span>
<span class="line">  AdvanceFrameResult (__fastcall *advanceLiveFrame)(IReplayableActorInput *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-createreplayableactorstatesource-l2-functionstatesource" tabindex="-1"><a class="header-anchor" href="#history-createreplayableactorstatesource-l2-functionstatesource"><span><code>History::createReplayableActorStateSource::__l2::FunctionStateSource</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::createReplayableActorStateSource::__l2::FunctionStateSource : IReplayableActorStateSource</span>
<span class="line">{</span>
<span class="line">  std::function&lt;std::unique_ptr&lt;IReplayableActorState&gt; __cdecl(IActorMovementProxy &amp;)&gt; mCreator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-createreplayableactorstatesource-l2-functionstatesource-vtbl" tabindex="-1"><a class="header-anchor" href="#history-createreplayableactorstatesource-l2-functionstatesource-vtbl"><span><code>History::createReplayableActorStateSource::__l2::FunctionStateSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ History::createReplayableActorStateSource::__l2::FunctionStateSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayableActorStateSource)(IReplayableActorStateSource *this);</span>
<span class="line">  std::unique_ptr&lt;IReplayableActorState&gt; *(__fastcall *extract)(IReplayableActorStateSource *this, std::unique_ptr&lt;IReplayableActorState&gt; *result, IActorMovementProxy *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-createplayersnapshotreplaysource-l2-playersnapshotreplay" tabindex="-1"><a class="header-anchor" href="#history-createplayersnapshotreplaysource-l2-playersnapshotreplay"><span><code>History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay : IReplayableActorState</span>
<span class="line">{</span>
<span class="line">  PlayerSnapshot mSnapshot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-createplayersnapshotreplaysource-l2-playersnapshotreplay-vtbl" tabindex="-1"><a class="header-anchor" href="#history-createplayersnapshotreplaysource-l2-playersnapshotreplay-vtbl"><span><code>History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayableActorState)(IReplayableActorState *this);</span>
<span class="line">  void (__fastcall *apply)(IReplayableActorState *this, IActorMovementProxy *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-createplayersnapshotreplaysource-l2-lambda-1f894fb1c8414cded9e799b2cb78ac08" tabindex="-1"><a class="header-anchor" href="#history-createplayersnapshotreplaysource-l2-lambda-1f894fb1c8414cded9e799b2cb78ac08"><span><code>History::createPlayerSnapshotReplaySource::__l2::&lt;lambda_1f894fb1c8414cded9e799b2cb78ac08&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::createPlayerSnapshotReplaySource::__l2::&lt;lambda_1f894fb1c8414cded9e799b2cb78ac08&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-synchedactordatareplay-advanceliveframe-l5-lambda-061e6f19e2a2840cfeb37a624df18704" tabindex="-1"><a class="header-anchor" href="#history-synchedactordatareplay-advanceliveframe-l5-lambda-061e6f19e2a2840cfeb37a624df18704"><span><code>History::SynchedActorDataReplay::advanceLiveFrame::__l5::&lt;lambda_061e6f19e2a2840cfeb37a624df18704&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj History::SynchedActorDataReplay::advanceLiveFrame::__l5::&lt;lambda_061e6f19e2a2840cfeb37a624df18704&gt;</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID actorID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmenu" tabindex="-1"><a class="header-anchor" href="#hmenu"><span><code>HMENU__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HMENU__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbitmap" tabindex="-1"><a class="header-anchor" href="#hbitmap"><span><code>HBITMAP__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HBITMAP__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hkey" tabindex="-1"><a class="header-anchor" href="#hkey"><span><code>HKEY__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HKEY__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hicon" tabindex="-1"><a class="header-anchor" href="#hicon"><span><code>HICON__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HICON__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbrush" tabindex="-1"><a class="header-anchor" href="#hbrush"><span><code>HBRUSH__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HBRUSH__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hpalette" tabindex="-1"><a class="header-anchor" href="#hpalette"><span><code>HPALETTE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HPALETTE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdc" tabindex="-1"><a class="header-anchor" href="#hdc"><span><code>HDC__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HDC__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="henhmetafile" tabindex="-1"><a class="header-anchor" href="#henhmetafile"><span><code>HENHMETAFILE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HENHMETAFILE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hstring" tabindex="-1"><a class="header-anchor" href="#hstring"><span><code>HSTRING__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HSTRING__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hwinsta" tabindex="-1"><a class="header-anchor" href="#hwinsta"><span><code>HWINSTA__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HWINSTA__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hostent" tabindex="-1"><a class="header-anchor" href="#hostent"><span><code>hostent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hostent</span>
<span class="line">{</span>
<span class="line">  char *h_name;</span>
<span class="line">  char **h_aliases;</span>
<span class="line">  __int16 h_addrtype;</span>
<span class="line">  __int16 h_length;</span>
<span class="line">  char **h_addr_list;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hstring-header" tabindex="-1"><a class="header-anchor" href="#hstring-header"><span><code>HSTRING_HEADER</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HSTRING_HEADER</span>
<span class="line">{</span>
<span class="line">  HSTRING_HEADER::&lt;unnamed_type_Reserved&gt; Reserved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmetafile" tabindex="-1"><a class="header-anchor" href="#hmetafile"><span><code>HMETAFILE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HMETAFILE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hrsrc" tabindex="-1"><a class="header-anchor" href="#hrsrc"><span><code>HRSRC__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HRSRC__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hrawinput" tabindex="-1"><a class="header-anchor" href="#hrawinput"><span><code>HRAWINPUT__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HRAWINPUT__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="htouchinput" tabindex="-1"><a class="header-anchor" href="#htouchinput"><span><code>HTOUCHINPUT__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HTOUCHINPUT__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashedstring-stringhasher-char-const" tabindex="-1"><a class="header-anchor" href="#hashedstring-stringhasher-char-const"><span><code>HashedString::StringHasher&lt;char const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HashedString::StringHasher&lt;char const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashedstring-hash64-0" tabindex="-1"><a class="header-anchor" href="#hashedstring-hash64-0"><span><code>HashedString::Hash64&lt;0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HashedString::Hash64&lt;0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashedstring-hash64-nonullterminator-0" tabindex="-1"><a class="header-anchor" href="#hashedstring-hash64-nonullterminator-0"><span><code>HashedString::Hash64_noNullTerminator&lt;0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HashedString::Hash64_noNullTerminator&lt;0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="htask" tabindex="-1"><a class="header-anchor" href="#htask"><span><code>HTASK__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HTASK__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hpen" tabindex="-1"><a class="header-anchor" href="#hpen"><span><code>HPEN__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HPEN__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hrgn" tabindex="-1"><a class="header-anchor" href="#hrgn"><span><code>HRGN__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HRGN__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="haccel" tabindex="-1"><a class="header-anchor" href="#haccel"><span><code>HACCEL__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HACCEL__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdesk" tabindex="-1"><a class="header-anchor" href="#hdesk"><span><code>HDESK__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HDESK__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humpd" tabindex="-1"><a class="header-anchor" href="#humpd"><span><code>HUMPD__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HUMPD__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="himc" tabindex="-1"><a class="header-anchor" href="#himc"><span><code>HIMC__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HIMC__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hhook" tabindex="-1"><a class="header-anchor" href="#hhook"><span><code>HHOOK__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HHOOK__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hwineventhook" tabindex="-1"><a class="header-anchor" href="#hwineventhook"><span><code>HWINEVENTHOOK__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HWINEVENTHOOK__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hglrc" tabindex="-1"><a class="header-anchor" href="#hglrc"><span><code>HGLRC__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HGLRC__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashtype64-hash" tabindex="-1"><a class="header-anchor" href="#hashtype64-hash"><span><code>HashType64_hash</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HashType64_hash</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="himcc" tabindex="-1"><a class="header-anchor" href="#himcc"><span><code>HIMCC__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HIMCC__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hcolorspace" tabindex="-1"><a class="header-anchor" href="#hcolorspace"><span><code>HCOLORSPACE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HCOLORSPACE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmonitor" tabindex="-1"><a class="header-anchor" href="#hmonitor"><span><code>HMONITOR__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HMONITOR__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hgestureinfo" tabindex="-1"><a class="header-anchor" href="#hgestureinfo"><span><code>HGESTUREINFO__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HGESTUREINFO__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hlsurf" tabindex="-1"><a class="header-anchor" href="#hlsurf"><span><code>HLSURF__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HLSURF__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hfont" tabindex="-1"><a class="header-anchor" href="#hfont"><span><code>HFONT__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HFONT__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hstring-buffer" tabindex="-1"><a class="header-anchor" href="#hstring-buffer"><span><code>HSTRING_BUFFER__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HSTRING_BUFFER__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hkl" tabindex="-1"><a class="header-anchor" href="#hkl"><span><code>HKL__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HKL__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hstr" tabindex="-1"><a class="header-anchor" href="#hstr"><span><code>HSTR__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HSTR__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrop" tabindex="-1"><a class="header-anchor" href="#hdrop"><span><code>HDROP__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HDROP__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hsprite" tabindex="-1"><a class="header-anchor" href="#hsprite"><span><code>HSPRITE__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HSPRITE__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="helpcommand" tabindex="-1"><a class="header-anchor" href="#helpcommand"><span><code>HelpCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HelpCommand : Command</span>
<span class="line">{</span>
<span class="line">  std::string mCommand;</span>
<span class="line">  int mPage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="helpcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#helpcommand-vtbl"><span><code>HelpCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HelpCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-scene" tabindex="-1"><a class="header-anchor" href="#hbui-scene"><span><code>hbui::Scene</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Scene : AbstractScene, hbui::IViewListener, hbui::RouterObserver</span>
<span class="line">{</span>
<span class="line">  unsigned int mWidth;</span>
<span class="line">  unsigned int mHeight;</span>
<span class="line">  std::unique_ptr&lt;hbui::IView&gt; mView;</span>
<span class="line">  std::unique_ptr&lt;hbui::IViewRenderer&gt; mViewRenderer;</span>
<span class="line">  std::unique_ptr&lt;IScreenSettings&gt; mScreenSettings;</span>
<span class="line">  const std::string mInitialURL;</span>
<span class="line">  std::string mCurrentRoute;</span>
<span class="line">  _BYTE mMode[4];</span>
<span class="line">  _BYTE mState[4];</span>
<span class="line">  RectangleArea mRenderingAABB;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mGamepadCursorPosition;</span>
<span class="line">  __int16 mCurrentPointerPositionX;</span>
<span class="line">  __int16 mCurrentPointerPositionY;</span>
<span class="line">  InputMode mCurrentInputMode;</span>
<span class="line">  _BYTE mCurrentVRInputMode[4];</span>
<span class="line">  std::unique_ptr&lt;AbstractScreenSetupCleanupStrategy&gt; mScreenSetupCleanup;</span>
<span class="line">  std::shared_ptr&lt;AbstractSceneProxy&gt; mProxy;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mOnLoadFailedCallback;</span>
<span class="line">  hbui::ITelemetry *mTelemetry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-scene-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-scene-vtbl"><span><code>hbui::Scene_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::Scene_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScene)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *OnMessage)(AbstractScene *this, UIMessage, std::string, std::vector&lt;std::shared_ptr&lt;MessageParam&gt;&gt;);</span>
<span class="line">  std::shared_ptr&lt;UIControl&gt; *(__fastcall *getRootControl)(AbstractScene *this, std::shared_ptr&lt;UIControl&gt; *result);</span>
<span class="line">  std::shared_ptr&lt;UIControlFactory&gt; *(__fastcall *getControlFactory)(AbstractScene *this, std::shared_ptr&lt;UIControlFactory&gt; *result);</span>
<span class="line">  bool (__fastcall *isShowingModUI)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *setIsShowingModUI)(AbstractScene *this, bool);</span>
<span class="line">  bool (__fastcall *isUIScene)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *init)(AbstractScene *this, const ScreenSizeData *);</span>
<span class="line">  void (__fastcall *setSize)(AbstractScene *this, const ScreenSizeData *);</span>
<span class="line">  void (__fastcall *onSetKeyboardHeight)(AbstractScene *this, float);</span>
<span class="line">  void (__fastcall *onInternetUpdate)(AbstractScene *this);</span>
<span class="line">  std::vector&lt;RectangleArea&gt; *(__fastcall *getInputAreas)(AbstractScene *this, std::vector&lt;RectangleArea&gt; *result);</span>
<span class="line">  void (__fastcall *onFocusGained)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onFocusLost)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *terminate)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onCreation)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onLeave)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onGameEventNotification)(AbstractScene *this, ui::GameEventNotification);</span>
<span class="line">  void (__fastcall *_handleDirtyVisualTree)(AbstractScene *this, bool);</span>
<span class="line">  void (__fastcall *leaveScreen)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *tick)(AbstractScene *this, int, int);</span>
<span class="line">  void (__fastcall *updateEvents)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *applyInput)(AbstractScene *this, float);</span>
<span class="line">  void (__fastcall *update)(AbstractScene *this, long double);</span>
<span class="line">  void (__fastcall *frameUpdate)(AbstractScene *this, MinecraftUIFrameUpdateContext *);</span>
<span class="line">  void (__fastcall *preRenderUpdate)(AbstractScene *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *prepareFrame)(AbstractScene *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *render)(AbstractScene *this, ScreenContext *, const FrameRenderObject *);</span>
<span class="line">  void (__fastcall *postRenderUpdate)(AbstractScene *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *setupAndRender)(AbstractScene *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *handleInputModeChanged)(AbstractScene *this, InputMode);</span>
<span class="line">  void (__fastcall *handleHoloInputModeChanged)(AbstractScene *this, HoloUIInputMode);</span>
<span class="line">  void (__fastcall *handleButtonPress)(AbstractScene *this, unsigned int, FocusImpact);</span>
<span class="line">  void (__fastcall *handleButtonRelease)(AbstractScene *this, unsigned int, FocusImpact);</span>
<span class="line">  void (__fastcall *handleRawInputEvent)(AbstractScene *this, int, RawInputType, ButtonState, bool);</span>
<span class="line">  bool (__fastcall *handlePointerLocation)(AbstractScene *this, const PointerLocationEventData *, FocusImpact);</span>
<span class="line">  void (__fastcall *handlePointerPressed)(AbstractScene *this, bool);</span>
<span class="line">  void (__fastcall *handleDirection)(AbstractScene *this, DirectionId, float, float, FocusImpact);</span>
<span class="line">  bool (__fastcall *handleBackEvent)(AbstractScene *this, bool);</span>
<span class="line">  void (__fastcall *handleTextChar)(AbstractScene *this, const std::string *, bool, FocusImpact);</span>
<span class="line">  void (__fastcall *handleCaretLocation)(AbstractScene *this, int, FocusImpact);</span>
<span class="line">  void (__fastcall *setTextboxText)(AbstractScene *this, const std::string *);</span>
<span class="line">  void (__fastcall *onKeyboardDismissed)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onKeyboardDisabled)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *handleIdentityGained)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *handleIdentityLost)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *handleGazeGestureInput)(AbstractScene *this, __int16, float, float, float, FocusImpact);</span>
<span class="line">  void (__fastcall *handleDictationEvent)(AbstractScene *this, const std::string *);</span>
<span class="line">  void (__fastcall *handleCommandEvent)(AbstractScene *this, const VoiceCommand *);</span>
<span class="line">  bool (__fastcall *renderGameBehind)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *absorbsInput)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *closeOnPlayerHurt)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isModal)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isShowingMenu)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *shouldStealMouse)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *screenIsNotFlushable)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *alwaysAcceptsInput)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *screenDrawsLast)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isPlayScreen)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *renderOnlyWhenTopMost)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *lowFreqRendering)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *ignoreAsTop)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *shouldUpdateWhenSuspended)(AbstractScene *this);</span>
<span class="line">  int (__fastcall *getWidth)(AbstractScene *this);</span>
<span class="line">  int (__fastcall *getHeight)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *reload)(AbstractScene *this);</span>
<span class="line">  const RectangleArea *(__fastcall *getRenderingAABB)(AbstractScene *this);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScene *this);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(AbstractScene *this);</span>
<span class="line">  std::string *(__fastcall *getScreenName)(AbstractScene *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getRoute)(AbstractScene *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getScreenTelemetryName)(AbstractScene *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(AbstractScene *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  int (__fastcall *getScreenVersion)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *processBufferedTextCharEvents)(AbstractScene *this, const std::vector&lt;TextCharEventData&gt; *);</span>
<span class="line">  bool (__fastcall *getShouldSendEvents)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *setShouldSendEvents)(AbstractScene *this, bool);</span>
<span class="line">  bool (__fastcall *getWantsTextOnly)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *setWantsTextOnly)(AbstractScene *this, bool);</span>
<span class="line">  void (__fastcall *onDelete)(AbstractScene *this, CachedScenes *, TaskGroup *);</span>
<span class="line">  bool (__fastcall *isGamepadCursorEnabled)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isGamepadDeflectionModeEnabled)(AbstractScene *this);</span>
<span class="line">  const glm::tvec2&lt;float,0&gt; *(__fastcall *getGamepadCursorPosition)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *cleanInputComponents)(AbstractScene *this);</span>
<span class="line">  std::weak_ptr&lt;AbstractSceneProxy&gt; *(__fastcall *getProxy)(AbstractScene *this, std::weak_ptr&lt;AbstractSceneProxy&gt; *result);</span>
<span class="line">  bool (__fastcall *canBePushed)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *canBePopped)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *canBeTransitioned)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *onScreenExit)(AbstractScene *this, bool, bool);</span>
<span class="line">  void (__fastcall *onScreenEntrance)(AbstractScene *this, bool, bool);</span>
<span class="line">  bool (__fastcall *isEntering)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isExiting)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *schedulePop)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *isTerminating)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *loadScreenImmediately)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *forceUpdateActiveSceneStackWhenPushed)(AbstractScene *this);</span>
<span class="line">  bool (__fastcall *hasFinishedLoading)(AbstractScene *this);</span>
<span class="line">  void (__fastcall *sendScreenEvent)(AbstractScene *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *setDebugFeature)(AbstractScene *this, UIDebugCommandFeature, bool);</span>
<span class="line">  void (__fastcall *setScreenState)(AbstractScene *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routematcher-defaultentry" tabindex="-1"><a class="header-anchor" href="#hbui-routematcher-defaultentry"><span><code>hbui::RouteMatcher::DefaultEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouteMatcher::DefaultEntry</span>
<span class="line">{</span>
<span class="line">  const std::string baseScreenId;</span>
<span class="line">  const std::string route;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routematcher" tabindex="-1"><a class="header-anchor" href="#hbui-routematcher"><span><code>hbui::RouteMatcher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouteMatcher : hbui::IRouteMatcher</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;hbui::RouteMatcher::Entry&gt; mEntries;</span>
<span class="line">  std::vector&lt;hbui::RouteMatcher::DefaultEntry&gt; mDefaultRoutes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routematcher-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-routematcher-vtbl"><span><code>hbui::RouteMatcher_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::RouteMatcher_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IRouteMatcher)(hbui::IRouteMatcher *this);</span>
<span class="line">  void (__fastcall *add)(hbui::IRouteMatcher *this, const std::string *, const std::basic_regex&lt;char,std::regex_traits&lt;char&gt; &gt; *, hbui::RouteType, hbui::RouteMode, std::function&lt;void __cdecl(std::string const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *addDefault)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *resolve)(hbui::IRouteMatcher *this, const std::string *);</span>
<span class="line">  bool (__fastcall *isSupported)(hbui::IRouteMatcher *this, const std::string *);</span>
<span class="line">  bool (__fastcall *areCompatible)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *isRouteInDirectory)(hbui::IRouteMatcher *this, const std::string *, const std::string *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getDefaultRouteForFile)(hbui::IRouteMatcher *this, std::optional&lt;std::string &gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getDefaultRouteForDirectory)(hbui::IRouteMatcher *this, std::optional&lt;std::string &gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::RouteType&gt; *(__fastcall *getRouteType)(hbui::IRouteMatcher *this, std::optional&lt;enum hbui::RouteType&gt; *result, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::RouteMode&gt; *(__fastcall *getRouteMode)(hbui::IRouteMatcher *this, std::optional&lt;enum hbui::RouteMode&gt; *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultcomponent" tabindex="-1"><a class="header-anchor" href="#hitresultcomponent"><span><code>HitResultComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitResultComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;IHitResultContainer&gt; mHitResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestinternal" tabindex="-1"><a class="header-anchor" href="#httprequestinternal"><span><code>HTTPRequestInternal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HTTPRequestInternal : std::enable_shared_from_this&lt;HTTPRequestInternal&gt;</span>
<span class="line">{</span>
<span class="line">  HTTPRequestInternal_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestinternal-vtbl" tabindex="-1"><a class="header-anchor" href="#httprequestinternal-vtbl"><span><code>HTTPRequestInternal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HTTPRequestInternal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HTTPRequestInternal)(HTTPRequestInternal *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestcancelsource" tabindex="-1"><a class="header-anchor" href="#httprequestcancelsource"><span><code>HTTPRequestCancelSource</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HTTPRequestCancelSource</span>
<span class="line">{</span>
<span class="line">  HTTPRequestCancelSource_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestcancelsource-vtbl" tabindex="-1"><a class="header-anchor" href="#httprequestcancelsource-vtbl"><span><code>HTTPRequestCancelSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HTTPRequestCancelSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HTTPRequestCancelSource)(HTTPRequestCancelSource *this);</span>
<span class="line">  void (__fastcall *cancel)(HTTPRequestCancelSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-tapgestureparameters" tabindex="-1"><a class="header-anchor" href="#hbui-tapgestureparameters"><span><code>hbui::TapGestureParameters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) hbui::TapGestureParameters</span>
<span class="line">{</span>
<span class="line">  unsigned int maxTouches;</span>
<span class="line">  long double timeToleranceMs;</span>
<span class="line">  float distanceToleranceCm;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-flinggestureparameters" tabindex="-1"><a class="header-anchor" href="#hbui-flinggestureparameters"><span><code>hbui::FlingGestureParameters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) hbui::FlingGestureParameters</span>
<span class="line">{</span>
<span class="line">  unsigned int minTouches;</span>
<span class="line">  unsigned int maxTouches;</span>
<span class="line">  long double maxIntervalBetweenMovesMs;</span>
<span class="line">  float minDistanceCm;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-pangestureparameters" tabindex="-1"><a class="header-anchor" href="#hbui-pangestureparameters"><span><code>hbui::PanGestureParameters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::PanGestureParameters</span>
<span class="line">{</span>
<span class="line">  unsigned int minTouches;</span>
<span class="line">  unsigned int maxTouches;</span>
<span class="line">  float minDistanceCm;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gestureparameters" tabindex="-1"><a class="header-anchor" href="#hbui-gestureparameters"><span><code>hbui::GestureParameters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) hbui::GestureParameters</span>
<span class="line">{</span>
<span class="line">  hbui::TapGestureParameters tapParameters;</span>
<span class="line">  hbui::FlingGestureParameters flingParameters;</span>
<span class="line">  hbui::PanGestureParameters panParameters;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultsystem" tabindex="-1"><a class="header-anchor" href="#hitresultsystem"><span><code>HitResultSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitResultSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hitresultsystem-vtbl"><span><code>HitResultSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HitResultSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicpostrenderer" tabindex="-1"><a class="header-anchor" href="#holographicpostrenderer"><span><code>HolographicPostRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HolographicPostRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mUIQuadMaterial;</span>
<span class="line">  mce::MaterialPtr mUIHudMaterial;</span>
<span class="line">  mce::MaterialPtr mLevelQuadMaterial;</span>
<span class="line">  mce::MaterialPtr mUIFillColorMaterial;</span>
<span class="line">  float mUIWidth;</span>
<span class="line">  float mUIHeight;</span>
<span class="line">  float mLevelMeshWidth;</span>
<span class="line">  float mLevelMeshHeight;</span>
<span class="line">  mce::Mesh mUIQuadMesh;</span>
<span class="line">  mce::Mesh mLevelMesh;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holographicpostrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#holographicpostrenderer-vtbl"><span><code>HolographicPostRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HolographicPostRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbarwiperenderer" tabindex="-1"><a class="header-anchor" href="#hotbarwiperenderer"><span><code>HotBarWipeRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HotBarWipeRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbarwiperenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hotbarwiperenderer-vtbl"><span><code>HotBarWipeRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HotBarWipeRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">  void (__fastcall *drawRectangle)(HotBarWipeRenderer *this, ScreenContext *, UIControl *, float, const mce::Color *, RectangleArea *);</span>
<span class="line">  int (__fastcall *getHotBarIndex)(HotBarWipeRenderer *this, UIControl *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbarcooldownrenderer" tabindex="-1"><a class="header-anchor" href="#hotbarcooldownrenderer"><span><code>HotBarCooldownRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HotBarCooldownRenderer : HotBarWipeRenderer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbarcooldownrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hotbarcooldownrenderer-vtbl"><span><code>HotBarCooldownRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HotBarCooldownRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">  void (__fastcall *drawRectangle)(HotBarWipeRenderer *this, ScreenContext *, UIControl *, float, const mce::Color *, RectangleArea *);</span>
<span class="line">  int (__fastcall *getHotBarIndex)(HotBarWipeRenderer *this, UIControl *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbardroprenderer" tabindex="-1"><a class="header-anchor" href="#hotbardroprenderer"><span><code>HotBarDropRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HotBarDropRenderer : HotBarWipeRenderer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hotbardroprenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hotbardroprenderer-vtbl"><span><code>HotBarDropRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HotBarDropRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">  void (__fastcall *drawRectangle)(HotBarWipeRenderer *this, ScreenContext *, UIControl *, float, const mce::Color *, RectangleArea *);</span>
<span class="line">  int (__fastcall *getHotBarIndex)(HotBarWipeRenderer *this, UIControl *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovertextrenderer" tabindex="-1"><a class="header-anchor" href="#hovertextrenderer"><span><code>HoverTextRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoverTextRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  std::string mContent;</span>
<span class="line">  std::string mFilteredContent;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mCursorPosition;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mOffset;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mBoxDimensions;</span>
<span class="line">  mce::MaterialPtr mBlitMat;</span>
<span class="line">  std::unique_ptr&lt;NinePatchLayer&gt; mLayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovertextrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hovertextrenderer-vtbl"><span><code>HoverTextRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoverTextRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudarmorrenderer" tabindex="-1"><a class="header-anchor" href="#hudarmorrenderer"><span><code>HudArmorRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudArmorRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">  mce::TexturePtr mEmptyArmorTexture;</span>
<span class="line">  mce::TexturePtr mHalfArmorTexture;</span>
<span class="line">  mce::TexturePtr mFullArmorTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudarmorrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudarmorrenderer-vtbl"><span><code>HudArmorRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudArmorRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudbubblesrenderer" tabindex="-1"><a class="header-anchor" href="#hudbubblesrenderer"><span><code>HudBubblesRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudBubblesRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">  mce::TexturePtr mBubbleFullTexture;</span>
<span class="line">  mce::TexturePtr mBubblePopTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudbubblesrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudbubblesrenderer-vtbl"><span><code>HudBubblesRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudBubblesRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcamerarenderer" tabindex="-1"><a class="header-anchor" href="#hudcamerarenderer"><span><code>HudCameraRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HudCameraRenderer : MinecraftUICustomRenderer, CameraCallbacks</span>
<span class="line">{</span>
<span class="line">  _BYTE mState[4];</span>
<span class="line">  float mShowTime;</span>
<span class="line">  mce::TexturePtr mPhotoTexture;</span>
<span class="line">  mce::MaterialPtr mColorMaterial;</span>
<span class="line">  mce::MaterialPtr mTexMaterial;</span>
<span class="line">  bool mImmediatePicture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcamerarenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudcamerarenderer-vtbl"><span><code>HudCameraRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudCameraRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcursorrenderer" tabindex="-1"><a class="header-anchor" href="#hudcursorrenderer"><span><code>HudCursorRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudCursorRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mCrosshairMat;</span>
<span class="line">  mce::TexturePtr mCrosshair;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcursorrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudcursorrenderer-vtbl"><span><code>HudCursorRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudCursorRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-workerstatssnapshot" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-workerstatssnapshot"><span><code>HudDebugOverlayRenderer::WorkerStatsSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudDebugOverlayRenderer::WorkerStatsSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 queued;</span>
<span class="line">  unsigned __int64 reQueued;</span>
<span class="line">  unsigned __int64 processed;</span>
<span class="line">  unsigned __int64 noops;</span>
<span class="line">  unsigned __int64 maxQueued;</span>
<span class="line">  unsigned __int64 sorts;</span>
<span class="line">  unsigned __int64 waits;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-workerstats" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-workerstats"><span><code>HudDebugOverlayRenderer::WorkerStats</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudDebugOverlayRenderer::WorkerStats</span>
<span class="line">{</span>
<span class="line">  HudDebugOverlayRenderer::WorkerStatsSnapshot last;</span>
<span class="line">  HudDebugOverlayRenderer::WorkerStatsSnapshot curr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-taskstatssnapshot" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-taskstatssnapshot"><span><code>HudDebugOverlayRenderer::TaskStatsSnapshot</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudDebugOverlayRenderer::TaskStatsSnapshot</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 count;</span>
<span class="line">  unsigned __int64 maxCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-taskstats" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-taskstats"><span><code>HudDebugOverlayRenderer::TaskStats</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudDebugOverlayRenderer::TaskStats</span>
<span class="line">{</span>
<span class="line">  HudDebugOverlayRenderer::TaskStatsSnapshot last;</span>
<span class="line">  HudDebugOverlayRenderer::TaskStatsSnapshot curr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-spinlockmetrics" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-spinlockmetrics"><span><code>HudDebugOverlayRenderer::SpinLockMetrics</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HudDebugOverlayRenderer::SpinLockMetrics</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 contention;</span>
<span class="line">  unsigned __int64 contentionBlocked;</span>
<span class="line">  unsigned __int64 blockedTicks;</span>
<span class="line">  unsigned __int64 blockedTicksMax;</span>
<span class="line">  unsigned __int64 yields;</span>
<span class="line">  unsigned __int64 lockCount;</span>
<span class="line">  unsigned __int64 lockTicks;</span>
<span class="line">  unsigned __int64 lockTicksMax;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer-spinlockstats" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer-spinlockstats"><span><code>HudDebugOverlayRenderer::SpinLockStats</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HudDebugOverlayRenderer::SpinLockStats</span>
<span class="line">{</span>
<span class="line">  HudDebugOverlayRenderer::SpinLockMetrics last;</span>
<span class="line">  HudDebugOverlayRenderer::SpinLockMetrics curr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huddebugoverlayrenderer" tabindex="-1"><a class="header-anchor" href="#huddebugoverlayrenderer"><span><code>HudDebugOverlayRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudDebugOverlayRenderer</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mDebugDepthArrayTextureMaterial;</span>
<span class="line">  std::unordered_map&lt;BackgroundWorker *,HudDebugOverlayRenderer::WorkerStats&gt; mWorkerStats;</span>
<span class="line">  std::unordered_map&lt;BackgroundWorker *,HudDebugOverlayRenderer::WorkerStats&gt; mCurrentWorkerStats;</span>
<span class="line">  HudDebugOverlayRenderer::TaskStats mTaskStats;</span>
<span class="line">  HudDebugOverlayRenderer::SpinLockStats mSpinLockStats;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mLastUpdateTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudheartrenderer" tabindex="-1"><a class="header-anchor" href="#hudheartrenderer"><span><code>HudHeartRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudHeartRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">  mce::TexturePtr mHeartBackgroundTexture;</span>
<span class="line">  mce::TexturePtr mHeartBlinkTexture;</span>
<span class="line">  mce::TexturePtr mHeartFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartPoisonFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartPoisonHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartWitherFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartWitherHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartAbsorptionFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartAbsorptionHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartFlashFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartFlashHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartPoisonFlashFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartPoisonFlashHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartWitherFlashFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartWitherFlashHalfTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudheartrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudheartrenderer-vtbl"><span><code>HudHeartRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudHeartRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhorseheartrenderer" tabindex="-1"><a class="header-anchor" href="#hudhorseheartrenderer"><span><code>HudHorseHeartRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudHorseHeartRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">  mce::TexturePtr mHeartHorseBackgroundTexture;</span>
<span class="line">  mce::TexturePtr mHeartHorseBlinkTexture;</span>
<span class="line">  mce::TexturePtr mHeartHorseFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartHorseHalfTexture;</span>
<span class="line">  mce::TexturePtr mHeartHorseFlashFullTexture;</span>
<span class="line">  mce::TexturePtr mHeartHorseFlashHalfTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhorseheartrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudhorseheartrenderer-vtbl"><span><code>HudHorseHeartRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudHorseHeartRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhorsejumprenderer" tabindex="-1"><a class="header-anchor" href="#hudhorsejumprenderer"><span><code>HudHorseJumpRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HudHorseJumpRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  mce::TexturePtr mHorseJumpEmpty;</span>
<span class="line">  mce::TexturePtr mHorseJumpFull;</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhorsejumprenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudhorsejumprenderer-vtbl"><span><code>HudHorseJumpRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudHorseJumpRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhungerrenderer" tabindex="-1"><a class="header-anchor" href="#hudhungerrenderer"><span><code>HudHungerRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudHungerRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  int mTickCount;</span>
<span class="line">  bool mHasLoadedTextures;</span>
<span class="line">  mce::TexturePtr gHungerBackgroundTexture;</span>
<span class="line">  mce::TexturePtr gHungerBlinkTexture;</span>
<span class="line">  mce::TexturePtr gHungerEffectBackgroundTexture;</span>
<span class="line">  mce::TexturePtr gHungerFullTexture;</span>
<span class="line">  mce::TexturePtr gHungerHalfTexture;</span>
<span class="line">  mce::TexturePtr gHungerFlashFullTexture;</span>
<span class="line">  mce::TexturePtr gHungerFlashHalfTexture;</span>
<span class="line">  mce::TexturePtr gHungerEffectFullTexture;</span>
<span class="line">  mce::TexturePtr gHungerEffectHalfTexture;</span>
<span class="line">  mce::TexturePtr gHungerEffectFlashFullTexture;</span>
<span class="line">  mce::TexturePtr gHungerEffectFlashHalfTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhungerrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudhungerrenderer-vtbl"><span><code>HudHungerRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudHungerRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudmobeffectsrenderer" tabindex="-1"><a class="header-anchor" href="#hudmobeffectsrenderer"><span><code>HudMobEffectsRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudMobEffectsRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudmobeffectsrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudmobeffectsrenderer-vtbl"><span><code>HudMobEffectsRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudMobEffectsRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer"><span><code>HudPlayerRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  float mRenderTime;</span>
<span class="line">  float mLastTimeStamp;</span>
<span class="line">  std::vector&lt;int&gt; mPlayerArmorState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-vtbl"><span><code>HudPlayerRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudPlayerRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudprogressrenderer" tabindex="-1"><a class="header-anchor" href="#hudprogressrenderer"><span><code>HudProgressRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HudProgressRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  float mProgressAlpha;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudprogressrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudprogressrenderer-vtbl"><span><code>HudProgressRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudProgressRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudvignetterenderer" tabindex="-1"><a class="header-anchor" href="#hudvignetterenderer"><span><code>HudVignetteRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudVignetteRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  float mLastVignetteOpacity;</span>
<span class="line">  float mLastAB;</span>
<span class="line">  mce::Mesh mVignette;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudvignetterenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#hudvignetterenderer-vtbl"><span><code>HudVignetteRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudVignetteRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-achievementsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-achievementsfacet"><span><code>hbui::FacetBase&lt;hbui::AchievementsFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::AchievementsFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-achievementsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-achievementsfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::AchievementsFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::AchievementsFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-achievementsfacet-facetachievementdata" tabindex="-1"><a class="header-anchor" href="#hbui-achievementsfacet-facetachievementdata"><span><code>hbui::AchievementsFacet::FacetAchievementData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::AchievementsFacet::FacetAchievementData</span>
<span class="line">{</span>
<span class="line">  std::string mId;</span>
<span class="line">  std::string mAchievementName;</span>
<span class="line">  std::string mDescription;</span>
<span class="line">  int mGamerScore;</span>
<span class="line">  __int64 mDateUnlocked;</span>
<span class="line">  std::string mAchievementImageURL;</span>
<span class="line">  bool mIsLocked;</span>
<span class="line">  bool mIsSecret;</span>
<span class="line">  float mProgressCompleted;</span>
<span class="line">  float mProgressTarget;</span>
<span class="line">  std::string mPersonaRewardId;</span>
<span class="line">  bool mHasPersonaReward;</span>
<span class="line">  bool mIsPersonaRewardOwned;</span>
<span class="line">  std::string mPersonaRewardName;</span>
<span class="line">  std::string mPersonaRewardImageURL;</span>
<span class="line">  persona::Rarity mPersonaRewardRarity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-achievementsfacet-facetplayerachievementdata" tabindex="-1"><a class="header-anchor" href="#hbui-achievementsfacet-facetplayerachievementdata"><span><code>hbui::AchievementsFacet::FacetPlayerAchievementData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::AchievementsFacet::FacetPlayerAchievementData</span>
<span class="line">{</span>
<span class="line">  int mAchievementsUnlocked;</span>
<span class="line">  int mMaxAchievements;</span>
<span class="line">  int mTimePlayed;</span>
<span class="line">  int mCurrGamerScore;</span>
<span class="line">  int mMaxGamerScore;</span>
<span class="line">  std::vector&lt;hbui::AchievementsFacet::FacetAchievementData&gt; mAchievementData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-achievementsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-achievementsfacet"><span><code>hbui::AchievementsFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::AchievementsFacet : hbui::FacetBase&lt;hbui::AchievementsFacet&gt;</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  hbui::ResourceRegistry *mResourceRegistry;</span>
<span class="line">  std::unordered_map&lt;Core::PathBuffer&lt;std::string &gt;,std::string,std::hash&lt;Core::PathBuffer&lt;std::string &gt; &gt;,std::equal_to&lt;Core::PathBuffer&lt;std::string &gt; &gt;,std::allocator&lt;std::pair&lt;Core::PathBuffer&lt;std::string &gt; const ,std::string &gt; &gt; &gt; mRegisteredResources;</span>
<span class="line">  hbui::AchievementsFacet::AchievementFacetStatus mStatus;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mLastRefresh;</span>
<span class="line">  hbui::AchievementsFacet::FacetPlayerAchievementData mFacetPlayerAchievementData;</span>
<span class="line">  persona::PersonaPieceCollectionModel *mPersonaPieceCollectionModel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-achievementsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-achievementsfacet-vtbl"><span><code>hbui::AchievementsFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::AchievementsFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-deviceinformationfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-deviceinformationfacet"><span><code>hbui::FacetBase&lt;hbui::DeviceInformationFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::DeviceInformationFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-deviceinformationfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-deviceinformationfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::DeviceInformationFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::DeviceInformationFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-deviceinformationfacet" tabindex="-1"><a class="header-anchor" href="#hbui-deviceinformationfacet"><span><code>hbui::DeviceInformationFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::DeviceInformationFacet : hbui::FacetBase&lt;hbui::DeviceInformationFacet&gt;, AppPlatformListener</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  const IClientInstance *mClientInstance;</span>
<span class="line">  _BYTE mPlatform[1];</span>
<span class="line">  std::vector&lt;enum hbui::InputMethod&gt; mInputMethods;</span>
<span class="line">  bool mIsLowMemoryDevice;</span>
<span class="line">  float mPixelsPerMillimeter;</span>
<span class="line">  int mGuiScale;</span>
<span class="line">  int mGuiScaleModifier;</span>
<span class="line">  int mGuiScaleBase;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-deviceinformationfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-deviceinformationfacet-vtbl"><span><code>hbui::DeviceInformationFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::DeviceInformationFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-featureflagsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-featureflagsfacet"><span><code>hbui::FacetBase&lt;hbui::FeatureFlagsFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::FeatureFlagsFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-featureflagsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-featureflagsfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::FeatureFlagsFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::FeatureFlagsFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-featureflagsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-featureflagsfacet"><span><code>hbui::FeatureFlagsFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FeatureFlagsFacet : hbui::FacetBase&lt;hbui::FeatureFlagsFacet&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; mFeatureFlags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-featureflagsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-featureflagsfacet-vtbl"><span><code>hbui::FeatureFlagsFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FeatureFlagsFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-inputfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-inputfacet"><span><code>hbui::FacetBase&lt;hbui::InputFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::InputFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-inputfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-inputfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::InputFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::InputFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-inputfacet" tabindex="-1"><a class="header-anchor" href="#hbui-inputfacet"><span><code>hbui::InputFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::InputFacet : hbui::FacetBase&lt;hbui::InputFacet&gt;</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mSwapABOptionSubscription;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mSwapXYOptionSubscription;</span>
<span class="line">  bool mAcceptInputFromAllControllers;</span>
<span class="line">  int mGameControllerId;</span>
<span class="line">  std::string mGameControllerIdString;</span>
<span class="line">  bool mSwapABButtons;</span>
<span class="line">  bool mSwapXYButtons;</span>
<span class="line">  _BYTE mCurrentInputType[1];</span>
<span class="line">  InputMode mCachedInputMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-inputfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-inputfacet-vtbl"><span><code>hbui::InputFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::InputFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-legacyscreenfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-legacyscreenfacet"><span><code>hbui::FacetBase&lt;hbui::LegacyScreenFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::LegacyScreenFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-legacyscreenfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-legacyscreenfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::LegacyScreenFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::LegacyScreenFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-legacyscreenfacet" tabindex="-1"><a class="header-anchor" href="#hbui-legacyscreenfacet"><span><code>hbui::LegacyScreenFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::LegacyScreenFacet : hbui::FacetBase&lt;hbui::LegacyScreenFacet&gt;</span>
<span class="line">{</span>
<span class="line">  IScreenController *mScreenController;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-legacyscreenfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-legacyscreenfacet-vtbl"><span><code>hbui::LegacyScreenFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::LegacyScreenFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-localefacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-localefacet"><span><code>hbui::FacetBase&lt;hbui::LocaleFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::LocaleFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-localefacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-localefacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::LocaleFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::LocaleFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localefacet" tabindex="-1"><a class="header-anchor" href="#hbui-localefacet"><span><code>hbui::LocaleFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::LocaleFacet : hbui::FacetBase&lt;hbui::LocaleFacet&gt;, AppPlatformListener</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  Option *mLanguageOption;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mLanguageOptionSubscription;</span>
<span class="line">  std::string mLocale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localefacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-localefacet-vtbl"><span><code>hbui::LocaleFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::LocaleFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-localworldsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-localworldsfacet"><span><code>hbui::FacetBase&lt;hbui::LocalWorldsFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::LocalWorldsFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-localworldsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-localworldsfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::LocalWorldsFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::LocalWorldsFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localworld" tabindex="-1"><a class="header-anchor" href="#hbui-localworld"><span><code>hbui::LocalWorld</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::LocalWorld</span>
<span class="line">{</span>
<span class="line">  std::string id;</span>
<span class="line">  std::string title;</span>
<span class="line">  std::string imageURL;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localworldsfacet" tabindex="-1"><a class="header-anchor" href="#hbui-localworldsfacet"><span><code>hbui::LocalWorldsFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::LocalWorldsFacet : hbui::FacetBase&lt;hbui::LocalWorldsFacet&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;hbui::LocalWorld&gt; mLocalWorlds;</span>
<span class="line">  ILocalWorldsProvider *mLocalWorldsProvider;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localworldsfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-localworldsfacet-vtbl"><span><code>hbui::LocalWorldsFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::LocalWorldsFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-safezonefacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-safezonefacet"><span><code>hbui::FacetBase&lt;hbui::SafeZoneFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::SafeZoneFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-safezonefacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-safezonefacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::SafeZoneFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::SafeZoneFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-optionwrapper-float" tabindex="-1"><a class="header-anchor" href="#hbui-optionwrapper-float"><span><code>hbui::OptionWrapper&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::OptionWrapper&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">  Option *mOption;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mOptionSubscription;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-safezonefacet" tabindex="-1"><a class="header-anchor" href="#hbui-safezonefacet"><span><code>hbui::SafeZoneFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::SafeZoneFacet : hbui::FacetBase&lt;hbui::SafeZoneFacet&gt;</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  float mSafeZoneX;</span>
<span class="line">  float mSafeZoneY;</span>
<span class="line">  float mScreenPositionX;</span>
<span class="line">  float mScreenPositionY;</span>
<span class="line">  hbui::OptionWrapper&lt;float&gt; mSafeZoneXOption;</span>
<span class="line">  hbui::OptionWrapper&lt;float&gt; mSafeZoneYOption;</span>
<span class="line">  hbui::OptionWrapper&lt;float&gt; mScreenPositionXOption;</span>
<span class="line">  hbui::OptionWrapper&lt;float&gt; mScreenPositionYOption;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-safezonefacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-safezonefacet-vtbl"><span><code>hbui::SafeZoneFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::SafeZoneFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-screenreaderfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-screenreaderfacet"><span><code>hbui::FacetBase&lt;hbui::ScreenReaderFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::ScreenReaderFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-screenreaderfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-screenreaderfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::ScreenReaderFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::ScreenReaderFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-screenreaderfacet" tabindex="-1"><a class="header-anchor" href="#hbui-screenreaderfacet"><span><code>hbui::ScreenReaderFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ScreenReaderFacet : hbui::FacetBase&lt;hbui::ScreenReaderFacet&gt;</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  bool mIsChatTextToSpeechEnabled;</span>
<span class="line">  bool mIsUITextToSpeechEnabled;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mChatOptionSubscription;</span>
<span class="line">  Bedrock::PubSub::ScopedSubscription mUIOptionSubscription;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-screenreaderfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-screenreaderfacet-vtbl"><span><code>hbui::ScreenReaderFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ScreenReaderFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-soundfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-soundfacet"><span><code>hbui::FacetBase&lt;hbui::SoundFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::SoundFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-soundfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-soundfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::SoundFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::SoundFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-soundfacet" tabindex="-1"><a class="header-anchor" href="#hbui-soundfacet"><span><code>hbui::SoundFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::SoundFacet : hbui::FacetBase&lt;hbui::SoundFacet&gt;</span>
<span class="line">{</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;SoundPlayerInterface&gt; mSoundPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-soundfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-soundfacet-vtbl"><span><code>hbui::SoundFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::SoundFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-splitscreenfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-splitscreenfacet"><span><code>hbui::FacetBase&lt;hbui::SplitScreenFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::SplitScreenFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-splitscreenfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-splitscreenfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::SplitScreenFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::SplitScreenFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-splitscreenfacet" tabindex="-1"><a class="header-anchor" href="#hbui-splitscreenfacet"><span><code>hbui::SplitScreenFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::SplitScreenFacet : hbui::FacetBase&lt;hbui::SplitScreenFacet&gt;</span>
<span class="line">{</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  IMinecraftGame *mMinecraftGame;</span>
<span class="line">  int mSplitScreenPosition;</span>
<span class="line">  int mActivePlayers;</span>
<span class="line">  SplitScreenDirection mSplitScreenDirection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-splitscreenfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-splitscreenfacet-vtbl"><span><code>hbui::SplitScreenFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::SplitScreenFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-toastfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-toastfacet"><span><code>hbui::FacetBase&lt;hbui::ToastFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::ToastFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-toastfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-toastfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::ToastFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::ToastFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-toastfacet" tabindex="-1"><a class="header-anchor" href="#hbui-toastfacet"><span><code>hbui::ToastFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ToastFacet : hbui::FacetBase&lt;hbui::ToastFacet&gt;</span>
<span class="line">{</span>
<span class="line">  ToastManager *mToastManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-toastfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-toastfacet-vtbl"><span><code>hbui::ToastFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ToastFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-userfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-userfacet"><span><code>hbui::FacetBase&lt;hbui::UserFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::UserFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-userfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-userfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::UserFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::UserFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-userfacet" tabindex="-1"><a class="header-anchor" href="#hbui-userfacet"><span><code>hbui::UserFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::UserFacet : hbui::FacetBase&lt;hbui::UserFacet&gt;</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mProfilePicturePath;</span>
<span class="line">  IClientInstance *mClientInstance;</span>
<span class="line">  std::string mOriginalProfilePicturePath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-userfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-userfacet-vtbl"><span><code>hbui::UserFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::UserFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry"><span><code>hbui::FacetRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry : hbui::IFacetRegistry</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;hbui::FacetRegistry::FacetEntry&gt; mFacets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-vtbl"><span><code>hbui::FacetRegistry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetRegistry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacetRegistry)(hbui::IFacetRegistry *this);</span>
<span class="line">  void (__fastcall *registerFacet)(hbui::IFacetRegistry *this, const std::string *, const std::function&lt;std::unique_ptr&lt;hbui::IFacet&gt; __cdecl(void)&gt; *);</span>
<span class="line">  std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *(__fastcall *activateFacet)(hbui::IFacetRegistry *this, std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *result, hbui::FacetBinder *, const std::string *);</span>
<span class="line">  std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *(__fastcall *deactivateFacet)(hbui::IFacetRegistry *this, std::optional&lt;enum hbui::IFacetRegistry::Error&gt; *result, hbui::FacetBinder *, const std::string *);</span>
<span class="line">  void (__fastcall *deactivateAllFacets)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *bind)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *update)(hbui::IFacetRegistry *this, hbui::FacetBinder *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-testfacet-complextype" tabindex="-1"><a class="header-anchor" href="#hbui-testfacet-complextype"><span><code>hbui::TestFacet::ComplexType</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::TestFacet::ComplexType</span>
<span class="line">{</span>
<span class="line">  int nestedNumber;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-testfacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-testfacet"><span><code>hbui::FacetBase&lt;hbui::TestFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;hbui::TestFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-hbui-testfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-hbui-testfacet-vtbl"><span><code>hbui::FacetBase&lt;hbui::TestFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;hbui::TestFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-testfacet" tabindex="-1"><a class="header-anchor" href="#hbui-testfacet"><span><code>hbui::TestFacet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::TestFacet : hbui::FacetBase&lt;hbui::TestFacet&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int mIncrementingNumber;</span>
<span class="line">  int mShallowNumber;</span>
<span class="line">  std::string mShallowString;</span>
<span class="line">  hbui::TestFacet::ComplexType mShallowComplexType;</span>
<span class="line">  std::vector&lt;hbui::TestFacet::ComplexType&gt; mNestedTypeArray;</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  bool mShouldAutoIncrement;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-testfacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-testfacet-vtbl"><span><code>hbui::TestFacet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::TestFacet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-optionwrapper-float-ctor-l5-lambda-5e7c5eb415c6d84f19e6135729d9635d" tabindex="-1"><a class="header-anchor" href="#hbui-optionwrapper-float-ctor-l5-lambda-5e7c5eb415c6d84f19e6135729d9635d"><span><code>hbui::OptionWrapper&lt;float&gt;::{ctor}::__l5::&lt;lambda_5e7c5eb415c6d84f19e6135729d9635d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::OptionWrapper&lt;float&gt;::{ctor}::__l5::&lt;lambda_5e7c5eb415c6d84f19e6135729d9635d&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::OptionWrapper&lt;float&gt; *const __this;</span>
<span class="line">  float *value;</span>
<span class="line">  bool *isDirty;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-bind-l2-lambda-6cf8e22b1f259530c328b3a73be09bd3" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-bind-l2-lambda-6cf8e22b1f259530c328b3a73be09bd3"><span><code>hbui::FacetRegistry::bind::__l2::&lt;lambda_6cf8e22b1f259530c328b3a73be09bd3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry::bind::__l2::&lt;lambda_6cf8e22b1f259530c328b3a73be09bd3&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::FacetRegistry *const __this;</span>
<span class="line">  hbui::FacetBinder *binder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-bind-l2-lambda-6066c263a20a7513df33bbb78d085ae3" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-bind-l2-lambda-6066c263a20a7513df33bbb78d085ae3"><span><code>hbui::FacetRegistry::bind::__l2::&lt;lambda_6066c263a20a7513df33bbb78d085ae3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry::bind::__l2::&lt;lambda_6066c263a20a7513df33bbb78d085ae3&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::FacetRegistry *const __this;</span>
<span class="line">  hbui::FacetBinder *binder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-splitscreenfacet-ctor-l2-lambda-a3896d9a4b97bcf25b659c18160e311f" tabindex="-1"><a class="header-anchor" href="#hbui-splitscreenfacet-ctor-l2-lambda-a3896d9a4b97bcf25b659c18160e311f"><span><code>hbui::SplitScreenFacet::{ctor}::__l2::&lt;lambda_a3896d9a4b97bcf25b659c18160e311f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::SplitScreenFacet::{ctor}::__l2::&lt;lambda_a3896d9a4b97bcf25b659c18160e311f&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::SplitScreenFacet *const __this;</span>
<span class="line">  const IClientInstance *clientInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-screenreaderfacet-registerobservers-l8-lambda-5ae2404388e2ae8d14c2c1abb873009d" tabindex="-1"><a class="header-anchor" href="#hbui-screenreaderfacet-registerobservers-l8-lambda-5ae2404388e2ae8d14c2c1abb873009d"><span><code>hbui::ScreenReaderFacet::_registerObservers::__l8::&lt;lambda_5ae2404388e2ae8d14c2c1abb873009d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ScreenReaderFacet::_registerObservers::__l8::&lt;lambda_5ae2404388e2ae8d14c2c1abb873009d&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::ScreenReaderFacet *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-screenreaderfacet-registerobservers-l5-lambda-ff6107dbe840263fd2607a3531d764fb" tabindex="-1"><a class="header-anchor" href="#hbui-screenreaderfacet-registerobservers-l5-lambda-ff6107dbe840263fd2607a3531d764fb"><span><code>hbui::ScreenReaderFacet::_registerObservers::__l5::&lt;lambda_ff6107dbe840263fd2607a3531d764fb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ScreenReaderFacet::_registerObservers::__l5::&lt;lambda_ff6107dbe840263fd2607a3531d764fb&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::ScreenReaderFacet *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-localefacet-registerobservers-l5-lambda-34070cf23042ac96cc4b06279f26c9e2" tabindex="-1"><a class="header-anchor" href="#hbui-localefacet-registerobservers-l5-lambda-34070cf23042ac96cc4b06279f26c9e2"><span><code>hbui::LocaleFacet::_registerObservers::__l5::&lt;lambda_34070cf23042ac96cc4b06279f26c9e2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::LocaleFacet::_registerObservers::__l5::&lt;lambda_34070cf23042ac96cc4b06279f26c9e2&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::LocaleFacet *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-inputfacet-registerobservers-l10-lambda-3b26e34c65f70ca7014fa632ac7bfb5b" tabindex="-1"><a class="header-anchor" href="#hbui-inputfacet-registerobservers-l10-lambda-3b26e34c65f70ca7014fa632ac7bfb5b"><span><code>hbui::InputFacet::_registerObservers::__l10::&lt;lambda_3b26e34c65f70ca7014fa632ac7bfb5b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::InputFacet::_registerObservers::__l10::&lt;lambda_3b26e34c65f70ca7014fa632ac7bfb5b&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::InputFacet *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-inputfacet-registerobservers-l6-lambda-ad7d2f101c9885bd05e57617f5a1d792" tabindex="-1"><a class="header-anchor" href="#hbui-inputfacet-registerobservers-l6-lambda-ad7d2f101c9885bd05e57617f5a1d792"><span><code>hbui::InputFacet::_registerObservers::__l6::&lt;lambda_ad7d2f101c9885bd05e57617f5a1d792&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::InputFacet::_registerObservers::__l6::&lt;lambda_ad7d2f101c9885bd05e57617f5a1d792&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::InputFacet *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-scriptapi-scriptenginefacet" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-scriptapi-scriptenginefacet"><span><code>hbui::FacetBase&lt;ScriptApi::ScriptEngineFacet&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetBase&lt;ScriptApi::ScriptEngineFacet&gt; : hbui::IFacet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetbase-scriptapi-scriptenginefacet-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-facetbase-scriptapi-scriptenginefacet-vtbl"><span><code>hbui::FacetBase&lt;ScriptApi::ScriptEngineFacet&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FacetBase&lt;ScriptApi::ScriptEngineFacet&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFacet)(hbui::IFacet *this);</span>
<span class="line">  void (__fastcall *bindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *unbindFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  void (__fastcall *updateFacet)(hbui::IFacet *this, hbui::FacetBinder *);</span>
<span class="line">  bool (__fastcall *update)(hbui::IFacet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-toucheventdata" tabindex="-1"><a class="header-anchor" href="#hbui-toucheventdata"><span><code>hbui::TouchEventData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::TouchEventData</span>
<span class="line">{</span>
<span class="line">  Vec2 pos;</span>
<span class="line">  unsigned int id;</span>
<span class="line">  hbui::TouchEventData::EventType type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gestureeventdata-unnamed-type-pandetails" tabindex="-1"><a class="header-anchor" href="#hbui-gestureeventdata-unnamed-type-pandetails"><span><code>hbui::GestureEventData::&lt;unnamed_type_panDetails&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GestureEventData::&lt;unnamed_type_panDetails&gt;</span>
<span class="line">{</span>
<span class="line">  Vec2 delta;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gestureeventdata-unnamed-type-flingdetails" tabindex="-1"><a class="header-anchor" href="#hbui-gestureeventdata-unnamed-type-flingdetails"><span><code>hbui::GestureEventData::&lt;unnamed_type_flingDetails&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct hbui::GestureEventData::&lt;unnamed_type_flingDetails&gt;</span>
<span class="line">{</span>
<span class="line">  float duration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gestureeventdata" tabindex="-1"><a class="header-anchor" href="#hbui-gestureeventdata"><span><code>hbui::GestureEventData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GestureEventData</span>
<span class="line">{</span>
<span class="line">  hbui::GestureEventData::&lt;unnamed_type_panDetails&gt; panDetails;</span>
<span class="line">  hbui::GestureEventData::&lt;unnamed_type_flingDetails&gt; flingDetails;</span>
<span class="line">  Vec2 currentLocation;</span>
<span class="line">  Vec2 startLocation;</span>
<span class="line">  _BYTE type[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturerecognizerbase-toucheventdatawithcurrentpos" tabindex="-1"><a class="header-anchor" href="#hbui-gesturerecognizerbase-toucheventdatawithcurrentpos"><span><code>hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos</span>
<span class="line">{</span>
<span class="line">  hbui::TouchEventData touchEventData;</span>
<span class="line">  Vec2 currentPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturerecognizerbase" tabindex="-1"><a class="header-anchor" href="#hbui-gesturerecognizerbase"><span><code>hbui::GestureRecognizerBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::GestureRecognizerBase</span>
<span class="line">{</span>
<span class="line">  hbui::GestureRecognizerBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  hbui::IGestureListener *mGestureListener;</span>
<span class="line">  std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; mTrackingTouches;</span>
<span class="line">  std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; mTrackedTouchesWithinTouchesToRecognize;</span>
<span class="line">  float mPixelsPerCm;</span>
<span class="line">  std::function&lt;double __cdecl(void)&gt; mGetTimeS;</span>
<span class="line">  hbui::GestureRecognizerBase::GestureRecognizerState mState;</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  bool mSentTouchesBegan;</span>
<span class="line">  bool mSentTouchesMoved;</span>
<span class="line">  bool mSentTouchesEnded;</span>
<span class="line">  int mPriority;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturerecognizerbase-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-gesturerecognizerbase-vtbl"><span><code>hbui::GestureRecognizerBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::GestureRecognizerBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~GestureRecognizerBase)(hbui::GestureRecognizerBase *this);</span>
<span class="line">  void (__fastcall *onTouchesBegan)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::TouchEventData&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesMoved)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesEnded)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onGestureRecognized)(hbui::GestureRecognizerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-igesturelistener" tabindex="-1"><a class="header-anchor" href="#hbui-igesturelistener"><span><code>hbui::IGestureListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IGestureListener</span>
<span class="line">{</span>
<span class="line">  hbui::IGestureListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-igesturelistener-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-igesturelistener-vtbl"><span><code>hbui::IGestureListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IGestureListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IGestureListener)(hbui::IGestureListener *this);</span>
<span class="line">  void (__fastcall *onPanRecognized)(hbui::IGestureListener *this, const Vec2 *, const Vec2 *, const Vec2 *);</span>
<span class="line">  void (__fastcall *onPanCompleted)(hbui::IGestureListener *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *onFlingCompleted)(hbui::IGestureListener *this, const Vec2 *, const Vec2 *, float);</span>
<span class="line">  void (__fastcall *onTapRecognized)(hbui::IGestureListener *this, const Vec2 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-flingrecognizer" tabindex="-1"><a class="header-anchor" href="#hbui-flingrecognizer"><span><code>hbui::FlingRecognizer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FlingRecognizer : hbui::GestureRecognizerBase</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 mMinimumNumberOfTouches;</span>
<span class="line">  const unsigned __int64 mMaximumNumberOfTouches;</span>
<span class="line">  const long double mMaxFlingIntervalBetweenMovesS;</span>
<span class="line">  const float mMinDistanceToFlingCm;</span>
<span class="line">  Vec2 mPreviousLocation;</span>
<span class="line">  long double mPreviousTouchTimeForGesture;</span>
<span class="line">  long double mFlingStartTime;</span>
<span class="line">  Vec2 mFlingStart;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-flingrecognizer-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-flingrecognizer-vtbl"><span><code>hbui::FlingRecognizer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::FlingRecognizer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~GestureRecognizerBase)(hbui::GestureRecognizerBase *this);</span>
<span class="line">  void (__fastcall *onTouchesBegan)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::TouchEventData&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesMoved)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesEnded)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onGestureRecognized)(hbui::GestureRecognizerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itouchsystem" tabindex="-1"><a class="header-anchor" href="#hbui-itouchsystem"><span><code>hbui::ITouchSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ITouchSystem</span>
<span class="line">{</span>
<span class="line">  hbui::ITouchSystem_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itouchsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-itouchsystem-vtbl"><span><code>hbui::ITouchSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ITouchSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITouchSystem)(hbui::ITouchSystem *this);</span>
<span class="line">  void (__fastcall *sendTouchEvents)(hbui::ITouchSystem *this, const std::vector&lt;hbui::TouchEventData&gt; *);</span>
<span class="line">  void (__fastcall *sendGestureEvent)(hbui::ITouchSystem *this, const hbui::GestureEventData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturemanager" tabindex="-1"><a class="header-anchor" href="#hbui-gesturemanager"><span><code>hbui::GestureManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GestureManager</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;hbui::GestureRecognizerBase&gt;&gt; mRecognizers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturepolicy" tabindex="-1"><a class="header-anchor" href="#hbui-gesturepolicy"><span><code>hbui::GesturePolicy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GesturePolicy : hbui::IGestureListener</span>
<span class="line">{</span>
<span class="line">  hbui::ITouchSystem *mTouchSystem;</span>
<span class="line">  hbui::GestureManager mGestureManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gesturepolicy-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-gesturepolicy-vtbl"><span><code>hbui::GesturePolicy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::GesturePolicy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IGestureListener)(hbui::IGestureListener *this);</span>
<span class="line">  void (__fastcall *onPanRecognized)(hbui::IGestureListener *this, const Vec2 *, const Vec2 *, const Vec2 *);</span>
<span class="line">  void (__fastcall *onPanCompleted)(hbui::IGestureListener *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *onFlingCompleted)(hbui::IGestureListener *this, const Vec2 *, const Vec2 *, float);</span>
<span class="line">  void (__fastcall *onTapRecognized)(hbui::IGestureListener *this, const Vec2 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-taprecognizer" tabindex="-1"><a class="header-anchor" href="#hbui-taprecognizer"><span><code>hbui::TapRecognizer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::TapRecognizer : hbui::GestureRecognizerBase</span>
<span class="line">{</span>
<span class="line">  const unsigned int mMaximumNumberOfTouches;</span>
<span class="line">  const long double mTimeToleranceS;</span>
<span class="line">  const float mTapDistanceToleranceCm;</span>
<span class="line">  Vec2 mStartPoint;</span>
<span class="line">  long double mLastTouchTimestamp;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-taprecognizer-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-taprecognizer-vtbl"><span><code>hbui::TapRecognizer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::TapRecognizer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~GestureRecognizerBase)(hbui::GestureRecognizerBase *this);</span>
<span class="line">  void (__fastcall *onTouchesBegan)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::TouchEventData&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesMoved)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesEnded)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onGestureRecognized)(hbui::GestureRecognizerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-panrecognizer" tabindex="-1"><a class="header-anchor" href="#hbui-panrecognizer"><span><code>hbui::PanRecognizer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::PanRecognizer : hbui::GestureRecognizerBase</span>
<span class="line">{</span>
<span class="line">  const unsigned __int64 mMinimumNumberOfTouches;</span>
<span class="line">  const unsigned __int64 mMaximumNumberOfTouches;</span>
<span class="line">  const float mMinDistanceToPanCm;</span>
<span class="line">  float mTotalDeltaMovementInCm;</span>
<span class="line">  Vec2 mPreviousLocation;</span>
<span class="line">  Vec2 mStartPoint;</span>
<span class="line">  Vec2 mEndPoint;</span>
<span class="line">  Vec2 mDeltaTranslation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-panrecognizer-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-panrecognizer-vtbl"><span><code>hbui::PanRecognizer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::PanRecognizer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~GestureRecognizerBase)(hbui::GestureRecognizerBase *this);</span>
<span class="line">  void (__fastcall *onTouchesBegan)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::TouchEventData&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesMoved)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onTouchesEnded)(hbui::GestureRecognizerBase *this, const std::vector&lt;hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos&gt; *);</span>
<span class="line">  void (__fastcall *onGestureRecognized)(hbui::GestureRecognizerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui-registertoggleobservers-l8-lambda-65fa83552ca5e7be58a344e69c942bb3" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-registertoggleobservers-l8-lambda-65fa83552ca5e7be58a344e69c942bb3"><span><code>HummingbirdUI::_registerToggleObservers::__l8::&lt;lambda_65fa83552ca5e7be58a344e69c942bb3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HummingbirdUI::_registerToggleObservers::__l8::&lt;lambda_65fa83552ca5e7be58a344e69c942bb3&gt;</span>
<span class="line">{</span>
<span class="line">  HummingbirdUI *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui-registertoggleobservers-l5-lambda-ede23b58d9466ab0eecaabf665c4ae6f" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-registertoggleobservers-l5-lambda-ede23b58d9466ab0eecaabf665c4ae6f"><span><code>HummingbirdUI::_registerToggleObservers::__l5::&lt;lambda_ede23b58d9466ab0eecaabf665c4ae6f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HummingbirdUI::_registerToggleObservers::__l5::&lt;lambda_ede23b58d9466ab0eecaabf665c4ae6f&gt;</span>
<span class="line">{</span>
<span class="line">  HummingbirdUI *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui-registertoggleobservers-l2-lambda-04aa32db8b81ea2ad470eb40b776b578" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-registertoggleobservers-l2-lambda-04aa32db8b81ea2ad470eb40b776b578"><span><code>HummingbirdUI::_registerToggleObservers::__l2::&lt;lambda_04aa32db8b81ea2ad470eb40b776b578&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HummingbirdUI::_registerToggleObservers::__l2::&lt;lambda_04aa32db8b81ea2ad470eb40b776b578&gt;</span>
<span class="line">{</span>
<span class="line">  HummingbirdUI *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-scene-init-l2-lambda-a0f580796429890ad766443cc20dda62" tabindex="-1"><a class="header-anchor" href="#hbui-scene-init-l2-lambda-a0f580796429890ad766443cc20dda62"><span><code>hbui::Scene::init::__l2::&lt;lambda_a0f580796429890ad766443cc20dda62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Scene::init::__l2::&lt;lambda_a0f580796429890ad766443cc20dda62&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-scene-init-l2-lambda-b0e36d1425fd16211c03af30c4297f0b" tabindex="-1"><a class="header-anchor" href="#hbui-scene-init-l2-lambda-b0e36d1425fd16211c03af30c4297f0b"><span><code>hbui::Scene::init::__l2::&lt;lambda_b0e36d1425fd16211c03af30c4297f0b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Scene::init::__l2::&lt;lambda_b0e36d1425fd16211c03af30c4297f0b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-scene-init-l2-lambda-c102446960817e9a9b5b64dd6cc74790" tabindex="-1"><a class="header-anchor" href="#hbui-scene-init-l2-lambda-c102446960817e9a9b5b64dd6cc74790"><span><code>hbui::Scene::init::__l2::&lt;lambda_c102446960817e9a9b5b64dd6cc74790&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::Scene::init::__l2::&lt;lambda_c102446960817e9a9b5b64dd6cc74790&gt;</span>
<span class="line">{</span>
<span class="line">  hbui::Scene *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-sceneprovider-createscene-l2-lambda-b8946bc37d35e6137b2e4d7a3bcc47ca" tabindex="-1"><a class="header-anchor" href="#hbui-sceneprovider-createscene-l2-lambda-b8946bc37d35e6137b2e4d7a3bcc47ca"><span><code>hbui::SceneProvider::createScene::__l2::&lt;lambda_b8946bc37d35e6137b2e4d7a3bcc47ca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::SceneProvider::createScene::__l2::&lt;lambda_b8946bc37d35e6137b2e4d7a3bcc47ca&gt;</span>
<span class="line">{</span>
<span class="line">  ISceneStack *sceneStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gamepadstate" tabindex="-1"><a class="header-anchor" href="#hbui-gamepadstate"><span><code>hbui::GamepadState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::GamepadState</span>
<span class="line">{</span>
<span class="line">  int gamepadId;</span>
<span class="line">  std::array&lt;enum hbui::GamepadButtonState,33&gt; buttonStates;</span>
<span class="line">  std::array&lt;float,33&gt; buttonValues;</span>
<span class="line">  std::array&lt;float,4&gt; axisStates;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-gamecontrollerinputhandler" tabindex="-1"><a class="header-anchor" href="#hbui-gamecontrollerinputhandler"><span><code>hbui::GameControllerInputHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::GameControllerInputHandler</span>
<span class="line">{</span>
<span class="line">  IGameControllerManager *mGameControllerManager;</span>
<span class="line">  std::vector&lt;hbui::GamepadState&gt; mGamepadStates;</span>
<span class="line">  bool mWasActiveLastTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-igamepadsystem" tabindex="-1"><a class="header-anchor" href="#hbui-igamepadsystem"><span><code>hbui::IGamepadSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::IGamepadSystem</span>
<span class="line">{</span>
<span class="line">  hbui::IGamepadSystem_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-igamepadsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-igamepadsystem-vtbl"><span><code>hbui::IGamepadSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::IGamepadSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IGamepadSystem)(hbui::IGamepadSystem *this);</span>
<span class="line">  void (__fastcall *registerGamepad)(hbui::IGamepadSystem *this, int, const std::string *);</span>
<span class="line">  void (__fastcall *unregisterGamepad)(hbui::IGamepadSystem *this, int);</span>
<span class="line">  void (__fastcall *updateGamepadState)(hbui::IGamepadSystem *this, hbui::GamepadState *, float);</span>
<span class="line">  void (__fastcall *updateGamepadStateExtended)(hbui::IGamepadSystem *this, const hbui::GamepadState *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itouchinput" tabindex="-1"><a class="header-anchor" href="#hbui-itouchinput"><span><code>hbui::ITouchInput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::ITouchInput</span>
<span class="line">{</span>
<span class="line">  hbui::ITouchInput_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-itouchinput-vtbl" tabindex="-1"><a class="header-anchor" href="#hbui-itouchinput-vtbl"><span><code>hbui::ITouchInput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ hbui::ITouchInput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITouchInput)(hbui::ITouchInput *this);</span>
<span class="line">  const std::vector&lt;int&gt; *(__fastcall *getActivePointerIdsThisUpdate)(hbui::ITouchInput *this, const std::vector&lt;int&gt; *result);</span>
<span class="line">  __int16 (__fastcall *getX)(hbui::ITouchInput *this, int);</span>
<span class="line">  __int16 (__fastcall *getY)(hbui::ITouchInput *this, int);</span>
<span class="line">  bool (__fastcall *isPressed)(hbui::ITouchInput *this, int);</span>
<span class="line">  bool (__fastcall *isEdgeTouch)(hbui::ITouchInput *this, int);</span>
<span class="line">  bool (__fastcall *isPointerDown)(hbui::ITouchInput *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-activetouch" tabindex="-1"><a class="header-anchor" href="#hbui-activetouch"><span><code>hbui::ActiveTouch</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) hbui::ActiveTouch</span>
<span class="line">{</span>
<span class="line">  int id;</span>
<span class="line">  Vec2 origin;</span>
<span class="line">  Vec2 currentLocation;</span>
<span class="line">  bool hasMoved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-touchinputhandler" tabindex="-1"><a class="header-anchor" href="#hbui-touchinputhandler"><span><code>hbui::TouchInputHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::TouchInputHandler</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;hbui::ITouchInput&gt; mTouchInput;</span>
<span class="line">  std::unique_ptr&lt;hbui::ITouchSystem&gt; mTouchSystem;</span>
<span class="line">  std::unique_ptr&lt;hbui::GesturePolicy&gt; mGesturePolicy;</span>
<span class="line">  std::vector&lt;hbui::ActiveTouch&gt; mActiveTouches;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-addachievementsroutetomatcher-l5-lambda-81c8189686239e53df73b08a181027a5" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-addachievementsroutetomatcher-l5-lambda-81c8189686239e53df73b08a181027a5"><span><code>hbui::RouterConfiguration::_addAchievementsRouteToMatcher::__l5::&lt;lambda_81c8189686239e53df73b08a181027a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration::_addAchievementsRouteToMatcher::__l5::&lt;lambda_81c8189686239e53df73b08a181027a5&gt;</span>
<span class="line">{</span>
<span class="line">  SceneFactory *sceneFactory;</span>
<span class="line">  ISceneStack *sceneStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-addpersonaroutetomatcher-l9-lambda-4e587607a05bd4df095d17592af911f5" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-addpersonaroutetomatcher-l9-lambda-4e587607a05bd4df095d17592af911f5"><span><code>hbui::RouterConfiguration::_addPersonaRouteToMatcher::__l9::&lt;lambda_4e587607a05bd4df095d17592af911f5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration::_addPersonaRouteToMatcher::__l9::&lt;lambda_4e587607a05bd4df095d17592af911f5&gt;</span>
<span class="line">{</span>
<span class="line">  SceneFactory *sceneFactory;</span>
<span class="line">  ISceneStack *sceneStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-createoutofgameroutematcher-l9-lambda-e7171c66b973a5665fbb403dbb2c2862" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-createoutofgameroutematcher-l9-lambda-e7171c66b973a5665fbb403dbb2c2862"><span><code>hbui::RouterConfiguration::createOutOfGameRouteMatcher::__l9::&lt;lambda_e7171c66b973a5665fbb403dbb2c2862&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration::createOutOfGameRouteMatcher::__l9::&lt;lambda_e7171c66b973a5665fbb403dbb2c2862&gt;</span>
<span class="line">{</span>
<span class="line">  SceneFactory *sceneFactory;</span>
<span class="line">  ISceneStack *sceneStack;</span>
<span class="line">  const hbui::Route *routeEntry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-createingameroutematcher-l9-lambda-b1e01b8ba6fa85f066e412929aa6b2d5" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-createingameroutematcher-l9-lambda-b1e01b8ba6fa85f066e412929aa6b2d5"><span><code>hbui::RouterConfiguration::createInGameRouteMatcher::__l9::&lt;lambda_b1e01b8ba6fa85f066e412929aa6b2d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration::createInGameRouteMatcher::__l9::&lt;lambda_b1e01b8ba6fa85f066e412929aa6b2d5&gt;</span>
<span class="line">{</span>
<span class="line">  SceneFactory *sceneFactory;</span>
<span class="line">  ISceneStack *sceneStack;</span>
<span class="line">  const hbui::Route *routeEntry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-router-onchange-l2-lambda-ca382762252883c93e5f24dc2b0c8635" tabindex="-1"><a class="header-anchor" href="#hbui-router-onchange-l2-lambda-ca382762252883c93e5f24dc2b0c8635"><span><code>hbui::Router::_onChange::__l2::&lt;lambda_ca382762252883c93e5f24dc2b0c8635&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) hbui::Router::_onChange::__l2::&lt;lambda_ca382762252883c93e5f24dc2b0c8635&gt;</span>
<span class="line">{</span>
<span class="line">  const std::optional&lt;hbui::RouterLocation&gt; previousLocation;</span>
<span class="line">  const hbui::RouterLocation currentLocation;</span>
<span class="line">  const hbui::RouterAction action;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-loadjsonfromhybridresources-l6-lambda-44461f9abae851eab9a9c18a435bebbd" tabindex="-1"><a class="header-anchor" href="#hbui-loadjsonfromhybridresources-l6-lambda-44461f9abae851eab9a9c18a435bebbd"><span><code>hbui::loadJsonFromHybridResources::__l6::&lt;lambda_44461f9abae851eab9a9c18a435bebbd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::loadJsonFromHybridResources::__l6::&lt;lambda_44461f9abae851eab9a9c18a435bebbd&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *resourceStream;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller"><span><code>HdrCalibrationScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HdrCalibrationScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  float mCalibrationSliderPercent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller-vtbl"><span><code>HdrCalibrationScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HdrCalibrationScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller"><span><code>HowToPlayScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HowToPlayScreenController : MainMenuScreenController</span>
<span class="line">{</span>
<span class="line">  std::string mCurrentTabTitle;</span>
<span class="line">  HowToPlayTopicIndex mCurrentTab;</span>
<span class="line">  HowToPlayTopicIndex mInitialTab;</span>
<span class="line">  bool mInitialTabSelected;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-vtbl"><span><code>HowToPlayScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HowToPlayScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontrollerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontrollerproxycallbacks"><span><code>HowToPlayScreenControllerProxyCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenControllerProxyCallbacks</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(int)&gt; mChangeTab;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontrollerproxy" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontrollerproxy"><span><code>HowToPlayScreenControllerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenControllerProxy : ScreenControllerProxy</span>
<span class="line">{</span>
<span class="line">  const HowToPlayScreenControllerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontrollerproxy-vtbl" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontrollerproxy-vtbl"><span><code>HowToPlayScreenControllerProxy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HowToPlayScreenControllerProxy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registereventhandlers-l2-lambda-df79304cc9649fb67bf9353cd28ebf6e" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registereventhandlers-l2-lambda-df79304cc9649fb67bf9353cd28ebf6e"><span><code>HowToPlayScreenController::_registerEventHandlers::__l2::&lt;lambda_df79304cc9649fb67bf9353cd28ebf6e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerEventHandlers::__l2::&lt;lambda_df79304cc9649fb67bf9353cd28ebf6e&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registereventhandlers-l2-lambda-8ed3ed5e7ff5517b92878b3114b94405" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registereventhandlers-l2-lambda-8ed3ed5e7ff5517b92878b3114b94405"><span><code>HowToPlayScreenController::_registerEventHandlers::__l2::&lt;lambda_8ed3ed5e7ff5517b92878b3114b94405&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerEventHandlers::__l2::&lt;lambda_8ed3ed5e7ff5517b92878b3114b94405&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24"><span><code>HowToPlayScreenController::_registerControllerCallbacks::__l2::&lt;lambda_3df758b5b4c13cd9b28dec94ab6a2f24&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerControllerCallbacks::__l2::&lt;lambda_3df758b5b4c13cd9b28dec94ab6a2f24&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24-l2-lambda-696e9f1d37641dc281f8ace2b56e28eb" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24-l2-lambda-696e9f1d37641dc281f8ace2b56e28eb"><span><code>HowToPlayScreenController::_registerControllerCallbacks::__l2::&lt;lambda_3df758b5b4c13cd9b28dec94ab6a2f24&gt;::()::__l2::&lt;lambda_696e9f1d37641dc281f8ace2b56e28eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerControllerCallbacks::__l2::&lt;lambda_3df758b5b4c13cd9b28dec94ab6a2f24&gt;::()::__l2::&lt;lambda_696e9f1d37641dc281f8ace2b56e28eb&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-98980cad79d6be51a970ed8b8a173214" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-98980cad79d6be51a970ed8b8a173214"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_98980cad79d6be51a970ed8b8a173214&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_98980cad79d6be51a970ed8b8a173214&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-3e638c576b835e1ca482eeb052965021" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-3e638c576b835e1ca482eeb052965021"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_3e638c576b835e1ca482eeb052965021&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_3e638c576b835e1ca482eeb052965021&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-7df109e05f81532ad44d42e1d67f6a9e" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-7df109e05f81532ad44d42e1d67f6a9e"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_7df109e05f81532ad44d42e1d67f6a9e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_7df109e05f81532ad44d42e1d67f6a9e&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-09d820a0cb2cc4cac0a8a8313d479d20" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-09d820a0cb2cc4cac0a8a8313d479d20"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_09d820a0cb2cc4cac0a8a8313d479d20&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_09d820a0cb2cc4cac0a8a8313d479d20&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-e03c3214a50b8f20f4a5670fcc3b81ff" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-e03c3214a50b8f20f4a5670fcc3b81ff"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_e03c3214a50b8f20f4a5670fcc3b81ff&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_e03c3214a50b8f20f4a5670fcc3b81ff&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-9ce3b3187c64fdea79f2e075c2b0e68c" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-9ce3b3187c64fdea79f2e075c2b0e68c"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_9ce3b3187c64fdea79f2e075c2b0e68c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_9ce3b3187c64fdea79f2e075c2b0e68c&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-a893d1a64f2d99f078fe2b0ca5f81962" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-a893d1a64f2d99f078fe2b0ca5f81962"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_a893d1a64f2d99f078fe2b0ca5f81962&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_a893d1a64f2d99f078fe2b0ca5f81962&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-013a21fcd39d0c31c90d5c67a77acc75" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-013a21fcd39d0c31c90d5c67a77acc75"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_013a21fcd39d0c31c90d5c67a77acc75&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_013a21fcd39d0c31c90d5c67a77acc75&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-dd5bc4d1a3b691c61f18e7e5ff239919" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-dd5bc4d1a3b691c61f18e7e5ff239919"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_dd5bc4d1a3b691c61f18e7e5ff239919&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_dd5bc4d1a3b691c61f18e7e5ff239919&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-cc9c32b4c0f9d03fa404b76987170fd6" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-cc9c32b4c0f9d03fa404b76987170fd6"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_cc9c32b4c0f9d03fa404b76987170fd6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_cc9c32b4c0f9d03fa404b76987170fd6&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-2082268c4a2becb732c3d6439028974e" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-2082268c4a2becb732c3d6439028974e"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_2082268c4a2becb732c3d6439028974e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_2082268c4a2becb732c3d6439028974e&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-291b19c5d96adffbb9e7233717fc17be" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-291b19c5d96adffbb9e7233717fc17be"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_291b19c5d96adffbb9e7233717fc17be&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_291b19c5d96adffbb9e7233717fc17be&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-15a24123e7032ce14c4f6a0cddfb6aec" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-15a24123e7032ce14c4f6a0cddfb6aec"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_15a24123e7032ce14c4f6a0cddfb6aec&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_15a24123e7032ce14c4f6a0cddfb6aec&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-registerbindings-l2-lambda-ebc5cd8dba9baf966beeb4271f47b30c" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-registerbindings-l2-lambda-ebc5cd8dba9baf966beeb4271f47b30c"><span><code>HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_ebc5cd8dba9baf966beeb4271f47b30c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::_registerBindings::__l2::&lt;lambda_ebc5cd8dba9baf966beeb4271f47b30c&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="howtoplayscreencontroller-ctor-l2-lambda-1a1204ee0fbb79e5ac63c518e03feff6" tabindex="-1"><a class="header-anchor" href="#howtoplayscreencontroller-ctor-l2-lambda-1a1204ee0fbb79e5ac63c518e03feff6"><span><code>HowToPlayScreenController::{ctor}::__l2::&lt;lambda_1a1204ee0fbb79e5ac63c518e03feff6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HowToPlayScreenController::{ctor}::__l2::&lt;lambda_1a1204ee0fbb79e5ac63c518e03feff6&gt;</span>
<span class="line">{</span>
<span class="line">  HowToPlayScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller-registerbindings-l2-lambda-0090d31c2cd362a2b64f1c680f920a17" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller-registerbindings-l2-lambda-0090d31c2cd362a2b64f1c680f920a17"><span><code>HdrCalibrationScreenController::_registerBindings::__l2::&lt;lambda_0090d31c2cd362a2b64f1c680f920a17&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HdrCalibrationScreenController::_registerBindings::__l2::&lt;lambda_0090d31c2cd362a2b64f1c680f920a17&gt;</span>
<span class="line">{</span>
<span class="line">  HdrCalibrationScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller-registerbindings-l2-lambda-af0e07900b26df6861fa15ee3c18d3c2" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller-registerbindings-l2-lambda-af0e07900b26df6861fa15ee3c18d3c2"><span><code>HdrCalibrationScreenController::_registerBindings::__l2::&lt;lambda_af0e07900b26df6861fa15ee3c18d3c2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HdrCalibrationScreenController::_registerBindings::__l2::&lt;lambda_af0e07900b26df6861fa15ee3c18d3c2&gt;</span>
<span class="line">{</span>
<span class="line">  HdrCalibrationScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-e31c3805daa310b61ad09c3ee7e5a55a" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-e31c3805daa310b61ad09c3ee7e5a55a"><span><code>HdrCalibrationScreenController::_registerEventHandlers::__l2::&lt;lambda_e31c3805daa310b61ad09c3ee7e5a55a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HdrCalibrationScreenController::_registerEventHandlers::__l2::&lt;lambda_e31c3805daa310b61ad09c3ee7e5a55a&gt;</span>
<span class="line">{</span>
<span class="line">  HdrCalibrationScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-d5a504e56c9f0309e2a9176fd48019d0" tabindex="-1"><a class="header-anchor" href="#hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-d5a504e56c9f0309e2a9176fd48019d0"><span><code>HdrCalibrationScreenController::_registerEventHandlers::__l2::&lt;lambda_d5a504e56c9f0309e2a9176fd48019d0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HdrCalibrationScreenController::_registerEventHandlers::__l2::&lt;lambda_d5a504e56c9f0309e2a9176fd48019d0&gt;</span>
<span class="line">{</span>
<span class="line">  HdrCalibrationScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-vtbl"><span><code>HudScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registertooltips-l5-lambda-612dea3e7018646313e2faa32f42c26e" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registertooltips-l5-lambda-612dea3e7018646313e2faa32f42c26e"><span><code>HudScreenController::_registerTooltips::__l5::&lt;lambda_612dea3e7018646313e2faa32f42c26e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerTooltips::__l5::&lt;lambda_612dea3e7018646313e2faa32f42c26e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registertooltips-l5-lambda-2915616f499390bbcede6846322347ad" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registertooltips-l5-lambda-2915616f499390bbcede6846322347ad"><span><code>HudScreenController::_registerTooltips::__l5::&lt;lambda_2915616f499390bbcede6846322347ad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerTooltips::__l5::&lt;lambda_2915616f499390bbcede6846322347ad&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registertooltips-l5-lambda-7f648107bc38bb342441c4168205c24d" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registertooltips-l5-lambda-7f648107bc38bb342441c4168205c24d"><span><code>HudScreenController::_registerTooltips::__l5::&lt;lambda_7f648107bc38bb342441c4168205c24d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerTooltips::__l5::&lt;lambda_7f648107bc38bb342441c4168205c24d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registertooltips-l5-lambda-c8ef105c332367b5272a0c12f091592c" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registertooltips-l5-lambda-c8ef105c332367b5272a0c12f091592c"><span><code>HudScreenController::_registerTooltips::__l5::&lt;lambda_c8ef105c332367b5272a0c12f091592c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerTooltips::__l5::&lt;lambda_c8ef105c332367b5272a0c12f091592c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registertooltips-l2-lambda-aa7f61a620b28af03619de18f5f993b4" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registertooltips-l2-lambda-aa7f61a620b28af03619de18f5f993b4"><span><code>HudScreenController::_registerTooltips::__l2::&lt;lambda_aa7f61a620b28af03619de18f5f993b4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerTooltips::__l2::&lt;lambda_aa7f61a620b28af03619de18f5f993b4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-fcb18562d72831645bebf861fdbf02a3" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-fcb18562d72831645bebf861fdbf02a3"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_fcb18562d72831645bebf861fdbf02a3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_fcb18562d72831645bebf861fdbf02a3&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-33ace497c08bbdbd85bf4001f20e22e6" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-33ace497c08bbdbd85bf4001f20e22e6"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_33ace497c08bbdbd85bf4001f20e22e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_33ace497c08bbdbd85bf4001f20e22e6&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-9f199990a0b5ca789dab498388215a16" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-9f199990a0b5ca789dab498388215a16"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_9f199990a0b5ca789dab498388215a16&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_9f199990a0b5ca789dab498388215a16&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-dac0e6bb1a7406d99e29528a46bd7e58" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-dac0e6bb1a7406d99e29528a46bd7e58"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_dac0e6bb1a7406d99e29528a46bd7e58&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_dac0e6bb1a7406d99e29528a46bd7e58&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-4fd4c19a1f90e062769f9cb8be417707" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-4fd4c19a1f90e062769f9cb8be417707"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_4fd4c19a1f90e062769f9cb8be417707&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_4fd4c19a1f90e062769f9cb8be417707&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l4-lambda-da91a43e8ee85cc522816548750ccfb3" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l4-lambda-da91a43e8ee85cc522816548750ccfb3"><span><code>HudScreenController::_registerEventHandlers::__l4::&lt;lambda_da91a43e8ee85cc522816548750ccfb3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HudScreenController::_registerEventHandlers::__l4::&lt;lambda_da91a43e8ee85cc522816548750ccfb3&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">  int i;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-a93ebc1a35c9b83cd387ef55c5566cff" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-a93ebc1a35c9b83cd387ef55c5566cff"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_a93ebc1a35c9b83cd387ef55c5566cff&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_a93ebc1a35c9b83cd387ef55c5566cff&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-4819de47fe36d9e12608ee0f8134edf8" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-4819de47fe36d9e12608ee0f8134edf8"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_4819de47fe36d9e12608ee0f8134edf8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_4819de47fe36d9e12608ee0f8134edf8&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-df72e0e5dae7626d909fab6738c73a52" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-df72e0e5dae7626d909fab6738c73a52"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_df72e0e5dae7626d909fab6738c73a52&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_df72e0e5dae7626d909fab6738c73a52&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-9cf50b366d8387dd95be8c064fd6b39b" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-9cf50b366d8387dd95be8c064fd6b39b"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_9cf50b366d8387dd95be8c064fd6b39b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_9cf50b366d8387dd95be8c064fd6b39b&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-registereventhandlers-l2-lambda-e639e2da445daa176c2ec1175dd978eb" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-registereventhandlers-l2-lambda-e639e2da445daa176c2ec1175dd978eb"><span><code>HudScreenController::_registerEventHandlers::__l2::&lt;lambda_e639e2da445daa176c2ec1175dd978eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_registerEventHandlers::__l2::&lt;lambda_e639e2da445daa176c2ec1175dd978eb&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-selectslot-l2-lambda-1c7e7760850e81b8138b17aa3d0e7ea6" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-selectslot-l2-lambda-1c7e7760850e81b8138b17aa3d0e7ea6"><span><code>HudScreenController::_selectSlot::__l2::&lt;lambda_1c7e7760850e81b8138b17aa3d0e7ea6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_selectSlot::__l2::&lt;lambda_1c7e7760850e81b8138b17aa3d0e7ea6&gt;</span>
<span class="line">{</span>
<span class="line">  int *slot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-ctor-l2-lambda-524a1af1e618de3686b438edfbe6d5e4" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-ctor-l2-lambda-524a1af1e618de3686b438edfbe6d5e4"><span><code>HudScreenController::{ctor}::__l2::&lt;lambda_524a1af1e618de3686b438edfbe6d5e4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::{ctor}::__l2::&lt;lambda_524a1af1e618de3686b438edfbe6d5e4&gt;</span>
<span class="line">{</span>
<span class="line">  HudScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holouiscreensetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holouiscreensetupcleanupstrategy"><span><code>HoloUIScreenSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloUIScreenSetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holouiscreensetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holouiscreensetupcleanupstrategy-vtbl"><span><code>HoloUIScreenSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloUIScreenSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  Matrix *(__fastcall *_generateMatrixPatch)(HoloUIScreenSetupCleanupStrategy *this, Matrix *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holohudscreensetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holohudscreensetupcleanupstrategy"><span><code>HoloHUDScreenSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloHUDScreenSetupCleanupStrategy : HoloUIScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holohudscreensetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holohudscreensetupcleanupstrategy-vtbl"><span><code>HoloHUDScreenSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloHUDScreenSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  Matrix *(__fastcall *_generateMatrixPatch)(HoloUIScreenSetupCleanupStrategy *this, Matrix *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoingameuiscreensetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holoingameuiscreensetupcleanupstrategy"><span><code>HoloIngameUIScreenSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloIngameUIScreenSetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoingameuiscreensetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holoingameuiscreensetupcleanupstrategy-vtbl"><span><code>HoloIngameUIScreenSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloIngameUIScreenSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  Matrix *(__fastcall *_generateMatrixPatch)(HoloIngameUIScreenSetupCleanupStrategy *this, Matrix *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoplayspacesetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holoplayspacesetupcleanupstrategy"><span><code>HoloPlayspaceSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloPlayspaceSetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoplayspacesetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holoplayspacesetupcleanupstrategy-vtbl"><span><code>HoloPlayspaceSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloPlayspaceSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holorealitysetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holorealitysetupcleanupstrategy"><span><code>HoloRealitySetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloRealitySetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holorealitysetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holorealitysetupcleanupstrategy-vtbl"><span><code>HoloRealitySetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloRealitySetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoscreensetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holoscreensetupcleanupstrategy"><span><code>HoloScreenSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloScreenSetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoscreensetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holoscreensetupcleanupstrategy-vtbl"><span><code>HoloScreenSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloScreenSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoviewersetupcleanupstrategy" tabindex="-1"><a class="header-anchor" href="#holoviewersetupcleanupstrategy"><span><code>HoloViewerSetupCleanupStrategy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoloViewerSetupCleanupStrategy : AbstractScreenSetupCleanupStrategy</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  Matrix mLastMatrixPatch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holoviewersetupcleanupstrategy-vtbl" tabindex="-1"><a class="header-anchor" href="#holoviewersetupcleanupstrategy-vtbl"><span><code>HoloViewerSetupCleanupStrategy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoloViewerSetupCleanupStrategy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AbstractScreenSetupCleanupStrategy)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">  void (__fastcall *setupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *cleanupScreen)(AbstractScreenSetupCleanupStrategy *this, ScreenContext *);</span>
<span class="line">  EyeRenderingModeBit (__fastcall *getEyeRenderingMode)(AbstractScreenSetupCleanupStrategy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitbox" tabindex="-1"><a class="header-anchor" href="#hitbox"><span><code>Hitbox</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Hitbox</span>
<span class="line">{</span>
<span class="line">  Vec3 mPivot;</span>
<span class="line">  AABB mAabb;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hangingactor" tabindex="-1"><a class="header-anchor" href="#hangingactor"><span><code>HangingActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HangingActor : Actor</span>
<span class="line">{</span>
<span class="line">  int mDir;</span>
<span class="line">  int mCheckInterval;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hangingactor-vtbl" tabindex="-1"><a class="header-anchor" href="#hangingactor-vtbl"><span><code>HangingActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HangingActor_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *setDir)(HangingActor *this, int);</span>
<span class="line">  int (__fastcall *getWidth)(HangingActor *this);</span>
<span class="line">  int (__fastcall *getHeight)(HangingActor *this);</span>
<span class="line">  void (__fastcall *dropItem)(HangingActor *this);</span>
<span class="line">  bool (__fastcall *placeHangingEntity)(HangingActor *this, BlockSource *, int);</span>
<span class="line">  bool (__fastcall *wouldSurvive)(HangingActor *this, BlockSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmodel" tabindex="-1"><a class="header-anchor" href="#humanoidmodel"><span><code>HumanoidModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HumanoidModel : Model</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mArmor;</span>
<span class="line">  mce::MaterialPtr mArmorLeather;</span>
<span class="line">  mce::MaterialPtr mArmorEnchanted;</span>
<span class="line">  mce::MaterialPtr mArmorLeatherEnchanted;</span>
<span class="line">  ModelPart mHead;</span>
<span class="line">  ModelPart mHat;</span>
<span class="line">  ModelPart mBody;</span>
<span class="line">  ModelPart mRightArm;</span>
<span class="line">  ModelPart mLeftArm;</span>
<span class="line">  ModelPart mRightLeg;</span>
<span class="line">  ModelPart mLeftLeg;</span>
<span class="line">  ModelPart mRightItem;</span>
<span class="line">  ModelPart mLeftItem;</span>
<span class="line">  ModelPart mWaist;</span>
<span class="line">  ModelPart mBottom;</span>
<span class="line">  ModelPart mBodyArmorOffset;</span>
<span class="line">  ModelPart mHelmetArmorOffset;</span>
<span class="line">  ModelPart mRightArmArmorOffset;</span>
<span class="line">  ModelPart mLeftArmArmorOffset;</span>
<span class="line">  ModelPart mRightBootArmorOffset;</span>
<span class="line">  ModelPart mLeftBootArmorOffset;</span>
<span class="line">  ModelPart mWaistArmorOffset;</span>
<span class="line">  ModelPart mRightLegArmorOffset;</span>
<span class="line">  ModelPart mLeftLegArmorOffset;</span>
<span class="line">  bool mDamageNearbyMobs;</span>
<span class="line">  bool mSneaking;</span>
<span class="line">  float mSwimAmount;</span>
<span class="line">  float mChargeAmount;</span>
<span class="line">  bool mBowAndArrow;</span>
<span class="line">  bool mCrossbow;</span>
<span class="line">  bool mMainHandShield;</span>
<span class="line">  bool mOffHandShield;</span>
<span class="line">  bool mSpear;</span>
<span class="line">  bool mCharging;</span>
<span class="line">  bool mIsGliding;</span>
<span class="line">  float mGlidingSpeedValue;</span>
<span class="line">  float mUseItemStartupProgress;</span>
<span class="line">  float mUseItemIntervalProgress;</span>
<span class="line">  int mUseItemInvervalAxis;</span>
<span class="line">  float mShieldBlockProgress;</span>
<span class="line">  SkinAdjustments mSkinAdjustments;</span>
<span class="line">  std::array&lt;ModelPart *,13&gt; mBindParts;</span>
<span class="line">  SkinAdjustments mBaseSkinAdjustments;</span>
<span class="line">  float mHoldingHand[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmodel-vtbl" tabindex="-1"><a class="header-anchor" href="#humanoidmodel-vtbl"><span><code>HumanoidModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HumanoidModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *clear)(Model *this);</span>
<span class="line">  void (__fastcall *preDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *postDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *prepareMobModel)(Model *this, Mob *, float, float, float);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffsetPosition)(Model *this, Vec3 *result, bool);</span>
<span class="line">  void (__fastcall *renderAniModel)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  void (__fastcall *renderMod)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *youngTransform)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  float (__fastcall *getHeightAdjustment)(Model *this);</span>
<span class="line">  AABB *(__fastcall *buildAABB)(Model *this, AABB *result);</span>
<span class="line">  void (__fastcall *renderAniModel)(HumanoidModel *this, ScreenContext *, int, float, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsemodel" tabindex="-1"><a class="header-anchor" href="#horsemodel"><span><code>HorseModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseModel : Model</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mDefaultMaterial;</span>
<span class="line">  mce::MaterialPtr mLeatherArmorMaterial;</span>
<span class="line">  mce::MaterialPtr mSaddleMaterial;</span>
<span class="line">  mce::MaterialPtr mHairMaterial;</span>
<span class="line">  ModelPart Head;</span>
<span class="line">  ModelPart UMouth;</span>
<span class="line">  ModelPart LMouth;</span>
<span class="line">  ModelPart Ear1;</span>
<span class="line">  ModelPart Ear2;</span>
<span class="line">  ModelPart MuleEarL;</span>
<span class="line">  ModelPart MuleEarR;</span>
<span class="line">  ModelPart Neck;</span>
<span class="line">  ModelPart HeadSaddle;</span>
<span class="line">  ModelPart Mane;</span>
<span class="line">  ModelPart Body;</span>
<span class="line">  ModelPart TailA;</span>
<span class="line">  ModelPart TailB;</span>
<span class="line">  ModelPart TailC;</span>
<span class="line">  ModelPart Leg1A;</span>
<span class="line">  ModelPart Leg1B;</span>
<span class="line">  ModelPart Leg1C;</span>
<span class="line">  ModelPart Leg2A;</span>
<span class="line">  ModelPart Leg2B;</span>
<span class="line">  ModelPart Leg2C;</span>
<span class="line">  ModelPart Leg3A;</span>
<span class="line">  ModelPart Leg3B;</span>
<span class="line">  ModelPart Leg3C;</span>
<span class="line">  ModelPart Leg4A;</span>
<span class="line">  ModelPart Leg4B;</span>
<span class="line">  ModelPart Leg4C;</span>
<span class="line">  ModelPart Bag1;</span>
<span class="line">  ModelPart Bag2;</span>
<span class="line">  ModelPart Saddle;</span>
<span class="line">  ModelPart SaddleB;</span>
<span class="line">  ModelPart SaddleC;</span>
<span class="line">  ModelPart SaddleL;</span>
<span class="line">  ModelPart SaddleL2;</span>
<span class="line">  ModelPart SaddleR;</span>
<span class="line">  ModelPart SaddleR2;</span>
<span class="line">  ModelPart SaddleMouthL;</span>
<span class="line">  ModelPart SaddleMouthR;</span>
<span class="line">  ModelPart SaddleMouthLine;</span>
<span class="line">  ModelPart SaddleMouthLineR;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsemodel-vtbl" tabindex="-1"><a class="header-anchor" href="#horsemodel-vtbl"><span><code>HorseModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *clear)(Model *this);</span>
<span class="line">  void (__fastcall *preDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *postDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *prepareMobModel)(Model *this, Mob *, float, float, float);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffsetPosition)(Model *this, Vec3 *result, bool);</span>
<span class="line">  void (__fastcall *renderAniModel)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  void (__fastcall *renderMod)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *youngTransform)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  float (__fastcall *getHeightAdjustment)(Model *this);</span>
<span class="line">  AABB *(__fastcall *buildAABB)(Model *this, AABB *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horse" tabindex="-1"><a class="header-anchor" href="#horse"><span><code>Horse</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Horse : Animal</span>
<span class="line">{</span>
<span class="line">  std::string layerTextureHashName;</span>
<span class="line">  std::string layerTextureLayers[3];</span>
<span class="line">  bool mHasReproduced;</span>
<span class="line">  bool mLandedOnGround;</span>
<span class="line">  float mEatAnim;</span>
<span class="line">  float mEatAnimO;</span>
<span class="line">  float mStandAnim;</span>
<span class="line">  float mStandAnimO;</span>
<span class="line">  float mMouthAnim;</span>
<span class="line">  float mMouthAnimO;</span>
<span class="line">  int mCountEating;</span>
<span class="line">  int mMouthCounter;</span>
<span class="line">  int mStandCounter;</span>
<span class="line">  int mSprintCounter;</span>
<span class="line">  int mGallopSoundCounter;</span>
<span class="line">  int mTailCounter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsemodelv2" tabindex="-1"><a class="header-anchor" href="#horsemodelv2"><span><code>HorseModelV2</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HorseModelV2 : Model</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mDefaultMaterial;</span>
<span class="line">  mce::MaterialPtr mLeatherArmorMaterial;</span>
<span class="line">  mce::MaterialPtr mSaddleMaterial;</span>
<span class="line">  mce::MaterialPtr mHairMaterial;</span>
<span class="line">  Vec3 mRestFrontLegPos;</span>
<span class="line">  Vec3 mRestBagPos;</span>
<span class="line">  ModelPart mHead;</span>
<span class="line">  ModelPart mUMouth;</span>
<span class="line">  ModelPart mEar1;</span>
<span class="line">  ModelPart mEar2;</span>
<span class="line">  ModelPart mMuleEarL;</span>
<span class="line">  ModelPart mMuleEarR;</span>
<span class="line">  ModelPart mNeck;</span>
<span class="line">  ModelPart mHeadSaddle;</span>
<span class="line">  ModelPart mMane;</span>
<span class="line">  ModelPart mBody;</span>
<span class="line">  ModelPart mTailA;</span>
<span class="line">  ModelPart mLeg1A;</span>
<span class="line">  ModelPart mLeg2A;</span>
<span class="line">  ModelPart mLeg3A;</span>
<span class="line">  ModelPart mLeg4A;</span>
<span class="line">  ModelPart mBag1;</span>
<span class="line">  ModelPart mBag2;</span>
<span class="line">  ModelPart mSaddle;</span>
<span class="line">  ModelPart mSaddleB;</span>
<span class="line">  ModelPart mSaddleC;</span>
<span class="line">  ModelPart mSaddleL;</span>
<span class="line">  ModelPart mSaddleL2;</span>
<span class="line">  ModelPart mSaddleR;</span>
<span class="line">  ModelPart mSaddleR2;</span>
<span class="line">  ModelPart mSaddleMouthL;</span>
<span class="line">  ModelPart mSaddleMouthR;</span>
<span class="line">  ModelPart mSaddleMouthLine;</span>
<span class="line">  ModelPart mSaddleMouthLineR;</span>
<span class="line">  float mBabyLegInitialUpscale;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsemodelv2-vtbl" tabindex="-1"><a class="header-anchor" href="#horsemodelv2-vtbl"><span><code>HorseModelV2_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseModelV2_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *clear)(Model *this);</span>
<span class="line">  void (__fastcall *preDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *postDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *prepareMobModel)(Model *this, Mob *, float, float, float);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffsetPosition)(Model *this, Vec3 *result, bool);</span>
<span class="line">  void (__fastcall *renderAniModel)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  void (__fastcall *renderMod)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *youngTransform)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  float (__fastcall *getHeightAdjustment)(Model *this);</span>
<span class="line">  AABB *(__fastcall *buildAABB)(Model *this, AABB *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heartparticle" tabindex="-1"><a class="header-anchor" href="#heartparticle"><span><code>HeartParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HeartParticle : Particle</span>
<span class="line">{</span>
<span class="line">  float oSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heartparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#heartparticle-vtbl"><span><code>HeartParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HeartParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugeexplosionparticle" tabindex="-1"><a class="header-anchor" href="#hugeexplosionparticle"><span><code>HugeExplosionParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HugeExplosionParticle : Particle</span>
<span class="line">{</span>
<span class="line">  int baseTex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugeexplosionparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#hugeexplosionparticle-vtbl"><span><code>HugeExplosionParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HugeExplosionParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugeexplosionseedparticle" tabindex="-1"><a class="header-anchor" href="#hugeexplosionseedparticle"><span><code>HugeExplosionSeedParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HugeExplosionSeedParticle : Particle</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugeexplosionseedparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#hugeexplosionseedparticle-vtbl"><span><code>HugeExplosionSeedParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HugeExplosionSeedParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="happyvillagerparticle" tabindex="-1"><a class="header-anchor" href="#happyvillagerparticle"><span><code>HappyVillagerParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HappyVillagerParticle : SuspendedTownParticle</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="happyvillagerparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#happyvillagerparticle-vtbl"><span><code>HappyVillagerParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HappyVillagerParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);</span>
<span class="line">  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *~Particle)(Particle *this);</span>
<span class="line">  void (__fastcall *normalTick)(Particle *this);</span>
<span class="line">  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);</span>
<span class="line">  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);</span>
<span class="line">  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);</span>
<span class="line">  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);</span>
<span class="line">  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huskmodel" tabindex="-1"><a class="header-anchor" href="#huskmodel"><span><code>HuskModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HuskModel : ZombieModel</span>
<span class="line">{</span>
<span class="line">  mce::MaterialPtr mHuskMaterial;</span>
<span class="line">  mce::MaterialPtr mClothesMaterial;</span>
<span class="line">  ModelPart mHat;</span>
<span class="line">  ModelPart mLeftSleeve;</span>
<span class="line">  ModelPart mRightSleeve;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huskmodel-vtbl" tabindex="-1"><a class="header-anchor" href="#huskmodel-vtbl"><span><code>HuskModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HuskModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *clear)(Model *this);</span>
<span class="line">  void (__fastcall *preDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *postDraw)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, BaseActorRenderContext *);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *render)(Model *this, ScreenContext *);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this);</span>
<span class="line">  void (__fastcall *setupAnim)(Model *this, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *prepareMobModel)(Model *this, Mob *, float, float, float);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffsetPosition)(Model *this, Vec3 *result, bool);</span>
<span class="line">  void (__fastcall *renderAniModel)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  void (__fastcall *renderMod)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *youngTransform)(Model *this, ScreenContext *, Actor *, float, float, float, float, float, float, MatrixStack::MatrixStackRef *);</span>
<span class="line">  float (__fastcall *getHeightAdjustment)(Model *this);</span>
<span class="line">  AABB *(__fastcall *buildAABB)(Model *this, AABB *result);</span>
<span class="line">  void (__fastcall *renderAniModel)(HumanoidModel *this, ScreenContext *, int, float, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmonster" tabindex="-1"><a class="header-anchor" href="#humanoidmonster"><span><code>HumanoidMonster</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HumanoidMonster : Monster</span>
<span class="line">{</span>
<span class="line">  AttackState mState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsearmoritem" tabindex="-1"><a class="header-anchor" href="#horsearmoritem"><span><code>HorseArmorItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HorseArmorItem : Item</span>
<span class="line">{</span>
<span class="line">  const int mDefense;</span>
<span class="line">  const int mModelIndex;</span>
<span class="line">  _BYTE mTier[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horserenderer" tabindex="-1"><a class="header-anchor" href="#horserenderer"><span><code>HorseRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseRenderer : MobRenderer</span>
<span class="line">{</span>
<span class="line">  mce::TexturePtr mHorseTypeTextures[5];</span>
<span class="line">  mce::TexturePtr mHorseVariantTextures[7];</span>
<span class="line">  mce::TexturePtr mHorseMarkingTextures[5];</span>
<span class="line">  mce::TexturePtr mHorseArmorTextures[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horserenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#horserenderer-vtbl"><span><code>HorseRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);</span>
<span class="line">  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);</span>
<span class="line">  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);</span>
<span class="line">  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);</span>
<span class="line">  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);</span>
<span class="line">  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);</span>
<span class="line">  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);</span>
<span class="line">  void (__fastcall *prepareCarriedItem)(MobRenderer *this, Model *, Mob *, const ItemStack *);</span>
<span class="line">  void (__fastcall *setupPosition)(MobRenderer *this, const Actor *, const Vec3 *, Matrix *);</span>
<span class="line">  void (__fastcall *setupRotations)(MobRenderer *this, const Actor *, float, float, Matrix *, float);</span>
<span class="line">  float (__fastcall *getAttackAnim)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getBob)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getFlipDegrees)(MobRenderer *this, const Mob *);</span>
<span class="line">  void (__fastcall *setupScale)(MobRenderer *this, const Mob *, Matrix *, float);</span>
<span class="line">  void (__fastcall *renderModel)(MobRenderer *this, BaseActorRenderContext *, ActorRenderData *, Model *, const gsl::span&lt;mce::ClientTexture const *,-1&gt;, const unsigned __int64);</span>
<span class="line">  void (__fastcall *additionalRendering)(MobRenderer *this, BaseActorRenderContext *, Model *, Mob *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *renderLayers)(MobRenderer *this, BaseActorRenderContext *, Actor *, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *drawLayers)(MobRenderer *this, ScreenContext *);</span>
<span class="line">  float (__fastcall *getSneakingHeightOffset)(MobRenderer *this);</span>
<span class="line">  float (__fastcall *getSwimmingHeightOffset)(MobRenderer *this);</span>
<span class="line">  MobRenderer::ArmorPrepareResult *(__fastcall *prepareArmor)(MobRenderer *this, MobRenderer::ArmorPrepareResult *result, ScreenContext *, BaseActorRenderContext *, Mob *, ArmorSlot, Model *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horserendererv2" tabindex="-1"><a class="header-anchor" href="#horserendererv2"><span><code>HorseRendererV2</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseRendererV2 : MobRenderer</span>
<span class="line">{</span>
<span class="line">  mce::TexturePtr mHorseTypeTextures[5];</span>
<span class="line">  mce::TexturePtr mHorseVariantTextures[7];</span>
<span class="line">  mce::TexturePtr mHorseMarkingTextures[5];</span>
<span class="line">  mce::TexturePtr mHorseArmorTextures[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horserendererv2-vtbl" tabindex="-1"><a class="header-anchor" href="#horserendererv2-vtbl"><span><code>HorseRendererV2_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseRendererV2_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);</span>
<span class="line">  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);</span>
<span class="line">  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);</span>
<span class="line">  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);</span>
<span class="line">  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);</span>
<span class="line">  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);</span>
<span class="line">  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);</span>
<span class="line">  void (__fastcall *prepareCarriedItem)(MobRenderer *this, Model *, Mob *, const ItemStack *);</span>
<span class="line">  void (__fastcall *setupPosition)(MobRenderer *this, const Actor *, const Vec3 *, Matrix *);</span>
<span class="line">  void (__fastcall *setupRotations)(MobRenderer *this, const Actor *, float, float, Matrix *, float);</span>
<span class="line">  float (__fastcall *getAttackAnim)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getBob)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getFlipDegrees)(MobRenderer *this, const Mob *);</span>
<span class="line">  void (__fastcall *setupScale)(MobRenderer *this, const Mob *, Matrix *, float);</span>
<span class="line">  void (__fastcall *renderModel)(MobRenderer *this, BaseActorRenderContext *, ActorRenderData *, Model *, const gsl::span&lt;mce::ClientTexture const *,-1&gt;, const unsigned __int64);</span>
<span class="line">  void (__fastcall *additionalRendering)(MobRenderer *this, BaseActorRenderContext *, Model *, Mob *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *renderLayers)(MobRenderer *this, BaseActorRenderContext *, Actor *, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *drawLayers)(MobRenderer *this, ScreenContext *);</span>
<span class="line">  float (__fastcall *getSneakingHeightOffset)(MobRenderer *this);</span>
<span class="line">  float (__fastcall *getSwimmingHeightOffset)(MobRenderer *this);</span>
<span class="line">  MobRenderer::ArmorPrepareResult *(__fastcall *prepareArmor)(MobRenderer *this, MobRenderer::ArmorPrepareResult *result, ScreenContext *, BaseActorRenderContext *, Mob *, ArmorSlot, Model *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmobrenderer" tabindex="-1"><a class="header-anchor" href="#humanoidmobrenderer"><span><code>HumanoidMobRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HumanoidMobRenderer : MobRenderer</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;HumanoidModel&gt; mBabyModel;</span>
<span class="line">  std::unique_ptr&lt;HumanoidModel&gt; mArmorParts1;</span>
<span class="line">  std::unique_ptr&lt;HumanoidModel&gt; mArmorParts2;</span>
<span class="line">  std::unique_ptr&lt;SpinAttackModel&gt; mSpinAttackModel;</span>
<span class="line">  std::vector&lt;mce::TexturePtr&gt; mArmorTextures;</span>
<span class="line">  mce::TexturePtr mSpinAttackTex;</span>
<span class="line">  std::unique_ptr&lt;HumanoidModel&gt; mOriginalArmorModel;</span>
<span class="line">  bool lastCustomArmorHead;</span>
<span class="line">  bool lastCustomArmorBody;</span>
<span class="line">  bool lastCustomArmorLeg;</span>
<span class="line">  bool lastCustomArmorFeet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmobrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#humanoidmobrenderer-vtbl"><span><code>HumanoidMobRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HumanoidMobRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);</span>
<span class="line">  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);</span>
<span class="line">  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);</span>
<span class="line">  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);</span>
<span class="line">  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);</span>
<span class="line">  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);</span>
<span class="line">  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);</span>
<span class="line">  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);</span>
<span class="line">  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);</span>
<span class="line">  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);</span>
<span class="line">  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);</span>
<span class="line">  void (__fastcall *prepareCarriedItem)(MobRenderer *this, Model *, Mob *, const ItemStack *);</span>
<span class="line">  void (__fastcall *setupPosition)(MobRenderer *this, const Actor *, const Vec3 *, Matrix *);</span>
<span class="line">  void (__fastcall *setupRotations)(MobRenderer *this, const Actor *, float, float, Matrix *, float);</span>
<span class="line">  float (__fastcall *getAttackAnim)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getBob)(MobRenderer *this, Mob *, float);</span>
<span class="line">  float (__fastcall *getFlipDegrees)(MobRenderer *this, const Mob *);</span>
<span class="line">  void (__fastcall *setupScale)(MobRenderer *this, const Mob *, Matrix *, float);</span>
<span class="line">  void (__fastcall *renderModel)(MobRenderer *this, BaseActorRenderContext *, ActorRenderData *, Model *, const gsl::span&lt;mce::ClientTexture const *,-1&gt;, const unsigned __int64);</span>
<span class="line">  void (__fastcall *additionalRendering)(MobRenderer *this, BaseActorRenderContext *, Model *, Mob *, float, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *renderLayers)(MobRenderer *this, BaseActorRenderContext *, Actor *, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *drawLayers)(MobRenderer *this, ScreenContext *);</span>
<span class="line">  float (__fastcall *getSneakingHeightOffset)(MobRenderer *this);</span>
<span class="line">  float (__fastcall *getSwimmingHeightOffset)(MobRenderer *this);</span>
<span class="line">  MobRenderer::ArmorPrepareResult *(__fastcall *prepareArmor)(MobRenderer *this, MobRenderer::ArmorPrepareResult *result, ScreenContext *, BaseActorRenderContext *, Mob *, ArmorSlot, Model *, float);</span>
<span class="line">  void (__fastcall *prepareCarriedOffhandItem)(HumanoidMobRenderer *this, Model *, Mob *, const ItemStack *);</span>
<span class="line">  void (__fastcall *_bindModelRender)(HumanoidMobRenderer *this, BaseActorRenderContext *, HumanoidModel *, Mob *, float, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heavyblock" tabindex="-1"><a class="header-anchor" href="#heavyblock"><span><code>HeavyBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HeavyBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heavyblock-vtbl" tabindex="-1"><a class="header-anchor" href="#heavyblock-vtbl"><span><code>HeavyBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HeavyBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  mce::Color *(__fastcall *getDustColor)(HeavyBlock *this, mce::Color *result, const Block *);</span>
<span class="line">  std::string *(__fastcall *getDustParticleName)(HeavyBlock *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *falling)(HeavyBlock *this);</span>
<span class="line">  void (__fastcall *onLand)(HeavyBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isFreeToFall)(HeavyBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *startFalling)(HeavyBlock *this, BlockSource *, const BlockPos *, const Block *, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtownersubcomponent" tabindex="-1"><a class="header-anchor" href="#hurtownersubcomponent"><span><code>HurtOwnerSubcomponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) HurtOwnerSubcomponent : OnHitSubcomponent</span>
<span class="line">{</span>
<span class="line">  float mOwnerDamage;</span>
<span class="line">  bool mKnockback;</span>
<span class="line">  bool mIgnite;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtownersubcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#hurtownersubcomponent-vtbl"><span><code>HurtOwnerSubcomponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HurtOwnerSubcomponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~OnHitSubcomponent)(OnHitSubcomponent *this);</span>
<span class="line">  void (__fastcall *readfromJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *writetoJSON)(OnHitSubcomponent *this, Json::Value *);</span>
<span class="line">  void (__fastcall *doOnHitEffect)(OnHitSubcomponent *this, Actor *, ProjectileComponent *);</span>
<span class="line">  const char *(__fastcall *getName)(OnHitSubcomponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hydrateitemrequest-cachemetadata" tabindex="-1"><a class="header-anchor" href="#hydrateitemrequest-cachemetadata"><span><code>HydrateItemRequest::CacheMetadata</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HydrateItemRequest::CacheMetadata</span>
<span class="line">{</span>
<span class="line">  std::string mLastModifiedDate;</span>
<span class="line">  std::string mCacheWriteDate;</span>
<span class="line">  std::string mEntityTag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hydrateitemrequest" tabindex="-1"><a class="header-anchor" href="#hydrateitemrequest"><span><code>HydrateItemRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HydrateItemRequest : CachedRequest</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;CatalogBackend&gt; mBackend;</span>
<span class="line">  const std::string mAcceptLanguage;</span>
<span class="line">  HydrateParams mParams;</span>
<span class="line">  std::unique_ptr&lt;HydrateResponseCallbackHandler&gt; mHydrateResponse;</span>
<span class="line">  HydrateItemRequest::CacheMetadata mCacheMetadata;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hydrateitemrequest-vtbl" tabindex="-1"><a class="header-anchor" href="#hydrateitemrequest-vtbl"><span><code>HydrateItemRequest_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HydrateItemRequest_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RequestHandler)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *send)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *sendCachedRequest)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *update)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *isDone)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *onComplete)(RequestHandler *this);</span>
<span class="line">  bool (__fastcall *canSendRequest)(RequestHandler *this);</span>
<span class="line">  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidcontroller" tabindex="-1"><a class="header-anchor" href="#hidcontroller"><span><code>HIDController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HIDController : Bedrock::Input::KeyboardEventProcessor</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Bedrock::SignalReceiver&gt; mSignalRcvr;</span>
<span class="line">  TextEditContext mEditContext;</span>
<span class="line">  bool mTextboxIsFocused;</span>
<span class="line">  bool mTextboxIsSelected;</span>
<span class="line">  bool mIsMultiline;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidcontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#hidcontroller-vtbl"><span><code>HIDController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HIDController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~KeyboardEventProcessor)(Bedrock::Input::KeyboardEventProcessor *this);</span>
<span class="line">  void (__fastcall *onKeyDown)(Bedrock::Input::KeyboardEventProcessor *this, int);</span>
<span class="line">  void (__fastcall *onKeyUp)(Bedrock::Input::KeyboardEventProcessor *this, int);</span>
<span class="line">  void (__fastcall *setIMEEnabled)(HIDController *this, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidcontrollerwin32" tabindex="-1"><a class="header-anchor" href="#hidcontrollerwin32"><span><code>HIDControllerWin32</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HIDControllerWin32 : HIDController</span>
<span class="line">{</span>
<span class="line">  HWND__ *mHWnd;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidcontrollerwin32-vtbl" tabindex="-1"><a class="header-anchor" href="#hidcontrollerwin32-vtbl"><span><code>HIDControllerWin32_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HIDControllerWin32_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~KeyboardEventProcessor)(Bedrock::Input::KeyboardEventProcessor *this);</span>
<span class="line">  void (__fastcall *onKeyDown)(Bedrock::Input::KeyboardEventProcessor *this, int);</span>
<span class="line">  void (__fastcall *onKeyUp)(Bedrock::Input::KeyboardEventProcessor *this, int);</span>
<span class="line">  void (__fastcall *setIMEEnabled)(HIDController *this, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultcontainer-localplayercontainer" tabindex="-1"><a class="header-anchor" href="#hitresultcontainer-localplayercontainer"><span><code>HitResultContainer::LocalPlayerContainer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitResultContainer::LocalPlayerContainer : IHitResultContainer</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::pair&lt;HitResult,HitResult&gt;&gt; mHits;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultcontainer-localplayercontainer-vtbl" tabindex="-1"><a class="header-anchor" href="#hitresultcontainer-localplayercontainer-vtbl"><span><code>HitResultContainer::LocalPlayerContainer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HitResultContainer::LocalPlayerContainer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IHitResultContainer)(IHitResultContainer *this);</span>
<span class="line">  void (__fastcall *addHitResult)(IHitResultContainer *this, HitResult, HitResult);</span>
<span class="line">  void (__fastcall *clear)(IHitResultContainer *this);</span>
<span class="line">  gsl::span&lt;std::pair&lt;HitResult,HitResult&gt; const ,-1&gt; *(__fastcall *getHits)(IHitResultContainer *this, gsl::span&lt;std::pair&lt;HitResult,HitResult&gt; const ,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homesystem" tabindex="-1"><a class="header-anchor" href="#homesystem"><span><code>HomeSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HomeSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#homesystem-vtbl"><span><code>HomeSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HomeSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestcancelsourceabort" tabindex="-1"><a class="header-anchor" href="#httprequestcancelsourceabort"><span><code>HTTPRequestCancelSourceAbort</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HTTPRequestCancelSourceAbort : HTTPRequestCancelSource</span>
<span class="line">{</span>
<span class="line">  std::mutex mRequestsMutex;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;HTTPRequest *&gt;&gt; mRequests;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestcancelsourceabort-vtbl" tabindex="-1"><a class="header-anchor" href="#httprequestcancelsourceabort-vtbl"><span><code>HTTPRequestCancelSourceAbort_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HTTPRequestCancelSourceAbort_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HTTPRequestCancelSource)(HTTPRequestCancelSource *this);</span>
<span class="line">  void (__fastcall *cancel)(HTTPRequestCancelSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="healablecomponent" tabindex="-1"><a class="header-anchor" href="#healablecomponent"><span><code>HealableComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HealableComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidecomponent" tabindex="-1"><a class="header-anchor" href="#hidecomponent"><span><code>HideComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HideComponent</span>
<span class="line">{</span>
<span class="line">  bool mIsInRaid;</span>
<span class="line">  bool mReactToBell;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitboxdefinition" tabindex="-1"><a class="header-anchor" href="#hitboxdefinition"><span><code>HitboxDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitboxDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Hitbox&gt; mHitboxes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitboxjson" tabindex="-1"><a class="header-anchor" href="#hitboxjson"><span><code>HitboxJson</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitboxJson</span>
<span class="line">{</span>
<span class="line">  Vec3 mPivot;</span>
<span class="line">  float mWidth;</span>
<span class="line">  float mHeight;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homedefinition" tabindex="-1"><a class="header-anchor" href="#homedefinition"><span><code>HomeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HomeDefinition</span>
<span class="line">{</span>
<span class="line">  int mRestrictionRadius;</span>
<span class="line">  std::vector&lt;std::string&gt; mHomeBlockNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopperdefinition" tabindex="-1"><a class="header-anchor" href="#hopperdefinition"><span><code>HopperDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopper" tabindex="-1"><a class="header-anchor" href="#hopper"><span><code>Hopper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Hopper</span>
<span class="line">{</span>
<span class="line">  int mCooldownTime;</span>
<span class="line">  bool mTransferedFromChestMinecart;</span>
<span class="line">  bool mIsEntity;</span>
<span class="line">  bool mCanHopperIn;</span>
<span class="line">  bool mCanHopperOut;</span>
<span class="line">  bool mCanTriggerPullInEvent;</span>
<span class="line">  bool mCanTriggerPullOutEvent;</span>
<span class="line">  int mMoveItemSpeed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoppercomponent" tabindex="-1"><a class="header-anchor" href="#hoppercomponent"><span><code>HopperComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperComponent : Hopper</span>
<span class="line">{</span>
<span class="line">  BlockPos mLastPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtonconditiondefinition" tabindex="-1"><a class="header-anchor" href="#hurtonconditiondefinition"><span><code>HurtOnConditionDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HurtOnConditionDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;DamageCondition&gt; mDamageConditions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homedefinition-buildschema-l2-lambda-2ca5030ea1b6b39672c73b4b66f2fe15" tabindex="-1"><a class="header-anchor" href="#homedefinition-buildschema-l2-lambda-2ca5030ea1b6b39672c73b4b66f2fe15"><span><code>HomeDefinition::buildSchema::__l2::&lt;lambda_2ca5030ea1b6b39672c73b4b66f2fe15&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HomeDefinition::buildSchema::__l2::&lt;lambda_2ca5030ea1b6b39672c73b4b66f2fe15&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="healablecomponent-getinteraction-l20-lambda-2e4b6d19d8e2cc25bfd90a4348859777" tabindex="-1"><a class="header-anchor" href="#healablecomponent-getinteraction-l20-lambda-2e4b6d19d8e2cc25bfd90a4348859777"><span><code>HealableComponent::getInteraction::__l20::&lt;lambda_2e4b6d19d8e2cc25bfd90a4348859777&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HealableComponent::getInteraction::__l20::&lt;lambda_2e4b6d19d8e2cc25bfd90a4348859777&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  Actor *owner;</span>
<span class="line">  std::_Vector_const_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;FeedItem&gt; &gt; &gt; healableItemIter;</span>
<span class="line">  HealableComponent *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopmovecontrol" tabindex="-1"><a class="header-anchor" href="#hopmovecontrol"><span><code>HopMoveControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HopMoveControl : MoveControl</span>
<span class="line">{</span>
<span class="line">  int mJumpDelayTicks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopmovecontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#hopmovecontrol-vtbl"><span><code>HopMoveControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HopMoveControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Control)(Control *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(MoveControl *this, Mob *, MoveControlDescription *);</span>
<span class="line">  void (__fastcall *tick)(MoveControl *this, MoveControlComponent *, Mob *);</span>
<span class="line">  void (__fastcall *setWantedPosition)(MoveControl *this, MoveControlComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovermovecontrol" tabindex="-1"><a class="header-anchor" href="#hovermovecontrol"><span><code>HoverMoveControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoverMoveControl : MoveControl</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovermovecontrol-vtbl" tabindex="-1"><a class="header-anchor" href="#hovermovecontrol-vtbl"><span><code>HoverMoveControl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoverMoveControl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Control)(Control *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(MoveControl *this, Mob *, MoveControlDescription *);</span>
<span class="line">  void (__fastcall *tick)(MoveControl *this, MoveControlComponent *, Mob *);</span>
<span class="line">  void (__fastcall *setWantedPosition)(MoveControl *this, MoveControlComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoverpathnavigation" tabindex="-1"><a class="header-anchor" href="#hoverpathnavigation"><span><code>HoverPathNavigation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HoverPathNavigation : PathNavigation</span>
<span class="line">{</span>
<span class="line">  bool mCanPathFromAir;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoverpathnavigation-vtbl" tabindex="-1"><a class="header-anchor" href="#hoverpathnavigation-vtbl"><span><code>HoverPathNavigation_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoverPathNavigation_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PathNavigation)(PathNavigation *this);</span>
<span class="line">  void (__fastcall *initializeInternal)(PathNavigation *this, Mob *, NavigationDescription *);</span>
<span class="line">  void (__fastcall *tick)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  Vec3 *(__fastcall *getTempMobPos)(PathNavigation *this, Vec3 *result, const Mob *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, Actor *);</span>
<span class="line">  std::unique_ptr&lt;Path&gt; *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr&lt;Path&gt; *result, NavigationComponent *, Mob *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, std::unique_ptr&lt;Path&gt;, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, Actor *, float);</span>
<span class="line">  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, const Vec3 *, float);</span>
<span class="line">  void (__fastcall *stop)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">  bool (__fastcall *travel)(PathNavigation *this, NavigationComponent *, Mob *, float *, float *, float *);</span>
<span class="line">  bool (__fastcall *canUpdatePath)(PathNavigation *this, const Mob *);</span>
<span class="line">  void (__fastcall *updatePath)(PathNavigation *this, NavigationComponent *, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtonconditioncomponent" tabindex="-1"><a class="header-anchor" href="#hurtonconditioncomponent"><span><code>HurtOnConditionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HurtOnConditionComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtonconditionsystem" tabindex="-1"><a class="header-anchor" href="#hurtonconditionsystem"><span><code>HurtOnConditionSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HurtOnConditionSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtonconditionsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hurtonconditionsystem-vtbl"><span><code>HurtOnConditionSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HurtOnConditionSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtbytargetgoal" tabindex="-1"><a class="header-anchor" href="#hurtbytargetgoal"><span><code>HurtByTargetGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HurtByTargetGoal : TargetGoal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hurtbytargetgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#hurtbytargetgoal-vtbl"><span><code>HurtByTargetGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HurtByTargetGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);</span>
<span class="line">  void (__fastcall *alertOther)(HurtByTargetGoal *this, Mob *, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="haveitemdefinition" tabindex="-1"><a class="header-anchor" href="#haveitemdefinition"><span><code>HaveItemDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HaveItemDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mItemName;</span>
<span class="line">  int mItemCount;</span>
<span class="line">  std::string mItemNameId;</span>
<span class="line">  std::string mItemCountId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="haveitemdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#haveitemdefinition-vtbl"><span><code>HaveItemDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HaveItemDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="haveitemnode" tabindex="-1"><a class="header-anchor" href="#haveitemnode"><span><code>HaveItemNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HaveItemNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  std::string mItemName;</span>
<span class="line">  int mItemCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="haveitemnode-vtbl" tabindex="-1"><a class="header-anchor" href="#haveitemnode-vtbl"><span><code>HaveItemNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HaveItemNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopperblockactor" tabindex="-1"><a class="header-anchor" href="#hopperblockactor"><span><code>HopperBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperBlockActor : BlockActor, Container, Hopper</span>
<span class="line">{</span>
<span class="line">  ItemStack mItems[5];</span>
<span class="line">  Tick mLastTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopperblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#hopperblockactor-vtbl"><span><code>HopperBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HopperBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopper-pushoutitems-l11-lambda-8021f23895e628ed9b3c2f2406f50b3b" tabindex="-1"><a class="header-anchor" href="#hopper-pushoutitems-l11-lambda-8021f23895e628ed9b3c2f2406f50b3b"><span><code>Hopper::_pushOutItems::__l11::&lt;lambda_8021f23895e628ed9b3c2f2406f50b3b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Hopper::_pushOutItems::__l11::&lt;lambda_8021f23895e628ed9b3c2f2406f50b3b&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 *position;</span>
<span class="line">  BlockActor **attachedBlockEntity;</span>
<span class="line">  bool *canHopperOut;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopper-trypullinitemsfromabovecontainer-l14-lambda-cfa17afae7045b99dd77cd1780d5e42b" tabindex="-1"><a class="header-anchor" href="#hopper-trypullinitemsfromabovecontainer-l14-lambda-cfa17afae7045b99dd77cd1780d5e42b"><span><code>Hopper::_tryPullInItemsFromAboveContainer::__l14::&lt;lambda_cfa17afae7045b99dd77cd1780d5e42b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Hopper::_tryPullInItemsFromAboveContainer::__l14::&lt;lambda_cfa17afae7045b99dd77cd1780d5e42b&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 *pos;</span>
<span class="line">  BlockActor **aboveBlockEntity;</span>
<span class="line">  bool *canHopperIn;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="healthattributedelegate" tabindex="-1"><a class="header-anchor" href="#healthattributedelegate"><span><code>HealthAttributeDelegate</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HealthAttributeDelegate : AttributeInstanceDelegate</span>
<span class="line">{</span>
<span class="line">  int mTickCounter;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="healthattributedelegate-vtbl" tabindex="-1"><a class="header-anchor" href="#healthattributedelegate-vtbl"><span><code>HealthAttributeDelegate_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HealthAttributeDelegate_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AttributeInstanceDelegate)(AttributeInstanceDelegate *this);</span>
<span class="line">  void (__fastcall *tick)(AttributeInstanceDelegate *this);</span>
<span class="line">  void (__fastcall *notify)(AttributeInstanceDelegate *this, __int64);</span>
<span class="line">  bool (__fastcall *change)(AttributeInstanceDelegate *this, float, float, AttributeBuffInfo);</span>
<span class="line">  float (__fastcall *getBuffValue)(AttributeInstanceDelegate *this, const AttributeBuff *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hungerattributedelegate" tabindex="-1"><a class="header-anchor" href="#hungerattributedelegate"><span><code>HungerAttributeDelegate</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HungerAttributeDelegate : AttributeInstanceDelegate</span>
<span class="line">{</span>
<span class="line">  int mActionTickTimer;</span>
<span class="line">  int mTickCounter;</span>
<span class="line">  float mLastFoodLevel;</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hungerattributedelegate-vtbl" tabindex="-1"><a class="header-anchor" href="#hungerattributedelegate-vtbl"><span><code>HungerAttributeDelegate_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HungerAttributeDelegate_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AttributeInstanceDelegate)(AttributeInstanceDelegate *this);</span>
<span class="line">  void (__fastcall *tick)(AttributeInstanceDelegate *this);</span>
<span class="line">  void (__fastcall *notify)(AttributeInstanceDelegate *this, __int64);</span>
<span class="line">  bool (__fastcall *change)(AttributeInstanceDelegate *this, float, float, AttributeBuffInfo);</span>
<span class="line">  float (__fastcall *getBuffValue)(AttributeInstanceDelegate *this, const AttributeBuff *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horseequipvalidationstate" tabindex="-1"><a class="header-anchor" href="#horseequipvalidationstate"><span><code>HorseEquipValidationState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseEquipValidationState</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; armorAllowedItems;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; saddleAllowedItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermodel" tabindex="-1"><a class="header-anchor" href="#hudcontainermodel"><span><code>HudContainerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudContainerModel : ContainerModel</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudcontainermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#hudcontainermodel-vtbl"><span><code>HudContainerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HudContainerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *postInit)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *releaseResources)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getContainerSize)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *tick)(ContainerModel *this, int);</span>
<span class="line">  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);</span>
<span class="line">  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);</span>
<span class="line">  const std::vector&lt;ItemStack&gt; *(__fastcall *getItems)(ContainerModel *this);</span>
<span class="line">  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);</span>
<span class="line">  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerModel *this);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);</span>
<span class="line">  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);</span>
<span class="line">  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);</span>
<span class="line">  void (__fastcall *switchItemExpando)(ContainerModel *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *_getContainerOffset)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hangingactoritem" tabindex="-1"><a class="header-anchor" href="#hangingactoritem"><span><code>HangingActorItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HangingActorItem : Item</span>
<span class="line">{</span>
<span class="line">  ActorType mEntityType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hatchetitem" tabindex="-1"><a class="header-anchor" href="#hatchetitem"><span><code>HatchetItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HatchetItem : DiggerItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoeitem" tabindex="-1"><a class="header-anchor" href="#hoeitem"><span><code>HoeItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoeItem : DiggerItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopperblock" tabindex="-1"><a class="header-anchor" href="#hopperblock"><span><code>HopperBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hopperblock-vtbl" tabindex="-1"><a class="header-anchor" href="#hopperblock-vtbl"><span><code>HopperBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HopperBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hayblockblock" tabindex="-1"><a class="header-anchor" href="#hayblockblock"><span><code>HayBlockBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HayBlockBlock : RotatedPillarBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hayblockblock-vtbl" tabindex="-1"><a class="header-anchor" href="#hayblockblock-vtbl"><span><code>HayBlockBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HayBlockBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="honeyblock" tabindex="-1"><a class="header-anchor" href="#honeyblock"><span><code>HoneyBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoneyBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="honeyblock-vtbl" tabindex="-1"><a class="header-anchor" href="#honeyblock-vtbl"><span><code>HoneyBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoneyBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="honeycombblock" tabindex="-1"><a class="header-anchor" href="#honeycombblock"><span><code>HoneycombBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoneycombBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="honeycombblock-vtbl" tabindex="-1"><a class="header-anchor" href="#honeycombblock-vtbl"><span><code>HoneycombBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoneycombBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugemushroomblock" tabindex="-1"><a class="header-anchor" href="#hugemushroomblock"><span><code>HugeMushroomBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HugeMushroomBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">  _BYTE mType[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugemushroomblock-vtbl" tabindex="-1"><a class="header-anchor" href="#hugemushroomblock-vtbl"><span><code>HugeMushroomBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HugeMushroomBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugemushroomfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#hugemushroomfeature-vtbl"><span><code>HugeMushroomFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HugeMushroomFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hugefungusfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#hugefungusfeature-vtbl"><span><code>HugeFungusFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HugeFungusFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestinternalwininet" tabindex="-1"><a class="header-anchor" href="#httprequestinternalwininet"><span><code>HTTPRequestInternalWinInet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HTTPRequestInternalWinInet : HTTPRequestInternal</span>
<span class="line">{</span>
<span class="line">  HTTPRequest *mParentRequest;</span>
<span class="line">  std::wstring_convert&lt;std::codecvt_utf8_utf16&lt;wchar_t,1114111,0&gt;,wchar_t,std::allocator&lt;wchar_t&gt;,std::allocator&lt;char&gt; &gt; ws_converter;</span>
<span class="line">  Microsoft::WRL::ComPtr&lt;IXMLHTTPRequest2&gt; spXHR;</span>
<span class="line">  Microsoft::WRL::ComPtr&lt;CXMLHttpRequest2Callback&gt; spXhrCallback;</span>
<span class="line">  Microsoft::WRL::ComPtr&lt;CXMLHttpRequestPostStream&gt; spXhrPostStream;</span>
<span class="line">  HTTPRequestCancelSourceAbort *mCancelSource;</span>
<span class="line">  bool mAborted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="httprequestinternalwininet-vtbl" tabindex="-1"><a class="header-anchor" href="#httprequestinternalwininet-vtbl"><span><code>HTTPRequestInternalWinInet_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HTTPRequestInternalWinInet_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~HTTPRequestInternal)(HTTPRequestInternal *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hvideoinputdevicenv" tabindex="-1"><a class="header-anchor" href="#hvideoinputdevicenv"><span><code>HVIDEOINPUTDEVICENV__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HVIDEOINPUTDEVICENV__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hgpunv" tabindex="-1"><a class="header-anchor" href="#hgpunv"><span><code>HGPUNV__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HGPUNV__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hpbufferext" tabindex="-1"><a class="header-anchor" href="#hpbufferext"><span><code>HPBUFFEREXT__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HPBUFFEREXT__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hpbufferarb" tabindex="-1"><a class="header-anchor" href="#hpbufferarb"><span><code>HPBUFFERARB__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HPBUFFERARB__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hvideooutputdevicenv" tabindex="-1"><a class="header-anchor" href="#hvideooutputdevicenv"><span><code>HVIDEOOUTPUTDEVICENV__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HVIDEOOUTPUTDEVICENV__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hpvideodev" tabindex="-1"><a class="header-anchor" href="#hpvideodev"><span><code>HPVIDEODEV__</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HPVIDEODEV__</span>
<span class="line">{</span>
<span class="line">  int unused;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller"><span><code>HorseScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HorseScreenController : BlockContainerScreenController</span>
<span class="line">{</span>
<span class="line">  bool mChestTabOpen;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-vtbl"><span><code>HorseScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *_handlePlaceAll)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_handlePlaceOne)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_handleSelectSlot)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const SelectedSlotInfo *(__fastcall *_getSelectedSlotInfo)(ContainerScreenController *this, const SelectedSlotInfo *result);</span>
<span class="line">  const ItemStack *(__fastcall *_getItemStack)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *_getVisualItemStack)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *_getTakeableItemStackBase)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotHovered)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotSelected)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotPressed)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  bool (__fastcall *_shouldSwap)(ContainerScreenController *this, const std::string *, int, const std::string *, int);</span>
<span class="line">  std::string *(__fastcall *_getCollectionName)(ContainerScreenController *this, std::string *result, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *_canSplit)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_sendFlyingItem)(ContainerScreenController *this, const ItemStackBase *, const std::string *, int, const std::string *, int);</span>
<span class="line">  void (__fastcall *_registerCoalesceOrder)(ContainerScreenController *this);</span>
<span class="line">  void (__fastcall *_registerAutoPlaceOrder)(ContainerScreenController *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagermodel"><span><code>HorseContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseContainerManagerModel : LevelContainerManagerModel</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ContainerModel&gt; mEquipContainerModel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagermodel-vtbl"><span><code>HorseContainerManagerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseContainerManagerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContainerManager)(IContainerManager *this);</span>
<span class="line">  ContainerID (__fastcall *getContainerId)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);</span>
<span class="line">  ContainerType (__fastcall *getContainerType)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getItemCopies)(IContainerManager *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);</span>
<span class="line">  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);</span>
<span class="line">  void (__fastcall *setData)(IContainerManager *this, int, int);</span>
<span class="line">  void (__fastcall *broadcastChanges)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *validateContainer)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerManagerModel *this, float);</span>
<span class="line">  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagercontroller" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagercontroller"><span><code>HorseContainerManagerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HorseContainerManagerController : ContainerManagerController</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;HorseContainerManagerModel&gt; mHorseContainerManagerModel;</span>
<span class="line">  bool mIsEquipTabOpen;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagercontroller-vtbl"><span><code>HorseContainerManagerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HorseContainerManagerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);</span>
<span class="line">  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);</span>
<span class="line">  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);</span>
<span class="line">  void (__fastcall *closeContainers)(ContainerManagerController *this);</span>
<span class="line">  const std::vector&lt;ContainerSplitControl&gt; *(__fastcall *getSplitItems)(ContainerManagerController *this);</span>
<span class="line">  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);</span>
<span class="line">  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-af5fa2530f826d5d08def04c7eb5cee0" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-af5fa2530f826d5d08def04c7eb5cee0"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_af5fa2530f826d5d08def04c7eb5cee0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_af5fa2530f826d5d08def04c7eb5cee0&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-80c6e5409393cca0fc5a377974added3" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-80c6e5409393cca0fc5a377974added3"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_80c6e5409393cca0fc5a377974added3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_80c6e5409393cca0fc5a377974added3&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-025986612949938973253e99816d0a0c" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-025986612949938973253e99816d0a0c"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_025986612949938973253e99816d0a0c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_025986612949938973253e99816d0a0c&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-d80db6b9e9a3d13343bb578caa017e7a" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-d80db6b9e9a3d13343bb578caa017e7a"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_d80db6b9e9a3d13343bb578caa017e7a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_d80db6b9e9a3d13343bb578caa017e7a&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-32008c64cf8e1a2b5f1a9adf16734b12" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-32008c64cf8e1a2b5f1a9adf16734b12"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_32008c64cf8e1a2b5f1a9adf16734b12&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_32008c64cf8e1a2b5f1a9adf16734b12&gt;</span>
<span class="line">{</span>
<span class="line">  const ActorUniqueID uniqueId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-f366e4756a3ad1e14c2b165ae3e1cce7" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-f366e4756a3ad1e14c2b165ae3e1cce7"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_f366e4756a3ad1e14c2b165ae3e1cce7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_f366e4756a3ad1e14c2b165ae3e1cce7&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-70e96ef0b510e7e22cd1bec90fd98052" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-70e96ef0b510e7e22cd1bec90fd98052"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_70e96ef0b510e7e22cd1bec90fd98052&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_70e96ef0b510e7e22cd1bec90fd98052&gt;</span>
<span class="line">{</span>
<span class="line">  bool carpet;</span>
<span class="line">  bool saddle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-aae33fb3c021b427366010e85d724955" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-aae33fb3c021b427366010e85d724955"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_aae33fb3c021b427366010e85d724955&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_aae33fb3c021b427366010e85d724955&gt;</span>
<span class="line">{</span>
<span class="line">  bool carpet;</span>
<span class="line">  bool saddle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-c826454155f9e06315851f1096cfd6e3" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-c826454155f9e06315851f1096cfd6e3"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_c826454155f9e06315851f1096cfd6e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_c826454155f9e06315851f1096cfd6e3&gt;</span>
<span class="line">{</span>
<span class="line">  bool carpet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-29032eead47001b61f3051162f12b0a4" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-29032eead47001b61f3051162f12b0a4"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_29032eead47001b61f3051162f12b0a4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_29032eead47001b61f3051162f12b0a4&gt;</span>
<span class="line">{</span>
<span class="line">  bool armor;</span>
<span class="line">  bool carpet;</span>
<span class="line">  bool saddle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-fb3a37bc67e2165084c025dfaaa0634c" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-fb3a37bc67e2165084c025dfaaa0634c"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_fb3a37bc67e2165084c025dfaaa0634c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_fb3a37bc67e2165084c025dfaaa0634c&gt;</span>
<span class="line">{</span>
<span class="line">  bool armor;</span>
<span class="line">  bool carpet;</span>
<span class="line">  bool saddle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-fb9ac15c96cbbb5498e516bbd1f5ec92" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-fb9ac15c96cbbb5498e516bbd1f5ec92"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_fb9ac15c96cbbb5498e516bbd1f5ec92&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_fb9ac15c96cbbb5498e516bbd1f5ec92&gt;</span>
<span class="line">{</span>
<span class="line">  bool armor;</span>
<span class="line">  bool carpet;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-8428b03acd8d82eba9ca1912315ce62f" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-8428b03acd8d82eba9ca1912315ce62f"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_8428b03acd8d82eba9ca1912315ce62f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_8428b03acd8d82eba9ca1912315ce62f&gt;</span>
<span class="line">{</span>
<span class="line">  bool saddle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-af0dac77beec41d4c248848aad34ecc4" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-af0dac77beec41d4c248848aad34ecc4"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_af0dac77beec41d4c248848aad34ecc4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_af0dac77beec41d4c248848aad34ecc4&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-b4fd066aa479ddd11366c1ab3ac22cad" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-b4fd066aa479ddd11366c1ab3ac22cad"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_b4fd066aa479ddd11366c1ab3ac22cad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_b4fd066aa479ddd11366c1ab3ac22cad&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsescreencontroller-ctor-l2-lambda-64713f98632f01bc3921ea3e304729ed" tabindex="-1"><a class="header-anchor" href="#horsescreencontroller-ctor-l2-lambda-64713f98632f01bc3921ea3e304729ed"><span><code>HorseScreenController::{ctor}::__l2::&lt;lambda_64713f98632f01bc3921ea3e304729ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseScreenController::{ctor}::__l2::&lt;lambda_64713f98632f01bc3921ea3e304729ed&gt;</span>
<span class="line">{</span>
<span class="line">  HorseScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoppercontainermanagermodel" tabindex="-1"><a class="header-anchor" href="#hoppercontainermanagermodel"><span><code>HopperContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperContainerManagerModel : LevelContainerManagerModel</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoppercontainermanagermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#hoppercontainermanagermodel-vtbl"><span><code>HopperContainerManagerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HopperContainerManagerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContainerManager)(IContainerManager *this);</span>
<span class="line">  ContainerID (__fastcall *getContainerId)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);</span>
<span class="line">  ContainerType (__fastcall *getContainerType)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getItemCopies)(IContainerManager *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);</span>
<span class="line">  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);</span>
<span class="line">  void (__fastcall *setData)(IContainerManager *this, int, int);</span>
<span class="line">  void (__fastcall *broadcastChanges)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *validateContainer)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerManagerModel *this, float);</span>
<span class="line">  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoppersystem" tabindex="-1"><a class="header-anchor" href="#hoppersystem"><span><code>HopperSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HopperSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hoppersystem-vtbl" tabindex="-1"><a class="header-anchor" href="#hoppersystem-vtbl"><span><code>HopperSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HopperSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="harvestfarmblockdefinition" tabindex="-1"><a class="header-anchor" href="#harvestfarmblockdefinition"><span><code>HarvestFarmBlockDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HarvestFarmBlockDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mMaximumSecondsUntilSearch;</span>
<span class="line">  float mSearchCooldownMaximumSeconds;</span>
<span class="line">  float mTaskCooldownSeconds;</span>
<span class="line">  int mSearchCount;</span>
<span class="line">  int mSearchHeight;</span>
<span class="line">  int mSearchRange;</span>
<span class="line">  float mGoalRadius;</span>
<span class="line">  float mSpeedModifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="harvestfarmblockdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#harvestfarmblockdefinition-vtbl"><span><code>HarvestFarmBlockDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HarvestFarmBlockDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="harvestfarmblockgoal" tabindex="-1"><a class="header-anchor" href="#harvestfarmblockgoal"><span><code>HarvestFarmBlockGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HarvestFarmBlockGoal : BaseMoveToBlockGoal</span>
<span class="line">{</span>
<span class="line">  int mMaximumTicksUntilSearch;</span>
<span class="line">  int mSearchCooldownMaximumTicks;</span>
<span class="line">  int mTaskCooldownTicks;</span>
<span class="line">  int mInventorySeedsIndex;</span>
<span class="line">  _BYTE mCurrentTask[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="harvestfarmblockgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#harvestfarmblockgoal-vtbl"><span><code>HarvestFarmBlockGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HarvestFarmBlockGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidegoal" tabindex="-1"><a class="header-anchor" href="#hidegoal"><span><code>HideGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) HideGoal : MoveToPOIGoal</span>
<span class="line">{</span>
<span class="line">  __int16 mHideAttempts;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hidegoal-vtbl" tabindex="-1"><a class="header-anchor" href="#hidegoal-vtbl"><span><code>HideGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HideGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *getPOI)(MoveToPOIGoal *this, POIType);</span>
<span class="line">  std::weak_ptr&lt;POIInstance&gt; *(__fastcall *_getOwnedPOI)(MoveToPOIGoal *this, std::weak_ptr&lt;POIInstance&gt; *result, POIType);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holdgroundgoal" tabindex="-1"><a class="header-anchor" href="#holdgroundgoal"><span><code>HoldGroundGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoldGroundGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  TempEPtr&lt;Actor&gt; mLookAt;</span>
<span class="line">  float mHostileRadiusSqr;</span>
<span class="line">  bool mBroadcast;</span>
<span class="line">  float mBroadcastRange;</span>
<span class="line">  const DefinitionTrigger mWithinRangeEvent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="holdgroundgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#holdgroundgoal-vtbl"><span><code>HoldGroundGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoldGroundGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovergoal" tabindex="-1"><a class="header-anchor" href="#hovergoal"><span><code>HoverGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HoverGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  Vec3 mStartPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hovergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#hovergoal-vtbl"><span><code>HoverGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HoverGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagermodel-postinit-l5-lambda-1ff89581375038258850ba975b22babe" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagermodel-postinit-l5-lambda-1ff89581375038258850ba975b22babe"><span><code>HorseContainerManagerModel::_postInit::__l5::&lt;lambda_1ff89581375038258850ba975b22babe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseContainerManagerModel::_postInit::__l5::&lt;lambda_1ff89581375038258850ba975b22babe&gt;</span>
<span class="line">{</span>
<span class="line">  HorseContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horsecontainermanagermodel-postinit-l5-lambda-89ec054521d8a3163489de1362af6a58" tabindex="-1"><a class="header-anchor" href="#horsecontainermanagermodel-postinit-l5-lambda-89ec054521d8a3163489de1362af6a58"><span><code>HorseContainerManagerModel::_postInit::__l5::&lt;lambda_89ec054521d8a3163489de1362af6a58&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HorseContainerManagerModel::_postInit::__l5::&lt;lambda_89ec054521d8a3163489de1362af6a58&gt;</span>
<span class="line">{</span>
<span class="line">  HorseContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hellfirefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#hellfirefeature-vtbl"><span><code>HellFireFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HellFireFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hellspringfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#hellspringfeature-vtbl"><span><code>HellSpringFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HellSpringFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huff-entropy-encoder" tabindex="-1"><a class="header-anchor" href="#huff-entropy-encoder"><span><code>huff_entropy_encoder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct huff_entropy_encoder</span>
<span class="line">{</span>
<span class="line">  jpeg_entropy_encoder pub;</span>
<span class="line">  _BYTE saved[20];</span>
<span class="line">  __declspec(align(8)) unsigned int restarts_to_go;</span>
<span class="line">  int next_restart_num;</span>
<span class="line">  c_derived_tbl *dc_derived_tbls[4];</span>
<span class="line">  c_derived_tbl *ac_derived_tbls[4];</span>
<span class="line">  int *dc_count_ptrs[4];</span>
<span class="line">  int *ac_count_ptrs[4];</span>
<span class="line">  unsigned __int8 gather_statistics;</span>
<span class="line">  unsigned __int8 *next_output_byte;</span>
<span class="line">  unsigned __int64 free_in_buffer;</span>
<span class="line">  jpeg_compress_struct *cinfo;</span>
<span class="line">  int ac_tbl_no;</span>
<span class="line">  unsigned int EOBRUN;</span>
<span class="line">  unsigned int BE;</span>
<span class="line">  char *bit_buffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huff-entropy-decoder" tabindex="-1"><a class="header-anchor" href="#huff-entropy-decoder"><span><code>huff_entropy_decoder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct huff_entropy_decoder</span>
<span class="line">{</span>
<span class="line">  jpeg_entropy_decoder pub;</span>
<span class="line">  bitread_perm_state bitstate;</span>
<span class="line">  _BYTE saved[20];</span>
<span class="line">  unsigned __int8 insufficient_data;</span>
<span class="line">  unsigned int restarts_to_go;</span>
<span class="line">  d_derived_tbl *derived_tbls[4];</span>
<span class="line">  d_derived_tbl *ac_derived_tbl;</span>
<span class="line">  d_derived_tbl *dc_derived_tbls[4];</span>
<span class="line">  d_derived_tbl *ac_derived_tbls[4];</span>
<span class="line">  d_derived_tbl *dc_cur_tbls[10];</span>
<span class="line">  d_derived_tbl *ac_cur_tbls[10];</span>
<span class="line">  int coef_limit[10];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="huffmanencodingtreenode" tabindex="-1"><a class="header-anchor" href="#huffmanencodingtreenode"><span><code>HuffmanEncodingTreeNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct HuffmanEncodingTreeNode</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 value;</span>
<span class="line">  unsigned int weight;</span>
<span class="line">  HuffmanEncodingTreeNode *left;</span>
<span class="line">  HuffmanEncodingTreeNode *right;</span>
<span class="line">  HuffmanEncodingTreeNode *parent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudhorsejumprenderer-render-l2-lambda-f26f6b421c5d8a48941cbbe5d0c0ad83" tabindex="-1"><a class="header-anchor" href="#hudhorsejumprenderer-render-l2-lambda-f26f6b421c5d8a48941cbbe5d0c0ad83"><span><code>HudHorseJumpRenderer::render::__l2::&lt;lambda_f26f6b421c5d8a48941cbbe5d0c0ad83&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudHorseJumpRenderer::render::__l2::&lt;lambda_f26f6b421c5d8a48941cbbe5d0c0ad83&gt;</span>
<span class="line">{</span>
<span class="line">  float *uSize;</span>
<span class="line">  float *vSize;</span>
<span class="line">  int *u;</span>
<span class="line">  int *v;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373-l2-literal" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373-l2-literal"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_3c8a26f25fde2aa3aadba65938c29373&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_3c8a26f25fde2aa3aadba65938c29373&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c-l2-literal" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c-l2-literal"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_ee7b0def6be5201d2193da1373b2d92c&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_ee7b0def6be5201d2193da1373b2d92c&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1-l2-literal" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1-l2-literal"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_7c138ce959f7ff186fa0298c49f4fbf1&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_7c138ce959f7ff186fa0298c49f4fbf1&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudmobeffectsrenderer-render-l24-lambda-8b8e8c379e3d3ef9f9c7f588b3d37ae9" tabindex="-1"><a class="header-anchor" href="#hudmobeffectsrenderer-render-l24-lambda-8b8e8c379e3d3ef9f9c7f588b3d37ae9"><span><code>HudMobEffectsRenderer::render::__l24::&lt;lambda_8b8e8c379e3d3ef9f9c7f588b3d37ae9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudMobEffectsRenderer::render::__l24::&lt;lambda_8b8e8c379e3d3ef9f9c7f588b3d37ae9&gt;</span>
<span class="line">{</span>
<span class="line">  int *ux;</span>
<span class="line">  int *vy;</span>
<span class="line">  float *uvWidth;</span>
<span class="line">  float *uvHeight;</span>
<span class="line">  float *us;</span>
<span class="line">  float *vs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_3c8a26f25fde2aa3aadba65938c29373&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_3c8a26f25fde2aa3aadba65938c29373&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_7c138ce959f7ff186fa0298c49f4fbf1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_7c138ce959f7ff186fa0298c49f4fbf1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c" tabindex="-1"><a class="header-anchor" href="#hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c"><span><code>HudPlayerRenderer::render::__l11::&lt;lambda_ee7b0def6be5201d2193da1373b2d92c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudPlayerRenderer::render::__l11::&lt;lambda_ee7b0def6be5201d2193da1373b2d92c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-registerfacet-l2-lambda-bd9bb8f2cadf3b0f10a80c7e81deb91c" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-registerfacet-l2-lambda-bd9bb8f2cadf3b0f10a80c7e81deb91c"><span><code>hbui::FacetRegistry::registerFacet::__l2::&lt;lambda_bd9bb8f2cadf3b0f10a80c7e81deb91c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry::registerFacet::__l2::&lt;lambda_bd9bb8f2cadf3b0f10a80c7e81deb91c&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-activatefacet-l2-lambda-9a9590cfcd6a92ccbb29c3aa72aee23c" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-activatefacet-l2-lambda-9a9590cfcd6a92ccbb29c3aa72aee23c"><span><code>hbui::FacetRegistry::activateFacet::__l2::&lt;lambda_9a9590cfcd6a92ccbb29c3aa72aee23c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry::activateFacet::__l2::&lt;lambda_9a9590cfcd6a92ccbb29c3aa72aee23c&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-facetregistry-deactivatefacet-l2-lambda-f70eba82a047d5efe865983ea2888497" tabindex="-1"><a class="header-anchor" href="#hbui-facetregistry-deactivatefacet-l2-lambda-f70eba82a047d5efe865983ea2888497"><span><code>hbui::FacetRegistry::deactivateFacet::__l2::&lt;lambda_f70eba82a047d5efe865983ea2888497&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::FacetRegistry::deactivateFacet::__l2::&lt;lambda_f70eba82a047d5efe865983ea2888497&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hummingbirdui-unregisterrouteconfigurationchangecallback-l2-lambda-3e88f95f6d5af2b53e78952b635e1bb8" tabindex="-1"><a class="header-anchor" href="#hummingbirdui-unregisterrouteconfigurationchangecallback-l2-lambda-3e88f95f6d5af2b53e78952b635e1bb8"><span><code>HummingbirdUI::unregisterRouteConfigurationChangeCallback::__l2::&lt;lambda_3e88f95f6d5af2b53e78952b635e1bb8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HummingbirdUI::unregisterRouteConfigurationChangeCallback::__l2::&lt;lambda_3e88f95f6d5af2b53e78952b635e1bb8&gt;</span>
<span class="line">{</span>
<span class="line">  void *token;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routematcher-match-l2-lambda-fa4836dab5b272682811c18a65ff5f30" tabindex="-1"><a class="header-anchor" href="#hbui-routematcher-match-l2-lambda-fa4836dab5b272682811c18a65ff5f30"><span><code>hbui::RouteMatcher::_match::__l2::&lt;lambda_fa4836dab5b272682811c18a65ff5f30&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouteMatcher::_match::__l2::&lt;lambda_fa4836dab5b272682811c18a65ff5f30&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string route;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hbui-routerconfiguration-addroute-l2-lambda-9d53e344a0271a1458e6afaa48e7f0d5" tabindex="-1"><a class="header-anchor" href="#hbui-routerconfiguration-addroute-l2-lambda-9d53e344a0271a1458e6afaa48e7f0d5"><span><code>hbui::RouterConfiguration::_addRoute::__l2::&lt;lambda_9d53e344a0271a1458e6afaa48e7f0d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj hbui::RouterConfiguration::_addRoute::__l2::&lt;lambda_9d53e344a0271a1458e6afaa48e7f0d5&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *route;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hudscreencontroller-updatetitletext-l14-lambda-348b4ca9d695a98721f80bb664a775dd" tabindex="-1"><a class="header-anchor" href="#hudscreencontroller-updatetitletext-l14-lambda-348b4ca9d695a98721f80bb664a775dd"><span><code>HudScreenController::_updateTitleText::__l14::&lt;lambda_348b4ca9d695a98721f80bb664a775dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HudScreenController::_updateTitleText::__l14::&lt;lambda_348b4ca9d695a98721f80bb664a775dd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hitresultsystem-tick-l2-lambda-ad1d02461820c9e892f4d2da456e3aa6" tabindex="-1"><a class="header-anchor" href="#hitresultsystem-tick-l2-lambda-ad1d02461820c9e892f4d2da456e3aa6"><span><code>HitResultSystem::tick::__l2::&lt;lambda_ad1d02461820c9e892f4d2da456e3aa6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HitResultSystem::tick::__l2::&lt;lambda_ad1d02461820c9e892f4d2da456e3aa6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="healablecomponent-getinteraction-l2-lambda-90c5c6f55d8f131a1d67e74a13742cae" tabindex="-1"><a class="header-anchor" href="#healablecomponent-getinteraction-l2-lambda-90c5c6f55d8f131a1d67e74a13742cae"><span><code>HealableComponent::getInteraction::__l2::&lt;lambda_90c5c6f55d8f131a1d67e74a13742cae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HealableComponent::getInteraction::__l2::&lt;lambda_90c5c6f55d8f131a1d67e74a13742cae&gt;</span>
<span class="line">{</span>
<span class="line">  const ItemStack *item;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="homecomponent-tick-l2-lambda-ea3f16251f6d40785ec8bf72849f1501" tabindex="-1"><a class="header-anchor" href="#homecomponent-tick-l2-lambda-ea3f16251f6d40785ec8bf72849f1501"><span><code>HomeComponent::tick::__l2::&lt;lambda_ea3f16251f6d40785ec8bf72849f1501&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HomeComponent::tick::__l2::&lt;lambda_ea3f16251f6d40785ec8bf72849f1501&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockLegacy *blockAtHomePos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9-l2-literal" tabindex="-1"><a class="header-anchor" href="#heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9-l2-literal"><span><code>HeavyBlock::animateTick::__l11::&lt;lambda_34dbdd8a4780ed8cc471ac95c73990c9&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HeavyBlock::animateTick::__l11::&lt;lambda_34dbdd8a4780ed8cc471ac95c73990c9&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9" tabindex="-1"><a class="header-anchor" href="#heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9"><span><code>HeavyBlock::animateTick::__l11::&lt;lambda_34dbdd8a4780ed8cc471ac95c73990c9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj HeavyBlock::animateTick::__l11::&lt;lambda_34dbdd8a4780ed8cc471ac95c73990c9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="horse-vtbl" tabindex="-1"><a class="header-anchor" href="#horse-vtbl"><span><code>Horse_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Horse_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *setType)(Horse *this, int);</span>
<span class="line">  int (__fastcall *getType)(Horse *this);</span>
<span class="line">  void (__fastcall *setHorseEating)(Horse *this, bool);</span>
<span class="line">  float (__fastcall *getEatAnim)(Horse *this, float);</span>
<span class="line">  float (__fastcall *getStandAnim)(Horse *this, float);</span>
<span class="line">  float (__fastcall *getMouthAnim)(Horse *this, float);</span>
<span class="line">  bool (__fastcall *canWearArmor)(Horse *this);</span>
<span class="line">  bool (__fastcall *getHasReproduced)(Horse *this);</span>
<span class="line">  void (__fastcall *setBred)(Horse *this, bool);</span>
<span class="line">  void (__fastcall *setReproduced)(Horse *this, bool);</span>
<span class="line">  bool (__fastcall *isAmuletHorse)(Horse *this);</span>
<span class="line">  bool (__fastcall *isUndead)(Horse *this);</span>
<span class="line">  bool (__fastcall *isSterile)(Horse *this);</span>
<span class="line">  bool (__fastcall *isAdult)(Horse *this);</span>
<span class="line">  bool (__fastcall *isHorseEating)(Horse *this);</span>
<span class="line">  bool (__fastcall *isBred)(Horse *this);</span>
<span class="line">  void (__fastcall *makeMad)(Horse *this);</span>
<span class="line">  int (__fastcall *nameYOffset)(Horse *this);</span>
<span class="line">  bool (__fastcall *tameToPlayer)(Horse *this, Player *, bool);</span>
<span class="line">  std::string *(__fastcall *getMadSound)(Horse *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="humanoidmonster-vtbl" tabindex="-1"><a class="header-anchor" href="#humanoidmonster-vtbl"><span><code>HumanoidMonster_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ HumanoidMonster_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1193),t=[i];function c(d,r){return n(),s("div",null,t)}const p=e(l,[["render",c],["__file","H.html.vue"]]),v=JSON.parse('{"path":"/1.16.201/structure/H.html","title":"H","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"HashedString","slug":"hashedstring","link":"#hashedstring","children":[]},{"level":3,"title":"HandlerType","slug":"handlertype","link":"#handlertype","children":[]},{"level":3,"title":"HistoricalFrameTimes","slug":"historicalframetimes","link":"#historicalframetimes","children":[]},{"level":3,"title":"HitResult","slug":"hitresult","link":"#hitresult","children":[]},{"level":3,"title":"HolographicPlatform::HoloFrameOfReferenceSetupData","slug":"holographicplatform-holoframeofreferencesetupdata","link":"#holographicplatform-holoframeofreferencesetupdata","children":[]},{"level":3,"title":"hbui::RouterLocation","slug":"hbui-routerlocation","link":"#hbui-routerlocation","children":[]},{"level":3,"title":"HoverScreenEventData","slug":"hoverscreeneventdata","link":"#hoverscreeneventdata","children":[]},{"level":3,"title":"HoloInputModeChangeScreenEventData","slug":"holoinputmodechangescreeneventdata","link":"#holoinputmodechangescreeneventdata","children":[]},{"level":3,"title":"hbui::FacetRegistry::FacetEntry","slug":"hbui-facetregistry-facetentry","link":"#hbui-facetregistry-facetentry","children":[]},{"level":3,"title":"hbui::Feature::registerIsEnabledChangedCallback::__l5::<lambda_1ab57bcd99c576631ba41c810ebdfff7>","slug":"hbui-feature-registerisenabledchangedcallback-l5-lambda-1ab57bcd99c576631ba41c810ebdfff7","link":"#hbui-feature-registerisenabledchangedcallback-l5-lambda-1ab57bcd99c576631ba41c810ebdfff7","children":[]},{"level":3,"title":"hbui::RouterHistory::FullHistory","slug":"hbui-routerhistory-fullhistory","link":"#hbui-routerhistory-fullhistory","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_9198b0a63744d6caef4e6bf93514f963>","slug":"hbui-sceneprovider-createscene-l2-lambda-9198b0a63744d6caef4e6bf93514f963","link":"#hbui-sceneprovider-createscene-l2-lambda-9198b0a63744d6caef4e6bf93514f963","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_03742a56a76ff97dd1e21e945eb64304>","slug":"hbui-sceneprovider-createscene-l2-lambda-03742a56a76ff97dd1e21e945eb64304","link":"#hbui-sceneprovider-createscene-l2-lambda-03742a56a76ff97dd1e21e945eb64304","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_3ee6f9688302b02ab45782d3ee16d8ce>","slug":"hbui-sceneprovider-createscene-l2-lambda-3ee6f9688302b02ab45782d3ee16d8ce","link":"#hbui-sceneprovider-createscene-l2-lambda-3ee6f9688302b02ab45782d3ee16d8ce","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_b4883a86f58b08e1adf25075f2619414>","slug":"hbui-sceneprovider-createscene-l2-lambda-b4883a86f58b08e1adf25075f2619414","link":"#hbui-sceneprovider-createscene-l2-lambda-b4883a86f58b08e1adf25075f2619414","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_198843c04982cc508dc4bb1d040ed8de>","slug":"hbui-sceneprovider-createscene-l2-lambda-198843c04982cc508dc4bb1d040ed8de","link":"#hbui-sceneprovider-createscene-l2-lambda-198843c04982cc508dc4bb1d040ed8de","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_304967065c66569af40ba27c5a2bf6f5>","slug":"hbui-sceneprovider-createscene-l2-lambda-304967065c66569af40ba27c5a2bf6f5","link":"#hbui-sceneprovider-createscene-l2-lambda-304967065c66569af40ba27c5a2bf6f5","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_29ee3a92f3d498426295e1b7ffbcb6ea>","slug":"hbui-sceneprovider-createscene-l2-lambda-29ee3a92f3d498426295e1b7ffbcb6ea","link":"#hbui-sceneprovider-createscene-l2-lambda-29ee3a92f3d498426295e1b7ffbcb6ea","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_df7288e7b03dfb70aec84d96b0a91b02>","slug":"hbui-sceneprovider-createscene-l2-lambda-df7288e7b03dfb70aec84d96b0a91b02","link":"#hbui-sceneprovider-createscene-l2-lambda-df7288e7b03dfb70aec84d96b0a91b02","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_420fe536fd38216466f4e15beb7f8f35>","slug":"hbui-sceneprovider-createscene-l2-lambda-420fe536fd38216466f4e15beb7f8f35","link":"#hbui-sceneprovider-createscene-l2-lambda-420fe536fd38216466f4e15beb7f8f35","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_4e8329eee189f5c87c78bda6854976e8>","slug":"hbui-sceneprovider-createscene-l2-lambda-4e8329eee189f5c87c78bda6854976e8","link":"#hbui-sceneprovider-createscene-l2-lambda-4e8329eee189f5c87c78bda6854976e8","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_b8cda2d613720fd8ef484f58bcce6777>","slug":"hbui-sceneprovider-createscene-l2-lambda-b8cda2d613720fd8ef484f58bcce6777","link":"#hbui-sceneprovider-createscene-l2-lambda-b8cda2d613720fd8ef484f58bcce6777","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l8::<lambda_41cdb76c9bee798add5b424eb551b203>","slug":"hbui-sceneprovider-createscene-l8-lambda-41cdb76c9bee798add5b424eb551b203","link":"#hbui-sceneprovider-createscene-l8-lambda-41cdb76c9bee798add5b424eb551b203","children":[]},{"level":3,"title":"HummingbirdUI::CallbackEntry","slug":"hummingbirdui-callbackentry","link":"#hummingbirdui-callbackentry","children":[]},{"level":3,"title":"hbui::HybridResourceLocation","slug":"hbui-hybridresourcelocation","link":"#hbui-hybridresourcelocation","children":[]},{"level":3,"title":"hbui::RouteMatcher::Entry","slug":"hbui-routematcher-entry","link":"#hbui-routematcher-entry","children":[]},{"level":3,"title":"hbui::RouterLocationEventing::ScreenChangedProperties","slug":"hbui-routerlocationeventing-screenchangedproperties","link":"#hbui-routerlocationeventing-screenchangedproperties","children":[]},{"level":3,"title":"HostOptionSubCommand","slug":"hostoptionsubcommand","link":"#hostoptionsubcommand","children":[]},{"level":3,"title":"HudScreenController","slug":"hudscreencontroller","link":"#hudscreencontroller","children":[]},{"level":3,"title":"HudScreenController::Tooltip","slug":"hudscreencontroller-tooltip","link":"#hudscreencontroller-tooltip","children":[]},{"level":3,"title":"HydrateParams","slug":"hydrateparams","link":"#hydrateparams","children":[]},{"level":3,"title":"HomeSystem::tick::__l2::<lambda_13bc406ef66a336e9c00382282ba4146>","slug":"homesystem-tick-l2-lambda-13bc406ef66a336e9c00382282ba4146","link":"#homesystem-tick-l2-lambda-13bc406ef66a336e9c00382282ba4146","children":[]},{"level":3,"title":"HomeComponent","slug":"homecomponent","link":"#homecomponent","children":[]},{"level":3,"title":"HealableDefinition","slug":"healabledefinition","link":"#healabledefinition","children":[]},{"level":3,"title":"HitboxComponent","slug":"hitboxcomponent","link":"#hitboxcomponent","children":[]},{"level":3,"title":"HistoricPredictionData","slug":"historicpredictiondata","link":"#historicpredictiondata","children":[]},{"level":3,"title":"HugeMushroomFeature","slug":"hugemushroomfeature","link":"#hugemushroomfeature","children":[]},{"level":3,"title":"HugeFungusFeature","slug":"hugefungusfeature","link":"#hugefungusfeature","children":[]},{"level":3,"title":"HTTPRequest","slug":"httprequest","link":"#httprequest","children":[]},{"level":3,"title":"HTTPResponse","slug":"httpresponse","link":"#httpresponse","children":[]},{"level":3,"title":"HellSpringFeature","slug":"hellspringfeature","link":"#hellspringfeature","children":[]},{"level":3,"title":"HellFireFeature","slug":"hellfirefeature","link":"#hellfirefeature","children":[]},{"level":3,"title":"HINSTANCE__","slug":"hinstance","link":"#hinstance","children":[]},{"level":3,"title":"HungerAttrPacket","slug":"hungerattrpacket","link":"#hungerattrpacket","children":[]},{"level":3,"title":"HungerAttrPacket_vtbl","slug":"hungerattrpacket-vtbl","link":"#hungerattrpacket-vtbl","children":[]},{"level":3,"title":"HurtArmorPacket","slug":"hurtarmorpacket","link":"#hurtarmorpacket","children":[]},{"level":3,"title":"HurtArmorPacket_vtbl","slug":"hurtarmorpacket-vtbl","link":"#hurtarmorpacket-vtbl","children":[]},{"level":3,"title":"HWND__","slug":"hwnd","link":"#hwnd","children":[]},{"level":3,"title":"HttpHeaders","slug":"httpheaders","link":"#httpheaders","children":[]},{"level":3,"title":"HeaderTimerComponent","slug":"headertimercomponent","link":"#headertimercomponent","children":[]},{"level":3,"title":"HeaderTimerComponent_vtbl","slug":"headertimercomponent-vtbl","link":"#headertimercomponent-vtbl","children":[]},{"level":3,"title":"HeaderBannerComponent","slug":"headerbannercomponent","link":"#headerbannercomponent","children":[]},{"level":3,"title":"HeaderBannerComponent_vtbl","slug":"headerbannercomponent-vtbl","link":"#headerbannercomponent-vtbl","children":[]},{"level":3,"title":"HeaderComponent","slug":"headercomponent","link":"#headercomponent","children":[]},{"level":3,"title":"HeaderComponent_vtbl","slug":"headercomponent-vtbl","link":"#headercomponent-vtbl","children":[]},{"level":3,"title":"hbui::ILibrary","slug":"hbui-ilibrary","link":"#hbui-ilibrary","children":[]},{"level":3,"title":"hbui::IViewRenderer","slug":"hbui-iviewrenderer","link":"#hbui-iviewrenderer","children":[]},{"level":3,"title":"hbui::IViewRenderer_vtbl","slug":"hbui-iviewrenderer-vtbl","link":"#hbui-iviewrenderer-vtbl","children":[]},{"level":3,"title":"hbui::IView","slug":"hbui-iview","link":"#hbui-iview","children":[]},{"level":3,"title":"hbui::IViewListener","slug":"hbui-iviewlistener","link":"#hbui-iviewlistener","children":[]},{"level":3,"title":"hbui::IViewListener_vtbl","slug":"hbui-iviewlistener-vtbl","link":"#hbui-iviewlistener-vtbl","children":[]},{"level":3,"title":"hbui::CacheSnapshot","slug":"hbui-cachesnapshot","link":"#hbui-cachesnapshot","children":[]},{"level":3,"title":"hbui::ViewCacheSnapshot","slug":"hbui-viewcachesnapshot","link":"#hbui-viewcachesnapshot","children":[]},{"level":3,"title":"hbui::SystemCacheSnapshot","slug":"hbui-systemcachesnapshot","link":"#hbui-systemcachesnapshot","children":[]},{"level":3,"title":"hbui::BufferSnapshot","slug":"hbui-buffersnapshot","link":"#hbui-buffersnapshot","children":[]},{"level":3,"title":"hbui::DebugData","slug":"hbui-debugdata","link":"#hbui-debugdata","children":[]},{"level":3,"title":"hbui::IView_vtbl","slug":"hbui-iview-vtbl","link":"#hbui-iview-vtbl","children":[]},{"level":3,"title":"hbui::IFacetRegistry","slug":"hbui-ifacetregistry","link":"#hbui-ifacetregistry","children":[]},{"level":3,"title":"hbui::IFacet","slug":"hbui-ifacet","link":"#hbui-ifacet","children":[]},{"level":3,"title":"hbui::FacetBinder","slug":"hbui-facetbinder","link":"#hbui-facetbinder","children":[]},{"level":3,"title":"hbui::IFacet_vtbl","slug":"hbui-ifacet-vtbl","link":"#hbui-ifacet-vtbl","children":[]},{"level":3,"title":"hbui::IFacetRegistry_vtbl","slug":"hbui-ifacetregistry-vtbl","link":"#hbui-ifacetregistry-vtbl","children":[]},{"level":3,"title":"hbui::ILibrary_vtbl","slug":"hbui-ilibrary-vtbl","link":"#hbui-ilibrary-vtbl","children":[]},{"level":3,"title":"hbui::SceneProvider","slug":"hbui-sceneprovider","link":"#hbui-sceneprovider","children":[]},{"level":3,"title":"HolographicPlatform","slug":"holographicplatform","link":"#holographicplatform","children":[]},{"level":3,"title":"HolographicPlatform::LUID","slug":"holographicplatform-luid","link":"#holographicplatform-luid","children":[]},{"level":3,"title":"HolographicPlatform_vtbl","slug":"holographicplatform-vtbl","link":"#holographicplatform-vtbl","children":[]},{"level":3,"title":"HolographicPlatform::HoloCursorWorldParams","slug":"holographicplatform-holocursorworldparams","link":"#holographicplatform-holocursorworldparams","children":[]},{"level":3,"title":"HolosceneRenderer","slug":"holoscenerenderer","link":"#holoscenerenderer","children":[]},{"level":3,"title":"hbui::ResourceRegistry::PathCount","slug":"hbui-resourceregistry-pathcount","link":"#hbui-resourceregistry-pathcount","children":[]},{"level":3,"title":"hbui::ResourceRegistry","slug":"hbui-resourceregistry","link":"#hbui-resourceregistry","children":[]},{"level":3,"title":"hbui::RouterHistory","slug":"hbui-routerhistory","link":"#hbui-routerhistory","children":[]},{"level":3,"title":"hbui::Router","slug":"hbui-router","link":"#hbui-router","children":[]},{"level":3,"title":"hbui::RouterHistoryAdapter","slug":"hbui-routerhistoryadapter","link":"#hbui-routerhistoryadapter","children":[]},{"level":3,"title":"hbui::IRouteMatcher","slug":"hbui-iroutematcher","link":"#hbui-iroutematcher","children":[]},{"level":3,"title":"hbui::IRouteMatcher_vtbl","slug":"hbui-iroutematcher-vtbl","link":"#hbui-iroutematcher-vtbl","children":[]},{"level":3,"title":"hbui::Router::QueuedRoute","slug":"hbui-router-queuedroute","link":"#hbui-router-queuedroute","children":[]},{"level":3,"title":"hbui::RouterObserver","slug":"hbui-routerobserver","link":"#hbui-routerobserver","children":[]},{"level":3,"title":"hbui::RouterObserver_vtbl","slug":"hbui-routerobserver-vtbl","link":"#hbui-routerobserver-vtbl","children":[]},{"level":3,"title":"hbui::IRoutePrerequisiteHandler","slug":"hbui-irouteprerequisitehandler","link":"#hbui-irouteprerequisitehandler","children":[]},{"level":3,"title":"hbui::IRoutePrerequisiteHandler_vtbl","slug":"hbui-irouteprerequisitehandler-vtbl","link":"#hbui-irouteprerequisitehandler-vtbl","children":[]},{"level":3,"title":"hbui::IFeature","slug":"hbui-ifeature","link":"#hbui-ifeature","children":[]},{"level":3,"title":"hbui::IFeature_vtbl","slug":"hbui-ifeature-vtbl","link":"#hbui-ifeature-vtbl","children":[]},{"level":3,"title":"hbui::Feature","slug":"hbui-feature","link":"#hbui-feature","children":[]},{"level":3,"title":"hbui::Feature_vtbl","slug":"hbui-feature-vtbl","link":"#hbui-feature-vtbl","children":[]},{"level":3,"title":"hbui::RouterConfiguration","slug":"hbui-routerconfiguration","link":"#hbui-routerconfiguration","children":[]},{"level":3,"title":"hbui::RouterConfiguration_vtbl","slug":"hbui-routerconfiguration-vtbl","link":"#hbui-routerconfiguration-vtbl","children":[]},{"level":3,"title":"hbui::Route","slug":"hbui-route","link":"#hbui-route","children":[]},{"level":3,"title":"HummingbirdUI","slug":"hummingbirdui","link":"#hummingbirdui","children":[]},{"level":3,"title":"HummingbirdUI_vtbl","slug":"hummingbirdui-vtbl","link":"#hummingbirdui-vtbl","children":[]},{"level":3,"title":"HudScreenCapabilities","slug":"hudscreencapabilities","link":"#hudscreencapabilities","children":[]},{"level":3,"title":"HudScreenCapabilities_vtbl","slug":"hudscreencapabilities-vtbl","link":"#hudscreencapabilities-vtbl","children":[]},{"level":3,"title":"HitDetectSystem","slug":"hitdetectsystem","link":"#hitdetectsystem","children":[]},{"level":3,"title":"HitDetectSystem_vtbl","slug":"hitdetectsystem-vtbl","link":"#hitdetectsystem-vtbl","children":[]},{"level":3,"title":"HoloHudDriftDynamics","slug":"holohuddriftdynamics","link":"#holohuddriftdynamics","children":[]},{"level":3,"title":"hbui::ITelemetry","slug":"hbui-itelemetry","link":"#hbui-itelemetry","children":[]},{"level":3,"title":"hbui::ITelemetry_vtbl","slug":"hbui-itelemetry-vtbl","link":"#hbui-itelemetry-vtbl","children":[]},{"level":3,"title":"hbui::Telemetry","slug":"hbui-telemetry","link":"#hbui-telemetry","children":[]},{"level":3,"title":"hbui::Telemetry_vtbl","slug":"hbui-telemetry-vtbl","link":"#hbui-telemetry-vtbl","children":[]},{"level":3,"title":"HardcodedSpawnAreaRegistry","slug":"hardcodedspawnarearegistry","link":"#hardcodedspawnarearegistry","children":[]},{"level":3,"title":"HookNetworkPeer","slug":"hooknetworkpeer","link":"#hooknetworkpeer","children":[]},{"level":3,"title":"HookNetworkPeer_vtbl","slug":"hooknetworkpeer-vtbl","link":"#hooknetworkpeer-vtbl","children":[]},{"level":3,"title":"HudContainerManagerModel","slug":"hudcontainermanagermodel","link":"#hudcontainermanagermodel","children":[]},{"level":3,"title":"HudContainerManagerModel_vtbl","slug":"hudcontainermanagermodel-vtbl","link":"#hudcontainermanagermodel-vtbl","children":[]},{"level":3,"title":"HideDescription","slug":"hidedescription","link":"#hidedescription","children":[]},{"level":3,"title":"HideDescription_vtbl","slug":"hidedescription-vtbl","link":"#hidedescription-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::AnimationFacet>","slug":"hbui-facetbase-hbui-animationfacet","link":"#hbui-facetbase-hbui-animationfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::AnimationFacet>_vtbl","slug":"hbui-facetbase-hbui-animationfacet-vtbl","link":"#hbui-facetbase-hbui-animationfacet-vtbl","children":[]},{"level":3,"title":"hbui::OptionWrapper<bool>","slug":"hbui-optionwrapper-bool","link":"#hbui-optionwrapper-bool","children":[]},{"level":3,"title":"hbui::AnimationFacet","slug":"hbui-animationfacet","link":"#hbui-animationfacet","children":[]},{"level":3,"title":"hbui::AnimationFacet_vtbl","slug":"hbui-animationfacet-vtbl","link":"#hbui-animationfacet-vtbl","children":[]},{"level":3,"title":"hbui::OptionWrapper<bool>::{ctor}::__l5::<lambda_0dd2ebf6df7ed0553bba2bc4c3b54465>","slug":"hbui-optionwrapper-bool-ctor-l5-lambda-0dd2ebf6df7ed0553bba2bc4c3b54465","link":"#hbui-optionwrapper-bool-ctor-l5-lambda-0dd2ebf6df7ed0553bba2bc4c3b54465","children":[]},{"level":3,"title":"hbui::RoutePrerequisiteHandlerMC","slug":"hbui-routeprerequisitehandlermc","link":"#hbui-routeprerequisitehandlermc","children":[]},{"level":3,"title":"hbui::RoutePrerequisiteHandlerMC_vtbl","slug":"hbui-routeprerequisitehandlermc-vtbl","link":"#hbui-routeprerequisitehandlermc-vtbl","children":[]},{"level":3,"title":"HomeSection","slug":"homesection","link":"#homesection","children":[]},{"level":3,"title":"HomeSection_vtbl","slug":"homesection-vtbl","link":"#homesection-vtbl","children":[]},{"level":3,"title":"HydrateResponseCallbackHandler","slug":"hydrateresponsecallbackhandler","link":"#hydrateresponsecallbackhandler","children":[]},{"level":3,"title":"HydrateResponseCallbackHandler_vtbl","slug":"hydrateresponsecallbackhandler-vtbl","link":"#hydrateresponsecallbackhandler-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::RouterFacet>","slug":"hbui-facetbase-hbui-routerfacet","link":"#hbui-facetbase-hbui-routerfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::RouterFacet>_vtbl","slug":"hbui-facetbase-hbui-routerfacet-vtbl","link":"#hbui-facetbase-hbui-routerfacet-vtbl","children":[]},{"level":3,"title":"hbui::RouterFacet","slug":"hbui-routerfacet","link":"#hbui-routerfacet","children":[]},{"level":3,"title":"hbui::RouterFacet_vtbl","slug":"hbui-routerfacet-vtbl","link":"#hbui-routerfacet-vtbl","children":[]},{"level":3,"title":"hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l15::<lambda_0cc03f2b69703d47831966b90071f608>","slug":"hbui-routeprerequisitehandlermc-handleachievementprerequisites-l15-lambda-0cc03f2b69703d47831966b90071f608","link":"#hbui-routeprerequisitehandlermc-handleachievementprerequisites-l15-lambda-0cc03f2b69703d47831966b90071f608","children":[]},{"level":3,"title":"hbui::RoutePrerequisiteHandlerMC::_handleAchievementPrerequisites::__l13::<lambda_eeeb9f2af150426eb424d350f84fc216>","slug":"hbui-routeprerequisitehandlermc-handleachievementprerequisites-l13-lambda-eeeb9f2af150426eb424d350f84fc216","link":"#hbui-routeprerequisitehandlermc-handleachievementprerequisites-l13-lambda-eeeb9f2af150426eb424d350f84fc216","children":[]},{"level":3,"title":"HudContainerManagerController","slug":"hudcontainermanagercontroller","link":"#hudcontainermanagercontroller","children":[]},{"level":3,"title":"HudContainerManagerController_vtbl","slug":"hudcontainermanagercontroller-vtbl","link":"#hudcontainermanagercontroller-vtbl","children":[]},{"level":3,"title":"History::TickMobReplay","slug":"history-tickmobreplay","link":"#history-tickmobreplay","children":[]},{"level":3,"title":"History::TickMobReplay_vtbl","slug":"history-tickmobreplay-vtbl","link":"#history-tickmobreplay-vtbl","children":[]},{"level":3,"title":"History::SynchedActorDataReplay","slug":"history-synchedactordatareplay","link":"#history-synchedactordatareplay","children":[]},{"level":3,"title":"History::SynchedActorDataReplay_vtbl","slug":"history-synchedactordatareplay-vtbl","link":"#history-synchedactordatareplay-vtbl","children":[]},{"level":3,"title":"History::AttributeReplay","slug":"history-attributereplay","link":"#history-attributereplay","children":[]},{"level":3,"title":"History::AttributeReplay_vtbl","slug":"history-attributereplay-vtbl","link":"#history-attributereplay-vtbl","children":[]},{"level":3,"title":"History::createReplayableActorStateSource::__l2::FunctionStateSource","slug":"history-createreplayableactorstatesource-l2-functionstatesource","link":"#history-createreplayableactorstatesource-l2-functionstatesource","children":[]},{"level":3,"title":"History::createReplayableActorStateSource::__l2::FunctionStateSource_vtbl","slug":"history-createreplayableactorstatesource-l2-functionstatesource-vtbl","link":"#history-createreplayableactorstatesource-l2-functionstatesource-vtbl","children":[]},{"level":3,"title":"History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay","slug":"history-createplayersnapshotreplaysource-l2-playersnapshotreplay","link":"#history-createplayersnapshotreplaysource-l2-playersnapshotreplay","children":[]},{"level":3,"title":"History::createPlayerSnapshotReplaySource::__l2::PlayerSnapshotReplay_vtbl","slug":"history-createplayersnapshotreplaysource-l2-playersnapshotreplay-vtbl","link":"#history-createplayersnapshotreplaysource-l2-playersnapshotreplay-vtbl","children":[]},{"level":3,"title":"History::createPlayerSnapshotReplaySource::__l2::<lambda_1f894fb1c8414cded9e799b2cb78ac08>","slug":"history-createplayersnapshotreplaysource-l2-lambda-1f894fb1c8414cded9e799b2cb78ac08","link":"#history-createplayersnapshotreplaysource-l2-lambda-1f894fb1c8414cded9e799b2cb78ac08","children":[]},{"level":3,"title":"History::SynchedActorDataReplay::advanceLiveFrame::__l5::<lambda_061e6f19e2a2840cfeb37a624df18704>","slug":"history-synchedactordatareplay-advanceliveframe-l5-lambda-061e6f19e2a2840cfeb37a624df18704","link":"#history-synchedactordatareplay-advanceliveframe-l5-lambda-061e6f19e2a2840cfeb37a624df18704","children":[]},{"level":3,"title":"HMENU__","slug":"hmenu","link":"#hmenu","children":[]},{"level":3,"title":"HBITMAP__","slug":"hbitmap","link":"#hbitmap","children":[]},{"level":3,"title":"HKEY__","slug":"hkey","link":"#hkey","children":[]},{"level":3,"title":"HICON__","slug":"hicon","link":"#hicon","children":[]},{"level":3,"title":"HBRUSH__","slug":"hbrush","link":"#hbrush","children":[]},{"level":3,"title":"HPALETTE__","slug":"hpalette","link":"#hpalette","children":[]},{"level":3,"title":"HDC__","slug":"hdc","link":"#hdc","children":[]},{"level":3,"title":"HENHMETAFILE__","slug":"henhmetafile","link":"#henhmetafile","children":[]},{"level":3,"title":"HSTRING__","slug":"hstring","link":"#hstring","children":[]},{"level":3,"title":"HWINSTA__","slug":"hwinsta","link":"#hwinsta","children":[]},{"level":3,"title":"hostent","slug":"hostent","link":"#hostent","children":[]},{"level":3,"title":"HSTRING_HEADER","slug":"hstring-header","link":"#hstring-header","children":[]},{"level":3,"title":"HMETAFILE__","slug":"hmetafile","link":"#hmetafile","children":[]},{"level":3,"title":"HRSRC__","slug":"hrsrc","link":"#hrsrc","children":[]},{"level":3,"title":"HRAWINPUT__","slug":"hrawinput","link":"#hrawinput","children":[]},{"level":3,"title":"HTOUCHINPUT__","slug":"htouchinput","link":"#htouchinput","children":[]},{"level":3,"title":"HashedString::StringHasher<char const *>","slug":"hashedstring-stringhasher-char-const","link":"#hashedstring-stringhasher-char-const","children":[]},{"level":3,"title":"HashedString::Hash64<0>","slug":"hashedstring-hash64-0","link":"#hashedstring-hash64-0","children":[]},{"level":3,"title":"HashedString::Hash64_noNullTerminator<0>","slug":"hashedstring-hash64-nonullterminator-0","link":"#hashedstring-hash64-nonullterminator-0","children":[]},{"level":3,"title":"HTASK__","slug":"htask","link":"#htask","children":[]},{"level":3,"title":"HPEN__","slug":"hpen","link":"#hpen","children":[]},{"level":3,"title":"HRGN__","slug":"hrgn","link":"#hrgn","children":[]},{"level":3,"title":"HACCEL__","slug":"haccel","link":"#haccel","children":[]},{"level":3,"title":"HDESK__","slug":"hdesk","link":"#hdesk","children":[]},{"level":3,"title":"HUMPD__","slug":"humpd","link":"#humpd","children":[]},{"level":3,"title":"HIMC__","slug":"himc","link":"#himc","children":[]},{"level":3,"title":"HHOOK__","slug":"hhook","link":"#hhook","children":[]},{"level":3,"title":"HWINEVENTHOOK__","slug":"hwineventhook","link":"#hwineventhook","children":[]},{"level":3,"title":"HGLRC__","slug":"hglrc","link":"#hglrc","children":[]},{"level":3,"title":"HashType64_hash","slug":"hashtype64-hash","link":"#hashtype64-hash","children":[]},{"level":3,"title":"HIMCC__","slug":"himcc","link":"#himcc","children":[]},{"level":3,"title":"HCOLORSPACE__","slug":"hcolorspace","link":"#hcolorspace","children":[]},{"level":3,"title":"HMONITOR__","slug":"hmonitor","link":"#hmonitor","children":[]},{"level":3,"title":"HGESTUREINFO__","slug":"hgestureinfo","link":"#hgestureinfo","children":[]},{"level":3,"title":"HLSURF__","slug":"hlsurf","link":"#hlsurf","children":[]},{"level":3,"title":"HFONT__","slug":"hfont","link":"#hfont","children":[]},{"level":3,"title":"HSTRING_BUFFER__","slug":"hstring-buffer","link":"#hstring-buffer","children":[]},{"level":3,"title":"HKL__","slug":"hkl","link":"#hkl","children":[]},{"level":3,"title":"HSTR__","slug":"hstr","link":"#hstr","children":[]},{"level":3,"title":"HDROP__","slug":"hdrop","link":"#hdrop","children":[]},{"level":3,"title":"HSPRITE__","slug":"hsprite","link":"#hsprite","children":[]},{"level":3,"title":"HelpCommand","slug":"helpcommand","link":"#helpcommand","children":[]},{"level":3,"title":"HelpCommand_vtbl","slug":"helpcommand-vtbl","link":"#helpcommand-vtbl","children":[]},{"level":3,"title":"hbui::Scene","slug":"hbui-scene","link":"#hbui-scene","children":[]},{"level":3,"title":"hbui::Scene_vtbl","slug":"hbui-scene-vtbl","link":"#hbui-scene-vtbl","children":[]},{"level":3,"title":"hbui::RouteMatcher::DefaultEntry","slug":"hbui-routematcher-defaultentry","link":"#hbui-routematcher-defaultentry","children":[]},{"level":3,"title":"hbui::RouteMatcher","slug":"hbui-routematcher","link":"#hbui-routematcher","children":[]},{"level":3,"title":"hbui::RouteMatcher_vtbl","slug":"hbui-routematcher-vtbl","link":"#hbui-routematcher-vtbl","children":[]},{"level":3,"title":"HitResultComponent","slug":"hitresultcomponent","link":"#hitresultcomponent","children":[]},{"level":3,"title":"HTTPRequestInternal","slug":"httprequestinternal","link":"#httprequestinternal","children":[]},{"level":3,"title":"HTTPRequestInternal_vtbl","slug":"httprequestinternal-vtbl","link":"#httprequestinternal-vtbl","children":[]},{"level":3,"title":"HTTPRequestCancelSource","slug":"httprequestcancelsource","link":"#httprequestcancelsource","children":[]},{"level":3,"title":"HTTPRequestCancelSource_vtbl","slug":"httprequestcancelsource-vtbl","link":"#httprequestcancelsource-vtbl","children":[]},{"level":3,"title":"hbui::TapGestureParameters","slug":"hbui-tapgestureparameters","link":"#hbui-tapgestureparameters","children":[]},{"level":3,"title":"hbui::FlingGestureParameters","slug":"hbui-flinggestureparameters","link":"#hbui-flinggestureparameters","children":[]},{"level":3,"title":"hbui::PanGestureParameters","slug":"hbui-pangestureparameters","link":"#hbui-pangestureparameters","children":[]},{"level":3,"title":"hbui::GestureParameters","slug":"hbui-gestureparameters","link":"#hbui-gestureparameters","children":[]},{"level":3,"title":"HitResultSystem","slug":"hitresultsystem","link":"#hitresultsystem","children":[]},{"level":3,"title":"HitResultSystem_vtbl","slug":"hitresultsystem-vtbl","link":"#hitresultsystem-vtbl","children":[]},{"level":3,"title":"HolographicPostRenderer","slug":"holographicpostrenderer","link":"#holographicpostrenderer","children":[]},{"level":3,"title":"HolographicPostRenderer_vtbl","slug":"holographicpostrenderer-vtbl","link":"#holographicpostrenderer-vtbl","children":[]},{"level":3,"title":"HotBarWipeRenderer","slug":"hotbarwiperenderer","link":"#hotbarwiperenderer","children":[]},{"level":3,"title":"HotBarWipeRenderer_vtbl","slug":"hotbarwiperenderer-vtbl","link":"#hotbarwiperenderer-vtbl","children":[]},{"level":3,"title":"HotBarCooldownRenderer","slug":"hotbarcooldownrenderer","link":"#hotbarcooldownrenderer","children":[]},{"level":3,"title":"HotBarCooldownRenderer_vtbl","slug":"hotbarcooldownrenderer-vtbl","link":"#hotbarcooldownrenderer-vtbl","children":[]},{"level":3,"title":"HotBarDropRenderer","slug":"hotbardroprenderer","link":"#hotbardroprenderer","children":[]},{"level":3,"title":"HotBarDropRenderer_vtbl","slug":"hotbardroprenderer-vtbl","link":"#hotbardroprenderer-vtbl","children":[]},{"level":3,"title":"HoverTextRenderer","slug":"hovertextrenderer","link":"#hovertextrenderer","children":[]},{"level":3,"title":"HoverTextRenderer_vtbl","slug":"hovertextrenderer-vtbl","link":"#hovertextrenderer-vtbl","children":[]},{"level":3,"title":"HudArmorRenderer","slug":"hudarmorrenderer","link":"#hudarmorrenderer","children":[]},{"level":3,"title":"HudArmorRenderer_vtbl","slug":"hudarmorrenderer-vtbl","link":"#hudarmorrenderer-vtbl","children":[]},{"level":3,"title":"HudBubblesRenderer","slug":"hudbubblesrenderer","link":"#hudbubblesrenderer","children":[]},{"level":3,"title":"HudBubblesRenderer_vtbl","slug":"hudbubblesrenderer-vtbl","link":"#hudbubblesrenderer-vtbl","children":[]},{"level":3,"title":"HudCameraRenderer","slug":"hudcamerarenderer","link":"#hudcamerarenderer","children":[]},{"level":3,"title":"HudCameraRenderer_vtbl","slug":"hudcamerarenderer-vtbl","link":"#hudcamerarenderer-vtbl","children":[]},{"level":3,"title":"HudCursorRenderer","slug":"hudcursorrenderer","link":"#hudcursorrenderer","children":[]},{"level":3,"title":"HudCursorRenderer_vtbl","slug":"hudcursorrenderer-vtbl","link":"#hudcursorrenderer-vtbl","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::WorkerStatsSnapshot","slug":"huddebugoverlayrenderer-workerstatssnapshot","link":"#huddebugoverlayrenderer-workerstatssnapshot","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::WorkerStats","slug":"huddebugoverlayrenderer-workerstats","link":"#huddebugoverlayrenderer-workerstats","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::TaskStatsSnapshot","slug":"huddebugoverlayrenderer-taskstatssnapshot","link":"#huddebugoverlayrenderer-taskstatssnapshot","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::TaskStats","slug":"huddebugoverlayrenderer-taskstats","link":"#huddebugoverlayrenderer-taskstats","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::SpinLockMetrics","slug":"huddebugoverlayrenderer-spinlockmetrics","link":"#huddebugoverlayrenderer-spinlockmetrics","children":[]},{"level":3,"title":"HudDebugOverlayRenderer::SpinLockStats","slug":"huddebugoverlayrenderer-spinlockstats","link":"#huddebugoverlayrenderer-spinlockstats","children":[]},{"level":3,"title":"HudDebugOverlayRenderer","slug":"huddebugoverlayrenderer","link":"#huddebugoverlayrenderer","children":[]},{"level":3,"title":"HudHeartRenderer","slug":"hudheartrenderer","link":"#hudheartrenderer","children":[]},{"level":3,"title":"HudHeartRenderer_vtbl","slug":"hudheartrenderer-vtbl","link":"#hudheartrenderer-vtbl","children":[]},{"level":3,"title":"HudHorseHeartRenderer","slug":"hudhorseheartrenderer","link":"#hudhorseheartrenderer","children":[]},{"level":3,"title":"HudHorseHeartRenderer_vtbl","slug":"hudhorseheartrenderer-vtbl","link":"#hudhorseheartrenderer-vtbl","children":[]},{"level":3,"title":"HudHorseJumpRenderer","slug":"hudhorsejumprenderer","link":"#hudhorsejumprenderer","children":[]},{"level":3,"title":"HudHorseJumpRenderer_vtbl","slug":"hudhorsejumprenderer-vtbl","link":"#hudhorsejumprenderer-vtbl","children":[]},{"level":3,"title":"HudHungerRenderer","slug":"hudhungerrenderer","link":"#hudhungerrenderer","children":[]},{"level":3,"title":"HudHungerRenderer_vtbl","slug":"hudhungerrenderer-vtbl","link":"#hudhungerrenderer-vtbl","children":[]},{"level":3,"title":"HudMobEffectsRenderer","slug":"hudmobeffectsrenderer","link":"#hudmobeffectsrenderer","children":[]},{"level":3,"title":"HudMobEffectsRenderer_vtbl","slug":"hudmobeffectsrenderer-vtbl","link":"#hudmobeffectsrenderer-vtbl","children":[]},{"level":3,"title":"HudPlayerRenderer","slug":"hudplayerrenderer","link":"#hudplayerrenderer","children":[]},{"level":3,"title":"HudPlayerRenderer_vtbl","slug":"hudplayerrenderer-vtbl","link":"#hudplayerrenderer-vtbl","children":[]},{"level":3,"title":"HudProgressRenderer","slug":"hudprogressrenderer","link":"#hudprogressrenderer","children":[]},{"level":3,"title":"HudProgressRenderer_vtbl","slug":"hudprogressrenderer-vtbl","link":"#hudprogressrenderer-vtbl","children":[]},{"level":3,"title":"HudVignetteRenderer","slug":"hudvignetterenderer","link":"#hudvignetterenderer","children":[]},{"level":3,"title":"HudVignetteRenderer_vtbl","slug":"hudvignetterenderer-vtbl","link":"#hudvignetterenderer-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::AchievementsFacet>","slug":"hbui-facetbase-hbui-achievementsfacet","link":"#hbui-facetbase-hbui-achievementsfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::AchievementsFacet>_vtbl","slug":"hbui-facetbase-hbui-achievementsfacet-vtbl","link":"#hbui-facetbase-hbui-achievementsfacet-vtbl","children":[]},{"level":3,"title":"hbui::AchievementsFacet::FacetAchievementData","slug":"hbui-achievementsfacet-facetachievementdata","link":"#hbui-achievementsfacet-facetachievementdata","children":[]},{"level":3,"title":"hbui::AchievementsFacet::FacetPlayerAchievementData","slug":"hbui-achievementsfacet-facetplayerachievementdata","link":"#hbui-achievementsfacet-facetplayerachievementdata","children":[]},{"level":3,"title":"hbui::AchievementsFacet","slug":"hbui-achievementsfacet","link":"#hbui-achievementsfacet","children":[]},{"level":3,"title":"hbui::AchievementsFacet_vtbl","slug":"hbui-achievementsfacet-vtbl","link":"#hbui-achievementsfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::DeviceInformationFacet>","slug":"hbui-facetbase-hbui-deviceinformationfacet","link":"#hbui-facetbase-hbui-deviceinformationfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::DeviceInformationFacet>_vtbl","slug":"hbui-facetbase-hbui-deviceinformationfacet-vtbl","link":"#hbui-facetbase-hbui-deviceinformationfacet-vtbl","children":[]},{"level":3,"title":"hbui::DeviceInformationFacet","slug":"hbui-deviceinformationfacet","link":"#hbui-deviceinformationfacet","children":[]},{"level":3,"title":"hbui::DeviceInformationFacet_vtbl","slug":"hbui-deviceinformationfacet-vtbl","link":"#hbui-deviceinformationfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::FeatureFlagsFacet>","slug":"hbui-facetbase-hbui-featureflagsfacet","link":"#hbui-facetbase-hbui-featureflagsfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::FeatureFlagsFacet>_vtbl","slug":"hbui-facetbase-hbui-featureflagsfacet-vtbl","link":"#hbui-facetbase-hbui-featureflagsfacet-vtbl","children":[]},{"level":3,"title":"hbui::FeatureFlagsFacet","slug":"hbui-featureflagsfacet","link":"#hbui-featureflagsfacet","children":[]},{"level":3,"title":"hbui::FeatureFlagsFacet_vtbl","slug":"hbui-featureflagsfacet-vtbl","link":"#hbui-featureflagsfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::InputFacet>","slug":"hbui-facetbase-hbui-inputfacet","link":"#hbui-facetbase-hbui-inputfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::InputFacet>_vtbl","slug":"hbui-facetbase-hbui-inputfacet-vtbl","link":"#hbui-facetbase-hbui-inputfacet-vtbl","children":[]},{"level":3,"title":"hbui::InputFacet","slug":"hbui-inputfacet","link":"#hbui-inputfacet","children":[]},{"level":3,"title":"hbui::InputFacet_vtbl","slug":"hbui-inputfacet-vtbl","link":"#hbui-inputfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LegacyScreenFacet>","slug":"hbui-facetbase-hbui-legacyscreenfacet","link":"#hbui-facetbase-hbui-legacyscreenfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LegacyScreenFacet>_vtbl","slug":"hbui-facetbase-hbui-legacyscreenfacet-vtbl","link":"#hbui-facetbase-hbui-legacyscreenfacet-vtbl","children":[]},{"level":3,"title":"hbui::LegacyScreenFacet","slug":"hbui-legacyscreenfacet","link":"#hbui-legacyscreenfacet","children":[]},{"level":3,"title":"hbui::LegacyScreenFacet_vtbl","slug":"hbui-legacyscreenfacet-vtbl","link":"#hbui-legacyscreenfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LocaleFacet>","slug":"hbui-facetbase-hbui-localefacet","link":"#hbui-facetbase-hbui-localefacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LocaleFacet>_vtbl","slug":"hbui-facetbase-hbui-localefacet-vtbl","link":"#hbui-facetbase-hbui-localefacet-vtbl","children":[]},{"level":3,"title":"hbui::LocaleFacet","slug":"hbui-localefacet","link":"#hbui-localefacet","children":[]},{"level":3,"title":"hbui::LocaleFacet_vtbl","slug":"hbui-localefacet-vtbl","link":"#hbui-localefacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LocalWorldsFacet>","slug":"hbui-facetbase-hbui-localworldsfacet","link":"#hbui-facetbase-hbui-localworldsfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::LocalWorldsFacet>_vtbl","slug":"hbui-facetbase-hbui-localworldsfacet-vtbl","link":"#hbui-facetbase-hbui-localworldsfacet-vtbl","children":[]},{"level":3,"title":"hbui::LocalWorld","slug":"hbui-localworld","link":"#hbui-localworld","children":[]},{"level":3,"title":"hbui::LocalWorldsFacet","slug":"hbui-localworldsfacet","link":"#hbui-localworldsfacet","children":[]},{"level":3,"title":"hbui::LocalWorldsFacet_vtbl","slug":"hbui-localworldsfacet-vtbl","link":"#hbui-localworldsfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SafeZoneFacet>","slug":"hbui-facetbase-hbui-safezonefacet","link":"#hbui-facetbase-hbui-safezonefacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SafeZoneFacet>_vtbl","slug":"hbui-facetbase-hbui-safezonefacet-vtbl","link":"#hbui-facetbase-hbui-safezonefacet-vtbl","children":[]},{"level":3,"title":"hbui::OptionWrapper<float>","slug":"hbui-optionwrapper-float","link":"#hbui-optionwrapper-float","children":[]},{"level":3,"title":"hbui::SafeZoneFacet","slug":"hbui-safezonefacet","link":"#hbui-safezonefacet","children":[]},{"level":3,"title":"hbui::SafeZoneFacet_vtbl","slug":"hbui-safezonefacet-vtbl","link":"#hbui-safezonefacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::ScreenReaderFacet>","slug":"hbui-facetbase-hbui-screenreaderfacet","link":"#hbui-facetbase-hbui-screenreaderfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::ScreenReaderFacet>_vtbl","slug":"hbui-facetbase-hbui-screenreaderfacet-vtbl","link":"#hbui-facetbase-hbui-screenreaderfacet-vtbl","children":[]},{"level":3,"title":"hbui::ScreenReaderFacet","slug":"hbui-screenreaderfacet","link":"#hbui-screenreaderfacet","children":[]},{"level":3,"title":"hbui::ScreenReaderFacet_vtbl","slug":"hbui-screenreaderfacet-vtbl","link":"#hbui-screenreaderfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SoundFacet>","slug":"hbui-facetbase-hbui-soundfacet","link":"#hbui-facetbase-hbui-soundfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SoundFacet>_vtbl","slug":"hbui-facetbase-hbui-soundfacet-vtbl","link":"#hbui-facetbase-hbui-soundfacet-vtbl","children":[]},{"level":3,"title":"hbui::SoundFacet","slug":"hbui-soundfacet","link":"#hbui-soundfacet","children":[]},{"level":3,"title":"hbui::SoundFacet_vtbl","slug":"hbui-soundfacet-vtbl","link":"#hbui-soundfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SplitScreenFacet>","slug":"hbui-facetbase-hbui-splitscreenfacet","link":"#hbui-facetbase-hbui-splitscreenfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::SplitScreenFacet>_vtbl","slug":"hbui-facetbase-hbui-splitscreenfacet-vtbl","link":"#hbui-facetbase-hbui-splitscreenfacet-vtbl","children":[]},{"level":3,"title":"hbui::SplitScreenFacet","slug":"hbui-splitscreenfacet","link":"#hbui-splitscreenfacet","children":[]},{"level":3,"title":"hbui::SplitScreenFacet_vtbl","slug":"hbui-splitscreenfacet-vtbl","link":"#hbui-splitscreenfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::ToastFacet>","slug":"hbui-facetbase-hbui-toastfacet","link":"#hbui-facetbase-hbui-toastfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::ToastFacet>_vtbl","slug":"hbui-facetbase-hbui-toastfacet-vtbl","link":"#hbui-facetbase-hbui-toastfacet-vtbl","children":[]},{"level":3,"title":"hbui::ToastFacet","slug":"hbui-toastfacet","link":"#hbui-toastfacet","children":[]},{"level":3,"title":"hbui::ToastFacet_vtbl","slug":"hbui-toastfacet-vtbl","link":"#hbui-toastfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::UserFacet>","slug":"hbui-facetbase-hbui-userfacet","link":"#hbui-facetbase-hbui-userfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::UserFacet>_vtbl","slug":"hbui-facetbase-hbui-userfacet-vtbl","link":"#hbui-facetbase-hbui-userfacet-vtbl","children":[]},{"level":3,"title":"hbui::UserFacet","slug":"hbui-userfacet","link":"#hbui-userfacet","children":[]},{"level":3,"title":"hbui::UserFacet_vtbl","slug":"hbui-userfacet-vtbl","link":"#hbui-userfacet-vtbl","children":[]},{"level":3,"title":"hbui::FacetRegistry","slug":"hbui-facetregistry","link":"#hbui-facetregistry","children":[]},{"level":3,"title":"hbui::FacetRegistry_vtbl","slug":"hbui-facetregistry-vtbl","link":"#hbui-facetregistry-vtbl","children":[]},{"level":3,"title":"hbui::TestFacet::ComplexType","slug":"hbui-testfacet-complextype","link":"#hbui-testfacet-complextype","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::TestFacet>","slug":"hbui-facetbase-hbui-testfacet","link":"#hbui-facetbase-hbui-testfacet","children":[]},{"level":3,"title":"hbui::FacetBase<hbui::TestFacet>_vtbl","slug":"hbui-facetbase-hbui-testfacet-vtbl","link":"#hbui-facetbase-hbui-testfacet-vtbl","children":[]},{"level":3,"title":"hbui::TestFacet","slug":"hbui-testfacet","link":"#hbui-testfacet","children":[]},{"level":3,"title":"hbui::TestFacet_vtbl","slug":"hbui-testfacet-vtbl","link":"#hbui-testfacet-vtbl","children":[]},{"level":3,"title":"hbui::OptionWrapper<float>::{ctor}::__l5::<lambda_5e7c5eb415c6d84f19e6135729d9635d>","slug":"hbui-optionwrapper-float-ctor-l5-lambda-5e7c5eb415c6d84f19e6135729d9635d","link":"#hbui-optionwrapper-float-ctor-l5-lambda-5e7c5eb415c6d84f19e6135729d9635d","children":[]},{"level":3,"title":"hbui::FacetRegistry::bind::__l2::<lambda_6cf8e22b1f259530c328b3a73be09bd3>","slug":"hbui-facetregistry-bind-l2-lambda-6cf8e22b1f259530c328b3a73be09bd3","link":"#hbui-facetregistry-bind-l2-lambda-6cf8e22b1f259530c328b3a73be09bd3","children":[]},{"level":3,"title":"hbui::FacetRegistry::bind::__l2::<lambda_6066c263a20a7513df33bbb78d085ae3>","slug":"hbui-facetregistry-bind-l2-lambda-6066c263a20a7513df33bbb78d085ae3","link":"#hbui-facetregistry-bind-l2-lambda-6066c263a20a7513df33bbb78d085ae3","children":[]},{"level":3,"title":"hbui::SplitScreenFacet::{ctor}::__l2::<lambda_a3896d9a4b97bcf25b659c18160e311f>","slug":"hbui-splitscreenfacet-ctor-l2-lambda-a3896d9a4b97bcf25b659c18160e311f","link":"#hbui-splitscreenfacet-ctor-l2-lambda-a3896d9a4b97bcf25b659c18160e311f","children":[]},{"level":3,"title":"hbui::ScreenReaderFacet::_registerObservers::__l8::<lambda_5ae2404388e2ae8d14c2c1abb873009d>","slug":"hbui-screenreaderfacet-registerobservers-l8-lambda-5ae2404388e2ae8d14c2c1abb873009d","link":"#hbui-screenreaderfacet-registerobservers-l8-lambda-5ae2404388e2ae8d14c2c1abb873009d","children":[]},{"level":3,"title":"hbui::ScreenReaderFacet::_registerObservers::__l5::<lambda_ff6107dbe840263fd2607a3531d764fb>","slug":"hbui-screenreaderfacet-registerobservers-l5-lambda-ff6107dbe840263fd2607a3531d764fb","link":"#hbui-screenreaderfacet-registerobservers-l5-lambda-ff6107dbe840263fd2607a3531d764fb","children":[]},{"level":3,"title":"hbui::LocaleFacet::_registerObservers::__l5::<lambda_34070cf23042ac96cc4b06279f26c9e2>","slug":"hbui-localefacet-registerobservers-l5-lambda-34070cf23042ac96cc4b06279f26c9e2","link":"#hbui-localefacet-registerobservers-l5-lambda-34070cf23042ac96cc4b06279f26c9e2","children":[]},{"level":3,"title":"hbui::InputFacet::_registerObservers::__l10::<lambda_3b26e34c65f70ca7014fa632ac7bfb5b>","slug":"hbui-inputfacet-registerobservers-l10-lambda-3b26e34c65f70ca7014fa632ac7bfb5b","link":"#hbui-inputfacet-registerobservers-l10-lambda-3b26e34c65f70ca7014fa632ac7bfb5b","children":[]},{"level":3,"title":"hbui::InputFacet::_registerObservers::__l6::<lambda_ad7d2f101c9885bd05e57617f5a1d792>","slug":"hbui-inputfacet-registerobservers-l6-lambda-ad7d2f101c9885bd05e57617f5a1d792","link":"#hbui-inputfacet-registerobservers-l6-lambda-ad7d2f101c9885bd05e57617f5a1d792","children":[]},{"level":3,"title":"hbui::FacetBase<ScriptApi::ScriptEngineFacet>","slug":"hbui-facetbase-scriptapi-scriptenginefacet","link":"#hbui-facetbase-scriptapi-scriptenginefacet","children":[]},{"level":3,"title":"hbui::FacetBase<ScriptApi::ScriptEngineFacet>_vtbl","slug":"hbui-facetbase-scriptapi-scriptenginefacet-vtbl","link":"#hbui-facetbase-scriptapi-scriptenginefacet-vtbl","children":[]},{"level":3,"title":"hbui::TouchEventData","slug":"hbui-toucheventdata","link":"#hbui-toucheventdata","children":[]},{"level":3,"title":"hbui::GestureEventData::<unnamed_type_panDetails>","slug":"hbui-gestureeventdata-unnamed-type-pandetails","link":"#hbui-gestureeventdata-unnamed-type-pandetails","children":[]},{"level":3,"title":"hbui::GestureEventData::<unnamed_type_flingDetails>","slug":"hbui-gestureeventdata-unnamed-type-flingdetails","link":"#hbui-gestureeventdata-unnamed-type-flingdetails","children":[]},{"level":3,"title":"hbui::GestureEventData","slug":"hbui-gestureeventdata","link":"#hbui-gestureeventdata","children":[]},{"level":3,"title":"hbui::GestureRecognizerBase::TouchEventDataWithCurrentPos","slug":"hbui-gesturerecognizerbase-toucheventdatawithcurrentpos","link":"#hbui-gesturerecognizerbase-toucheventdatawithcurrentpos","children":[]},{"level":3,"title":"hbui::GestureRecognizerBase","slug":"hbui-gesturerecognizerbase","link":"#hbui-gesturerecognizerbase","children":[]},{"level":3,"title":"hbui::GestureRecognizerBase_vtbl","slug":"hbui-gesturerecognizerbase-vtbl","link":"#hbui-gesturerecognizerbase-vtbl","children":[]},{"level":3,"title":"hbui::IGestureListener","slug":"hbui-igesturelistener","link":"#hbui-igesturelistener","children":[]},{"level":3,"title":"hbui::IGestureListener_vtbl","slug":"hbui-igesturelistener-vtbl","link":"#hbui-igesturelistener-vtbl","children":[]},{"level":3,"title":"hbui::FlingRecognizer","slug":"hbui-flingrecognizer","link":"#hbui-flingrecognizer","children":[]},{"level":3,"title":"hbui::FlingRecognizer_vtbl","slug":"hbui-flingrecognizer-vtbl","link":"#hbui-flingrecognizer-vtbl","children":[]},{"level":3,"title":"hbui::ITouchSystem","slug":"hbui-itouchsystem","link":"#hbui-itouchsystem","children":[]},{"level":3,"title":"hbui::ITouchSystem_vtbl","slug":"hbui-itouchsystem-vtbl","link":"#hbui-itouchsystem-vtbl","children":[]},{"level":3,"title":"hbui::GestureManager","slug":"hbui-gesturemanager","link":"#hbui-gesturemanager","children":[]},{"level":3,"title":"hbui::GesturePolicy","slug":"hbui-gesturepolicy","link":"#hbui-gesturepolicy","children":[]},{"level":3,"title":"hbui::GesturePolicy_vtbl","slug":"hbui-gesturepolicy-vtbl","link":"#hbui-gesturepolicy-vtbl","children":[]},{"level":3,"title":"hbui::TapRecognizer","slug":"hbui-taprecognizer","link":"#hbui-taprecognizer","children":[]},{"level":3,"title":"hbui::TapRecognizer_vtbl","slug":"hbui-taprecognizer-vtbl","link":"#hbui-taprecognizer-vtbl","children":[]},{"level":3,"title":"hbui::PanRecognizer","slug":"hbui-panrecognizer","link":"#hbui-panrecognizer","children":[]},{"level":3,"title":"hbui::PanRecognizer_vtbl","slug":"hbui-panrecognizer-vtbl","link":"#hbui-panrecognizer-vtbl","children":[]},{"level":3,"title":"HummingbirdUI::_registerToggleObservers::__l8::<lambda_65fa83552ca5e7be58a344e69c942bb3>","slug":"hummingbirdui-registertoggleobservers-l8-lambda-65fa83552ca5e7be58a344e69c942bb3","link":"#hummingbirdui-registertoggleobservers-l8-lambda-65fa83552ca5e7be58a344e69c942bb3","children":[]},{"level":3,"title":"HummingbirdUI::_registerToggleObservers::__l5::<lambda_ede23b58d9466ab0eecaabf665c4ae6f>","slug":"hummingbirdui-registertoggleobservers-l5-lambda-ede23b58d9466ab0eecaabf665c4ae6f","link":"#hummingbirdui-registertoggleobservers-l5-lambda-ede23b58d9466ab0eecaabf665c4ae6f","children":[]},{"level":3,"title":"HummingbirdUI::_registerToggleObservers::__l2::<lambda_04aa32db8b81ea2ad470eb40b776b578>","slug":"hummingbirdui-registertoggleobservers-l2-lambda-04aa32db8b81ea2ad470eb40b776b578","link":"#hummingbirdui-registertoggleobservers-l2-lambda-04aa32db8b81ea2ad470eb40b776b578","children":[]},{"level":3,"title":"hbui::Scene::init::__l2::<lambda_a0f580796429890ad766443cc20dda62>","slug":"hbui-scene-init-l2-lambda-a0f580796429890ad766443cc20dda62","link":"#hbui-scene-init-l2-lambda-a0f580796429890ad766443cc20dda62","children":[]},{"level":3,"title":"hbui::Scene::init::__l2::<lambda_b0e36d1425fd16211c03af30c4297f0b>","slug":"hbui-scene-init-l2-lambda-b0e36d1425fd16211c03af30c4297f0b","link":"#hbui-scene-init-l2-lambda-b0e36d1425fd16211c03af30c4297f0b","children":[]},{"level":3,"title":"hbui::Scene::init::__l2::<lambda_c102446960817e9a9b5b64dd6cc74790>","slug":"hbui-scene-init-l2-lambda-c102446960817e9a9b5b64dd6cc74790","link":"#hbui-scene-init-l2-lambda-c102446960817e9a9b5b64dd6cc74790","children":[]},{"level":3,"title":"hbui::SceneProvider::createScene::__l2::<lambda_b8946bc37d35e6137b2e4d7a3bcc47ca>","slug":"hbui-sceneprovider-createscene-l2-lambda-b8946bc37d35e6137b2e4d7a3bcc47ca","link":"#hbui-sceneprovider-createscene-l2-lambda-b8946bc37d35e6137b2e4d7a3bcc47ca","children":[]},{"level":3,"title":"hbui::GamepadState","slug":"hbui-gamepadstate","link":"#hbui-gamepadstate","children":[]},{"level":3,"title":"hbui::GameControllerInputHandler","slug":"hbui-gamecontrollerinputhandler","link":"#hbui-gamecontrollerinputhandler","children":[]},{"level":3,"title":"hbui::IGamepadSystem","slug":"hbui-igamepadsystem","link":"#hbui-igamepadsystem","children":[]},{"level":3,"title":"hbui::IGamepadSystem_vtbl","slug":"hbui-igamepadsystem-vtbl","link":"#hbui-igamepadsystem-vtbl","children":[]},{"level":3,"title":"hbui::ITouchInput","slug":"hbui-itouchinput","link":"#hbui-itouchinput","children":[]},{"level":3,"title":"hbui::ITouchInput_vtbl","slug":"hbui-itouchinput-vtbl","link":"#hbui-itouchinput-vtbl","children":[]},{"level":3,"title":"hbui::ActiveTouch","slug":"hbui-activetouch","link":"#hbui-activetouch","children":[]},{"level":3,"title":"hbui::TouchInputHandler","slug":"hbui-touchinputhandler","link":"#hbui-touchinputhandler","children":[]},{"level":3,"title":"hbui::RouterConfiguration::_addAchievementsRouteToMatcher::__l5::<lambda_81c8189686239e53df73b08a181027a5>","slug":"hbui-routerconfiguration-addachievementsroutetomatcher-l5-lambda-81c8189686239e53df73b08a181027a5","link":"#hbui-routerconfiguration-addachievementsroutetomatcher-l5-lambda-81c8189686239e53df73b08a181027a5","children":[]},{"level":3,"title":"hbui::RouterConfiguration::_addPersonaRouteToMatcher::__l9::<lambda_4e587607a05bd4df095d17592af911f5>","slug":"hbui-routerconfiguration-addpersonaroutetomatcher-l9-lambda-4e587607a05bd4df095d17592af911f5","link":"#hbui-routerconfiguration-addpersonaroutetomatcher-l9-lambda-4e587607a05bd4df095d17592af911f5","children":[]},{"level":3,"title":"hbui::RouterConfiguration::createOutOfGameRouteMatcher::__l9::<lambda_e7171c66b973a5665fbb403dbb2c2862>","slug":"hbui-routerconfiguration-createoutofgameroutematcher-l9-lambda-e7171c66b973a5665fbb403dbb2c2862","link":"#hbui-routerconfiguration-createoutofgameroutematcher-l9-lambda-e7171c66b973a5665fbb403dbb2c2862","children":[]},{"level":3,"title":"hbui::RouterConfiguration::createInGameRouteMatcher::__l9::<lambda_b1e01b8ba6fa85f066e412929aa6b2d5>","slug":"hbui-routerconfiguration-createingameroutematcher-l9-lambda-b1e01b8ba6fa85f066e412929aa6b2d5","link":"#hbui-routerconfiguration-createingameroutematcher-l9-lambda-b1e01b8ba6fa85f066e412929aa6b2d5","children":[]},{"level":3,"title":"hbui::Router::_onChange::__l2::<lambda_ca382762252883c93e5f24dc2b0c8635>","slug":"hbui-router-onchange-l2-lambda-ca382762252883c93e5f24dc2b0c8635","link":"#hbui-router-onchange-l2-lambda-ca382762252883c93e5f24dc2b0c8635","children":[]},{"level":3,"title":"hbui::loadJsonFromHybridResources::__l6::<lambda_44461f9abae851eab9a9c18a435bebbd>","slug":"hbui-loadjsonfromhybridresources-l6-lambda-44461f9abae851eab9a9c18a435bebbd","link":"#hbui-loadjsonfromhybridresources-l6-lambda-44461f9abae851eab9a9c18a435bebbd","children":[]},{"level":3,"title":"HdrCalibrationScreenController","slug":"hdrcalibrationscreencontroller","link":"#hdrcalibrationscreencontroller","children":[]},{"level":3,"title":"HdrCalibrationScreenController_vtbl","slug":"hdrcalibrationscreencontroller-vtbl","link":"#hdrcalibrationscreencontroller-vtbl","children":[]},{"level":3,"title":"HowToPlayScreenController","slug":"howtoplayscreencontroller","link":"#howtoplayscreencontroller","children":[]},{"level":3,"title":"HowToPlayScreenController_vtbl","slug":"howtoplayscreencontroller-vtbl","link":"#howtoplayscreencontroller-vtbl","children":[]},{"level":3,"title":"HowToPlayScreenControllerProxyCallbacks","slug":"howtoplayscreencontrollerproxycallbacks","link":"#howtoplayscreencontrollerproxycallbacks","children":[]},{"level":3,"title":"HowToPlayScreenControllerProxy","slug":"howtoplayscreencontrollerproxy","link":"#howtoplayscreencontrollerproxy","children":[]},{"level":3,"title":"HowToPlayScreenControllerProxy_vtbl","slug":"howtoplayscreencontrollerproxy-vtbl","link":"#howtoplayscreencontrollerproxy-vtbl","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerEventHandlers::__l2::<lambda_df79304cc9649fb67bf9353cd28ebf6e>","slug":"howtoplayscreencontroller-registereventhandlers-l2-lambda-df79304cc9649fb67bf9353cd28ebf6e","link":"#howtoplayscreencontroller-registereventhandlers-l2-lambda-df79304cc9649fb67bf9353cd28ebf6e","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerEventHandlers::__l2::<lambda_8ed3ed5e7ff5517b92878b3114b94405>","slug":"howtoplayscreencontroller-registereventhandlers-l2-lambda-8ed3ed5e7ff5517b92878b3114b94405","link":"#howtoplayscreencontroller-registereventhandlers-l2-lambda-8ed3ed5e7ff5517b92878b3114b94405","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerControllerCallbacks::__l2::<lambda_3df758b5b4c13cd9b28dec94ab6a2f24>","slug":"howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24","link":"#howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerControllerCallbacks::__l2::<lambda_3df758b5b4c13cd9b28dec94ab6a2f24>::()::__l2::<lambda_696e9f1d37641dc281f8ace2b56e28eb>","slug":"howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24-l2-lambda-696e9f1d37641dc281f8ace2b56e28eb","link":"#howtoplayscreencontroller-registercontrollercallbacks-l2-lambda-3df758b5b4c13cd9b28dec94ab6a2f24-l2-lambda-696e9f1d37641dc281f8ace2b56e28eb","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_98980cad79d6be51a970ed8b8a173214>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-98980cad79d6be51a970ed8b8a173214","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-98980cad79d6be51a970ed8b8a173214","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_3e638c576b835e1ca482eeb052965021>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-3e638c576b835e1ca482eeb052965021","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-3e638c576b835e1ca482eeb052965021","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_7df109e05f81532ad44d42e1d67f6a9e>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-7df109e05f81532ad44d42e1d67f6a9e","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-7df109e05f81532ad44d42e1d67f6a9e","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_09d820a0cb2cc4cac0a8a8313d479d20>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-09d820a0cb2cc4cac0a8a8313d479d20","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-09d820a0cb2cc4cac0a8a8313d479d20","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_e03c3214a50b8f20f4a5670fcc3b81ff>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-e03c3214a50b8f20f4a5670fcc3b81ff","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-e03c3214a50b8f20f4a5670fcc3b81ff","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_9ce3b3187c64fdea79f2e075c2b0e68c>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-9ce3b3187c64fdea79f2e075c2b0e68c","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-9ce3b3187c64fdea79f2e075c2b0e68c","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_a893d1a64f2d99f078fe2b0ca5f81962>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-a893d1a64f2d99f078fe2b0ca5f81962","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-a893d1a64f2d99f078fe2b0ca5f81962","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_013a21fcd39d0c31c90d5c67a77acc75>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-013a21fcd39d0c31c90d5c67a77acc75","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-013a21fcd39d0c31c90d5c67a77acc75","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_dd5bc4d1a3b691c61f18e7e5ff239919>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-dd5bc4d1a3b691c61f18e7e5ff239919","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-dd5bc4d1a3b691c61f18e7e5ff239919","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_cc9c32b4c0f9d03fa404b76987170fd6>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-cc9c32b4c0f9d03fa404b76987170fd6","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-cc9c32b4c0f9d03fa404b76987170fd6","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_2082268c4a2becb732c3d6439028974e>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-2082268c4a2becb732c3d6439028974e","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-2082268c4a2becb732c3d6439028974e","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_291b19c5d96adffbb9e7233717fc17be>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-291b19c5d96adffbb9e7233717fc17be","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-291b19c5d96adffbb9e7233717fc17be","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_15a24123e7032ce14c4f6a0cddfb6aec>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-15a24123e7032ce14c4f6a0cddfb6aec","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-15a24123e7032ce14c4f6a0cddfb6aec","children":[]},{"level":3,"title":"HowToPlayScreenController::_registerBindings::__l2::<lambda_ebc5cd8dba9baf966beeb4271f47b30c>","slug":"howtoplayscreencontroller-registerbindings-l2-lambda-ebc5cd8dba9baf966beeb4271f47b30c","link":"#howtoplayscreencontroller-registerbindings-l2-lambda-ebc5cd8dba9baf966beeb4271f47b30c","children":[]},{"level":3,"title":"HowToPlayScreenController::{ctor}::__l2::<lambda_1a1204ee0fbb79e5ac63c518e03feff6>","slug":"howtoplayscreencontroller-ctor-l2-lambda-1a1204ee0fbb79e5ac63c518e03feff6","link":"#howtoplayscreencontroller-ctor-l2-lambda-1a1204ee0fbb79e5ac63c518e03feff6","children":[]},{"level":3,"title":"HdrCalibrationScreenController::_registerBindings::__l2::<lambda_0090d31c2cd362a2b64f1c680f920a17>","slug":"hdrcalibrationscreencontroller-registerbindings-l2-lambda-0090d31c2cd362a2b64f1c680f920a17","link":"#hdrcalibrationscreencontroller-registerbindings-l2-lambda-0090d31c2cd362a2b64f1c680f920a17","children":[]},{"level":3,"title":"HdrCalibrationScreenController::_registerBindings::__l2::<lambda_af0e07900b26df6861fa15ee3c18d3c2>","slug":"hdrcalibrationscreencontroller-registerbindings-l2-lambda-af0e07900b26df6861fa15ee3c18d3c2","link":"#hdrcalibrationscreencontroller-registerbindings-l2-lambda-af0e07900b26df6861fa15ee3c18d3c2","children":[]},{"level":3,"title":"HdrCalibrationScreenController::_registerEventHandlers::__l2::<lambda_e31c3805daa310b61ad09c3ee7e5a55a>","slug":"hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-e31c3805daa310b61ad09c3ee7e5a55a","link":"#hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-e31c3805daa310b61ad09c3ee7e5a55a","children":[]},{"level":3,"title":"HdrCalibrationScreenController::_registerEventHandlers::__l2::<lambda_d5a504e56c9f0309e2a9176fd48019d0>","slug":"hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-d5a504e56c9f0309e2a9176fd48019d0","link":"#hdrcalibrationscreencontroller-registereventhandlers-l2-lambda-d5a504e56c9f0309e2a9176fd48019d0","children":[]},{"level":3,"title":"HudScreenController_vtbl","slug":"hudscreencontroller-vtbl","link":"#hudscreencontroller-vtbl","children":[]},{"level":3,"title":"HudScreenController::_registerTooltips::__l5::<lambda_612dea3e7018646313e2faa32f42c26e>","slug":"hudscreencontroller-registertooltips-l5-lambda-612dea3e7018646313e2faa32f42c26e","link":"#hudscreencontroller-registertooltips-l5-lambda-612dea3e7018646313e2faa32f42c26e","children":[]},{"level":3,"title":"HudScreenController::_registerTooltips::__l5::<lambda_2915616f499390bbcede6846322347ad>","slug":"hudscreencontroller-registertooltips-l5-lambda-2915616f499390bbcede6846322347ad","link":"#hudscreencontroller-registertooltips-l5-lambda-2915616f499390bbcede6846322347ad","children":[]},{"level":3,"title":"HudScreenController::_registerTooltips::__l5::<lambda_7f648107bc38bb342441c4168205c24d>","slug":"hudscreencontroller-registertooltips-l5-lambda-7f648107bc38bb342441c4168205c24d","link":"#hudscreencontroller-registertooltips-l5-lambda-7f648107bc38bb342441c4168205c24d","children":[]},{"level":3,"title":"HudScreenController::_registerTooltips::__l5::<lambda_c8ef105c332367b5272a0c12f091592c>","slug":"hudscreencontroller-registertooltips-l5-lambda-c8ef105c332367b5272a0c12f091592c","link":"#hudscreencontroller-registertooltips-l5-lambda-c8ef105c332367b5272a0c12f091592c","children":[]},{"level":3,"title":"HudScreenController::_registerTooltips::__l2::<lambda_aa7f61a620b28af03619de18f5f993b4>","slug":"hudscreencontroller-registertooltips-l2-lambda-aa7f61a620b28af03619de18f5f993b4","link":"#hudscreencontroller-registertooltips-l2-lambda-aa7f61a620b28af03619de18f5f993b4","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_fcb18562d72831645bebf861fdbf02a3>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-fcb18562d72831645bebf861fdbf02a3","link":"#hudscreencontroller-registereventhandlers-l2-lambda-fcb18562d72831645bebf861fdbf02a3","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_33ace497c08bbdbd85bf4001f20e22e6>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-33ace497c08bbdbd85bf4001f20e22e6","link":"#hudscreencontroller-registereventhandlers-l2-lambda-33ace497c08bbdbd85bf4001f20e22e6","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_9f199990a0b5ca789dab498388215a16>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-9f199990a0b5ca789dab498388215a16","link":"#hudscreencontroller-registereventhandlers-l2-lambda-9f199990a0b5ca789dab498388215a16","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_dac0e6bb1a7406d99e29528a46bd7e58>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-dac0e6bb1a7406d99e29528a46bd7e58","link":"#hudscreencontroller-registereventhandlers-l2-lambda-dac0e6bb1a7406d99e29528a46bd7e58","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_4fd4c19a1f90e062769f9cb8be417707>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-4fd4c19a1f90e062769f9cb8be417707","link":"#hudscreencontroller-registereventhandlers-l2-lambda-4fd4c19a1f90e062769f9cb8be417707","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l4::<lambda_da91a43e8ee85cc522816548750ccfb3>","slug":"hudscreencontroller-registereventhandlers-l4-lambda-da91a43e8ee85cc522816548750ccfb3","link":"#hudscreencontroller-registereventhandlers-l4-lambda-da91a43e8ee85cc522816548750ccfb3","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_a93ebc1a35c9b83cd387ef55c5566cff>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-a93ebc1a35c9b83cd387ef55c5566cff","link":"#hudscreencontroller-registereventhandlers-l2-lambda-a93ebc1a35c9b83cd387ef55c5566cff","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_4819de47fe36d9e12608ee0f8134edf8>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-4819de47fe36d9e12608ee0f8134edf8","link":"#hudscreencontroller-registereventhandlers-l2-lambda-4819de47fe36d9e12608ee0f8134edf8","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_df72e0e5dae7626d909fab6738c73a52>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-df72e0e5dae7626d909fab6738c73a52","link":"#hudscreencontroller-registereventhandlers-l2-lambda-df72e0e5dae7626d909fab6738c73a52","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_9cf50b366d8387dd95be8c064fd6b39b>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-9cf50b366d8387dd95be8c064fd6b39b","link":"#hudscreencontroller-registereventhandlers-l2-lambda-9cf50b366d8387dd95be8c064fd6b39b","children":[]},{"level":3,"title":"HudScreenController::_registerEventHandlers::__l2::<lambda_e639e2da445daa176c2ec1175dd978eb>","slug":"hudscreencontroller-registereventhandlers-l2-lambda-e639e2da445daa176c2ec1175dd978eb","link":"#hudscreencontroller-registereventhandlers-l2-lambda-e639e2da445daa176c2ec1175dd978eb","children":[]},{"level":3,"title":"HudScreenController::_selectSlot::__l2::<lambda_1c7e7760850e81b8138b17aa3d0e7ea6>","slug":"hudscreencontroller-selectslot-l2-lambda-1c7e7760850e81b8138b17aa3d0e7ea6","link":"#hudscreencontroller-selectslot-l2-lambda-1c7e7760850e81b8138b17aa3d0e7ea6","children":[]},{"level":3,"title":"HudScreenController::{ctor}::__l2::<lambda_524a1af1e618de3686b438edfbe6d5e4>","slug":"hudscreencontroller-ctor-l2-lambda-524a1af1e618de3686b438edfbe6d5e4","link":"#hudscreencontroller-ctor-l2-lambda-524a1af1e618de3686b438edfbe6d5e4","children":[]},{"level":3,"title":"HoloUIScreenSetupCleanupStrategy","slug":"holouiscreensetupcleanupstrategy","link":"#holouiscreensetupcleanupstrategy","children":[]},{"level":3,"title":"HoloUIScreenSetupCleanupStrategy_vtbl","slug":"holouiscreensetupcleanupstrategy-vtbl","link":"#holouiscreensetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloHUDScreenSetupCleanupStrategy","slug":"holohudscreensetupcleanupstrategy","link":"#holohudscreensetupcleanupstrategy","children":[]},{"level":3,"title":"HoloHUDScreenSetupCleanupStrategy_vtbl","slug":"holohudscreensetupcleanupstrategy-vtbl","link":"#holohudscreensetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloIngameUIScreenSetupCleanupStrategy","slug":"holoingameuiscreensetupcleanupstrategy","link":"#holoingameuiscreensetupcleanupstrategy","children":[]},{"level":3,"title":"HoloIngameUIScreenSetupCleanupStrategy_vtbl","slug":"holoingameuiscreensetupcleanupstrategy-vtbl","link":"#holoingameuiscreensetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloPlayspaceSetupCleanupStrategy","slug":"holoplayspacesetupcleanupstrategy","link":"#holoplayspacesetupcleanupstrategy","children":[]},{"level":3,"title":"HoloPlayspaceSetupCleanupStrategy_vtbl","slug":"holoplayspacesetupcleanupstrategy-vtbl","link":"#holoplayspacesetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloRealitySetupCleanupStrategy","slug":"holorealitysetupcleanupstrategy","link":"#holorealitysetupcleanupstrategy","children":[]},{"level":3,"title":"HoloRealitySetupCleanupStrategy_vtbl","slug":"holorealitysetupcleanupstrategy-vtbl","link":"#holorealitysetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloScreenSetupCleanupStrategy","slug":"holoscreensetupcleanupstrategy","link":"#holoscreensetupcleanupstrategy","children":[]},{"level":3,"title":"HoloScreenSetupCleanupStrategy_vtbl","slug":"holoscreensetupcleanupstrategy-vtbl","link":"#holoscreensetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"HoloViewerSetupCleanupStrategy","slug":"holoviewersetupcleanupstrategy","link":"#holoviewersetupcleanupstrategy","children":[]},{"level":3,"title":"HoloViewerSetupCleanupStrategy_vtbl","slug":"holoviewersetupcleanupstrategy-vtbl","link":"#holoviewersetupcleanupstrategy-vtbl","children":[]},{"level":3,"title":"Hitbox","slug":"hitbox","link":"#hitbox","children":[]},{"level":3,"title":"HangingActor","slug":"hangingactor","link":"#hangingactor","children":[]},{"level":3,"title":"HangingActor_vtbl","slug":"hangingactor-vtbl","link":"#hangingactor-vtbl","children":[]},{"level":3,"title":"HumanoidModel","slug":"humanoidmodel","link":"#humanoidmodel","children":[]},{"level":3,"title":"HumanoidModel_vtbl","slug":"humanoidmodel-vtbl","link":"#humanoidmodel-vtbl","children":[]},{"level":3,"title":"HorseModel","slug":"horsemodel","link":"#horsemodel","children":[]},{"level":3,"title":"HorseModel_vtbl","slug":"horsemodel-vtbl","link":"#horsemodel-vtbl","children":[]},{"level":3,"title":"Horse","slug":"horse","link":"#horse","children":[]},{"level":3,"title":"HorseModelV2","slug":"horsemodelv2","link":"#horsemodelv2","children":[]},{"level":3,"title":"HorseModelV2_vtbl","slug":"horsemodelv2-vtbl","link":"#horsemodelv2-vtbl","children":[]},{"level":3,"title":"HeartParticle","slug":"heartparticle","link":"#heartparticle","children":[]},{"level":3,"title":"HeartParticle_vtbl","slug":"heartparticle-vtbl","link":"#heartparticle-vtbl","children":[]},{"level":3,"title":"HugeExplosionParticle","slug":"hugeexplosionparticle","link":"#hugeexplosionparticle","children":[]},{"level":3,"title":"HugeExplosionParticle_vtbl","slug":"hugeexplosionparticle-vtbl","link":"#hugeexplosionparticle-vtbl","children":[]},{"level":3,"title":"HugeExplosionSeedParticle","slug":"hugeexplosionseedparticle","link":"#hugeexplosionseedparticle","children":[]},{"level":3,"title":"HugeExplosionSeedParticle_vtbl","slug":"hugeexplosionseedparticle-vtbl","link":"#hugeexplosionseedparticle-vtbl","children":[]},{"level":3,"title":"HappyVillagerParticle","slug":"happyvillagerparticle","link":"#happyvillagerparticle","children":[]},{"level":3,"title":"HappyVillagerParticle_vtbl","slug":"happyvillagerparticle-vtbl","link":"#happyvillagerparticle-vtbl","children":[]},{"level":3,"title":"HuskModel","slug":"huskmodel","link":"#huskmodel","children":[]},{"level":3,"title":"HuskModel_vtbl","slug":"huskmodel-vtbl","link":"#huskmodel-vtbl","children":[]},{"level":3,"title":"HumanoidMonster","slug":"humanoidmonster","link":"#humanoidmonster","children":[]},{"level":3,"title":"HorseArmorItem","slug":"horsearmoritem","link":"#horsearmoritem","children":[]},{"level":3,"title":"HorseRenderer","slug":"horserenderer","link":"#horserenderer","children":[]},{"level":3,"title":"HorseRenderer_vtbl","slug":"horserenderer-vtbl","link":"#horserenderer-vtbl","children":[]},{"level":3,"title":"HorseRendererV2","slug":"horserendererv2","link":"#horserendererv2","children":[]},{"level":3,"title":"HorseRendererV2_vtbl","slug":"horserendererv2-vtbl","link":"#horserendererv2-vtbl","children":[]},{"level":3,"title":"HumanoidMobRenderer","slug":"humanoidmobrenderer","link":"#humanoidmobrenderer","children":[]},{"level":3,"title":"HumanoidMobRenderer_vtbl","slug":"humanoidmobrenderer-vtbl","link":"#humanoidmobrenderer-vtbl","children":[]},{"level":3,"title":"HeavyBlock","slug":"heavyblock","link":"#heavyblock","children":[]},{"level":3,"title":"HeavyBlock_vtbl","slug":"heavyblock-vtbl","link":"#heavyblock-vtbl","children":[]},{"level":3,"title":"HurtOwnerSubcomponent","slug":"hurtownersubcomponent","link":"#hurtownersubcomponent","children":[]},{"level":3,"title":"HurtOwnerSubcomponent_vtbl","slug":"hurtownersubcomponent-vtbl","link":"#hurtownersubcomponent-vtbl","children":[]},{"level":3,"title":"HydrateItemRequest::CacheMetadata","slug":"hydrateitemrequest-cachemetadata","link":"#hydrateitemrequest-cachemetadata","children":[]},{"level":3,"title":"HydrateItemRequest","slug":"hydrateitemrequest","link":"#hydrateitemrequest","children":[]},{"level":3,"title":"HydrateItemRequest_vtbl","slug":"hydrateitemrequest-vtbl","link":"#hydrateitemrequest-vtbl","children":[]},{"level":3,"title":"HIDController","slug":"hidcontroller","link":"#hidcontroller","children":[]},{"level":3,"title":"HIDController_vtbl","slug":"hidcontroller-vtbl","link":"#hidcontroller-vtbl","children":[]},{"level":3,"title":"HIDControllerWin32","slug":"hidcontrollerwin32","link":"#hidcontrollerwin32","children":[]},{"level":3,"title":"HIDControllerWin32_vtbl","slug":"hidcontrollerwin32-vtbl","link":"#hidcontrollerwin32-vtbl","children":[]},{"level":3,"title":"HitResultContainer::LocalPlayerContainer","slug":"hitresultcontainer-localplayercontainer","link":"#hitresultcontainer-localplayercontainer","children":[]},{"level":3,"title":"HitResultContainer::LocalPlayerContainer_vtbl","slug":"hitresultcontainer-localplayercontainer-vtbl","link":"#hitresultcontainer-localplayercontainer-vtbl","children":[]},{"level":3,"title":"HomeSystem","slug":"homesystem","link":"#homesystem","children":[]},{"level":3,"title":"HomeSystem_vtbl","slug":"homesystem-vtbl","link":"#homesystem-vtbl","children":[]},{"level":3,"title":"HTTPRequestCancelSourceAbort","slug":"httprequestcancelsourceabort","link":"#httprequestcancelsourceabort","children":[]},{"level":3,"title":"HTTPRequestCancelSourceAbort_vtbl","slug":"httprequestcancelsourceabort-vtbl","link":"#httprequestcancelsourceabort-vtbl","children":[]},{"level":3,"title":"HealableComponent","slug":"healablecomponent","link":"#healablecomponent","children":[]},{"level":3,"title":"HideComponent","slug":"hidecomponent","link":"#hidecomponent","children":[]},{"level":3,"title":"HitboxDefinition","slug":"hitboxdefinition","link":"#hitboxdefinition","children":[]},{"level":3,"title":"HitboxJson","slug":"hitboxjson","link":"#hitboxjson","children":[]},{"level":3,"title":"HomeDefinition","slug":"homedefinition","link":"#homedefinition","children":[]},{"level":3,"title":"HopperDefinition","slug":"hopperdefinition","link":"#hopperdefinition","children":[]},{"level":3,"title":"Hopper","slug":"hopper","link":"#hopper","children":[]},{"level":3,"title":"HopperComponent","slug":"hoppercomponent","link":"#hoppercomponent","children":[]},{"level":3,"title":"HurtOnConditionDefinition","slug":"hurtonconditiondefinition","link":"#hurtonconditiondefinition","children":[]},{"level":3,"title":"HomeDefinition::buildSchema::__l2::<lambda_2ca5030ea1b6b39672c73b4b66f2fe15>","slug":"homedefinition-buildschema-l2-lambda-2ca5030ea1b6b39672c73b4b66f2fe15","link":"#homedefinition-buildschema-l2-lambda-2ca5030ea1b6b39672c73b4b66f2fe15","children":[]},{"level":3,"title":"HealableComponent::getInteraction::__l20::<lambda_2e4b6d19d8e2cc25bfd90a4348859777>","slug":"healablecomponent-getinteraction-l20-lambda-2e4b6d19d8e2cc25bfd90a4348859777","link":"#healablecomponent-getinteraction-l20-lambda-2e4b6d19d8e2cc25bfd90a4348859777","children":[]},{"level":3,"title":"HopMoveControl","slug":"hopmovecontrol","link":"#hopmovecontrol","children":[]},{"level":3,"title":"HopMoveControl_vtbl","slug":"hopmovecontrol-vtbl","link":"#hopmovecontrol-vtbl","children":[]},{"level":3,"title":"HoverMoveControl","slug":"hovermovecontrol","link":"#hovermovecontrol","children":[]},{"level":3,"title":"HoverMoveControl_vtbl","slug":"hovermovecontrol-vtbl","link":"#hovermovecontrol-vtbl","children":[]},{"level":3,"title":"HoverPathNavigation","slug":"hoverpathnavigation","link":"#hoverpathnavigation","children":[]},{"level":3,"title":"HoverPathNavigation_vtbl","slug":"hoverpathnavigation-vtbl","link":"#hoverpathnavigation-vtbl","children":[]},{"level":3,"title":"HurtOnConditionComponent","slug":"hurtonconditioncomponent","link":"#hurtonconditioncomponent","children":[]},{"level":3,"title":"HurtOnConditionSystem","slug":"hurtonconditionsystem","link":"#hurtonconditionsystem","children":[]},{"level":3,"title":"HurtOnConditionSystem_vtbl","slug":"hurtonconditionsystem-vtbl","link":"#hurtonconditionsystem-vtbl","children":[]},{"level":3,"title":"HurtByTargetGoal","slug":"hurtbytargetgoal","link":"#hurtbytargetgoal","children":[]},{"level":3,"title":"HurtByTargetGoal_vtbl","slug":"hurtbytargetgoal-vtbl","link":"#hurtbytargetgoal-vtbl","children":[]},{"level":3,"title":"HaveItemDefinition","slug":"haveitemdefinition","link":"#haveitemdefinition","children":[]},{"level":3,"title":"HaveItemDefinition_vtbl","slug":"haveitemdefinition-vtbl","link":"#haveitemdefinition-vtbl","children":[]},{"level":3,"title":"HaveItemNode","slug":"haveitemnode","link":"#haveitemnode","children":[]},{"level":3,"title":"HaveItemNode_vtbl","slug":"haveitemnode-vtbl","link":"#haveitemnode-vtbl","children":[]},{"level":3,"title":"HopperBlockActor","slug":"hopperblockactor","link":"#hopperblockactor","children":[]},{"level":3,"title":"HopperBlockActor_vtbl","slug":"hopperblockactor-vtbl","link":"#hopperblockactor-vtbl","children":[]},{"level":3,"title":"Hopper::_pushOutItems::__l11::<lambda_8021f23895e628ed9b3c2f2406f50b3b>","slug":"hopper-pushoutitems-l11-lambda-8021f23895e628ed9b3c2f2406f50b3b","link":"#hopper-pushoutitems-l11-lambda-8021f23895e628ed9b3c2f2406f50b3b","children":[]},{"level":3,"title":"Hopper::_tryPullInItemsFromAboveContainer::__l14::<lambda_cfa17afae7045b99dd77cd1780d5e42b>","slug":"hopper-trypullinitemsfromabovecontainer-l14-lambda-cfa17afae7045b99dd77cd1780d5e42b","link":"#hopper-trypullinitemsfromabovecontainer-l14-lambda-cfa17afae7045b99dd77cd1780d5e42b","children":[]},{"level":3,"title":"HealthAttributeDelegate","slug":"healthattributedelegate","link":"#healthattributedelegate","children":[]},{"level":3,"title":"HealthAttributeDelegate_vtbl","slug":"healthattributedelegate-vtbl","link":"#healthattributedelegate-vtbl","children":[]},{"level":3,"title":"HungerAttributeDelegate","slug":"hungerattributedelegate","link":"#hungerattributedelegate","children":[]},{"level":3,"title":"HungerAttributeDelegate_vtbl","slug":"hungerattributedelegate-vtbl","link":"#hungerattributedelegate-vtbl","children":[]},{"level":3,"title":"HorseEquipValidationState","slug":"horseequipvalidationstate","link":"#horseequipvalidationstate","children":[]},{"level":3,"title":"HudContainerModel","slug":"hudcontainermodel","link":"#hudcontainermodel","children":[]},{"level":3,"title":"HudContainerModel_vtbl","slug":"hudcontainermodel-vtbl","link":"#hudcontainermodel-vtbl","children":[]},{"level":3,"title":"HangingActorItem","slug":"hangingactoritem","link":"#hangingactoritem","children":[]},{"level":3,"title":"HatchetItem","slug":"hatchetitem","link":"#hatchetitem","children":[]},{"level":3,"title":"HoeItem","slug":"hoeitem","link":"#hoeitem","children":[]},{"level":3,"title":"HopperBlock","slug":"hopperblock","link":"#hopperblock","children":[]},{"level":3,"title":"HopperBlock_vtbl","slug":"hopperblock-vtbl","link":"#hopperblock-vtbl","children":[]},{"level":3,"title":"HayBlockBlock","slug":"hayblockblock","link":"#hayblockblock","children":[]},{"level":3,"title":"HayBlockBlock_vtbl","slug":"hayblockblock-vtbl","link":"#hayblockblock-vtbl","children":[]},{"level":3,"title":"HoneyBlock","slug":"honeyblock","link":"#honeyblock","children":[]},{"level":3,"title":"HoneyBlock_vtbl","slug":"honeyblock-vtbl","link":"#honeyblock-vtbl","children":[]},{"level":3,"title":"HoneycombBlock","slug":"honeycombblock","link":"#honeycombblock","children":[]},{"level":3,"title":"HoneycombBlock_vtbl","slug":"honeycombblock-vtbl","link":"#honeycombblock-vtbl","children":[]},{"level":3,"title":"HugeMushroomBlock","slug":"hugemushroomblock","link":"#hugemushroomblock","children":[]},{"level":3,"title":"HugeMushroomBlock_vtbl","slug":"hugemushroomblock-vtbl","link":"#hugemushroomblock-vtbl","children":[]},{"level":3,"title":"HugeMushroomFeature_vtbl","slug":"hugemushroomfeature-vtbl","link":"#hugemushroomfeature-vtbl","children":[]},{"level":3,"title":"HugeFungusFeature_vtbl","slug":"hugefungusfeature-vtbl","link":"#hugefungusfeature-vtbl","children":[]},{"level":3,"title":"HTTPRequestInternalWinInet","slug":"httprequestinternalwininet","link":"#httprequestinternalwininet","children":[]},{"level":3,"title":"HTTPRequestInternalWinInet_vtbl","slug":"httprequestinternalwininet-vtbl","link":"#httprequestinternalwininet-vtbl","children":[]},{"level":3,"title":"HVIDEOINPUTDEVICENV__","slug":"hvideoinputdevicenv","link":"#hvideoinputdevicenv","children":[]},{"level":3,"title":"HGPUNV__","slug":"hgpunv","link":"#hgpunv","children":[]},{"level":3,"title":"HPBUFFEREXT__","slug":"hpbufferext","link":"#hpbufferext","children":[]},{"level":3,"title":"HPBUFFERARB__","slug":"hpbufferarb","link":"#hpbufferarb","children":[]},{"level":3,"title":"HVIDEOOUTPUTDEVICENV__","slug":"hvideooutputdevicenv","link":"#hvideooutputdevicenv","children":[]},{"level":3,"title":"HPVIDEODEV__","slug":"hpvideodev","link":"#hpvideodev","children":[]},{"level":3,"title":"HorseScreenController","slug":"horsescreencontroller","link":"#horsescreencontroller","children":[]},{"level":3,"title":"HorseScreenController_vtbl","slug":"horsescreencontroller-vtbl","link":"#horsescreencontroller-vtbl","children":[]},{"level":3,"title":"HorseContainerManagerModel","slug":"horsecontainermanagermodel","link":"#horsecontainermanagermodel","children":[]},{"level":3,"title":"HorseContainerManagerModel_vtbl","slug":"horsecontainermanagermodel-vtbl","link":"#horsecontainermanagermodel-vtbl","children":[]},{"level":3,"title":"HorseContainerManagerController","slug":"horsecontainermanagercontroller","link":"#horsecontainermanagercontroller","children":[]},{"level":3,"title":"HorseContainerManagerController_vtbl","slug":"horsecontainermanagercontroller-vtbl","link":"#horsecontainermanagercontroller-vtbl","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_af5fa2530f826d5d08def04c7eb5cee0>","slug":"horsescreencontroller-ctor-l2-lambda-af5fa2530f826d5d08def04c7eb5cee0","link":"#horsescreencontroller-ctor-l2-lambda-af5fa2530f826d5d08def04c7eb5cee0","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_80c6e5409393cca0fc5a377974added3>","slug":"horsescreencontroller-ctor-l2-lambda-80c6e5409393cca0fc5a377974added3","link":"#horsescreencontroller-ctor-l2-lambda-80c6e5409393cca0fc5a377974added3","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_025986612949938973253e99816d0a0c>","slug":"horsescreencontroller-ctor-l2-lambda-025986612949938973253e99816d0a0c","link":"#horsescreencontroller-ctor-l2-lambda-025986612949938973253e99816d0a0c","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_d80db6b9e9a3d13343bb578caa017e7a>","slug":"horsescreencontroller-ctor-l2-lambda-d80db6b9e9a3d13343bb578caa017e7a","link":"#horsescreencontroller-ctor-l2-lambda-d80db6b9e9a3d13343bb578caa017e7a","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_32008c64cf8e1a2b5f1a9adf16734b12>","slug":"horsescreencontroller-ctor-l2-lambda-32008c64cf8e1a2b5f1a9adf16734b12","link":"#horsescreencontroller-ctor-l2-lambda-32008c64cf8e1a2b5f1a9adf16734b12","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_f366e4756a3ad1e14c2b165ae3e1cce7>","slug":"horsescreencontroller-ctor-l2-lambda-f366e4756a3ad1e14c2b165ae3e1cce7","link":"#horsescreencontroller-ctor-l2-lambda-f366e4756a3ad1e14c2b165ae3e1cce7","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_70e96ef0b510e7e22cd1bec90fd98052>","slug":"horsescreencontroller-ctor-l2-lambda-70e96ef0b510e7e22cd1bec90fd98052","link":"#horsescreencontroller-ctor-l2-lambda-70e96ef0b510e7e22cd1bec90fd98052","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_aae33fb3c021b427366010e85d724955>","slug":"horsescreencontroller-ctor-l2-lambda-aae33fb3c021b427366010e85d724955","link":"#horsescreencontroller-ctor-l2-lambda-aae33fb3c021b427366010e85d724955","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_c826454155f9e06315851f1096cfd6e3>","slug":"horsescreencontroller-ctor-l2-lambda-c826454155f9e06315851f1096cfd6e3","link":"#horsescreencontroller-ctor-l2-lambda-c826454155f9e06315851f1096cfd6e3","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_29032eead47001b61f3051162f12b0a4>","slug":"horsescreencontroller-ctor-l2-lambda-29032eead47001b61f3051162f12b0a4","link":"#horsescreencontroller-ctor-l2-lambda-29032eead47001b61f3051162f12b0a4","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_fb3a37bc67e2165084c025dfaaa0634c>","slug":"horsescreencontroller-ctor-l2-lambda-fb3a37bc67e2165084c025dfaaa0634c","link":"#horsescreencontroller-ctor-l2-lambda-fb3a37bc67e2165084c025dfaaa0634c","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_fb9ac15c96cbbb5498e516bbd1f5ec92>","slug":"horsescreencontroller-ctor-l2-lambda-fb9ac15c96cbbb5498e516bbd1f5ec92","link":"#horsescreencontroller-ctor-l2-lambda-fb9ac15c96cbbb5498e516bbd1f5ec92","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_8428b03acd8d82eba9ca1912315ce62f>","slug":"horsescreencontroller-ctor-l2-lambda-8428b03acd8d82eba9ca1912315ce62f","link":"#horsescreencontroller-ctor-l2-lambda-8428b03acd8d82eba9ca1912315ce62f","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_af0dac77beec41d4c248848aad34ecc4>","slug":"horsescreencontroller-ctor-l2-lambda-af0dac77beec41d4c248848aad34ecc4","link":"#horsescreencontroller-ctor-l2-lambda-af0dac77beec41d4c248848aad34ecc4","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_b4fd066aa479ddd11366c1ab3ac22cad>","slug":"horsescreencontroller-ctor-l2-lambda-b4fd066aa479ddd11366c1ab3ac22cad","link":"#horsescreencontroller-ctor-l2-lambda-b4fd066aa479ddd11366c1ab3ac22cad","children":[]},{"level":3,"title":"HorseScreenController::{ctor}::__l2::<lambda_64713f98632f01bc3921ea3e304729ed>","slug":"horsescreencontroller-ctor-l2-lambda-64713f98632f01bc3921ea3e304729ed","link":"#horsescreencontroller-ctor-l2-lambda-64713f98632f01bc3921ea3e304729ed","children":[]},{"level":3,"title":"HopperContainerManagerModel","slug":"hoppercontainermanagermodel","link":"#hoppercontainermanagermodel","children":[]},{"level":3,"title":"HopperContainerManagerModel_vtbl","slug":"hoppercontainermanagermodel-vtbl","link":"#hoppercontainermanagermodel-vtbl","children":[]},{"level":3,"title":"HopperSystem","slug":"hoppersystem","link":"#hoppersystem","children":[]},{"level":3,"title":"HopperSystem_vtbl","slug":"hoppersystem-vtbl","link":"#hoppersystem-vtbl","children":[]},{"level":3,"title":"HarvestFarmBlockDefinition","slug":"harvestfarmblockdefinition","link":"#harvestfarmblockdefinition","children":[]},{"level":3,"title":"HarvestFarmBlockDefinition_vtbl","slug":"harvestfarmblockdefinition-vtbl","link":"#harvestfarmblockdefinition-vtbl","children":[]},{"level":3,"title":"HarvestFarmBlockGoal","slug":"harvestfarmblockgoal","link":"#harvestfarmblockgoal","children":[]},{"level":3,"title":"HarvestFarmBlockGoal_vtbl","slug":"harvestfarmblockgoal-vtbl","link":"#harvestfarmblockgoal-vtbl","children":[]},{"level":3,"title":"HideGoal","slug":"hidegoal","link":"#hidegoal","children":[]},{"level":3,"title":"HideGoal_vtbl","slug":"hidegoal-vtbl","link":"#hidegoal-vtbl","children":[]},{"level":3,"title":"HoldGroundGoal","slug":"holdgroundgoal","link":"#holdgroundgoal","children":[]},{"level":3,"title":"HoldGroundGoal_vtbl","slug":"holdgroundgoal-vtbl","link":"#holdgroundgoal-vtbl","children":[]},{"level":3,"title":"HoverGoal","slug":"hovergoal","link":"#hovergoal","children":[]},{"level":3,"title":"HoverGoal_vtbl","slug":"hovergoal-vtbl","link":"#hovergoal-vtbl","children":[]},{"level":3,"title":"HorseContainerManagerModel::_postInit::__l5::<lambda_1ff89581375038258850ba975b22babe>","slug":"horsecontainermanagermodel-postinit-l5-lambda-1ff89581375038258850ba975b22babe","link":"#horsecontainermanagermodel-postinit-l5-lambda-1ff89581375038258850ba975b22babe","children":[]},{"level":3,"title":"HorseContainerManagerModel::_postInit::__l5::<lambda_89ec054521d8a3163489de1362af6a58>","slug":"horsecontainermanagermodel-postinit-l5-lambda-89ec054521d8a3163489de1362af6a58","link":"#horsecontainermanagermodel-postinit-l5-lambda-89ec054521d8a3163489de1362af6a58","children":[]},{"level":3,"title":"HellFireFeature_vtbl","slug":"hellfirefeature-vtbl","link":"#hellfirefeature-vtbl","children":[]},{"level":3,"title":"HellSpringFeature_vtbl","slug":"hellspringfeature-vtbl","link":"#hellspringfeature-vtbl","children":[]},{"level":3,"title":"huff_entropy_encoder","slug":"huff-entropy-encoder","link":"#huff-entropy-encoder","children":[]},{"level":3,"title":"huff_entropy_decoder","slug":"huff-entropy-decoder","link":"#huff-entropy-decoder","children":[]},{"level":3,"title":"HuffmanEncodingTreeNode","slug":"huffmanencodingtreenode","link":"#huffmanencodingtreenode","children":[]},{"level":3,"title":"HudHorseJumpRenderer::render::__l2::<lambda_f26f6b421c5d8a48941cbbe5d0c0ad83>","slug":"hudhorsejumprenderer-render-l2-lambda-f26f6b421c5d8a48941cbbe5d0c0ad83","link":"#hudhorsejumprenderer-render-l2-lambda-f26f6b421c5d8a48941cbbe5d0c0ad83","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_3c8a26f25fde2aa3aadba65938c29373>::()::__l2::Literal","slug":"hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373-l2-literal","link":"#hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373-l2-literal","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_ee7b0def6be5201d2193da1373b2d92c>::()::__l2::Literal","slug":"hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c-l2-literal","link":"#hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c-l2-literal","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_7c138ce959f7ff186fa0298c49f4fbf1>::()::__l2::Literal","slug":"hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1-l2-literal","link":"#hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1-l2-literal","children":[]},{"level":3,"title":"HudMobEffectsRenderer::render::__l24::<lambda_8b8e8c379e3d3ef9f9c7f588b3d37ae9>","slug":"hudmobeffectsrenderer-render-l24-lambda-8b8e8c379e3d3ef9f9c7f588b3d37ae9","link":"#hudmobeffectsrenderer-render-l24-lambda-8b8e8c379e3d3ef9f9c7f588b3d37ae9","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_3c8a26f25fde2aa3aadba65938c29373>","slug":"hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373","link":"#hudplayerrenderer-render-l11-lambda-3c8a26f25fde2aa3aadba65938c29373","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_7c138ce959f7ff186fa0298c49f4fbf1>","slug":"hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1","link":"#hudplayerrenderer-render-l11-lambda-7c138ce959f7ff186fa0298c49f4fbf1","children":[]},{"level":3,"title":"HudPlayerRenderer::render::__l11::<lambda_ee7b0def6be5201d2193da1373b2d92c>","slug":"hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c","link":"#hudplayerrenderer-render-l11-lambda-ee7b0def6be5201d2193da1373b2d92c","children":[]},{"level":3,"title":"hbui::FacetRegistry::registerFacet::__l2::<lambda_bd9bb8f2cadf3b0f10a80c7e81deb91c>","slug":"hbui-facetregistry-registerfacet-l2-lambda-bd9bb8f2cadf3b0f10a80c7e81deb91c","link":"#hbui-facetregistry-registerfacet-l2-lambda-bd9bb8f2cadf3b0f10a80c7e81deb91c","children":[]},{"level":3,"title":"hbui::FacetRegistry::activateFacet::__l2::<lambda_9a9590cfcd6a92ccbb29c3aa72aee23c>","slug":"hbui-facetregistry-activatefacet-l2-lambda-9a9590cfcd6a92ccbb29c3aa72aee23c","link":"#hbui-facetregistry-activatefacet-l2-lambda-9a9590cfcd6a92ccbb29c3aa72aee23c","children":[]},{"level":3,"title":"hbui::FacetRegistry::deactivateFacet::__l2::<lambda_f70eba82a047d5efe865983ea2888497>","slug":"hbui-facetregistry-deactivatefacet-l2-lambda-f70eba82a047d5efe865983ea2888497","link":"#hbui-facetregistry-deactivatefacet-l2-lambda-f70eba82a047d5efe865983ea2888497","children":[]},{"level":3,"title":"HummingbirdUI::unregisterRouteConfigurationChangeCallback::__l2::<lambda_3e88f95f6d5af2b53e78952b635e1bb8>","slug":"hummingbirdui-unregisterrouteconfigurationchangecallback-l2-lambda-3e88f95f6d5af2b53e78952b635e1bb8","link":"#hummingbirdui-unregisterrouteconfigurationchangecallback-l2-lambda-3e88f95f6d5af2b53e78952b635e1bb8","children":[]},{"level":3,"title":"hbui::RouteMatcher::_match::__l2::<lambda_fa4836dab5b272682811c18a65ff5f30>","slug":"hbui-routematcher-match-l2-lambda-fa4836dab5b272682811c18a65ff5f30","link":"#hbui-routematcher-match-l2-lambda-fa4836dab5b272682811c18a65ff5f30","children":[]},{"level":3,"title":"hbui::RouterConfiguration::_addRoute::__l2::<lambda_9d53e344a0271a1458e6afaa48e7f0d5>","slug":"hbui-routerconfiguration-addroute-l2-lambda-9d53e344a0271a1458e6afaa48e7f0d5","link":"#hbui-routerconfiguration-addroute-l2-lambda-9d53e344a0271a1458e6afaa48e7f0d5","children":[]},{"level":3,"title":"HudScreenController::_updateTitleText::__l14::<lambda_348b4ca9d695a98721f80bb664a775dd>","slug":"hudscreencontroller-updatetitletext-l14-lambda-348b4ca9d695a98721f80bb664a775dd","link":"#hudscreencontroller-updatetitletext-l14-lambda-348b4ca9d695a98721f80bb664a775dd","children":[]},{"level":3,"title":"HitResultSystem::tick::__l2::<lambda_ad1d02461820c9e892f4d2da456e3aa6>","slug":"hitresultsystem-tick-l2-lambda-ad1d02461820c9e892f4d2da456e3aa6","link":"#hitresultsystem-tick-l2-lambda-ad1d02461820c9e892f4d2da456e3aa6","children":[]},{"level":3,"title":"HealableComponent::getInteraction::__l2::<lambda_90c5c6f55d8f131a1d67e74a13742cae>","slug":"healablecomponent-getinteraction-l2-lambda-90c5c6f55d8f131a1d67e74a13742cae","link":"#healablecomponent-getinteraction-l2-lambda-90c5c6f55d8f131a1d67e74a13742cae","children":[]},{"level":3,"title":"HomeComponent::tick::__l2::<lambda_ea3f16251f6d40785ec8bf72849f1501>","slug":"homecomponent-tick-l2-lambda-ea3f16251f6d40785ec8bf72849f1501","link":"#homecomponent-tick-l2-lambda-ea3f16251f6d40785ec8bf72849f1501","children":[]},{"level":3,"title":"HeavyBlock::animateTick::__l11::<lambda_34dbdd8a4780ed8cc471ac95c73990c9>::()::__l2::Literal","slug":"heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9-l2-literal","link":"#heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9-l2-literal","children":[]},{"level":3,"title":"HeavyBlock::animateTick::__l11::<lambda_34dbdd8a4780ed8cc471ac95c73990c9>","slug":"heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9","link":"#heavyblock-animatetick-l11-lambda-34dbdd8a4780ed8cc471ac95c73990c9","children":[]},{"level":3,"title":"Horse_vtbl","slug":"horse-vtbl","link":"#horse-vtbl","children":[]},{"level":3,"title":"HumanoidMonster_vtbl","slug":"humanoidmonster-vtbl","link":"#humanoidmonster-vtbl","children":[]}],"git":{"updatedTime":1722099801000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1},{"name":"VinkyV","email":"75137786+VinkyV@users.noreply.github.com","commits":1}]},"filePathRelative":"1.16.201/structure/H.md"}');export{p as comp,v as data};
