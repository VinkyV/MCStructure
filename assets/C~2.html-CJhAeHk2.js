import{_ as e,c as s,o as a,d as n}from"./app-CsZ-F4rT.js";const l={},c=n(`<h1 id="c-2" tabindex="-1"><a class="header-anchor" href="#c-2"><span>C~2</span></a></h1><h3 id="core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl"><span><code>Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;</code>mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::VertexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::VertexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::<code>2&#39;::Container&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;\`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::VertexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::VertexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::\`2&#39;::Container&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SharedMemoryTrackerBase)(Core::SharedMemoryTracker::SharedMemoryTrackerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container"><span><code>Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;</code>mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::IndexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::<code>2&#39;::Container&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;\`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::IndexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::\`2&#39;::Container&gt; : Core::SharedMemoryTracker::SharedMemoryTrackerBase</span>
<span class="line">{</span>
<span class="line">  const std::shared_ptr&lt;\`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::IndexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::\`2&#39;::Container&gt; mInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl"><span><code>Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;</code>mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::IndexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::<code>2&#39;::Container&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::SharedMemoryTracker::SharedMemoryTrackerImpl&lt;\`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame&lt;dragon::mesh::IndexBufferResourceManager,std::optional&lt;dragon::rendering::details::BufferHandleTypeWrapper&lt;dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64&gt; &gt; &gt;&#39;::\`2&#39;::Container&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SharedMemoryTrackerBase)(Core::SharedMemoryTracker::SharedMemoryTrackerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; *mBufferInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;dragon::frameobject::PreparedBlits&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;dragon::frameobject::PreparedBlits&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;std::_Container_proxy&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;std::_Container_proxy&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; *mBufferInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;dragon::frameobject::BlitableEntity&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;dragon::frameobject::BlitableEntity&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;std::_Container_proxy&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;std::_Container_proxy&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"><span><code>Core::CpuRingBufferAllocator&lt;dragon::platform::registry::BasicRenderRegistry&lt;dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources&gt;::SortedView::Sortable,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::rebind&lt;std::_Container_proxy&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;dragon::platform::registry::BasicRenderRegistry&lt;dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder"><span><code>cg::taskorder::DependencyBuilder&lt;&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;&gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;&gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext"><span><code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext&gt; : cg::taskorder::TaskBuilder&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  dragon::rendering::modules::DrawTaskContext mContext;</span>
<span class="line">  std::function&lt;void __cdecl(dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; const &amp;,dragon::rendering::modules::DrawTaskContext const &amp;)&gt; mAction;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::DrawTaskContext&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::tuple&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;bgfx::RtLightInfo,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;bgfx::RtLightInfo,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; *mBufferInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;unsigned int,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;unsigned int,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; *mBufferInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; : cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</span>
<span class="line">{</span>
<span class="line">  cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt; &gt; mDependencies;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e" tabindex="-1"><a class="header-anchor" href="#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e"><span><code>Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::startNewScope::__l2::&lt;lambda_50d2638b4de85edd403aa2ef73ce482e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::startNewScope::__l2::&lt;lambda_50d2638b4de85edd403aa2ef73ce482e&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 fence;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; *lastCompleted;</span>
<span class="line">  std::atomic&lt;bool&gt; *hasLastCompleted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609" tabindex="-1"><a class="header-anchor" href="#chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609"><span><code>ChunkRenderObjectCollection::addToChunkQueue::__l2::&lt;lambda_fbe26c8e4f7c9bae2f810aaf7646b609&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkRenderObjectCollection::addToChunkQueue::__l2::&lt;lambda_fbe26c8e4f7c9bae2f810aaf7646b609&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditionalbandwidthoptimizationdefinition" tabindex="-1"><a class="header-anchor" href="#conditionalbandwidthoptimizationdefinition"><span><code>ConditionalBandwidthOptimizationDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConditionalBandwidthOptimizationDefinition</span>
<span class="line">{</span>
<span class="line">  ConditionalBandwidthOptimization mDefaultValues;</span>
<span class="line">  std::vector&lt;ConditionalBandwidthOptimization&gt; mConditionalValues;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientreplaystatepolicy" tabindex="-1"><a class="header-anchor" href="#clientreplaystatepolicy"><span><code>ClientReplayStatePolicy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientReplayStatePolicy : IReplayStatePolicy</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mLastValidatedFrame;</span>
<span class="line">  unsigned __int64 mLastUnsupportedFrame;</span>
<span class="line">  ReplayStateConfig mConfig;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientreplaystatepolicy-vtbl" tabindex="-1"><a class="header-anchor" href="#clientreplaystatepolicy-vtbl"><span><code>ClientReplayStatePolicy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientReplayStatePolicy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IReplayStatePolicy)(IReplayStatePolicy *this);</span>
<span class="line">  bool (__fastcall *isReplayNeeded)(IReplayStatePolicy *this, AdvanceFrameResult);</span>
<span class="line">  bool (__fastcall *canRewindToFrame)(IReplayStatePolicy *this, IActorMovementProxy *, unsigned __int64, unsigned __int64);</span>
<span class="line">  MovementCorrection *(__fastcall *shouldCorrectMovement)(IReplayStatePolicy *this, MovementCorrection *result, IActorMovementProxy *, const PlayerAuthInputPacket *, unsigned __int64);</span>
<span class="line">  void (__fastcall *flagUnsupportedMovement)(IReplayStatePolicy *this, unsigned __int64);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakesystem" tabindex="-1"><a class="header-anchor" href="#camerashakesystem"><span><code>CameraShakeSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraShakeSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#camerashakesystem-vtbl"><span><code>CameraShakeSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraShakeSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselector-player" tabindex="-1"><a class="header-anchor" href="#commandselector-player"><span><code>CommandSelector&lt;Player&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelector&lt;Player&gt; : CommandSelectorBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakecommand" tabindex="-1"><a class="header-anchor" href="#camerashakecommand"><span><code>CameraShakeCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraShakeCommand : Command</span>
<span class="line">{</span>
<span class="line">  _BYTE mShakeAction[1];</span>
<span class="line">  CameraShakeType mShakeType;</span>
<span class="line">  __declspec(align(8)) CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  float mIntensity;</span>
<span class="line">  float mSeconds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakecommand-vtbl" tabindex="-1"><a class="header-anchor" href="#camerashakecommand-vtbl"><span><code>CameraShakeCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraShakeCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum CameraShakeCommand::CameraShakeAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum CameraShakeCommand::CameraShakeAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-camerashaketype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-camerashaketype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum CameraShakeType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum CameraShakeType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearspawnpointcommand" tabindex="-1"><a class="header-anchor" href="#clearspawnpointcommand"><span><code>ClearSpawnPointCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClearSpawnPointCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearspawnpointcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#clearspawnpointcommand-vtbl"><span><code>ClearSpawnPointCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClearSpawnPointCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-eventcommand-eventaction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-eventcommand-eventaction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum EventCommand::EventAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum EventCommand::EventAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-fogcommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-fogcommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum FogCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum FogCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-musiccommand-action" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-musiccommand-action"><span><code>CommandRegistry::DefaultIdConverter&lt;enum MusicCommand::Action&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum MusicCommand::Action&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-musicrepeatmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-musicrepeatmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum MusicRepeatMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum MusicRepeatMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-ridecommand-rideaction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-ridecommand-rideaction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-ridecommand-ridefilltype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-ridecommand-ridefilltype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideFillType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideFillType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-ridecommand-teleportrules" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-ridecommand-teleportrules"><span><code>CommandRegistry::DefaultIdConverter&lt;enum RideCommand::TeleportRules&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum RideCommand::TeleportRules&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-ridecommand-riderules" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-ridecommand-riderules"><span><code>CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideRules&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum RideCommand::RideRules&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandfilepath" tabindex="-1"><a class="header-anchor" href="#commandfilepath"><span><code>CommandFilePath</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandFilePath</span>
<span class="line">{</span>
<span class="line">  std::string mText;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ScheduleCommand::ScheduleAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ScheduleCommand::ScheduleAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ScheduleCommand::OnAreaLoadedAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ScheduleCommand::OnAreaLoadedAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-areatype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-areatype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum AreaType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum AreaType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-structureblocktype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-structureblocktype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum StructureBlockType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum StructureBlockType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-structureredstonesavemode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-structureredstonesavemode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum StructureRedstoneSaveMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum StructureRedstoneSaveMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-mirror" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-mirror"><span><code>CommandRegistry::DefaultIdConverter&lt;enum Mirror&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum Mirror&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-animationmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-animationmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum AnimationMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum AnimationMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandresponse" tabindex="-1"><a class="header-anchor" href="#commandresponse"><span><code>CommandResponse</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandResponse : EventResponse</span>
<span class="line">{</span>
<span class="line">  CurrentCmdVersion mCommandVersion;</span>
<span class="line">  std::vector&lt;HashedString&gt; mRawCommands;</span>
<span class="line">  _BYTE mTarget[2];</span>
<span class="line">  std::vector&lt;Command *&gt; mCompiledCommands;</span>
<span class="line">  bool mIsCompiled;</span>
<span class="line">  bool mSuccess;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandresponse-vtbl" tabindex="-1"><a class="header-anchor" href="#commandresponse-vtbl"><span><code>CommandResponse_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandResponse_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~EventResponse)(EventResponse *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(EventResponse *this);</span>
<span class="line">  void (__fastcall *executeAction)(EventResponse *this, RenderParams *);</span>
<span class="line">  void (__fastcall *buildSchema)(EventResponse *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,EventResponseCollection&gt; &gt; *, const Factory&lt;EventResponse&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commongamemodemessenger" tabindex="-1"><a class="header-anchor" href="#commongamemodemessenger"><span><code>CommonGameModeMessenger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommonGameModeMessenger : IGameModeMessenger</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientgamemodemessenger" tabindex="-1"><a class="header-anchor" href="#clientgamemodemessenger"><span><code>ClientGameModeMessenger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientGameModeMessenger : CommonGameModeMessenger</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38" tabindex="-1"><a class="header-anchor" href="#commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38"><span><code>CommonGameModeMessenger::createBlockBreakCaptureScope::__l2::&lt;lambda_66c7794cb235487fc6a2b9c057229d38&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommonGameModeMessenger::createBlockBreakCaptureScope::__l2::&lt;lambda_66c7794cb235487fc6a2b9c057229d38&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientgamemodetimer" tabindex="-1"><a class="header-anchor" href="#clientgamemodetimer"><span><code>ClientGameModeTimer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientGameModeTimer : ServerGameModeTimer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerbase" tabindex="-1"><a class="header-anchor" href="#crafthandlerbase"><span><code>CraftHandlerBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  CraftHandlerBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  ItemStackRequestActionCraftHandler *mCraftRequestHandler;</span>
<span class="line">  SparseContainer *mInputSparseContainer;</span>
<span class="line">  _BYTE mCraftActionType[1];</span>
<span class="line">  bool mNonImplementedTrustClientResults;</span>
<span class="line">  std::vector&lt;CraftHandlerBase::ExpectedSlotConsume&gt; mExpectedSlotConsumes;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mExpectedAnywhereConsumes;</span>
<span class="line">  std::vector&lt;CraftHandlerBase::AllowedAnywhereConsume&gt; mAllowedAnywhereConsumes;</span>
<span class="line">  bool mIsCraftRequest;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerbase-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlerbase-vtbl"><span><code>CraftHandlerBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerbase-expectedslotconsume" tabindex="-1"><a class="header-anchor" href="#crafthandlerbase-expectedslotconsume"><span><code>CraftHandlerBase::ExpectedSlotConsume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandlerBase::ExpectedSlotConsume</span>
<span class="line">{</span>
<span class="line">  const ContainerEnumName mOpenContainerNetId;</span>
<span class="line">  const unsigned __int8 mSlot;</span>
<span class="line">  ItemStack mItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerbase-allowedanywhereconsume" tabindex="-1"><a class="header-anchor" href="#crafthandlerbase-allowedanywhereconsume"><span><code>CraftHandlerBase::AllowedAnywhereConsume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandlerBase::AllowedAnywhereConsume</span>
<span class="line">{</span>
<span class="line">  const ContainerEnumName mOpenContainerNetId;</span>
<span class="line">  const unsigned __int8 mMinSlot;</span>
<span class="line">  const unsigned __int8 mMaxSlot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandleranvil" tabindex="-1"><a class="header-anchor" href="#crafthandleranvil"><span><code>CraftHandlerAnvil</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandlerAnvil : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandleranvil-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandleranvil-vtbl"><span><code>CraftHandlerAnvil_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerAnvil_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlermap" tabindex="-1"><a class="header-anchor" href="#crafthandlermap"><span><code>CraftHandlerMap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandlerMap : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlermap-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlermap-vtbl"><span><code>CraftHandlerMap_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerMap_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-constructor" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-constructor"><span><code>CerealItemComponentFactory::Constructor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::Constructor</span>
<span class="line">{</span>
<span class="line">  std::function&lt;entt::meta_any __cdecl(void)&gt; construct;</span>
<span class="line">  std::function&lt;entt::meta_any __cdecl(void *)&gt; getAny;</span>
<span class="line">  std::function&lt;entt::meta_type __cdecl(void)&gt; getType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory"><span><code>CerealItemComponentFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_06719c6a2c3b5d51959bc3a07ea538ca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_06719c6a2c3b5d51959bc3a07ea538ca&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_2f2f706bcb3a0bf3e5f2a3c955f48295&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_2f2f706bcb3a0bf3e5f2a3c955f48295&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_5c6573b26e033d881519e3b9f4f05715&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_5c6573b26e033d881519e3b9f4f05715&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41"><span><code>ComponentItem::_buildItemsFileSchema::__l6::&lt;lambda_ddbcbce84c840368bbdc237120389e41&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l6::&lt;lambda_ddbcbce84c840368bbdc237120389e41&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_d595495a43e94c05236da4b389810349&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_d595495a43e94c05236da4b389810349&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_38eb25fea691ab1406c1acf589edd873&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_38eb25fea691ab1406c1acf589edd873&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_175802e7894a92641c534a19c33e6c10&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_175802e7894a92641c534a19c33e6c10&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_02aae47743cbb042add0642122d8874f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_02aae47743cbb042add0642122d8874f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_691fbb34a5d50a8ceff68ca6921f75b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_691fbb34a5d50a8ceff68ca6921f75b0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_f4f9b1f7bb6b4cff9a073b26ea933c62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_f4f9b1f7bb6b4cff9a073b26ea933c62&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_7f04d6eadcd817e72270603a73970837&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_7f04d6eadcd817e72270603a73970837&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_63390f89c85397294c20dc5febc0fd07&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_63390f89c85397294c20dc5febc0fd07&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001"><span><code>ComponentItem::_buildItemsFileSchema::__l5::&lt;lambda_45ba7706ae68db39b00540d8e8b07001&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l5::&lt;lambda_45ba7706ae68db39b00540d8e8b07001&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca"><span><code>ComponentItem::_buildItemsFileSchema::__l5::&lt;lambda_47d4656d06b81b5d646e9f09e5a91cca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l5::&lt;lambda_47d4656d06b81b5d646e9f09e5a91cca&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_18ba5b6c5d2ef7335fd7c0944ae1663c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_18ba5b6c5d2ef7335fd7c0944ae1663c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_68857b4446a180a9dd9377d70bb1decc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_68857b4446a180a9dd9377d70bb1decc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_f988d10cfe0adfd929abf86d1ed55814&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_f988d10cfe0adfd929abf86d1ed55814&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_83c5c68eb639a0276c8bdd2cc39e4b85&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_83c5c68eb639a0276c8bdd2cc39e4b85&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_595f5c6129412d68260c12d9dc061a20&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_595f5c6129412d68260c12d9dc061a20&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_bed6047fd0b105f88228decca5833859&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_bed6047fd0b105f88228decca5833859&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_32c11f6cbe6cbb01b97d5d3b7fb8f38d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_32c11f6cbe6cbb01b97d5d3b7fb8f38d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_dcf311d7ddfc638357cf584c349eb24b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_dcf311d7ddfc638357cf584c349eb24b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_b15cfde9356f80666ac379f076c67168&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_b15cfde9356f80666ac379f076c67168&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_39c57b403cacb9c9123dea5d9ec345ea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_39c57b403cacb9c9123dea5d9ec345ea&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc"><span><code>ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_9e5269047ca309f62857c34b50ac0adc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::&lt;lambda_9e5269047ca309f62857c34b50ac0adc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81"><span><code>ComponentItem::_buildItemsFileSchema::__l3::&lt;lambda_cd737d31e8e90d818a7f3f7365055e81&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l3::&lt;lambda_cd737d31e8e90d818a7f3f7365055e81&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3" tabindex="-1"><a class="header-anchor" href="#componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3"><span><code>ComponentItem::_buildItemsFileSchema::__l3::&lt;lambda_90a6baf7857883a194ebe77b1cedf1a3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem::_buildItemsFileSchema::__l3::&lt;lambda_90a6baf7857883a194ebe77b1cedf1a3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_274ac7a05a64284cd76bbdba2c7f8818&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_274ac7a05a64284cd76bbdba2c7f8818&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f2b378848c598de273abc9c9fc78bd8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f2b378848c598de273abc9c9fc78bd8a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_068c29d7af14898cc0fe025dba9cd80d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_068c29d7af14898cc0fe025dba9cd80d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_13e46b31aebc5784575abe801e3af68a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_13e46b31aebc5784575abe801e3af68a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_df3e8be3050a2aaa62dd5a501ac25eab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_df3e8be3050a2aaa62dd5a501ac25eab&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_a33d55fb459f2ffc1340888587c29201&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_a33d55fb459f2ffc1340888587c29201&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ab71e30ee4148f3f451eec67bf750a2a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ab71e30ee4148f3f451eec67bf750a2a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_674fedb7f8f19d87e68157e57807c141&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_674fedb7f8f19d87e68157e57807c141&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_fbfcad4341a57d7201e8e716822f68fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_fbfcad4341a57d7201e8e716822f68fd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_180f5e3485a6ae91a471e500c4b06386&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_180f5e3485a6ae91a471e500c4b06386&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_0466c3aa4f74f39cd825466c6b6232bb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_0466c3aa4f74f39cd825466c6b6232bb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_d1ecf083316e883ec51605168a7eebd9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_d1ecf083316e883ec51605168a7eebd9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7d6ae913546175ea9e8c64323acc6b29&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7d6ae913546175ea9e8c64323acc6b29&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_18868e8156d02ca320cabd997fadca4d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_18868e8156d02ca320cabd997fadca4d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_18dbba7b3937e5501854c33ea46448cd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_18dbba7b3937e5501854c33ea46448cd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_978b09f9bb260f3641dbc8ad330d16a6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_978b09f9bb260f3641dbc8ad330d16a6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_32c4955083c8066406161e037bbdcabf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_32c4955083c8066406161e037bbdcabf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_219706fd4ead95d36c08ec2e1a4b52d4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_219706fd4ead95d36c08ec2e1a4b52d4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7ec79a3048194f193f9f4c10479687d3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7ec79a3048194f193f9f4c10479687d3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e796f74887e92174f98aa55bfcc84fcc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e796f74887e92174f98aa55bfcc84fcc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_df89224ccc15be7f98b4780aadd49e98&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_df89224ccc15be7f98b4780aadd49e98&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_887e0dd9da64b3537ec167baeeba1337&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_887e0dd9da64b3537ec167baeeba1337&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e7f83d2a8adfecc1c5879c15f8835d5a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e7f83d2a8adfecc1c5879c15f8835d5a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_90ba4857f30320eb34346e7df3764bd9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_90ba4857f30320eb34346e7df3764bd9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7f8ddde45b73dfa86374548a1a80a997&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7f8ddde45b73dfa86374548a1a80a997&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_3522edb357a5909e1bb6b517ae8cb533&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_3522edb357a5909e1bb6b517ae8cb533&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_8a353af2dd3dc6319cbbc0c7b0a3766b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_8a353af2dd3dc6319cbbc0c7b0a3766b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_9b7c706e28804ad377d0ee8443947800&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_9b7c706e28804ad377d0ee8443947800&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ac4ba6fc863681825fa4db0d35c671d7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ac4ba6fc863681825fa4db0d35c671d7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_aba81f1d54d3bb08fee2ed02ad6fffae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_aba81f1d54d3bb08fee2ed02ad6fffae&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_4186695952b7d78e695ff84e2652712d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_4186695952b7d78e695ff84e2652712d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_daa59455bd683dd97d2f167f0ad58c7b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_daa59455bd683dd97d2f167f0ad58c7b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_22c8de57e442c7d89b27727ba0838b01&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_22c8de57e442c7d89b27727ba0838b01&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_6816e2193b5ae4f55d9eb32466d75189&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_6816e2193b5ae4f55d9eb32466d75189&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e4abdff3da922cda48729af424f6f86f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_e4abdff3da922cda48729af424f6f86f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_2beea1812a0d9e26506ca1bb96d659ef&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_2beea1812a0d9e26506ca1bb96d659ef&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_46270c3b5dc354e70ded28050f2ae6b3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_46270c3b5dc354e70ded28050f2ae6b3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ad0e56c51b79d56ee7f8d1e4164e9b54&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_ad0e56c51b79d56ee7f8d1e4164e9b54&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_b3418fd18d79b5cc2a2bef911e213e16&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_b3418fd18d79b5cc2a2bef911e213e16&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_a15ce7828021ee33b0cd034b834f8cfa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_a15ce7828021ee33b0cd034b834f8cfa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_741c841a094c69589eb616a6110f5897&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_741c841a094c69589eb616a6110f5897&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f4c57fcb0432d7cf0fbaa82c6ed46045&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f4c57fcb0432d7cf0fbaa82c6ed46045&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customitemregistry" tabindex="-1"><a class="header-anchor" href="#customitemregistry"><span><code>CustomItemRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomItemRegistry</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customcropblock" tabindex="-1"><a class="header-anchor" href="#customcropblock"><span><code>CustomCropBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomCropBlock : BushBlock</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; mTargetLandBlocks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customcropblock-vtbl" tabindex="-1"><a class="header-anchor" href="#customcropblock-vtbl"><span><code>CustomCropBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomCropBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cappedsurfaceattributes-materiallayer" tabindex="-1"><a class="header-anchor" href="#cappedsurfaceattributes-materiallayer"><span><code>CappedSurfaceAttributes::MaterialLayer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CappedSurfaceAttributes::MaterialLayer</span>
<span class="line">{</span>
<span class="line">  const Block *block;</span>
<span class="line">  std::unique_ptr&lt;PerlinNoise&gt; noise;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chainblock" tabindex="-1"><a class="header-anchor" href="#chainblock"><span><code>ChainBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChainBlock : RotatedPillarBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chainblock-vtbl" tabindex="-1"><a class="header-anchor" href="#chainblock-vtbl"><span><code>ChainBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChainBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51" tabindex="-1"><a class="header-anchor" href="#craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51"><span><code>CraftingTableDescription::buildSchema::__l2::&lt;lambda_1773ea65163fe404c4642fa29c8a4c51&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingTableDescription::buildSchema::__l2::&lt;lambda_1773ea65163fe404c4642fa29c8a4c51&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352" tabindex="-1"><a class="header-anchor" href="#craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352"><span><code>CraftingTableDescription::buildSchema::__l2::&lt;lambda_b763889acef0e918448df6dd9fd7b352&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingTableDescription::buildSchema::__l2::&lt;lambda_b763889acef0e918448df6dd9fd7b352&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67" tabindex="-1"><a class="header-anchor" href="#craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67"><span><code>CraftingTableDescription::buildSchema::__l2::&lt;lambda_e2edea0adeb4357ae1bf2247cf9bdf67&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingTableDescription::buildSchema::__l2::&lt;lambda_e2edea0adeb4357ae1bf2247cf9bdf67&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662" tabindex="-1"><a class="header-anchor" href="#craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662"><span><code>CraftingTableDescription::buildSchema::__l2::&lt;lambda_06044debff39258f61c94d740dbe2662&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingTableDescription::buildSchema::__l2::&lt;lambda_06044debff39258f61c94d740dbe2662&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cryingobsidianblock" tabindex="-1"><a class="header-anchor" href="#cryingobsidianblock"><span><code>CryingObsidianBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CryingObsidianBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cryingobsidianblock-vtbl" tabindex="-1"><a class="header-anchor" href="#cryingobsidianblock-vtbl"><span><code>CryingObsidianBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CryingObsidianBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a" tabindex="-1"><a class="header-anchor" href="#chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a"><span><code>ChunkLoadActionList::tickRequests::__l2::&lt;lambda_f0a922715729ac9e2b1311f233617b6a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkLoadActionList::tickRequests::__l2::&lt;lambda_f0a922715729ac9e2b1311f233617b6a&gt;</span>
<span class="line">{</span>
<span class="line">  ChunkLoadActionList *const __this;</span>
<span class="line">  ServerLevel *serverLevel;</span>
<span class="line">  Dimension *dimension;</span>
<span class="line">  const unsigned __int64 currentTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871" tabindex="-1"><a class="header-anchor" href="#chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871"><span><code>ChunkLoadActionList::_loadRequests::__l2::&lt;lambda_c3a549743ae164c4a4c4097772148871&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkLoadActionList::_loadRequests::__l2::&lt;lambda_c3a549743ae164c4a4c4097772148871&gt;</span>
<span class="line">{</span>
<span class="line">  ChunkLoadActionList *const __this;</span>
<span class="line">  const std::string *dimensionPrefix;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkloadedactionloader" tabindex="-1"><a class="header-anchor" href="#chunkloadedactionloader"><span><code>ChunkLoadedActionLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkLoadedActionLoader</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkloadpriority" tabindex="-1"><a class="header-anchor" href="#chunkloadpriority"><span><code>ChunkLoadPriority</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkLoadPriority</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9" tabindex="-1"><a class="header-anchor" href="#commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9"><span><code>CommandResponse::_compileCommands::__l2::&lt;lambda_f50b98393645becdcdd14a0f2234d9a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandResponse::_compileCommands::__l2::&lt;lambda_f50b98393645becdcdd14a0f2234d9a9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d" tabindex="-1"><a class="header-anchor" href="#commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d"><span><code>CommandResponse::buildSchema::__l2::&lt;lambda_20a26bb05a82189a789594e7341fca1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandResponse::buildSchema::__l2::&lt;lambda_20a26bb05a82189a789594e7341fca1d&gt;</span>
<span class="line">{</span>
<span class="line">  const Factory&lt;EventResponse&gt; *factory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="classid" tabindex="-1"><a class="header-anchor" href="#classid"><span><code>ClassID</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClassID</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="celebratehuntdefinition" tabindex="-1"><a class="header-anchor" href="#celebratehuntdefinition"><span><code>CelebrateHuntDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CelebrateHuntDefinition</span>
<span class="line">{</span>
<span class="line">  bool mBroadcast;</span>
<span class="line">  float mRadius;</span>
<span class="line">  int mDuration;</span>
<span class="line">  ActorFilterGroup mCelebrationTargets;</span>
<span class="line">  std::string mCelebrateSound;</span>
<span class="line">  FloatRange mSoundInterval;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="celebratehuntcomponent" tabindex="-1"><a class="header-anchor" href="#celebratehuntcomponent"><span><code>CelebrateHuntComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CelebrateHuntComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  bool mCelebrating;</span>
<span class="line">  Tick mCelebrateUntil;</span>
<span class="line">  Tick mNextSoundEventTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="campfireblock" tabindex="-1"><a class="header-anchor" href="#campfireblock"><span><code>CampfireBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CampfireBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  bool mSpawnRandomParticles;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="campfireblock-vtbl" tabindex="-1"><a class="header-anchor" href="#campfireblock-vtbl"><span><code>CampfireBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CampfireBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d" tabindex="-1"><a class="header-anchor" href="#catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d"><span><code>CatchFireSubcomponent::doOnHitEffect::__l32::&lt;lambda_98d1a10c913b18fb7c66b4e14b62149d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CatchFireSubcomponent::doOnHitEffect::__l32::&lt;lambda_98d1a10c913b18fb7c66b4e14b62149d&gt;</span>
<span class="line">{</span>
<span class="line">  Actor **projectileSourceActor;</span>
<span class="line">  BlockPos *blockPos;</span>
<span class="line">  BlockSource *region;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextaccessor-typederived-entitycontext" tabindex="-1"><a class="header-anchor" href="#contextaccessor-typederived-entitycontext"><span><code>ContextAccessor::TypeDerived&lt;EntityContext&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContextAccessor::TypeDerived&lt;EntityContext&gt; : ContextAccessor::TypeBase</span>
<span class="line">{</span>
<span class="line">  EntityContext mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextaccessor-typederived-entitycontext-vtbl" tabindex="-1"><a class="header-anchor" href="#contextaccessor-typederived-entitycontext-vtbl"><span><code>ContextAccessor::TypeDerived&lt;EntityContext&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContextAccessor::TypeDerived&lt;EntityContext&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TypeBase)(ContextAccessor::TypeBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="celebratehuntsystem" tabindex="-1"><a class="header-anchor" href="#celebratehuntsystem"><span><code>CelebrateHuntSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CelebrateHuntSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="celebratehuntsystem-vtbl" tabindex="-1"><a class="header-anchor" href="#celebratehuntsystem-vtbl"><span><code>CelebrateHuntSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CelebrateHuntSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblocksystem" tabindex="-1"><a class="header-anchor" href="#commandblocksystem"><span><code>CommandBlockSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandBlockSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblocksystem-vtbl" tabindex="-1"><a class="header-anchor" href="#commandblocksystem-vtbl"><span><code>CommandBlockSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandBlockSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cropblock" tabindex="-1"><a class="header-anchor" href="#cropblock"><span><code>CropBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CropBlock : BushBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cropblock-vtbl" tabindex="-1"><a class="header-anchor" href="#cropblock-vtbl"><span><code>CropBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CropBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseSeed)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseCrop)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  int (__fastcall *getSeedNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">  int (__fastcall *getCropNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementry" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementry"><span><code>Core::MemoryFileSystemEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::MemoryFileSystemEntry</span>
<span class="line">{</span>
<span class="line">  Core::MemoryFileSystemEntry_vtbl *__vftable /*VFT*/;</span>
<span class="line">  _BYTE mFileType[4];</span>
<span class="line">  Core::MemoryFileSystemEntryDir *mpParentDir;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementry-vtbl" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementry-vtbl"><span><code>Core::MemoryFileSystemEntry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::MemoryFileSystemEntry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementrydir-memoryfilesystementryitem" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementrydir-memoryfilesystementryitem"><span><code>Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem</span>
<span class="line">{</span>
<span class="line">  unsigned int entryId;</span>
<span class="line">  std::unique_ptr&lt;Core::MemoryFileSystemEntry&gt; entry;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementrydir" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementrydir"><span><code>Core::MemoryFileSystemEntryDir</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::MemoryFileSystemEntryDir : Core::MemoryFileSystemEntry</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem&gt;&gt; mEntryItems;</span>
<span class="line">  unsigned int mOpenFileCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementrydir-vtbl" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementrydir-vtbl"><span><code>Core::MemoryFileSystemEntryDir_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::MemoryFileSystemEntryDir_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementryfile" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementryfile"><span><code>Core::MemoryFileSystemEntryFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::MemoryFileSystemEntryFile : Core::MemoryFileSystemEntry</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;char&gt; mData;</span>
<span class="line">  std::vector&lt;Core::MemoryFileSystemFile *&gt; mOpenFiles;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystemfile" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystemfile"><span><code>Core::MemoryFileSystemFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::MemoryFileSystemFile : Core::FileImpl</span>
<span class="line">{</span>
<span class="line">  Core::MemoryFileSystemEntryFile *mpEntry;</span>
<span class="line">  unsigned __int64 mPosition;</span>
<span class="line">  Core::FileOpenMode mFileOpenMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystemfile-vtbl" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystemfile-vtbl"><span><code>Core::MemoryFileSystemFile_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::MemoryFileSystemFile_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileImpl)(Core::FileImpl *this);</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; *(__fastcall *_getPath)(Core::FileImpl *this, Core::PathBuffer&lt;std::string &gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getBlockSize)(Core::FileImpl *this);</span>
<span class="line">  bool (__fastcall *_isOpen)(Core::FileImpl *this);</span>
<span class="line">  Core::Result *(__fastcall *_close)(Core::FileImpl *this, Core::Result *result);</span>
<span class="line">  Core::Result *(__fastcall *_read)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_readExactly)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_skip)(Core::FileImpl *this, Core::Result *result, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_readAtPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_getPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_setPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_write)(Core::FileImpl *this, Core::Result *result, const void *, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_flush)(Core::FileImpl *this, Core::Result *result);</span>
<span class="line">  Core::Result *(__fastcall *_getSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_getRemainingSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystementryfile-vtbl" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystementryfile-vtbl"><span><code>Core::MemoryFileSystemEntryFile_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::MemoryFileSystemEntryFile_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystem-writeop" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystem-writeop"><span><code>Core::MemoryFileSystem::WriteOp</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::MemoryFileSystem::WriteOp</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; writePath;</span>
<span class="line">  unsigned __int64 writeSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-memoryfilesystem" tabindex="-1"><a class="header-anchor" href="#core-memoryfilesystem"><span><code>Core::MemoryFileSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::MemoryFileSystem : Core::FileSystemImpl</span>
<span class="line">{</span>
<span class="line">  std::recursive_mutex mMutex;</span>
<span class="line">  Core::MemoryFileSystemEntryDir mRootDir;</span>
<span class="line">  std::mutex mWriteOpMutex;</span>
<span class="line">  std::vector&lt;Core::MemoryFileSystem::WriteOp&gt; mWriteOps;</span>
<span class="line">  std::vector&lt;Core::PathBuffer&lt;std::string &gt;&gt; mFilesMarkedForRemoval;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry" tabindex="-1"><a class="header-anchor" href="#controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry"><span><code>ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry</span>
<span class="line">{</span>
<span class="line">  unsigned int priority;</span>
<span class="line">  ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::CDA_Command command;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; sourcePath;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; targetPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlleddiskaccess-core-filesystem-windows" tabindex="-1"><a class="header-anchor" href="#controlleddiskaccess-core-filesystem-windows"><span><code>ControlledDiskAccess&lt;Core::FileSystem_windows&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ControlledDiskAccess&lt;Core::FileSystem_windows&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mMaxWriteAmountPerSecond;</span>
<span class="line">  unsigned int mMaxNumberOfWritesPerMinute;</span>
<span class="line">  Core::MemoryFileSystem *mFSSource;</span>
<span class="line">  Core::FileSystemImpl *mFSTarget;</span>
<span class="line">  std::atomic&lt;bool&gt; mCommandExecutionInProgress;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  bool mPartialFileWrite;</span>
<span class="line">  unsigned __int64 mPartialFilePosition;</span>
<span class="line">  std::mutex mMutex;</span>
<span class="line">  std::queue&lt;std::unique_ptr&lt;ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry,std::default_delete&lt;ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry&gt; &gt;&gt; mQueue;</span>
<span class="line">  std::unique_ptr&lt;ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry,std::default_delete&lt;ControlledDiskAccess&lt;Core::FileSystem_windows&gt;::ControlledDiskAccessEntry&gt; &gt; mCurrentEntry;</span>
<span class="line">  std::shared_ptr&lt;Core::ZipUtils::ZipProgress&gt; mProgressTracker;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storagebackedmemoryfilesystem" tabindex="-1"><a class="header-anchor" href="#core-storagebackedmemoryfilesystem"><span><code>Core::StorageBackedMemoryFileSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::StorageBackedMemoryFileSystem : Core::FileSystemImpl</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Core::FileSystem_windows&gt; mFileSystem;</span>
<span class="line">  std::unique_ptr&lt;Core::MemoryFileSystem&gt; mMemoryFileSystem;</span>
<span class="line">  std::shared_ptr&lt;ControlledDiskAccess&lt;Core::FileSystem_windows&gt; &gt; mControlledDiskAccess;</span>
<span class="line">  bool mShouldFlushToDisk;</span>
<span class="line">  std::atomic&lt;bool&gt; mShouldCommit;</span>
<span class="line">  unsigned __int64 mWriteVolumeLimitInBytesPerSecond;</span>
<span class="line">  unsigned int mWriteQuantityLimitInCountPerMinute;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storagebackedmemoryfilesystem-directoryitem" tabindex="-1"><a class="header-anchor" href="#core-storagebackedmemoryfilesystem-directoryitem"><span><code>Core::StorageBackedMemoryFileSystem::DirectoryItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageBackedMemoryFileSystem::DirectoryItem</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt; fullPathStr;</span>
<span class="line">  unsigned __int64 fileSize;</span>
<span class="line">  _BYTE fileType[4];</span>
<span class="line">  Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt; name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-flatfileoperations" tabindex="-1"><a class="header-anchor" href="#core-flatfileoperations"><span><code>Core::FlatFileOperations</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FlatFileOperations</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5" tabindex="-1"><a class="header-anchor" href="#core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5"><span><code>Core::StorageBackedMemoryFileSystem::_iterateOverDirectory::__l2::&lt;lambda_c6419e72899cf220491cef01ab66c9a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageBackedMemoryFileSystem::_iterateOverDirectory::__l2::&lt;lambda_c6419e72899cf220491cef01ab66c9a5&gt;</span>
<span class="line">{</span>
<span class="line">  Core::DirectoryIterationFlags *flags;</span>
<span class="line">  std::vector&lt;Core::StorageBackedMemoryFileSystem::DirectoryItem&gt; *directoryItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storagebackedmemoryfilesystemproxy" tabindex="-1"><a class="header-anchor" href="#core-storagebackedmemoryfilesystemproxy"><span><code>Core::StorageBackedMemoryFileSystemProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageBackedMemoryFileSystemProxy : Core::FileSystemImpl</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Core::FileSystemImpl&gt; mImpl;</span>
<span class="line">  std::vector&lt;Core::PathBuffer&lt;std::string &gt;&gt; mOpenWrites;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compressednetworkpeer" tabindex="-1"><a class="header-anchor" href="#compressednetworkpeer"><span><code>CompressedNetworkPeer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompressedNetworkPeer : NetworkPeer</span>
<span class="line">{</span>
<span class="line">  std::string mSendBuffer;</span>
<span class="line">  std::string mReceiveBuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compressednetworkpeer-vtbl" tabindex="-1"><a class="header-anchor" href="#compressednetworkpeer-vtbl"><span><code>CompressedNetworkPeer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompressedNetworkPeer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~NetworkPeer)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);</span>
<span class="line">  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);</span>
<span class="line">  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);</span>
<span class="line">  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);</span>
<span class="line">  void (__fastcall *update)(NetworkPeer *this);</span>
<span class="line">  void (__fastcall *flush)(NetworkPeer *this, std::function&lt;void __cdecl(void)&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-hash-hash-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-hash-hash-vtbl"><span><code>Crypto::Hash::Hash_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Hash::Hash_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IHash)(Crypto::Hash::IHash *this);</span>
<span class="line">  void (__fastcall *reset)(Crypto::Hash::IHash *this);</span>
<span class="line">  void (__fastcall *update)(Crypto::Hash::IHash *this, const void *, unsigned int);</span>
<span class="line">  void (__fastcall *final)(Crypto::Hash::IHash *this, unsigned __int8 *);</span>
<span class="line">  unsigned __int64 (__fastcall *resultSize)(Crypto::Hash::IHash *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c"><span><code>CommandOutputPacket::read::__l2::&lt;lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputPacket::read::__l2::&lt;lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546"><span><code>CommandOutputPacket::read::__l2::&lt;lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c&gt;::()::__l2::&lt;lambda_111bef47aba037e64e2de7ab058b2546&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputPacket::read::__l2::&lt;lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c&gt;::()::__l2::&lt;lambda_111bef47aba037e64e2de7ab058b2546&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9"><span><code>CommandOutputPacket::write::__l2::&lt;lambda_5c0d0a82998e37e66147a0d26f6f41e9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputPacket::write::__l2::&lt;lambda_5c0d0a82998e37e66147a0d26f6f41e9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d"><span><code>CommandOutputPacket::write::__l2::&lt;lambda_5c0d0a82998e37e66147a0d26f6f41e9&gt;::()::__l2::&lt;lambda_08a2613ea832ae6e1c316072b3dcf92d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputPacket::write::__l2::&lt;lambda_5c0d0a82998e37e66147a0d26f6f41e9&gt;::()::__l2::&lt;lambda_08a2613ea832ae6e1c316072b3dcf92d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656"><span><code>ClientboundMapItemDataPacket::write::__l14::&lt;lambda_c1e7efae3b5dc21032bb93b639f0a656&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::write::__l14::&lt;lambda_c1e7efae3b5dc21032bb93b639f0a656&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49"><span><code>ClientboundMapItemDataPacket::write::__l11::&lt;lambda_461be92f04b6766159e2a14649e21c49&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::write::__l11::&lt;lambda_461be92f04b6766159e2a14649e21c49&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23"><span><code>ClientboundMapItemDataPacket::write::__l11::&lt;lambda_fac84794c48ef9a05c921b62900cfc23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::write::__l11::&lt;lambda_fac84794c48ef9a05c921b62900cfc23&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053"><span><code>ClientboundMapItemDataPacket::write::__l5::&lt;lambda_b4233823788b03f84b72100ad9164053&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::write::__l5::&lt;lambda_b4233823788b03f84b72100ad9164053&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143"><span><code>ClientboundMapItemDataPacket::read::__l11::&lt;lambda_299406233ccff525293e6b278e5e2143&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::read::__l11::&lt;lambda_299406233ccff525293e6b278e5e2143&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab"><span><code>ClientboundMapItemDataPacket::read::__l11::&lt;lambda_4627a9aa0712be76211aa31f1c634fab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::read::__l11::&lt;lambda_4627a9aa0712be76211aa31f1c634fab&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc"><span><code>ClientboundMapItemDataPacket::read::__l5::&lt;lambda_a6c59ce5d5173a7b49ebcbdb4d1edebc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientboundMapItemDataPacket::read::__l5::&lt;lambda_a6c59ce5d5173a7b49ebcbdb4d1edebc&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253" tabindex="-1"><a class="header-anchor" href="#creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253"><span><code>CreativeContentPacket::read::__l2::&lt;lambda_96e9e64950119d68213f99866c7e0253&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeContentPacket::read::__l2::&lt;lambda_96e9e64950119d68213f99866c7e0253&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *i;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2" tabindex="-1"><a class="header-anchor" href="#creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2"><span><code>CreativeContentPacket::write::__l5::&lt;lambda_45d3c2d0ca3ded40260607e2e7c69dc2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeContentPacket::write::__l5::&lt;lambda_45d3c2d0ca3ded40260607e2e7c69dc2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c"><span><code>CraftingEventPacket::read::__l2::&lt;lambda_3623cfbc0b234474e5a7a6043a32091c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingEventPacket::read::__l2::&lt;lambda_3623cfbc0b234474e5a7a6043a32091c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e"><span><code>CraftingEventPacket::read::__l2::&lt;lambda_6b5d3f89745eb1b42b1abcdc2cfecf6e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingEventPacket::read::__l2::&lt;lambda_6b5d3f89745eb1b42b1abcdc2cfecf6e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de"><span><code>CraftingEventPacket::write::__l2::&lt;lambda_8d95ef7248562c60723dda14c08a47de&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingEventPacket::write::__l2::&lt;lambda_8d95ef7248562c60723dda14c08a47de&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983"><span><code>CraftingEventPacket::write::__l2::&lt;lambda_8cfbdd6deaa5624e9cb513c03578c983&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingEventPacket::write::__l2::&lt;lambda_8cfbdd6deaa5624e9cb513c03578c983&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525"><span><code>CraftingDataPacket::read::__l21::&lt;lambda_0281d7cf4dad9b4308c03ae95eb3a525&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::read::__l21::&lt;lambda_0281d7cf4dad9b4308c03ae95eb3a525&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a"><span><code>CraftingDataPacket::read::__l2::&lt;lambda_1b84a61e5063cd2a0e9cc8970d0b665a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::read::__l2::&lt;lambda_1b84a61e5063cd2a0e9cc8970d0b665a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb"><span><code>CraftingDataPacket::read::__l2::&lt;lambda_54bc7cd634b04089ec4ff322c27cddbb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::read::__l2::&lt;lambda_54bc7cd634b04089ec4ff322c27cddbb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb"><span><code>CraftingDataPacket::read::__l2::&lt;lambda_03aa26e243735ee9ece5930a778e19bb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::read::__l2::&lt;lambda_03aa26e243735ee9ece5930a778e19bb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57"><span><code>CraftingDataPacket::write::__l2::&lt;lambda_e5ff81a04513ae571fd2ed01ede86d57&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::write::__l2::&lt;lambda_e5ff81a04513ae571fd2ed01ede86d57&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948"><span><code>CraftingDataPacket::write::__l2::&lt;lambda_f66ca93671b251d3fd735aa0bf744948&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::write::__l2::&lt;lambda_f66ca93671b251d3fd735aa0bf744948&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd"><span><code>CraftingDataPacket::write::__l2::&lt;lambda_b8b5ea0a1f44ec41ec43cb7cf66d6afd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::write::__l2::&lt;lambda_b8b5ea0a1f44ec41ec43cb7cf66d6afd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8"><span><code>CraftingDataPacket::write::__l2::&lt;lambda_f0c4f01fa12286088002e5b7913413d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingDataPacket::write::__l2::&lt;lambda_f0c4f01fa12286088002e5b7913413d8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-encryptedfileheader-unnamed-type-efheader" tabindex="-1"><a class="header-anchor" href="#crypto-encryptedfileheader-unnamed-type-efheader"><span><code>Crypto::encryptedFileHeader::&lt;unnamed_type__efheader&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Crypto::encryptedFileHeader::&lt;unnamed_type__efheader&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int _version;</span>
<span class="line">  Crypto::signatureValue _efsignature;</span>
<span class="line">  unsigned int _data1;</span>
<span class="line">  unsigned int _data2;</span>
<span class="line">  unsigned __int8 _IdSize;</span>
<span class="line">  char _IdName[239];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a" tabindex="-1"><a class="header-anchor" href="#compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a"><span><code>CompositePackSource::forEachPack::__l6::&lt;lambda_367a75bf960abb288ec97e873c12428a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompositePackSource::forEachPack::__l6::&lt;lambda_367a75bf960abb288ec97e873c12428a&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;PackIdVersion&gt; *visitedPacks;</span>
<span class="line">  std::function&lt;void __cdecl(Pack &amp;)&gt; *callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d" tabindex="-1"><a class="header-anchor" href="#compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d"><span><code>CompositePackSource::forEachPackConst::__l6::&lt;lambda_559bc3fba05953cf51044a45a84dcf0d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompositePackSource::forEachPackConst::__l6::&lt;lambda_559bc3fba05953cf51044a45a84dcf0d&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;PackIdVersion&gt; *visitedPacks;</span>
<span class="line">  std::function&lt;void __cdecl(Pack const &amp;)&gt; *callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-unzipinternals" tabindex="-1"><a class="header-anchor" href="#core-unzipinternals"><span><code>Core::UnzipInternals</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::UnzipInternals</span>
<span class="line">{</span>
<span class="line">  void *mZipFile;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandmessage-messagecomponent" tabindex="-1"><a class="header-anchor" href="#commandmessage-messagecomponent"><span><code>CommandMessage::MessageComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandMessage::MessageComponent</span>
<span class="line">{</span>
<span class="line">  std::string string;</span>
<span class="line">  std::unique_ptr&lt;CommandSelector&lt;Actor&gt;&gt; selection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandmessage" tabindex="-1"><a class="header-anchor" href="#commandmessage"><span><code>CommandMessage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandMessage</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;CommandMessage::MessageComponent&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandrawtext" tabindex="-1"><a class="header-anchor" href="#commandrawtext"><span><code>CommandRawText</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRawText</span>
<span class="line">{</span>
<span class="line">  std::string mText;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandwildcardint" tabindex="-1"><a class="header-anchor" href="#commandwildcardint"><span><code>CommandWildcardInt</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandWildcardInt</span>
<span class="line">{</span>
<span class="line">  bool mIsWildcard;</span>
<span class="line">  int mValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientautomationcommandorigin" tabindex="-1"><a class="header-anchor" href="#clientautomationcommandorigin"><span><code>ClientAutomationCommandOrigin</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientAutomationCommandOrigin : CommandOrigin</span>
<span class="line">{</span>
<span class="line">  std::string mRequestId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientautomationcommandorigin-vtbl" tabindex="-1"><a class="header-anchor" href="#clientautomationcommandorigin-vtbl"><span><code>ClientAutomationCommandOrigin_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientAutomationCommandOrigin_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CommandOrigin)(CommandOrigin *this);</span>
<span class="line">  const std::string *(__fastcall *getRequestId)(CommandOrigin *this);</span>
<span class="line">  std::string *(__fastcall *getName)(CommandOrigin *this, std::string *result);</span>
<span class="line">  BlockPos *(__fastcall *getBlockPosition)(CommandOrigin *this, BlockPos *result);</span>
<span class="line">  Vec3 *(__fastcall *getWorldPosition)(CommandOrigin *this, Vec3 *result);</span>
<span class="line">  Level *(__fastcall *getLevel)(CommandOrigin *this);</span>
<span class="line">  Dimension *(__fastcall *getDimension)(CommandOrigin *this);</span>
<span class="line">  Actor *(__fastcall *getEntity)(CommandOrigin *this);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getPermissionsLevel)(CommandOrigin *this);</span>
<span class="line">  std::unique_ptr&lt;CommandOrigin&gt; *(__fastcall *clone)(CommandOrigin *this, std::unique_ptr&lt;CommandOrigin&gt; *result);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *getCursorHitBlockPos)(CommandOrigin *this, std::optional&lt;BlockPos&gt; *result);</span>
<span class="line">  std::optional&lt;Vec3&gt; *(__fastcall *getCursorHitPos)(CommandOrigin *this, std::optional&lt;Vec3&gt; *result);</span>
<span class="line">  bool (__fastcall *hasChatPerms)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *hasTellPerms)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *canUseAbility)(CommandOrigin *this, AbilitiesIndex);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *canUseCommandsWithoutCheatsEnabled)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *isSelectorExpansionAllowed)(CommandOrigin *this);</span>
<span class="line">  const NetworkIdentifier *(__fastcall *getSourceId)(CommandOrigin *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getSourceSubId)(CommandOrigin *this);</span>
<span class="line">  const CommandOrigin *(__fastcall *getOutputReceiver)(CommandOrigin *this);</span>
<span class="line">  CommandOriginType (__fastcall *getOriginType)(CommandOrigin *this);</span>
<span class="line">  CommandOriginData *(__fastcall *toCommandOriginData)(CommandOrigin *this, CommandOriginData *result);</span>
<span class="line">  const mce::UUID *(__fastcall *getUUID)(CommandOrigin *this);</span>
<span class="line">  void (__fastcall *handleCommandOutputCallback)(CommandOrigin *this, Json::Value *);</span>
<span class="line">  void (__fastcall *_setUUID)(CommandOrigin *this, const mce::UUID *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e"><span><code>ClientBlobCache::Server::ActiveTransfersManager::rememberBlob::__l13::&lt;lambda_cbe0fac81da36102ba2c1cdce3ecd16e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlobCache::Server::ActiveTransfersManager::rememberBlob::__l13::&lt;lambda_cbe0fac81da36102ba2c1cdce3ecd16e&gt;</span>
<span class="line">{</span>
<span class="line">  ClientBlobCache::Server::ActiveTransfersManager *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c" tabindex="-1"><a class="header-anchor" href="#commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c"><span><code>CommandOrigin::fromCommandOriginData::__l5::&lt;lambda_c4f9d28d0d1549595c039f306673e27c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandOrigin::fromCommandOriginData::__l5::&lt;lambda_c4f9d28d0d1549595c039f306673e27c&gt;</span>
<span class="line">{</span>
<span class="line">  const NetworkIdentifier *sourceId;</span>
<span class="line">  unsigned __int8 sourceSubId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376" tabindex="-1"><a class="header-anchor" href="#commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376"><span><code>CommandAreaFactory::_getArea::__l23::&lt;lambda_0efece9ce348f4d9959d0fd4083ac376&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandAreaFactory::_getArea::__l23::&lt;lambda_0efece9ce348f4d9959d0fd4083ac376&gt;</span>
<span class="line">{</span>
<span class="line">  ChunkPos *cp;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19" tabindex="-1"><a class="header-anchor" href="#commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19"><span><code>CommandAreaFactory::_getArea::__l2::&lt;lambda_2c28d13bbbdff35c73a055f9292bfe19&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandAreaFactory::_getArea::__l2::&lt;lambda_2c28d13bbbdff35c73a055f9292bfe19&gt;</span>
<span class="line">{</span>
<span class="line">  const Bounds *requiredArea;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-commanditem" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-commanditem"><span><code>CommandRegistry::DefaultIdConverter&lt;CommandItem&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;CommandItem&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-block-const" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-block-const"><span><code>CommandRegistry::DefaultIdConverter&lt;Block const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;Block const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d" tabindex="-1"><a class="header-anchor" href="#commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d"><span><code>CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5" tabindex="-1"><a class="header-anchor" href="#commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5"><span><code>CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e" tabindex="-1"><a class="header-anchor" href="#commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e"><span><code>CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt;</span>
<span class="line">{</span>
<span class="line">  CommandRegistry::SemanticInfo *semanticInfo;</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">  std::string *unparsedText;</span>
<span class="line">  bool *newWord;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">  std::unique_ptr&lt;AutoCompleteInformation&gt; *result;</span>
<span class="line">  const CommandRegistry::ParseTable *table;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e" tabindex="-1"><a class="header-anchor" href="#commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e"><span><code>CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;,&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;,&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;,&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;,&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt; &gt; : CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;, CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;, CommandRegistry::getAutoCompleteOptions::__l2::&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt;</span>
<span class="line">{</span>
<span class="line">  _BYTE gap0;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8" tabindex="-1"><a class="header-anchor" href="#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8"><span><code>CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035" tabindex="-1"><a class="header-anchor" href="#commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035"><span><code>CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;OverloadSyntaxInformation&gt; *possibilities;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa" tabindex="-1"><a class="header-anchor" href="#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa"><span><code>CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;OverloadSyntaxInformation&gt; *possibilities;</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa" tabindex="-1"><a class="header-anchor" href="#commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa"><span><code>CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;,&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;,&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;,&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;,&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt; &gt; : CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;, CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;, CommandRegistry::getOverloadSyntaxInformation::__l5::&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codebuildercommand" tabindex="-1"><a class="header-anchor" href="#codebuildercommand"><span><code>CodeBuilderCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CodeBuilderCommand : Command</span>
<span class="line">{</span>
<span class="line">  _BYTE mAction[4];</span>
<span class="line">  __declspec(align(8)) CommandSelector&lt;Player&gt; mPlayerTargets;</span>
<span class="line">  CommandRawText mURL;</span>
<span class="line">  bool mShouldOpenWindow;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codebuildercommand-vtbl" tabindex="-1"><a class="header-anchor" href="#codebuildercommand-vtbl"><span><code>CodeBuilderCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CodeBuilderCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-gametype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-gametype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum GameType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum GameType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-bool" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-bool"><span><code>CommandRegistry::DefaultIdConverter&lt;bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;bool&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-int" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-int"><span><code>CommandRegistry::DefaultIdConverter&lt;int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;int&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-agentcommands-direction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-agentcommands-direction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum AgentCommands::Direction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum AgentCommands::Direction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-agentcommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-agentcommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum AgentCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum AgentCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification"><span><code>CommandRegistry::DefaultIdConverter&lt;enum AgentCommands::CollectCommand::CollectionSpecification&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum AgentCommands::CollectCommand::CollectionSpecification&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-codebuildercommand-action" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-codebuildercommand-action"><span><code>CommandRegistry::DefaultIdConverter&lt;enum CodeBuilderCommand::Action&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum CodeBuilderCommand::Action&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae"><span><code>CommandSelectorBase::newResults::__l54::&lt;lambda_22f7ffa562b6d789d635310378f0cdae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l54::&lt;lambda_22f7ffa562b6d789d635310378f0cdae&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  std::function&lt;void __cdecl(Actor &amp;)&gt; *addEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261"><span><code>CommandSelectorBase::newResults::__l52::&lt;lambda_6f8eabf9af8392d984153e547b4fd261&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l52::&lt;lambda_6f8eabf9af8392d984153e547b4fd261&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  std::function&lt;void __cdecl(Actor &amp;)&gt; *addEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae"><span><code>CommandSelectorBase::newResults::__l44::&lt;lambda_70a396ffbdb6e1b92161cf002e1e6fae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l44::&lt;lambda_70a396ffbdb6e1b92161cf002e1e6fae&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">  std::function&lt;void __cdecl(Actor &amp;)&gt; *addEntity;</span>
<span class="line">  const ActorUniqueID *originAgentID;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53"><span><code>CommandRegistry::{ctor}::__l2::&lt;lambda_361045df7e3bde2e5a2028877afb9a53&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l2::&lt;lambda_361045df7e3bde2e5a2028877afb9a53&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4"><span><code>CommandRegistry::{ctor}::__l2::&lt;lambda_7f6b17ab23224a5d644798305b18dea4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l2::&lt;lambda_7f6b17ab23224a5d644798305b18dea4&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry::Symbol Arg;</span>
<span class="line">  const CommandRegistry::Symbol Args;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898"><span><code>CommandRegistry::{ctor}::__l2::&lt;lambda_414f2af8519f0713a5e0c677db6bb898&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l2::&lt;lambda_414f2af8519f0713a5e0c677db6bb898&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry::Symbol Arg;</span>
<span class="line">  const CommandRegistry::Symbol Comma;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589"><span><code>CommandRegistry::{ctor}::__l5::&lt;lambda_cf1a3bc1337d755975289f3f698b3589&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l5::&lt;lambda_cf1a3bc1337d755975289f3f698b3589&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry::Symbol OpenBrace;</span>
<span class="line">  const CommandRegistry::Symbol CloseBrace;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a"><span><code>CommandRegistry::{ctor}::__l5::&lt;lambda_f5186b54b476c2be3f76bb2a1af8b06a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l5::&lt;lambda_f5186b54b476c2be3f76bb2a1af8b06a&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry::Symbol ScoresArg;</span>
<span class="line">  const CommandRegistry::Symbol Comma;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96" tabindex="-1"><a class="header-anchor" href="#commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96"><span><code>CommandRegistry::{ctor}::__l2::&lt;lambda_605018ec809aeceb683bc762484a9d96&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::{ctor}::__l2::&lt;lambda_605018ec809aeceb683bc762484a9d96&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::pair&lt;std::string,int&gt;&gt; *typeNames;</span>
<span class="line">  std::vector&lt;enum ActorType&gt; *invalidEntities;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6" tabindex="-1"><a class="header-anchor" href="#commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6"><span><code>CommandRegistry::parseSelector::__l249::&lt;lambda_d62e97e7a0676903544f97c1fc2704a6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::parseSelector::__l249::&lt;lambda_d62e97e7a0676903544f97c1fc2704a6&gt;</span>
<span class="line">{</span>
<span class="line">  std::pair&lt;int,int&gt; level;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59" tabindex="-1"><a class="header-anchor" href="#commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59"><span><code>CommandRegistry::parseSelector::__l246::&lt;lambda_28bcc386864748a0e234273411c43c59&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::parseSelector::__l246::&lt;lambda_28bcc386864748a0e234273411c43c59&gt;</span>
<span class="line">{</span>
<span class="line">  std::pair&lt;float,float&gt; yRotation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac" tabindex="-1"><a class="header-anchor" href="#commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac"><span><code>CommandRegistry::parseSelector::__l237::&lt;lambda_63db28ceedc03525f27c514cb8cf71ac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::parseSelector::__l237::&lt;lambda_63db28ceedc03525f27c514cb8cf71ac&gt;</span>
<span class="line">{</span>
<span class="line">  CommandIntegerRange range;</span>
<span class="line">  std::string objName;</span>
<span class="line">  const std::function&lt;int __cdecl(bool &amp;,std::string const &amp;,Actor const &amp;)&gt; *callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669" tabindex="-1"><a class="header-anchor" href="#commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669"><span><code>CommandRegistry::parseSelector::__l67::&lt;lambda_4e234e3626d90af13bf77dbb36bd4669&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) CommandRegistry::parseSelector::__l67::&lt;lambda_4e234e3626d90af13bf77dbb36bd4669&gt;</span>
<span class="line">{</span>
<span class="line">  GameType type;</span>
<span class="line">  bool inverted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db" tabindex="-1"><a class="header-anchor" href="#commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db"><span><code>CommandOutputSender::sendToAdmins::__l23::&lt;lambda_038d1a6e7bb914ec0d3b2509a54419db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandOutputSender::sendToAdmins::__l23::&lt;lambda_038d1a6e7bb914ec0d3b2509a54419db&gt;</span>
<span class="line">{</span>
<span class="line">  TextObjectRoot *textObjectRoot;</span>
<span class="line">  ActorUniqueID *playerId;</span>
<span class="line">  _BYTE opPermLevel[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd" tabindex="-1"><a class="header-anchor" href="#commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd"><span><code>CommandOutputSender::sendToAdmins::__l26::&lt;lambda_3349d776e79858640ef0ba11afaa57fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputSender::sendToAdmins::__l26::&lt;lambda_3349d776e79858640ef0ba11afaa57fd&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandOutputMessage *message;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14" tabindex="-1"><a class="header-anchor" href="#commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14"><span><code>CommandOutputSender::send::__l20::&lt;lambda_2ce2c90252fa1240d87f82a6879ddf14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputSender::send::__l20::&lt;lambda_2ce2c90252fa1240d87f82a6879ddf14&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandOutputMessage *message;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7"><span><code>CommandRegistry::_visitCommandParseTree::__l38::&lt;lambda_392e9dd357a2416c9c1270d21bdf5be7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l38::&lt;lambda_392e9dd357a2416c9c1270d21bdf5be7&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db"><span><code>CommandRegistry::_visitCommandParseTree::__l36::&lt;lambda_05f2e04d42b55be64a3cf7612824c8db&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l36::&lt;lambda_05f2e04d42b55be64a3cf7612824c8db&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">  const CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_0ee50b28ac559fb7167610861c82c3b8&gt;,&lt;lambda_19d920e626aebe51e6ca8191f97cc035&gt;,&lt;lambda_0ce6a8587e76f234789878ea4f4227fa&gt; &gt; *visitor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012"><span><code>CommandRegistry::_visitCommandParseTree::__l24::&lt;lambda_edd84d20487ee55e23e25db858881012&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l24::&lt;lambda_edd84d20487ee55e23e25db858881012&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1"><span><code>CommandRegistry::_visitCommandParseTree::__l38::&lt;lambda_617a76d12e6d2a53077fb1597f7a3dd1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l38::&lt;lambda_617a76d12e6d2a53077fb1597f7a3dd1&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a"><span><code>CommandRegistry::_visitCommandParseTree::__l36::&lt;lambda_1b330ce45f34653cad8c98af9609e36a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l36::&lt;lambda_1b330ce45f34653cad8c98af9609e36a&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandRegistry *const __this;</span>
<span class="line">  const CommandRegistry::ParseTreeVisitor&lt;&lt;lambda_08d88ad7b4a5d4fe270c8aaf4025af0d&gt;,&lt;lambda_54885e06ac509493fd3c71e97ba31bd5&gt;,&lt;lambda_ae8832d910885e324562d537f39d8b6e&gt; &gt; *visitor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee" tabindex="-1"><a class="header-anchor" href="#commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee"><span><code>CommandRegistry::_visitCommandParseTree::__l24::&lt;lambda_a600244a6bf1c54ab33531b7c0f5fcee&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::_visitCommandParseTree::__l24::&lt;lambda_a600244a6bf1c54ab33531b7c0f5fcee&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af"><span><code>CommandSelectorBase::newResults::__l46::&lt;lambda_c263e4b3886672215959338cc46972af&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l46::&lt;lambda_c263e4b3886672215959338cc46972af&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(Actor &amp;)&gt; *addEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1"><span><code>CommandSelectorBase::newResults::__l41::&lt;lambda_48a585b10008cbd8b875398ee88491b1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l41::&lt;lambda_48a585b10008cbd8b875398ee88491b1&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  Vec3 source;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">  std::set&lt;std::pair&lt;float,Actor *&gt;&gt; *entities;</span>
<span class="line">  unsigned __int64 *count;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4"><span><code>CommandSelectorBase::newResults::__l39::&lt;lambda_c1528fafb0866bfed861d2fb0d691fd4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l39::&lt;lambda_c1528fafb0866bfed861d2fb0d691fd4&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  std::vector&lt;Actor *&gt; *entitiesFlat;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526" tabindex="-1"><a class="header-anchor" href="#commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526"><span><code>CommandSelectorBase::newResults::__l37::&lt;lambda_3273758fa95c626e53ac475073e44526&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorBase::newResults::__l37::&lt;lambda_3273758fa95c626e53ac475073e44526&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandSelectorBase *const __this;</span>
<span class="line">  Vec3 source;</span>
<span class="line">  std::vector&lt;Actor *&gt; *entitiesFlat;</span>
<span class="line">  const CommandOrigin *origin;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commanddispatcher" tabindex="-1"><a class="header-anchor" href="#commanddispatcher"><span><code>CommandDispatcher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandDispatcher : ICommandDispatcher</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commanddispatcher-vtbl" tabindex="-1"><a class="header-anchor" href="#commanddispatcher-vtbl"><span><code>CommandDispatcher_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandDispatcher_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICommandDispatcher)(ICommandDispatcher *this);</span>
<span class="line">  int (__fastcall *performCommand)(ICommandDispatcher *this, const CommandOrigin *, Command *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandfunctionentry" tabindex="-1"><a class="header-anchor" href="#commandfunctionentry"><span><code>CommandFunctionEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandFunctionEntry : IFunctionEntry</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Command&gt; mCommand;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandfunctionentry-vtbl" tabindex="-1"><a class="header-anchor" href="#commandfunctionentry-vtbl"><span><code>CommandFunctionEntry_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandFunctionEntry_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFunctionEntry)(IFunctionEntry *this);</span>
<span class="line">  void (__fastcall *execute)(IFunctionEntry *this, FunctionManager *, const CommandOrigin *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-ifeature-const" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-ifeature-const"><span><code>CommandRegistry::DefaultIdConverter&lt;IFeature const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;IFeature const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-actordefinitionidentifier-const" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-actordefinitionidentifier-const"><span><code>CommandRegistry::DefaultIdConverter&lt;ActorDefinitionIdentifier const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;ActorDefinitionIdentifier const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-structurefeaturetype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-structurefeaturetype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum StructureFeatureType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum StructureFeatureType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-enchant-type" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-enchant-type"><span><code>CommandRegistry::DefaultIdConverter&lt;enum Enchant::Type&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum Enchant::Type&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearcommand" tabindex="-1"><a class="header-anchor" href="#clearcommand"><span><code>ClearCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClearCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandSelector&lt;Player&gt; mTargets;</span>
<span class="line">  CommandItem mItem;</span>
<span class="line">  int mData;</span>
<span class="line">  int mMaxCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#clearcommand-vtbl"><span><code>ClearCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClearCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clonecommand" tabindex="-1"><a class="header-anchor" href="#clonecommand"><span><code>CloneCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CloneCommand : Command</span>
<span class="line">{</span>
<span class="line">  CommandPosition mBegin;</span>
<span class="line">  CommandPosition mEnd;</span>
<span class="line">  CommandPosition mDestination;</span>
<span class="line">  CloneCommand::MaskMode mMaskMode;</span>
<span class="line">  CloneCommand::CloneMode mCloneMode;</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  int mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clonecommand-vtbl" tabindex="-1"><a class="header-anchor" href="#clonecommand-vtbl"><span><code>CloneCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CloneCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandpositionfloat" tabindex="-1"><a class="header-anchor" href="#commandpositionfloat"><span><code>CommandPositionFloat</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandPositionFloat : CommandPosition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-rotation" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-rotation"><span><code>CommandRegistry::DefaultIdConverter&lt;enum Rotation&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum Rotation&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction"><span><code>CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarAction&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarAction&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption"><span><code>CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarGetOption&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarGetOption&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption"><span><code>CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarSetOption&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum BossbarCommand::BossbarSetOption&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-bossbarcolor" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-bossbarcolor"><span><code>CommandRegistry::DefaultIdConverter&lt;enum BossBarColor&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum BossBarColor&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-clonecommand-maskmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-clonecommand-maskmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum CloneCommand::MaskMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum CloneCommand::MaskMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-clonecommand-clonemode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-clonecommand-clonemode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum CloneCommand::CloneMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum CloneCommand::CloneMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-difficulty" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-difficulty"><span><code>CommandRegistry::DefaultIdConverter&lt;enum Difficulty&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum Difficulty&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-effectcommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-effectcommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum EffectCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum EffectCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-mobeffect-const" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-mobeffect-const"><span><code>CommandRegistry::DefaultIdConverter&lt;MobEffect const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;MobEffect const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-executecommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-executecommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ExecuteCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ExecuteCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-fillcommand-fillmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-fillcommand-fillmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum FillCommand::FillMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum FillCommand::FillMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50" tabindex="-1"><a class="header-anchor" href="#clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50"><span><code>ClearCommand::execute::__l24::&lt;lambda_a1fc2660f4ed9e2cc3d3b9bb3bd21c50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClearCommand::execute::__l24::&lt;lambda_a1fc2660f4ed9e2cc3d3b9bb3bd21c50&gt;</span>
<span class="line">{</span>
<span class="line">  const ItemDescriptor *descriptor;</span>
<span class="line">  const __int16 damage;</span>
<span class="line">  const bool compareDamageValue;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-listdcommand-detailmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-listdcommand-detailmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ListDCommand::DetailMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ListDCommand::DetailMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-permissioncommand-action" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-permissioncommand-action"><span><code>CommandRegistry::DefaultIdConverter&lt;enum PermissionCommand::Action&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum PermissionCommand::Action&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets"><span><code>CommandRegistry::DefaultIdConverter&lt;enum PermissionCommand::AvailableCommandPermissionPresets&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum PermissionCommand::AvailableCommandPermissionPresets&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-blockslot" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-blockslot"><span><code>CommandRegistry::DefaultIdConverter&lt;enum BlockSlot&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum BlockSlot&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-equipmentslot" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-equipmentslot"><span><code>CommandRegistry::DefaultIdConverter&lt;enum EquipmentSlot&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum EquipmentSlot&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-replaceitemcommand-targettype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-replaceitemcommand-targettype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ReplaceItemCommand::TargetType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ReplaceItemCommand::TargetType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ReplaceItemCommand::ReplaceMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ReplaceItemCommand::ReplaceMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-scoreboardcommand-category" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-scoreboardcommand-category"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ScoreboardCommand::Category&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ScoreboardCommand::Category&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-scoreboardcommand-action" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-scoreboardcommand-action"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ScoreboardCommand::Action&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ScoreboardCommand::Action&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-objectivesortorder" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-objectivesortorder"><span><code>CommandRegistry::DefaultIdConverter&lt;enum ObjectiveSortOrder&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum ObjectiveSortOrder&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-setblockcommand-setblockmode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-setblockcommand-setblockmode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum SetBlockCommand::SetBlockMode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum SetBlockCommand::SetBlockMode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-tagcommand-action" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-tagcommand-action"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TagCommand::Action&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TagCommand::Action&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-teleportcommand-facingresult" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-teleportcommand-facingresult"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TeleportCommand::FacingResult&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TeleportCommand::FacingResult&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-testforblockscommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-testforblockscommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TestForBlocksCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TestForBlocksCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-tickingareacommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-tickingareacommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-tickingareacommand-addareatype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-tickingareacommand-addareatype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::AddAreaType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::AddAreaType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::TargetDimensions&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TickingAreaCommand::TargetDimensions&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-timecommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-timecommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-timecommand-query" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-timecommand-query"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::Query&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::Query&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-timecommand-timespec" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-timecommand-timespec"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::TimeSpec&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TimeCommand::TimeSpec&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-titlecommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-titlecommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TitleCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TitleCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-titlerawcommand-mode" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-titlerawcommand-mode"><span><code>CommandRegistry::DefaultIdConverter&lt;enum TitleRawCommand::Mode&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum TitleRawCommand::Mode&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-weathercommand-weathertype" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-weathercommand-weathertype"><span><code>CommandRegistry::DefaultIdConverter&lt;enum WeatherCommand::WeatherType&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum WeatherCommand::WeatherType&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-defaultidconverter-enum-weathercommand-weatherrequest" tabindex="-1"><a class="header-anchor" href="#commandregistry-defaultidconverter-enum-weathercommand-weatherrequest"><span><code>CommandRegistry::DefaultIdConverter&lt;enum WeatherCommand::WeatherRequest&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::DefaultIdConverter&lt;enum WeatherCommand::WeatherRequest&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentkeysfile" tabindex="-1"><a class="header-anchor" href="#contentkeysfile"><span><code>ContentKeysFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentKeysFile</span>
<span class="line">{</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mFilePath;</span>
<span class="line">  std::unordered_map&lt;std::string,std::string&gt; mKeyMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-profile-profilethread" tabindex="-1"><a class="header-anchor" href="#core-profile-profilethread"><span><code>Core::Profile::ProfileThread</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Profile::ProfileThread</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="common-buildinfo" tabindex="-1"><a class="header-anchor" href="#common-buildinfo"><span><code>Common::BuildInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Common::BuildInfo</span>
<span class="line">{</span>
<span class="line">  std::string mBuildId;</span>
<span class="line">  std::string mCommitId;</span>
<span class="line">  std::string mBranchId;</span>
<span class="line">  std::string mFlavor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chanceinformation" tabindex="-1"><a class="header-anchor" href="#chanceinformation"><span><code>ChanceInformation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChanceInformation</span>
<span class="line">{</span>
<span class="line">  std::variant&lt;float,std::pair&lt;unsigned int,unsigned int&gt; &gt; mChance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crcdatainput" tabindex="-1"><a class="header-anchor" href="#crcdatainput"><span><code>CRCDataInput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CRCDataInput : ICRCDataInput</span>
<span class="line">{</span>
<span class="line">  unsigned int mCrc;</span>
<span class="line">  std::unique_ptr&lt;IDataInput&gt; mStream;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crcdatainput-vtbl" tabindex="-1"><a class="header-anchor" href="#crcdatainput-vtbl"><span><code>CRCDataInput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CRCDataInput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IDataInput)(IDataInput *this);</span>
<span class="line">  std::string *(__fastcall *readString)(IDataInput *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *readLongString)(IDataInput *this, std::string *result);</span>
<span class="line">  float (__fastcall *readFloat)(IDataInput *this);</span>
<span class="line">  long double (__fastcall *readDouble)(IDataInput *this);</span>
<span class="line">  char (__fastcall *readByte)(IDataInput *this);</span>
<span class="line">  __int16 (__fastcall *readShort)(IDataInput *this);</span>
<span class="line">  int (__fastcall *readInt)(IDataInput *this);</span>
<span class="line">  __int64 (__fastcall *readLongLong)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *readBytes)(IDataInput *this, void *, unsigned __int64);</span>
<span class="line">  unsigned __int64 (__fastcall *numBytesLeft)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *isOk)(IDataInput *this);</span>
<span class="line">  bool (__fastcall *seek)(IDataInput *this, unsigned __int64);</span>
<span class="line">  unsigned int (__fastcall *getCRC)(ICRCDataInput *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crcdataoutput" tabindex="-1"><a class="header-anchor" href="#crcdataoutput"><span><code>CRCDataOutput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CRCDataOutput : ICRCDataOutput</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;IDataOutput&gt; mStream;</span>
<span class="line">  unsigned int mCrc;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crcdataoutput-vtbl" tabindex="-1"><a class="header-anchor" href="#crcdataoutput-vtbl"><span><code>CRCDataOutput_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CRCDataOutput_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IDataOutput)(IDataOutput *this);</span>
<span class="line">  void (__fastcall *writeString)(IDataOutput *this, gsl::basic_string_span&lt;char const ,-1&gt;);</span>
<span class="line">  void (__fastcall *writeLongString)(IDataOutput *this, gsl::basic_string_span&lt;char const ,-1&gt;);</span>
<span class="line">  void (__fastcall *writeFloat)(IDataOutput *this, float);</span>
<span class="line">  void (__fastcall *writeDouble)(IDataOutput *this, long double);</span>
<span class="line">  void (__fastcall *writeByte)(IDataOutput *this, char);</span>
<span class="line">  void (__fastcall *writeShort)(IDataOutput *this, __int16);</span>
<span class="line">  void (__fastcall *writeInt)(IDataOutput *this, int);</span>
<span class="line">  void (__fastcall *writeLongLong)(IDataOutput *this, __int64);</span>
<span class="line">  void (__fastcall *writeBytes)(IDataOutput *this, const void *, unsigned __int64);</span>
<span class="line">  bool (__fastcall *isOk)(IDataOutput *this);</span>
<span class="line">  unsigned int (__fastcall *getCRC)(ICRCDataOutput *this);</span>
<span class="line">  void (__fastcall *setCRCSeed)(ICRCDataOutput *this, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9"><span><code>CompoundTagUpdaterBuilder::rename::__l2::&lt;lambda_d106db2de3b6b6e6de326311fa5fb1d9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::rename::__l2::&lt;lambda_d106db2de3b6b6e6de326311fa5fb1d9&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a"><span><code>CompoundTagUpdaterBuilder::remove::__l2::&lt;lambda_34a013135a39fc1d9dd5a5b78a6ccc8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::remove::__l2::&lt;lambda_34a013135a39fc1d9dd5a5b78a6ccc8a&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661"><span><code>CompoundTagUpdaterBuilder::remove::__l2::&lt;lambda_9bf85ca8f27b27e71d561c4189565661&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::remove::__l2::&lt;lambda_9bf85ca8f27b27e71d561c4189565661&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631"><span><code>CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_bad5b299bb6422fa44f16a14d28fd631&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_bad5b299bb6422fa44f16a14d28fd631&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986"><span><code>CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_4566ce3f28a6fca1a020328f1b5bf986&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_4566ce3f28a6fca1a020328f1b5bf986&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d"><span><code>CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_f5f8445f343ec4ca9f1ae6c366fde01d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::&lt;lambda_f5f8445f343ec4ca9f1ae6c366fde01d&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac"><span><code>CompoundTagUpdaterBuilder::popVisit::__l2::&lt;lambda_982407142d7d5112fbad9f0663beebac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::popVisit::__l2::&lt;lambda_982407142d7d5112fbad9f0663beebac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd"><span><code>CompoundTagUpdaterBuilder::popVisit::__l2::&lt;lambda_2d39432ab1e8c62c46cf985cf99723dd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::popVisit::__l2::&lt;lambda_2d39432ab1e8c62c46cf985cf99723dd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b"><span><code>CompoundTagUpdaterBuilder::visit::__l2::&lt;lambda_1b95be20721d5b0d9ad9446ef678356b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::visit::__l2::&lt;lambda_1b95be20721d5b0d9ad9446ef678356b&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f"><span><code>CompoundTagUpdaterBuilder::visit::__l2::&lt;lambda_a2ba0478e2148f8507ead2b53b60900f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundTagUpdaterBuilder::visit::__l2::&lt;lambda_a2ba0478e2148f8507ead2b53b60900f&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string tagName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="colordefinition" tabindex="-1"><a class="header-anchor" href="#colordefinition"><span><code>ColorDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ColorDefinition</span>
<span class="line">{</span>
<span class="line">  _BYTE mColorChoice[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="color2definition" tabindex="-1"><a class="header-anchor" href="#color2definition"><span><code>Color2Definition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Color2Definition : ColorDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="canclimbdefinition" tabindex="-1"><a class="header-anchor" href="#canclimbdefinition"><span><code>CanClimbDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CanClimbDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="canflydefinition" tabindex="-1"><a class="header-anchor" href="#canflydefinition"><span><code>CanFlyDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CanFlyDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="canpowerjumpdefinition" tabindex="-1"><a class="header-anchor" href="#canpowerjumpdefinition"><span><code>CanPowerJumpDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CanPowerJumpDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collisionboxdefinition" tabindex="-1"><a class="header-anchor" href="#collisionboxdefinition"><span><code>CollisionBoxDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CollisionBoxDefinition</span>
<span class="line">{</span>
<span class="line">  Vec2 mBBDim;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cavespider" tabindex="-1"><a class="header-anchor" href="#cavespider"><span><code>CaveSpider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CaveSpider : Spider</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customentitytypecomponent" tabindex="-1"><a class="header-anchor" href="#customentitytypecomponent"><span><code>CustomEntityTypeComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomEntityTypeComponent</span>
<span class="line">{</span>
<span class="line">  Actor *mEntity;</span>
<span class="line">  std::string mCustomEntityType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemdefinition" tabindex="-1"><a class="header-anchor" href="#chargehelditemdefinition"><span><code>ChargeHeldItemDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChargeHeldItemDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mChargeItemList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#chargehelditemdefinition-vtbl"><span><code>ChargeHeldItemDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChargeHeldItemDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemgoal" tabindex="-1"><a class="header-anchor" href="#chargehelditemgoal"><span><code>ChargeHeldItemGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChargeHeldItemGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mUsingTime;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mChargeItemList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#chargehelditemgoal-vtbl"><span><code>ChargeHeldItemGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChargeHeldItemGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64" tabindex="-1"><a class="header-anchor" href="#chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64"><span><code>ChargeHeldItemDefinition::buildSchema::__l2::&lt;lambda_d321ada88c0fdca2ff94e3a1fa49eb64&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChargeHeldItemDefinition::buildSchema::__l2::&lt;lambda_d321ada88c0fdca2ff94e3a1fa49eb64&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d" tabindex="-1"><a class="header-anchor" href="#chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d"><span><code>ChargeHeldItemDefinition::buildSchema::__l2::&lt;lambda_2b6125119ea09ae250fa822690004f9d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChargeHeldItemDefinition::buildSchema::__l2::&lt;lambda_2b6125119ea09ae250fa822690004f9d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cat" tabindex="-1"><a class="header-anchor" href="#cat"><span><code>Cat</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Cat : Animal</span>
<span class="line">{</span>
<span class="line">  float mLieDownAmount;</span>
<span class="line">  float mLieDownAmountLast;</span>
<span class="line">  float mLieDownAmountTail;</span>
<span class="line">  float mLieDownAmountTailLast;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chicken" tabindex="-1"><a class="header-anchor" href="#chicken"><span><code>Chicken</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Chicken : Animal</span>
<span class="line">{</span>
<span class="line">  float mFlap;</span>
<span class="line">  float mOFlap;</span>
<span class="line">  float mFlapSpeed;</span>
<span class="line">  float mOFlapSpeed;</span>
<span class="line">  float mFlapping;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositedefinition" tabindex="-1"><a class="header-anchor" href="#compositedefinition"><span><code>CompositeDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompositeDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;BehaviorDefinition&gt;&gt; mChildren;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositedefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#compositedefinition-vtbl"><span><code>CompositeDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompositeDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumeitemnode" tabindex="-1"><a class="header-anchor" href="#consumeitemnode"><span><code>ConsumeItemNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ConsumeItemNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  bool mRightMouseDown;</span>
<span class="line">  int mDelayTicks;</span>
<span class="line">  int mDelayCounter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumeitemnode-vtbl" tabindex="-1"><a class="header-anchor" href="#consumeitemnode-vtbl"><span><code>ConsumeItemNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConsumeItemNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumeitemdefinition" tabindex="-1"><a class="header-anchor" href="#consumeitemdefinition"><span><code>ConsumeItemDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConsumeItemDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumeitemdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#consumeitemdefinition-vtbl"><span><code>ConsumeItemDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConsumeItemDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdistnode" tabindex="-1"><a class="header-anchor" href="#checkdistnode"><span><code>CheckDistNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CheckDistNode : BehaviorNode</span>
<span class="line">{</span>
<span class="line">  std::string mOperation;</span>
<span class="line">  float mDist;</span>
<span class="line">  Vec3 mTargetPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdistnode-vtbl" tabindex="-1"><a class="header-anchor" href="#checkdistnode-vtbl"><span><code>CheckDistNode_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CheckDistNode_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorNode)(BehaviorNode *this);</span>
<span class="line">  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);</span>
<span class="line">  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdistdefinition" tabindex="-1"><a class="header-anchor" href="#checkdistdefinition"><span><code>CheckDistDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CheckDistDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mOperation;</span>
<span class="line">  std::string mOperationId;</span>
<span class="line">  float mDist;</span>
<span class="line">  std::string mDistId;</span>
<span class="line">  Vec3 mTargetPos;</span>
<span class="line">  std::string mTargetPosId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdistdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#checkdistdefinition-vtbl"><span><code>CheckDistDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CheckDistDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkharvestconditiondefinition" tabindex="-1"><a class="header-anchor" href="#checkharvestconditiondefinition"><span><code>CheckHarvestConditionDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CheckHarvestConditionDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mBlockName;</span>
<span class="line">  std::string mBlockNameId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkharvestconditiondefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#checkharvestconditiondefinition-vtbl"><span><code>CheckHarvestConditionDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CheckHarvestConditionDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftitemdefinition" tabindex="-1"><a class="header-anchor" href="#craftitemdefinition"><span><code>CraftItemDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftItemDefinition : BehaviorDefinition</span>
<span class="line">{</span>
<span class="line">  std::string mItemName;</span>
<span class="line">  std::string mItemNameId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftitemdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#craftitemdefinition-vtbl"><span><code>CraftItemDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftItemDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);</span>
<span class="line">  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);</span>
<span class="line">  std::unique_ptr&lt;BehaviorNode&gt; *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr&lt;BehaviorNode&gt; *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainercontroller" tabindex="-1"><a class="header-anchor" href="#craftingcontainercontroller"><span><code>CraftingContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerController : ContainerController</span>
<span class="line">{</span>
<span class="line">  const Recipe *mCurrentRecipe;</span>
<span class="line">  int mGridSize;</span>
<span class="line">  bool mDisplayOnlyGhostItems;</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mGhostItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#craftingcontainercontroller-vtbl"><span><code>CraftingContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);</span>
<span class="line">  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftinginputcontainercontroller" tabindex="-1"><a class="header-anchor" href="#craftinginputcontainercontroller"><span><code>CraftingInputContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingInputContainerController : CraftingContainerController</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ItemInstance&gt; mRecipeItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftinginputcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#craftinginputcontainercontroller-vtbl"><span><code>CraftingInputContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingInputContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);</span>
<span class="line">  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingoutputcontainercontroller" tabindex="-1"><a class="header-anchor" href="#craftingoutputcontainercontroller"><span><code>CraftingOutputContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CraftingOutputContainerController : CraftingContainerController</span>
<span class="line">{</span>
<span class="line">  ItemInstance mRecipeItem;</span>
<span class="line">  bool mIsRecipeCraftable;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingoutputcontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#craftingoutputcontainercontroller-vtbl"><span><code>CraftingOutputContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingOutputContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);</span>
<span class="line">  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontainercontroller" tabindex="-1"><a class="header-anchor" href="#creativecontainercontroller"><span><code>CreativeContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeContainerController : CraftingContainerController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontainercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#creativecontainercontroller-vtbl"><span><code>CreativeContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CreativeContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);</span>
<span class="line">  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);</span>
<span class="line">  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);</span>
<span class="line">  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compounditem" tabindex="-1"><a class="header-anchor" href="#compounditem"><span><code>CompoundItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompoundItem : ChemistryItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation" tabindex="-1"><a class="header-anchor" href="#containervalidation"><span><code>ContainerValidation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05"><span><code>ContainerValidation::_assignAllowedInContainerDelegate::__l4::&lt;lambda_ca14cee2759167866a14f98c13ae1b05&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::_assignAllowedInContainerDelegate::__l4::&lt;lambda_ca14cee2759167866a14f98c13ae1b05&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_a94226eda5fc26b1cbfbc88e36506e72&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_a94226eda5fc26b1cbfbc88e36506e72&gt;</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenContext screenContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_d5ee424f0847ea65030b7c6f6c1b586d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_d5ee424f0847ea65030b7c6f6c1b586d&gt;</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenContext screenContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e"><span><code>ContainerValidation::assignValidationDelegates::__l18::&lt;lambda_0ebe49e2c95965dee3ca7618c3b9009e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l18::&lt;lambda_0ebe49e2c95965dee3ca7618c3b9009e&gt;</span>
<span class="line">{</span>
<span class="line">  HorseEquipValidationState state;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_13fb63bd1fb91e659eed4da5282b6372&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_13fb63bd1fb91e659eed4da5282b6372&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_e569b0479cf2828d4244f0b5c7303b23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_e569b0479cf2828d4244f0b5c7303b23&gt;</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenContext screenContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_ff26520e30a38044df172b5778af010a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_ff26520e30a38044df172b5778af010a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_d032c3e0a9f5cb65ef6b2067239804b5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_d032c3e0a9f5cb65ef6b2067239804b5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_571cf091bef6dba301b8f8dc63bbd974&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_571cf091bef6dba301b8f8dc63bbd974&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_29b95d068c06a7e703fe9d21cb73de5e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_29b95d068c06a7e703fe9d21cb73de5e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_9b3a8e0d18f88b6b2f36e5ab819ecc64&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_9b3a8e0d18f88b6b2f36e5ab819ecc64&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_c57785192ac75762ce53fbae61c013ae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_c57785192ac75762ce53fbae61c013ae&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_18bb92ef1ae5f58703be325415154ee1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_18bb92ef1ae5f58703be325415154ee1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_015afaa8d4ac12f7081f67fc3327889e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_015afaa8d4ac12f7081f67fc3327889e&gt;</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenContext screenContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_28c1d666805352606ecc6aa691bede5a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_28c1d666805352606ecc6aa691bede5a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_3737fd909942acaf574821aaa99cf1ad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_3737fd909942acaf574821aaa99cf1ad&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_6a3d1f33c6cbf3efe5f892e64fe9f692&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_6a3d1f33c6cbf3efe5f892e64fe9f692&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_80788f509c3a4df1534e8891dcda3096&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_80788f509c3a4df1534e8891dcda3096&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_561de59b7805bdb21e2646c582f78dfe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_561de59b7805bdb21e2646c582f78dfe&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_cab0653dadf048ef221190874c930768&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_cab0653dadf048ef221190874c930768&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9" tabindex="-1"><a class="header-anchor" href="#container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9"><span><code>Container::sameItemAndAuxComparator::__l2::&lt;lambda_bc92f6dd1e60a290da569381c0bbc2a9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Container::sameItemAndAuxComparator::__l2::&lt;lambda_bc92f6dd1e60a290da569381c0bbc2a9&gt;</span>
<span class="line">{</span>
<span class="line">  const ItemDescriptor descriptor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftableelements" tabindex="-1"><a class="header-anchor" href="#craftableelements"><span><code>CraftableElements</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftableElements</span>
<span class="line">{</span>
<span class="line">  CraftableElements_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::unordered_map&lt;unsigned int,enum ElementType&gt; mCraftableElements;</span>
<span class="line">  std::unordered_map&lt;unsigned char,unsigned int&gt; mElementKeyToParticleKey;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftableelements-vtbl" tabindex="-1"><a class="header-anchor" href="#craftableelements-vtbl"><span><code>CraftableElements_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftableElements_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftableElements)(CraftableElements *this);</span>
<span class="line">  void (__fastcall *registerElements)(CraftableElements *this);</span>
<span class="line">  void (__fastcall *_registerElement)(CraftableElements *this, int, int, ElementType);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf"><span><code>CraftingContainerManagerController::_getRecipesForItem::__l2::&lt;lambda_6caeab14354bdd5c84e4ab8c2ea764bf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::_getRecipesForItem::__l2::&lt;lambda_6caeab14354bdd5c84e4ab8c2ea764bf&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *allRecipesForItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9"><span><code>CraftingContainerManagerController::_filterRecipes::__l2::&lt;lambda_cdb5314bee1f97240ba0cd908eecf8e9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::_filterRecipes::__l2::&lt;lambda_cdb5314bee1f97240ba0cd908eecf8e9&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *allRecipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0"><span><code>CraftingContainerManagerController::_craftItem::__l21::&lt;lambda_3c63015ccb477dfee5c6c66864ee0dc0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::_craftItem::__l21::&lt;lambda_3c63015ccb477dfee5c6c66864ee0dc0&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *craftedRecipeIdentifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0"><span><code>CraftingContainerManagerController::getCraftableCount::__l2::&lt;lambda_aa96b04be3948fd8222e3f0611ad44d0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::getCraftableCount::__l2::&lt;lambda_aa96b04be3948fd8222e3f0611ad44d0&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *recipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6"><span><code>CraftingContainerManagerController::_setupCallbacks::__l2::&lt;lambda_d90798886221ba8ec068417f5dff86e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::_setupCallbacks::__l2::&lt;lambda_d90798886221ba8ec068417f5dff86e6&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c"><span><code>CraftingContainerManagerController::{ctor}::__l2::&lt;lambda_800ba8d7ddb3e3161c5f891001bcfb9c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerController::{ctor}::__l2::&lt;lambda_800ba8d7ddb3e3161c5f891001bcfb9c&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2" tabindex="-1"><a class="header-anchor" href="#containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2"><span><code>ContainerManagerController::registerContainerCallbacks::__l12::&lt;lambda_ffe46bfded42ef6cce34996a89535ed2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerManagerController::registerContainerCallbacks::__l12::&lt;lambda_ffe46bfded42ef6cce34996a89535ed2&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ContainerManagerController&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e" tabindex="-1"><a class="header-anchor" href="#containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e"><span><code>ContainerManagerController::registerContainerCallbacks::__l9::&lt;lambda_dc250ab7902177dc8a7fb2a2aa1b1d5e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerManagerController::registerContainerCallbacks::__l9::&lt;lambda_dc250ab7902177dc8a7fb2a2aa1b1d5e&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ContainerManagerController&gt; weak_this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftinginputuicontainermodel" tabindex="-1"><a class="header-anchor" href="#craftinginputuicontainermodel"><span><code>CraftingInputUIContainerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CraftingInputUIContainerModel : PlayerUIContainerModelBase</span>
<span class="line">{</span>
<span class="line">  const bool mWorkBench;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftinginputuicontainermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#craftinginputuicontainermodel-vtbl"><span><code>CraftingInputUIContainerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingInputUIContainerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *postInit)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *releaseResources)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getContainerSize)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *tick)(ContainerModel *this, int);</span>
<span class="line">  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);</span>
<span class="line">  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);</span>
<span class="line">  const std::vector&lt;ItemStack&gt; *(__fastcall *getItems)(ContainerModel *this);</span>
<span class="line">  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);</span>
<span class="line">  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerModel *this);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);</span>
<span class="line">  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);</span>
<span class="line">  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);</span>
<span class="line">  void (__fastcall *switchItemExpando)(ContainerModel *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *_getContainerOffset)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62" tabindex="-1"><a class="header-anchor" href="#containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62"><span><code>ContainerModel::serverInitItemStackIds::__l5::&lt;lambda_3ceb7baffe147371abb8ef0876d49f62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerModel::serverInitItemStackIds::__l5::&lt;lambda_3ceb7baffe147371abb8ef0876d49f62&gt;</span>
<span class="line">{</span>
<span class="line">  ContainerModel *const __this;</span>
<span class="line">  Container **container;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_aa6cdefd030e9b17f5bf31429c7faed4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_aa6cdefd030e9b17f5bf31429c7faed4&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_aa6cdefd030e9b17f5bf31429c7faed4&gt;::()::__l5::&lt;lambda_fcf8e0e085a275fe1caed95ccdf54f52&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_aa6cdefd030e9b17f5bf31429c7faed4&gt;::()::__l5::&lt;lambda_fcf8e0e085a275fe1caed95ccdf54f52&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *recipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_67395b7a0ffee627249620bb17590dfa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_67395b7a0ffee627249620bb17590dfa&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d23c8612754ab7d5d860be95d2731fb5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d23c8612754ab7d5d860be95d2731fb5&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d23c8612754ab7d5d860be95d2731fb5&gt;::()::__l5::&lt;lambda_1ce802a31af62b630ae423dca09bea4a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d23c8612754ab7d5d860be95d2731fb5&gt;::()::__l5::&lt;lambda_1ce802a31af62b630ae423dca09bea4a&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *recipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4"><span><code>CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d013e68ca17835317031a2aeceb600f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::&lt;lambda_d013e68ca17835317031a2aeceb600f4&gt;</span>
<span class="line">{</span>
<span class="line">  CraftingContainerManagerModel *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c"><span><code>CraftingContainerManagerModel::_filterByInventory::__l5::&lt;lambda_f6b29bd3f04dbc18ccf3d2fd33e47d6c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::_filterByInventory::__l5::&lt;lambda_f6b29bd3f04dbc18ccf3d2fd33e47d6c&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *allRecipesForItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9" tabindex="-1"><a class="header-anchor" href="#craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9"><span><code>CraftingContainerManagerModel::_postInit::__l2::&lt;lambda_f9fa4eb62304d0425ba9cc315955a7b9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftingContainerManagerModel::_postInit::__l2::&lt;lambda_f9fa4eb62304d0425ba9cc315955a7b9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf"><span><code>ClientPlayerEventCoordinator::sendPlayerCreated::__l2::&lt;lambda_cbb646d286c056753ea8bb17996e0baf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerCreated::__l2::&lt;lambda_cbb646d286c056753ea8bb17996e0baf&gt;</span>
<span class="line">{</span>
<span class="line">  LocalPlayer *player;</span>
<span class="line">  const std::string *personaSlot;</span>
<span class="line">  const std::string *classicSkinId;</span>
<span class="line">  bool *usingClassicSkin;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75"><span><code>ClientPlayerEventCoordinator::sendPlayerStopRiding::__l2::&lt;lambda_d603610a604c5d778adc893eadca2b75&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerStopRiding::__l2::&lt;lambda_d603610a604c5d778adc893eadca2b75&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  bool *exitFromRider;</span>
<span class="line">  bool *entityIsBeingDestroyed;</span>
<span class="line">  bool *switchingRides;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4"><span><code>ClientPlayerEventCoordinator::sendPlayerStartRiding::__l2::&lt;lambda_4f6468d189e6f140542d3caf9506a7b4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerStartRiding::__l2::&lt;lambda_4f6468d189e6f140542d3caf9506a7b4&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  Actor *ride;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe"><span><code>ClientPlayerEventCoordinator::sendLocalPlayerRespawn::__l2::&lt;lambda_13e49c72a3fd0c359103c3c3e8752bfe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendLocalPlayerRespawn::__l2::&lt;lambda_13e49c72a3fd0c359103c3c3e8752bfe&gt;</span>
<span class="line">{</span>
<span class="line">  IClientInstance *client;</span>
<span class="line">  LocalPlayer *player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd"><span><code>ClientPlayerEventCoordinator::sendLocalPlayerDeath::__l2::&lt;lambda_957d1afedc287aa655fd9d822a5c66fd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendLocalPlayerDeath::__l2::&lt;lambda_957d1afedc287aa655fd9d822a5c66fd&gt;</span>
<span class="line">{</span>
<span class="line">  IClientInstance *client;</span>
<span class="line">  LocalPlayer *player;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed"><span><code>ClientPlayerEventCoordinator::sendPlayerDestroyedBlock::__l2::&lt;lambda_7de0e8b341ebea8a59785104915845ed&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerDestroyedBlock::__l2::&lt;lambda_7de0e8b341ebea8a59785104915845ed&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const BlockLegacy *blockType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5"><span><code>ClientPlayerEventCoordinator::sendStartDestroyBlock::__l2::&lt;lambda_306705e6c21dd23dbe7a62e736a559a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendStartDestroyBlock::__l2::&lt;lambda_306705e6c21dd23dbe7a62e736a559a5&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69"><span><code>ClientPlayerEventCoordinator::sendPlayerTurn::__l2::&lt;lambda_928c0980f93f358810417fb87f5a4a69&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerTurn::__l2::&lt;lambda_928c0980f93f358810417fb87f5a4a69&gt;</span>
<span class="line">{</span>
<span class="line">  Player *player;</span>
<span class="line">  Vec2 *turnDelta;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3"><span><code>ClientPlayerEventCoordinator::sendPlayerInput::__l2::&lt;lambda_4b6575f26cb031f0d5a8936a9950dab3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator::sendPlayerInput::__l2::&lt;lambda_4b6575f26cb031f0d5a8936a9950dab3&gt;</span>
<span class="line">{</span>
<span class="line">  IPlayerMovementProxy *player;</span>
<span class="line">  MoveInputHandler *input;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7"><span><code>ClientInstanceEventCoordinator::sendStartLeaveGame::__l2::&lt;lambda_8a82e27afbaa5b3ed078861894dbbaf7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendStartLeaveGame::__l2::&lt;lambda_8a82e27afbaa5b3ed078861894dbbaf7&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181"><span><code>ClientInstanceEventCoordinator::sendClientEnteredWorld::__l2::&lt;lambda_aa8bf0031d48e9bb7466024d647d8181&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientEnteredWorld::__l2::&lt;lambda_aa8bf0031d48e9bb7466024d647d8181&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d"><span><code>ClientInstanceEventCoordinator::sendClientSuspend::__l2::&lt;lambda_3a59cd1777c222e9b7d72fcb4828994d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientSuspend::__l2::&lt;lambda_3a59cd1777c222e9b7d72fcb4828994d&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4"><span><code>ClientInstanceEventCoordinator::sendClientUpdateEnd::__l2::&lt;lambda_5547db528708a9f123e39e444b1ce0c4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientUpdateEnd::__l2::&lt;lambda_5547db528708a9f123e39e444b1ce0c4&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6"><span><code>ClientInstanceEventCoordinator::sendClientUpdateStart::__l2::&lt;lambda_7fb2a44e2ccf295a22fc580a9edaa1e6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientUpdateStart::__l2::&lt;lambda_7fb2a44e2ccf295a22fc580a9edaa1e6&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78"><span><code>ClientInstanceEventCoordinator::sendClientCreatedLevel::__l2::&lt;lambda_82e58d8e24e455a327e677fd8c43ed78&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientCreatedLevel::__l2::&lt;lambda_82e58d8e24e455a327e677fd8c43ed78&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">  Level *level;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc"><span><code>ClientInstanceEventCoordinator::sendClientMinecraftInitialized::__l2::&lt;lambda_ded5d68558497ba91b283686b43c5afc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientMinecraftInitialized::__l2::&lt;lambda_ded5d68558497ba91b283686b43c5afc&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">  Minecraft *minecraft;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250"><span><code>ClientInstanceEventCoordinator::sendClientInitializeEnd::__l2::&lt;lambda_fae6b47936c8bd0d3d88c82eb8ab6250&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientInitializeEnd::__l2::&lt;lambda_fae6b47936c8bd0d3d88c82eb8ab6250&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7"><span><code>ClientInstanceEventCoordinator::sendClientInitializeStart::__l2::&lt;lambda_86c15645a56632f21ecc7d1e02c49df7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator::sendClientInitializeStart::__l2::&lt;lambda_86c15645a56632f21ecc7d1e02c49df7&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *instance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8" tabindex="-1"><a class="header-anchor" href="#clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8"><span><code>ClientHitDetectCoordinator::sendContinuousPickHitResult::__l2::&lt;lambda_4cf05be3c943c8f3543e21b9a5f563b8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectCoordinator::sendContinuousPickHitResult::__l2::&lt;lambda_4cf05be3c943c8f3543e21b9a5f563b8&gt;</span>
<span class="line">{</span>
<span class="line">  HitResult *hitResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069" tabindex="-1"><a class="header-anchor" href="#clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069"><span><code>ClientHitDetectCoordinator::sendChangedPickHitResult::__l2::&lt;lambda_b21f51f0655eacdc77738b23dbe4a069&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectCoordinator::sendChangedPickHitResult::__l2::&lt;lambda_b21f51f0655eacdc77738b23dbe4a069&gt;</span>
<span class="line">{</span>
<span class="line">  HitResult *hitResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428" tabindex="-1"><a class="header-anchor" href="#clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428"><span><code>ClientHitDetectCoordinator::sendContinuousHitResult::__l2::&lt;lambda_c2529579edb7345e3bf2ed9ad53c8428&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectCoordinator::sendContinuousHitResult::__l2::&lt;lambda_c2529579edb7345e3bf2ed9ad53c8428&gt;</span>
<span class="line">{</span>
<span class="line">  HitResult *hitResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9" tabindex="-1"><a class="header-anchor" href="#clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9"><span><code>ClientHitDetectCoordinator::sendChangedHitResult::__l2::&lt;lambda_3d6978abe3b73298ad5ac47b140c6cb9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectCoordinator::sendChangedHitResult::__l2::&lt;lambda_3d6978abe3b73298ad5ac47b140c6cb9&gt;</span>
<span class="line">{</span>
<span class="line">  HitResult *hitResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermenu" tabindex="-1"><a class="header-anchor" href="#containermenu"><span><code>ContainerMenu</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContainerMenu : BaseContainerMenu</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID mEntityUniqueId;</span>
<span class="line">  BlockPos mPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermenu-vtbl" tabindex="-1"><a class="header-anchor" href="#containermenu-vtbl"><span><code>ContainerMenu_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerMenu_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *removeSlot)(BaseContainerMenu *this, int, int);</span>
<span class="line">  bool (__fastcall *isSlotDirty)(BaseContainerMenu *this, int);</span>
<span class="line">  bool (__fastcall *isResultSlot)(BaseContainerMenu *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(BaseContainerMenu *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlenonimplemented-deprecatedasktylaing" tabindex="-1"><a class="header-anchor" href="#crafthandlenonimplemented-deprecatedasktylaing"><span><code>CraftHandleNonImplemented_DEPRECATEDASKTYLAING</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandleNonImplemented_DEPRECATEDASKTYLAING : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlenonimplemented-deprecatedasktylaing-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlenonimplemented-deprecatedasktylaing-vtbl"><span><code>CraftHandleNonImplemented_DEPRECATEDASKTYLAING_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandleNonImplemented_DEPRECATEDASKTYLAING_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlercrafting" tabindex="-1"><a class="header-anchor" href="#crafthandlercrafting"><span><code>CraftHandlerCrafting</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CraftHandlerCrafting : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  bool mWorkbench;</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlercrafting-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlercrafting-vtbl"><span><code>CraftHandlerCrafting_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerCrafting_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerenchant" tabindex="-1"><a class="header-anchor" href="#crafthandlerenchant"><span><code>CraftHandlerEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CraftHandlerEnchant : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  int mEnchantCost;</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">  bool mRecalculateOptions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlerenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlerenchant-vtbl"><span><code>CraftHandlerEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlertrade" tabindex="-1"><a class="header-anchor" href="#crafthandlertrade"><span><code>CraftHandlerTrade</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CraftHandlerTrade : CraftHandlerBase</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenContext *mScreenContext;</span>
<span class="line">  bool mIsTrade2;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crafthandlertrade-vtbl" tabindex="-1"><a class="header-anchor" href="#crafthandlertrade-vtbl"><span><code>CraftHandlerTrade_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftHandlerTrade_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);</span>
<span class="line">  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);</span>
<span class="line">  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);</span>
<span class="line">  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carrotonastickitem" tabindex="-1"><a class="header-anchor" href="#carrotonastickitem"><span><code>CarrotOnAStickItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CarrotOnAStickItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemistryblockitem" tabindex="-1"><a class="header-anchor" href="#chemistryblockitem"><span><code>ChemistryBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChemistryBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemistryauxdatablockitem" tabindex="-1"><a class="header-anchor" href="#chemistryauxdatablockitem"><span><code>ChemistryAuxDataBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChemistryAuxDataBlockItem : AuxDataBlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coralfanblockitem" tabindex="-1"><a class="header-anchor" href="#coralfanblockitem"><span><code>CoralFanBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CoralFanBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c" tabindex="-1"><a class="header-anchor" href="#coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c"><span><code>CoralFanBlockItem::_useOn::__l72::&lt;lambda_1e855bb0deac619b44ec09dd5754848c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CoralFanBlockItem::_useOn::__l72::&lt;lambda_1e855bb0deac619b44ec09dd5754848c&gt;</span>
<span class="line">{</span>
<span class="line">  BlockPos *pos;</span>
<span class="line">  const Block **finalBlock;</span>
<span class="line">  const CompoundTag *dataID;</span>
<span class="line">  Actor *entity;</span>
<span class="line">  unsigned __int8 *face;</span>
<span class="line">  bool *canceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemistryrecipes" tabindex="-1"><a class="header-anchor" href="#chemistryrecipes"><span><code>ChemistryRecipes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChemistryRecipes</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coloredtorchblock" tabindex="-1"><a class="header-anchor" href="#coloredtorchblock"><span><code>ColoredTorchBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ColoredTorchBlock : TorchBlock</span>
<span class="line">{</span>
<span class="line">  ColoredTorchColor mBaseColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coloredtorchblock-vtbl" tabindex="-1"><a class="header-anchor" href="#coloredtorchblock-vtbl"><span><code>ColoredTorchBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ColoredTorchBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cocoablock" tabindex="-1"><a class="header-anchor" href="#cocoablock"><span><code>CocoaBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CocoaBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cocoablock-vtbl" tabindex="-1"><a class="header-anchor" href="#cocoablock-vtbl"><span><code>CocoaBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CocoaBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crossbowenchant" tabindex="-1"><a class="header-anchor" href="#crossbowenchant"><span><code>CrossbowEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CrossbowEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crossbowenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#crossbowenchant-vtbl"><span><code>CrossbowEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CrossbowEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cursebindingenchant" tabindex="-1"><a class="header-anchor" href="#cursebindingenchant"><span><code>CurseBindingEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CurseBindingEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cursebindingenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#cursebindingenchant-vtbl"><span><code>CurseBindingEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CurseBindingEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cursevanishingenchant" tabindex="-1"><a class="header-anchor" href="#cursevanishingenchant"><span><code>CurseVanishingEnchant</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CurseVanishingEnchant : Enchant</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cursevanishingenchant-vtbl" tabindex="-1"><a class="header-anchor" href="#cursevanishingenchant-vtbl"><span><code>CurseVanishingEnchant_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CurseVanishingEnchant_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Enchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);</span>
<span class="line">  int (__fastcall *getMinCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMaxCost)(Enchant *this, int);</span>
<span class="line">  int (__fastcall *getMinLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getMaxLevel)(Enchant *this);</span>
<span class="line">  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);</span>
<span class="line">  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);</span>
<span class="line">  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);</span>
<span class="line">  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);</span>
<span class="line">  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isProtectionEnchant)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isTreasureOnly)(Enchant *this);</span>
<span class="line">  bool (__fastcall *isDiscoverable)(Enchant *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraitem" tabindex="-1"><a class="header-anchor" href="#cameraitem"><span><code>CameraItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraItem : Item</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clothblockitem" tabindex="-1"><a class="header-anchor" href="#clothblockitem"><span><code>ClothBlockItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClothBlockItem : BlockItem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coalitem" tabindex="-1"><a class="header-anchor" href="#coalitem"><span><code>CoalItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CoalItem : Item</span>
<span class="line">{</span>
<span class="line">  TextureUVCoordinateSet m_charoalUV;</span>
<span class="line">  CoalItem::Type mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemistrytableblock" tabindex="-1"><a class="header-anchor" href="#chemistrytableblock"><span><code>ChemistryTableBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChemistryTableBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemistrytableblock-vtbl" tabindex="-1"><a class="header-anchor" href="#chemistrytableblock-vtbl"><span><code>ChemistryTableBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChemistryTableBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customskycolorattributes" tabindex="-1"><a class="header-anchor" href="#customskycolorattributes"><span><code>CustomSkyColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomSkyColorAttributes</span>
<span class="line">{</span>
<span class="line">  mce::Color mSkyColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customfoliagecolorattributes" tabindex="-1"><a class="header-anchor" href="#customfoliagecolorattributes"><span><code>CustomFoliageColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomFoliageColorAttributes</span>
<span class="line">{</span>
<span class="line">  int mFoliageColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="colorpaletteattributes" tabindex="-1"><a class="header-anchor" href="#colorpaletteattributes"><span><code>ColorPaletteAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct ColorPaletteAttributes</span>
<span class="line">{</span>
<span class="line">  _BYTE mPaletteName[8];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custommapfoliagecolorattributes" tabindex="-1"><a class="header-anchor" href="#custommapfoliagecolorattributes"><span><code>CustomMapFoliageColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomMapFoliageColorAttributes</span>
<span class="line">{</span>
<span class="line">  int mMapFoliageColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customgrasscolorattributes" tabindex="-1"><a class="header-anchor" href="#customgrasscolorattributes"><span><code>CustomGrassColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomGrassColorAttributes</span>
<span class="line">{</span>
<span class="line">  int mGrassColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custommapgrasscolorattributes" tabindex="-1"><a class="header-anchor" href="#custommapgrasscolorattributes"><span><code>CustomMapGrassColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomMapGrassColorAttributes</span>
<span class="line">{</span>
<span class="line">  int mMapGrassColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customdebugmapcolorattributes" tabindex="-1"><a class="header-anchor" href="#customdebugmapcolorattributes"><span><code>CustomDebugMapColorAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomDebugMapColorAttributes</span>
<span class="line">{</span>
<span class="line">  int mDebugMapColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customdebugmapcoloroddattributes" tabindex="-1"><a class="header-anchor" href="#customdebugmapcoloroddattributes"><span><code>CustomDebugMapColorOddAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomDebugMapColorOddAttributes</span>
<span class="line">{</span>
<span class="line">  int mDebugMapOddColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customtemperaturecategoryattributes" tabindex="-1"><a class="header-anchor" href="#customtemperaturecategoryattributes"><span><code>CustomTemperatureCategoryAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomTemperatureCategoryAttributes</span>
<span class="line">{</span>
<span class="line">  Biome::BiomeTempCategory mTemperatureCategory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customhumidityattributes" tabindex="-1"><a class="header-anchor" href="#customhumidityattributes"><span><code>CustomHumidityAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CustomHumidityAttributes</span>
<span class="line">{</span>
<span class="line">  bool mIsHumid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorblockactor" tabindex="-1"><a class="header-anchor" href="#comparatorblockactor"><span><code>ComparatorBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ComparatorBlockActor : BlockActor</span>
<span class="line">{</span>
<span class="line">  int mOutput;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#comparatorblockactor-vtbl"><span><code>ComparatorBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComparatorBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">  int (__fastcall *getOutputSignal)(ComparatorBlockActor *this);</span>
<span class="line">  void (__fastcall *setOutputSignal)(ComparatorBlockActor *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chestblock" tabindex="-1"><a class="header-anchor" href="#chestblock"><span><code>ChestBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ChestBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  ChestBlock::ChestType mType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chestblock-vtbl" tabindex="-1"><a class="header-anchor" href="#chestblock-vtbl"><span><code>ChestBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChestBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="capacitorcomponent" tabindex="-1"><a class="header-anchor" href="#capacitorcomponent"><span><code>CapacitorComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CapacitorComponent : ProducerComponent</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="capacitorcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#capacitorcomponent-vtbl"><span><code>CapacitorComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CapacitorComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getStrength)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getDirection)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);</span>
<span class="line">  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);</span>
<span class="line">  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);</span>
<span class="line">  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);</span>
<span class="line">  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);</span>
<span class="line">  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getPoweroutDirection)(CapacitorComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorcapacitor" tabindex="-1"><a class="header-anchor" href="#comparatorcapacitor"><span><code>ComparatorCapacitor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComparatorCapacitor : CapacitorComponent</span>
<span class="line">{</span>
<span class="line">  int mRearAnalogStrength;</span>
<span class="line">  int mSideAnalogStrengthRight;</span>
<span class="line">  int mSideAnalogStrengthLeft;</span>
<span class="line">  int mOldStrength;</span>
<span class="line">  ComparatorCapacitor::Mode mMode;</span>
<span class="line">  int mRearStrength;</span>
<span class="line">  int mSideStrengths;</span>
<span class="line">  bool mHasAnalogBeenSet;</span>
<span class="line">  CircuitComponentList mSideComponents;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorcapacitor-vtbl" tabindex="-1"><a class="header-anchor" href="#comparatorcapacitor-vtbl"><span><code>ComparatorCapacitor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComparatorCapacitor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getStrength)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getDirection)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);</span>
<span class="line">  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);</span>
<span class="line">  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);</span>
<span class="line">  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);</span>
<span class="line">  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);</span>
<span class="line">  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getPoweroutDirection)(CapacitorComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658" tabindex="-1"><a class="header-anchor" href="#conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658"><span><code>ConduitBlockActor::_applyEffects::__l8::&lt;lambda_b0b76dacb6f6d005bd21b9d622471658&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConduitBlockActor::_applyEffects::__l8::&lt;lambda_b0b76dacb6f6d005bd21b9d622471658&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 *posNautilus;</span>
<span class="line">  const float *halfExtent;</span>
<span class="line">  const MobEffectInstance *effectInst;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7" tabindex="-1"><a class="header-anchor" href="#conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7"><span><code>ConduitBlockActor::_checkShape::__l71::&lt;lambda_b28f6ce02576140d0e92aeec4d4fffc7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConduitBlockActor::_checkShape::__l71::&lt;lambda_b28f6ce02576140d0e92aeec4d4fffc7&gt;</span>
<span class="line">{</span>
<span class="line">  const Vec3 *posNautilus;</span>
<span class="line">  const float *halfExtent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51" tabindex="-1"><a class="header-anchor" href="#chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51"><span><code>ChestBlockActor::serverInitItemStackIds::__l40::&lt;lambda_2e8d0c4f468d46e7194921aff72bdf51&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChestBlockActor::serverInitItemStackIds::__l40::&lt;lambda_2e8d0c4f468d46e7194921aff72bdf51&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(int,ItemStack const &amp;)&gt; *onNetIdChanged;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumercomponent" tabindex="-1"><a class="header-anchor" href="#consumercomponent"><span><code>ConsumerComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) ConsumerComponent : BaseCircuitComponent</span>
<span class="line">{</span>
<span class="line">  bool mSecondaryPowered;</span>
<span class="line">  bool mPropagatePower;</span>
<span class="line">  bool mPromotedToProducer;</span>
<span class="line">  bool mAcceptHalfPulse;</span>
<span class="line">  bool mAcceptSameDirection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consumercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#consumercomponent-vtbl"><span><code>ConsumerComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConsumerComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getStrength)(BaseCircuitComponent *this);</span>
<span class="line">  int (__fastcall *getDirection)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);</span>
<span class="line">  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);</span>
<span class="line">  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);</span>
<span class="line">  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);</span>
<span class="line">  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);</span>
<span class="line">  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);</span>
<span class="line">  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);</span>
<span class="line">  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);</span>
<span class="line">  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectioncomponentdescription" tabindex="-1"><a class="header-anchor" href="#connectioncomponentdescription"><span><code>ConnectionComponentDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConnectionComponentDescription : BlockComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::string&gt; mConnection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectioncomponentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#connectioncomponentdescription-vtbl"><span><code>ConnectionComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConnectionComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);</span>
<span class="line">  const std::string *(__fastcall *getName)(BlockComponentDescription *this);</span>
<span class="line">  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);</span>
<span class="line">  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr&lt;JsonUtil::JsonSchemaObjectNode&lt;JsonUtil::EmptyClass,BlockComponentGroupDescription&gt; &gt; *, const BlockComponentFactory *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cactusblock" tabindex="-1"><a class="header-anchor" href="#cactusblock"><span><code>CactusBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CactusBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cactusblock-vtbl" tabindex="-1"><a class="header-anchor" href="#cactusblock-vtbl"><span><code>CactusBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CactusBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cakeblock" tabindex="-1"><a class="header-anchor" href="#cakeblock"><span><code>CakeBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CakeBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cakeblock-vtbl" tabindex="-1"><a class="header-anchor" href="#cakeblock-vtbl"><span><code>CakeBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CakeBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerablock" tabindex="-1"><a class="header-anchor" href="#camerablock"><span><code>CameraBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerablock-vtbl" tabindex="-1"><a class="header-anchor" href="#camerablock-vtbl"><span><code>CameraBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carrotblock" tabindex="-1"><a class="header-anchor" href="#carrotblock"><span><code>CarrotBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CarrotBlock : CropBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carrotblock-vtbl" tabindex="-1"><a class="header-anchor" href="#carrotblock-vtbl"><span><code>CarrotBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CarrotBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseSeed)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  const ItemInstance *(__fastcall *getBaseCrop)(CropBlock *this, const ItemInstance *result);</span>
<span class="line">  int (__fastcall *getSeedNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">  int (__fastcall *getCropNum)(CropBlock *this, Random *, int, int, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cartographytableblock" tabindex="-1"><a class="header-anchor" href="#cartographytableblock"><span><code>CartographyTableBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CartographyTableBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cartographytableblock-vtbl" tabindex="-1"><a class="header-anchor" href="#cartographytableblock-vtbl"><span><code>CartographyTableBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CartographyTableBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemicalheatblock" tabindex="-1"><a class="header-anchor" href="#chemicalheatblock"><span><code>ChemicalHeatBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChemicalHeatBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chemicalheatblock-vtbl" tabindex="-1"><a class="header-anchor" href="#chemicalheatblock-vtbl"><span><code>ChemicalHeatBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChemicalHeatBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clayblock" tabindex="-1"><a class="header-anchor" href="#clayblock"><span><code>ClayBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClayBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clayblock-vtbl" tabindex="-1"><a class="header-anchor" href="#clayblock-vtbl"><span><code>ClayBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClayBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clothblock" tabindex="-1"><a class="header-anchor" href="#clothblock"><span><code>ClothBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClothBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clothblock-vtbl" tabindex="-1"><a class="header-anchor" href="#clothblock-vtbl"><span><code>ClothBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClothBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coloredblock" tabindex="-1"><a class="header-anchor" href="#coloredblock"><span><code>ColoredBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ColoredBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coloredblock-vtbl" tabindex="-1"><a class="header-anchor" href="#coloredblock-vtbl"><span><code>ColoredBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ColoredBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2" tabindex="-1"><a class="header-anchor" href="#commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2"><span><code>CommandBlock::updateBlock::__l8::&lt;lambda_6680b22252abc8a807bb3d1916695fb2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandBlock::updateBlock::__l8::&lt;lambda_6680b22252abc8a807bb3d1916695fb2&gt;</span>
<span class="line">{</span>
<span class="line">  gsl::not_null&lt;Block const *&gt; *newBlock;</span>
<span class="line">  const Block *currentBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorblock" tabindex="-1"><a class="header-anchor" href="#comparatorblock"><span><code>ComparatorBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ComparatorBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">  bool mOn;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparatorblock-vtbl" tabindex="-1"><a class="header-anchor" href="#comparatorblock-vtbl"><span><code>ComparatorBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComparatorBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concreteblock" tabindex="-1"><a class="header-anchor" href="#concreteblock"><span><code>ConcreteBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConcreteBlock : BlockLegacy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concreteblock-vtbl" tabindex="-1"><a class="header-anchor" href="#concreteblock-vtbl"><span><code>ConcreteBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConcreteBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concretepowderblock" tabindex="-1"><a class="header-anchor" href="#concretepowderblock"><span><code>ConcretePowderBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConcretePowderBlock : HeavyBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concretepowderblock-vtbl" tabindex="-1"><a class="header-anchor" href="#concretepowderblock-vtbl"><span><code>ConcretePowderBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConcretePowderBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  mce::Color *(__fastcall *getDustColor)(HeavyBlock *this, mce::Color *result, const Block *);</span>
<span class="line">  std::string *(__fastcall *getDustParticleName)(HeavyBlock *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *falling)(HeavyBlock *this);</span>
<span class="line">  void (__fastcall *onLand)(HeavyBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isFreeToFall)(HeavyBlock *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *startFalling)(HeavyBlock *this, BlockSource *, const BlockPos *, const Block *, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conduitblock" tabindex="-1"><a class="header-anchor" href="#conduitblock"><span><code>ConduitBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConduitBlock : ActorBlock</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conduitblock-vtbl" tabindex="-1"><a class="header-anchor" href="#conduitblock-vtbl"><span><code>ConduitBlock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConduitBlock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockLegacy)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  std::shared_ptr&lt;BlockActor&gt; *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr&lt;BlockActor&gt; *result, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);</span>
<span class="line">  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);</span>
<span class="line">  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);</span>
<span class="line">  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *);</span>
<span class="line">  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);</span>
<span class="line">  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector&lt;AABB&gt; *, Actor *);</span>
<span class="line">  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);</span>
<span class="line">  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);</span>
<span class="line">  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function&lt;Block const &amp; __cdecl(BlockPos const &amp;)&gt; *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);</span>
<span class="line">  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);</span>
<span class="line">  bool (__fastcall *isStemBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isContainerBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isWallBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isStairBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isDoorBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isRailBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isButtonBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isSignalSource)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);</span>
<span class="line">  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *canContainLiquid)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);</span>
<span class="line">  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);</span>
<span class="line">  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);</span>
<span class="line">  float (__fastcall *getThickness)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);</span>
<span class="line">  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);</span>
<span class="line">  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);</span>
<span class="line">  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);</span>
<span class="line">  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);</span>
<span class="line">  bool (__fastcall *isBounceBlock)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);</span>
<span class="line">  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);</span>
<span class="line">  bool (__fastcall *mayPick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);</span>
<span class="line">  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);</span>
<span class="line">  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);</span>
<span class="line">  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);</span>
<span class="line">  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector&lt;Item const *&gt; *, float, int, bool);</span>
<span class="line">  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);</span>
<span class="line">  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);</span>
<span class="line">  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);</span>
<span class="line">  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);</span>
<span class="line">  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);</span>
<span class="line">  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);</span>
<span class="line">  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);</span>
<span class="line">  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);</span>
<span class="line">  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);</span>
<span class="line">  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getIconYOffset)(BlockLegacy *this);</span>
<span class="line">  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);</span>
<span class="line">  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  int (__fastcall *getColor)(BlockLegacy *this, const Block *);</span>
<span class="line">  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);</span>
<span class="line">  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);</span>
<span class="line">  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);</span>
<span class="line">  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);</span>
<span class="line">  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);</span>
<span class="line">  bool (__fastcall *canSpawnOn)(BlockLegacy *this);</span>
<span class="line">  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);</span>
<span class="line">  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);</span>
<span class="line">  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  BlockLegacy *(__fastcall *init)(BlockLegacy *this);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);</span>
<span class="line">  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);</span>
<span class="line">  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);</span>
<span class="line">  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);</span>
<span class="line">  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);</span>
<span class="line">  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);</span>
<span class="line">  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);</span>
<span class="line">  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);</span>
<span class="line">  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);</span>
<span class="line">  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);</span>
<span class="line">  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);</span>
<span class="line">  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);</span>
<span class="line">  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);</span>
<span class="line">  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);</span>
<span class="line">  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);</span>
<span class="line">  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);</span>
<span class="line">  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);</span>
<span class="line">  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);</span>
<span class="line">  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);</span>
<span class="line">  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);</span>
<span class="line">  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);</span>
<span class="line">  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);</span>
<span class="line">  bool (__fastcall *isCropBlock)(BlockLegacy *this);</span>
<span class="line">  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector&lt;std::pair&lt;std::string const ,std::string const &gt;&gt; *, RenderParams *);</span>
<span class="line">  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1071),i=[c];function t(o,d){return a(),s("div",null,i)}const p=e(l,[["render",t],["__file","C~2.html.vue"]]),m=JSON.parse(`{"path":"/1.16.201/structure/C~2.html","title":"C~2","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Core::SharedMemoryTracker::SharedMemoryTrackerImpl<mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::VertexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::VertexBufferHandleTypeKey,unsigned __int64> > >'::2'::Container>_vtbl","slug":"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl","link":"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl","children":[]},{"level":3,"title":"Core::SharedMemoryTracker::SharedMemoryTrackerImpl<mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::2'::Container>","slug":"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container","link":"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container","children":[]},{"level":3,"title":"Core::SharedMemoryTracker::SharedMemoryTrackerImpl<mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::2'::Container>_vtbl","slug":"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl","link":"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::PreparedBlits>","slug":"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits","link":"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>","slug":"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","link":"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::BlitableEntity>","slug":"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity","link":"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>","slug":"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","link":"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Sortable,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>","slug":"core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","link":"#core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<>","slug":"cg-taskorder-dependencybuilder","link":"#cg-taskorder-dependencybuilder","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext>","slug":"cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext","link":"#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<bgfx::RtLightInfo,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<unsigned int,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"Core::RingAllocatorContainer<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >::startNewScope::__l2::<lambda_50d2638b4de85edd403aa2ef73ce482e>","slug":"core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e","link":"#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e","children":[]},{"level":3,"title":"ChunkRenderObjectCollection::addToChunkQueue::__l2::<lambda_fbe26c8e4f7c9bae2f810aaf7646b609>","slug":"chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609","link":"#chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609","children":[]},{"level":3,"title":"ConditionalBandwidthOptimizationDefinition","slug":"conditionalbandwidthoptimizationdefinition","link":"#conditionalbandwidthoptimizationdefinition","children":[]},{"level":3,"title":"ClientReplayStatePolicy","slug":"clientreplaystatepolicy","link":"#clientreplaystatepolicy","children":[]},{"level":3,"title":"ClientReplayStatePolicy_vtbl","slug":"clientreplaystatepolicy-vtbl","link":"#clientreplaystatepolicy-vtbl","children":[]},{"level":3,"title":"CameraShakeSystem","slug":"camerashakesystem","link":"#camerashakesystem","children":[]},{"level":3,"title":"CameraShakeSystem_vtbl","slug":"camerashakesystem-vtbl","link":"#camerashakesystem-vtbl","children":[]},{"level":3,"title":"CommandSelector<Player>","slug":"commandselector-player","link":"#commandselector-player","children":[]},{"level":3,"title":"CameraShakeCommand","slug":"camerashakecommand","link":"#camerashakecommand","children":[]},{"level":3,"title":"CameraShakeCommand_vtbl","slug":"camerashakecommand-vtbl","link":"#camerashakecommand-vtbl","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum CameraShakeCommand::CameraShakeAction>","slug":"commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction","link":"#commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum CameraShakeType>","slug":"commandregistry-defaultidconverter-enum-camerashaketype","link":"#commandregistry-defaultidconverter-enum-camerashaketype","children":[]},{"level":3,"title":"ClearSpawnPointCommand","slug":"clearspawnpointcommand","link":"#clearspawnpointcommand","children":[]},{"level":3,"title":"ClearSpawnPointCommand_vtbl","slug":"clearspawnpointcommand-vtbl","link":"#clearspawnpointcommand-vtbl","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum EventCommand::EventAction>","slug":"commandregistry-defaultidconverter-enum-eventcommand-eventaction","link":"#commandregistry-defaultidconverter-enum-eventcommand-eventaction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum FogCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-fogcommand-mode","link":"#commandregistry-defaultidconverter-enum-fogcommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum MusicCommand::Action>","slug":"commandregistry-defaultidconverter-enum-musiccommand-action","link":"#commandregistry-defaultidconverter-enum-musiccommand-action","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum MusicRepeatMode>","slug":"commandregistry-defaultidconverter-enum-musicrepeatmode","link":"#commandregistry-defaultidconverter-enum-musicrepeatmode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum RideCommand::RideAction>","slug":"commandregistry-defaultidconverter-enum-ridecommand-rideaction","link":"#commandregistry-defaultidconverter-enum-ridecommand-rideaction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum RideCommand::RideFillType>","slug":"commandregistry-defaultidconverter-enum-ridecommand-ridefilltype","link":"#commandregistry-defaultidconverter-enum-ridecommand-ridefilltype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum RideCommand::TeleportRules>","slug":"commandregistry-defaultidconverter-enum-ridecommand-teleportrules","link":"#commandregistry-defaultidconverter-enum-ridecommand-teleportrules","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum RideCommand::RideRules>","slug":"commandregistry-defaultidconverter-enum-ridecommand-riderules","link":"#commandregistry-defaultidconverter-enum-ridecommand-riderules","children":[]},{"level":3,"title":"CommandFilePath","slug":"commandfilepath","link":"#commandfilepath","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ScheduleCommand::ScheduleAction>","slug":"commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction","link":"#commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ScheduleCommand::OnAreaLoadedAction>","slug":"commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction","link":"#commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum AreaType>","slug":"commandregistry-defaultidconverter-enum-areatype","link":"#commandregistry-defaultidconverter-enum-areatype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum StructureBlockType>","slug":"commandregistry-defaultidconverter-enum-structureblocktype","link":"#commandregistry-defaultidconverter-enum-structureblocktype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum StructureRedstoneSaveMode>","slug":"commandregistry-defaultidconverter-enum-structureredstonesavemode","link":"#commandregistry-defaultidconverter-enum-structureredstonesavemode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum Mirror>","slug":"commandregistry-defaultidconverter-enum-mirror","link":"#commandregistry-defaultidconverter-enum-mirror","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum AnimationMode>","slug":"commandregistry-defaultidconverter-enum-animationmode","link":"#commandregistry-defaultidconverter-enum-animationmode","children":[]},{"level":3,"title":"CommandResponse","slug":"commandresponse","link":"#commandresponse","children":[]},{"level":3,"title":"CommandResponse_vtbl","slug":"commandresponse-vtbl","link":"#commandresponse-vtbl","children":[]},{"level":3,"title":"CommonGameModeMessenger","slug":"commongamemodemessenger","link":"#commongamemodemessenger","children":[]},{"level":3,"title":"ClientGameModeMessenger","slug":"clientgamemodemessenger","link":"#clientgamemodemessenger","children":[]},{"level":3,"title":"CommonGameModeMessenger::createBlockBreakCaptureScope::__l2::<lambda_66c7794cb235487fc6a2b9c057229d38>","slug":"commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38","link":"#commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38","children":[]},{"level":3,"title":"ClientGameModeTimer","slug":"clientgamemodetimer","link":"#clientgamemodetimer","children":[]},{"level":3,"title":"CraftHandlerBase","slug":"crafthandlerbase","link":"#crafthandlerbase","children":[]},{"level":3,"title":"CraftHandlerBase_vtbl","slug":"crafthandlerbase-vtbl","link":"#crafthandlerbase-vtbl","children":[]},{"level":3,"title":"CraftHandlerBase::ExpectedSlotConsume","slug":"crafthandlerbase-expectedslotconsume","link":"#crafthandlerbase-expectedslotconsume","children":[]},{"level":3,"title":"CraftHandlerBase::AllowedAnywhereConsume","slug":"crafthandlerbase-allowedanywhereconsume","link":"#crafthandlerbase-allowedanywhereconsume","children":[]},{"level":3,"title":"CraftHandlerAnvil","slug":"crafthandleranvil","link":"#crafthandleranvil","children":[]},{"level":3,"title":"CraftHandlerAnvil_vtbl","slug":"crafthandleranvil-vtbl","link":"#crafthandleranvil-vtbl","children":[]},{"level":3,"title":"CraftHandlerMap","slug":"crafthandlermap","link":"#crafthandlermap","children":[]},{"level":3,"title":"CraftHandlerMap_vtbl","slug":"crafthandlermap-vtbl","link":"#crafthandlermap-vtbl","children":[]},{"level":3,"title":"CerealItemComponentFactory::Constructor","slug":"cerealitemcomponentfactory-constructor","link":"#cerealitemcomponentfactory-constructor","children":[]},{"level":3,"title":"CerealItemComponentFactory","slug":"cerealitemcomponentfactory","link":"#cerealitemcomponentfactory","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_06719c6a2c3b5d51959bc3a07ea538ca>","slug":"componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca","link":"#componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_2f2f706bcb3a0bf3e5f2a3c955f48295>","slug":"componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295","link":"#componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_5c6573b26e033d881519e3b9f4f05715>","slug":"componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715","link":"#componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l6::<lambda_ddbcbce84c840368bbdc237120389e41>","slug":"componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41","link":"#componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_d595495a43e94c05236da4b389810349>","slug":"componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349","link":"#componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_38eb25fea691ab1406c1acf589edd873>","slug":"componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873","link":"#componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_175802e7894a92641c534a19c33e6c10>","slug":"componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10","link":"#componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_02aae47743cbb042add0642122d8874f>","slug":"componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f","link":"#componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_691fbb34a5d50a8ceff68ca6921f75b0>","slug":"componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0","link":"#componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_f4f9b1f7bb6b4cff9a073b26ea933c62>","slug":"componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62","link":"#componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_7f04d6eadcd817e72270603a73970837>","slug":"componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837","link":"#componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_63390f89c85397294c20dc5febc0fd07>","slug":"componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07","link":"#componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l5::<lambda_45ba7706ae68db39b00540d8e8b07001>","slug":"componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001","link":"#componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l5::<lambda_47d4656d06b81b5d646e9f09e5a91cca>","slug":"componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca","link":"#componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_18ba5b6c5d2ef7335fd7c0944ae1663c>","slug":"componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c","link":"#componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_68857b4446a180a9dd9377d70bb1decc>","slug":"componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc","link":"#componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_f988d10cfe0adfd929abf86d1ed55814>","slug":"componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814","link":"#componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_83c5c68eb639a0276c8bdd2cc39e4b85>","slug":"componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85","link":"#componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_595f5c6129412d68260c12d9dc061a20>","slug":"componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20","link":"#componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_bed6047fd0b105f88228decca5833859>","slug":"componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859","link":"#componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_32c11f6cbe6cbb01b97d5d3b7fb8f38d>","slug":"componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d","link":"#componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_dcf311d7ddfc638357cf584c349eb24b>","slug":"componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b","link":"#componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_b15cfde9356f80666ac379f076c67168>","slug":"componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168","link":"#componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_39c57b403cacb9c9123dea5d9ec345ea>","slug":"componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea","link":"#componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l4::<lambda_9e5269047ca309f62857c34b50ac0adc>","slug":"componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc","link":"#componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l3::<lambda_cd737d31e8e90d818a7f3f7365055e81>","slug":"componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81","link":"#componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81","children":[]},{"level":3,"title":"ComponentItem::_buildItemsFileSchema::__l3::<lambda_90a6baf7857883a194ebe77b1cedf1a3>","slug":"componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3","link":"#componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_274ac7a05a64284cd76bbdba2c7f8818>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_f2b378848c598de273abc9c9fc78bd8a>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_068c29d7af14898cc0fe025dba9cd80d>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_13e46b31aebc5784575abe801e3af68a>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_df3e8be3050a2aaa62dd5a501ac25eab>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_a33d55fb459f2ffc1340888587c29201>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_ab71e30ee4148f3f451eec67bf750a2a>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_674fedb7f8f19d87e68157e57807c141>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_fbfcad4341a57d7201e8e716822f68fd>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_180f5e3485a6ae91a471e500c4b06386>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_0466c3aa4f74f39cd825466c6b6232bb>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_d1ecf083316e883ec51605168a7eebd9>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_7d6ae913546175ea9e8c64323acc6b29>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_18868e8156d02ca320cabd997fadca4d>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_18dbba7b3937e5501854c33ea46448cd>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_978b09f9bb260f3641dbc8ad330d16a6>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_32c4955083c8066406161e037bbdcabf>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_219706fd4ead95d36c08ec2e1a4b52d4>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_7ec79a3048194f193f9f4c10479687d3>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_e796f74887e92174f98aa55bfcc84fcc>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_df89224ccc15be7f98b4780aadd49e98>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_887e0dd9da64b3537ec167baeeba1337>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_e7f83d2a8adfecc1c5879c15f8835d5a>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_90ba4857f30320eb34346e7df3764bd9>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_7f8ddde45b73dfa86374548a1a80a997>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_3522edb357a5909e1bb6b517ae8cb533>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_8a353af2dd3dc6319cbbc0c7b0a3766b>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_9b7c706e28804ad377d0ee8443947800>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_ac4ba6fc863681825fa4db0d35c671d7>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_aba81f1d54d3bb08fee2ed02ad6fffae>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_4186695952b7d78e695ff84e2652712d>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_daa59455bd683dd97d2f167f0ad58c7b>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_22c8de57e442c7d89b27727ba0838b01>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_6816e2193b5ae4f55d9eb32466d75189>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_e4abdff3da922cda48729af424f6f86f>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_2beea1812a0d9e26506ca1bb96d659ef>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_46270c3b5dc354e70ded28050f2ae6b3>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_ad0e56c51b79d56ee7f8d1e4164e9b54>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_b3418fd18d79b5cc2a2bef911e213e16>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_a15ce7828021ee33b0cd034b834f8cfa>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_741c841a094c69589eb616a6110f5897>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_f4c57fcb0432d7cf0fbaa82c6ed46045>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045","children":[]},{"level":3,"title":"CustomItemRegistry","slug":"customitemregistry","link":"#customitemregistry","children":[]},{"level":3,"title":"CustomCropBlock","slug":"customcropblock","link":"#customcropblock","children":[]},{"level":3,"title":"CustomCropBlock_vtbl","slug":"customcropblock-vtbl","link":"#customcropblock-vtbl","children":[]},{"level":3,"title":"CappedSurfaceAttributes::MaterialLayer","slug":"cappedsurfaceattributes-materiallayer","link":"#cappedsurfaceattributes-materiallayer","children":[]},{"level":3,"title":"ChainBlock","slug":"chainblock","link":"#chainblock","children":[]},{"level":3,"title":"ChainBlock_vtbl","slug":"chainblock-vtbl","link":"#chainblock-vtbl","children":[]},{"level":3,"title":"CraftingTableDescription::buildSchema::__l2::<lambda_1773ea65163fe404c4642fa29c8a4c51>","slug":"craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51","link":"#craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51","children":[]},{"level":3,"title":"CraftingTableDescription::buildSchema::__l2::<lambda_b763889acef0e918448df6dd9fd7b352>","slug":"craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352","link":"#craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352","children":[]},{"level":3,"title":"CraftingTableDescription::buildSchema::__l2::<lambda_e2edea0adeb4357ae1bf2247cf9bdf67>","slug":"craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67","link":"#craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67","children":[]},{"level":3,"title":"CraftingTableDescription::buildSchema::__l2::<lambda_06044debff39258f61c94d740dbe2662>","slug":"craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662","link":"#craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662","children":[]},{"level":3,"title":"CryingObsidianBlock","slug":"cryingobsidianblock","link":"#cryingobsidianblock","children":[]},{"level":3,"title":"CryingObsidianBlock_vtbl","slug":"cryingobsidianblock-vtbl","link":"#cryingobsidianblock-vtbl","children":[]},{"level":3,"title":"ChunkLoadActionList::tickRequests::__l2::<lambda_f0a922715729ac9e2b1311f233617b6a>","slug":"chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a","link":"#chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a","children":[]},{"level":3,"title":"ChunkLoadActionList::_loadRequests::__l2::<lambda_c3a549743ae164c4a4c4097772148871>","slug":"chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871","link":"#chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871","children":[]},{"level":3,"title":"ChunkLoadedActionLoader","slug":"chunkloadedactionloader","link":"#chunkloadedactionloader","children":[]},{"level":3,"title":"ChunkLoadPriority","slug":"chunkloadpriority","link":"#chunkloadpriority","children":[]},{"level":3,"title":"CommandResponse::_compileCommands::__l2::<lambda_f50b98393645becdcdd14a0f2234d9a9>","slug":"commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9","link":"#commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9","children":[]},{"level":3,"title":"CommandResponse::buildSchema::__l2::<lambda_20a26bb05a82189a789594e7341fca1d>","slug":"commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d","link":"#commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d","children":[]},{"level":3,"title":"ClassID","slug":"classid","link":"#classid","children":[]},{"level":3,"title":"CelebrateHuntDefinition","slug":"celebratehuntdefinition","link":"#celebratehuntdefinition","children":[]},{"level":3,"title":"CelebrateHuntComponent","slug":"celebratehuntcomponent","link":"#celebratehuntcomponent","children":[]},{"level":3,"title":"CampfireBlock","slug":"campfireblock","link":"#campfireblock","children":[]},{"level":3,"title":"CampfireBlock_vtbl","slug":"campfireblock-vtbl","link":"#campfireblock-vtbl","children":[]},{"level":3,"title":"CatchFireSubcomponent::doOnHitEffect::__l32::<lambda_98d1a10c913b18fb7c66b4e14b62149d>","slug":"catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d","link":"#catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d","children":[]},{"level":3,"title":"ContextAccessor::TypeDerived<EntityContext>","slug":"contextaccessor-typederived-entitycontext","link":"#contextaccessor-typederived-entitycontext","children":[]},{"level":3,"title":"ContextAccessor::TypeDerived<EntityContext>_vtbl","slug":"contextaccessor-typederived-entitycontext-vtbl","link":"#contextaccessor-typederived-entitycontext-vtbl","children":[]},{"level":3,"title":"CelebrateHuntSystem","slug":"celebratehuntsystem","link":"#celebratehuntsystem","children":[]},{"level":3,"title":"CelebrateHuntSystem_vtbl","slug":"celebratehuntsystem-vtbl","link":"#celebratehuntsystem-vtbl","children":[]},{"level":3,"title":"CommandBlockSystem","slug":"commandblocksystem","link":"#commandblocksystem","children":[]},{"level":3,"title":"CommandBlockSystem_vtbl","slug":"commandblocksystem-vtbl","link":"#commandblocksystem-vtbl","children":[]},{"level":3,"title":"CropBlock","slug":"cropblock","link":"#cropblock","children":[]},{"level":3,"title":"CropBlock_vtbl","slug":"cropblock-vtbl","link":"#cropblock-vtbl","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntry","slug":"core-memoryfilesystementry","link":"#core-memoryfilesystementry","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntry_vtbl","slug":"core-memoryfilesystementry-vtbl","link":"#core-memoryfilesystementry-vtbl","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem","slug":"core-memoryfilesystementrydir-memoryfilesystementryitem","link":"#core-memoryfilesystementrydir-memoryfilesystementryitem","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntryDir","slug":"core-memoryfilesystementrydir","link":"#core-memoryfilesystementrydir","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntryDir_vtbl","slug":"core-memoryfilesystementrydir-vtbl","link":"#core-memoryfilesystementrydir-vtbl","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntryFile","slug":"core-memoryfilesystementryfile","link":"#core-memoryfilesystementryfile","children":[]},{"level":3,"title":"Core::MemoryFileSystemFile","slug":"core-memoryfilesystemfile","link":"#core-memoryfilesystemfile","children":[]},{"level":3,"title":"Core::MemoryFileSystemFile_vtbl","slug":"core-memoryfilesystemfile-vtbl","link":"#core-memoryfilesystemfile-vtbl","children":[]},{"level":3,"title":"Core::MemoryFileSystemEntryFile_vtbl","slug":"core-memoryfilesystementryfile-vtbl","link":"#core-memoryfilesystementryfile-vtbl","children":[]},{"level":3,"title":"Core::MemoryFileSystem::WriteOp","slug":"core-memoryfilesystem-writeop","link":"#core-memoryfilesystem-writeop","children":[]},{"level":3,"title":"Core::MemoryFileSystem","slug":"core-memoryfilesystem","link":"#core-memoryfilesystem","children":[]},{"level":3,"title":"ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry","slug":"controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry","link":"#controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry","children":[]},{"level":3,"title":"ControlledDiskAccess<Core::FileSystem_windows>","slug":"controlleddiskaccess-core-filesystem-windows","link":"#controlleddiskaccess-core-filesystem-windows","children":[]},{"level":3,"title":"Core::StorageBackedMemoryFileSystem","slug":"core-storagebackedmemoryfilesystem","link":"#core-storagebackedmemoryfilesystem","children":[]},{"level":3,"title":"Core::StorageBackedMemoryFileSystem::DirectoryItem","slug":"core-storagebackedmemoryfilesystem-directoryitem","link":"#core-storagebackedmemoryfilesystem-directoryitem","children":[]},{"level":3,"title":"Core::FlatFileOperations","slug":"core-flatfileoperations","link":"#core-flatfileoperations","children":[]},{"level":3,"title":"Core::StorageBackedMemoryFileSystem::_iterateOverDirectory::__l2::<lambda_c6419e72899cf220491cef01ab66c9a5>","slug":"core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5","link":"#core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5","children":[]},{"level":3,"title":"Core::StorageBackedMemoryFileSystemProxy","slug":"core-storagebackedmemoryfilesystemproxy","link":"#core-storagebackedmemoryfilesystemproxy","children":[]},{"level":3,"title":"CompressedNetworkPeer","slug":"compressednetworkpeer","link":"#compressednetworkpeer","children":[]},{"level":3,"title":"CompressedNetworkPeer_vtbl","slug":"compressednetworkpeer-vtbl","link":"#compressednetworkpeer-vtbl","children":[]},{"level":3,"title":"Crypto::Hash::Hash_vtbl","slug":"crypto-hash-hash-vtbl","link":"#crypto-hash-hash-vtbl","children":[]},{"level":3,"title":"CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>","slug":"commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c","link":"#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c","children":[]},{"level":3,"title":"CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>::()::__l2::<lambda_111bef47aba037e64e2de7ab058b2546>","slug":"commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546","link":"#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546","children":[]},{"level":3,"title":"CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>","slug":"commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9","link":"#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9","children":[]},{"level":3,"title":"CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>::()::__l2::<lambda_08a2613ea832ae6e1c316072b3dcf92d>","slug":"commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d","link":"#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::write::__l14::<lambda_c1e7efae3b5dc21032bb93b639f0a656>","slug":"clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656","link":"#clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::write::__l11::<lambda_461be92f04b6766159e2a14649e21c49>","slug":"clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49","link":"#clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::write::__l11::<lambda_fac84794c48ef9a05c921b62900cfc23>","slug":"clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23","link":"#clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::write::__l5::<lambda_b4233823788b03f84b72100ad9164053>","slug":"clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053","link":"#clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::read::__l11::<lambda_299406233ccff525293e6b278e5e2143>","slug":"clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143","link":"#clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::read::__l11::<lambda_4627a9aa0712be76211aa31f1c634fab>","slug":"clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab","link":"#clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket::read::__l5::<lambda_a6c59ce5d5173a7b49ebcbdb4d1edebc>","slug":"clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc","link":"#clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc","children":[]},{"level":3,"title":"CreativeContentPacket::read::__l2::<lambda_96e9e64950119d68213f99866c7e0253>","slug":"creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253","link":"#creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253","children":[]},{"level":3,"title":"CreativeContentPacket::write::__l5::<lambda_45d3c2d0ca3ded40260607e2e7c69dc2>","slug":"creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2","link":"#creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2","children":[]},{"level":3,"title":"CraftingEventPacket::read::__l2::<lambda_3623cfbc0b234474e5a7a6043a32091c>","slug":"craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c","link":"#craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c","children":[]},{"level":3,"title":"CraftingEventPacket::read::__l2::<lambda_6b5d3f89745eb1b42b1abcdc2cfecf6e>","slug":"craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e","link":"#craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e","children":[]},{"level":3,"title":"CraftingEventPacket::write::__l2::<lambda_8d95ef7248562c60723dda14c08a47de>","slug":"craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de","link":"#craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de","children":[]},{"level":3,"title":"CraftingEventPacket::write::__l2::<lambda_8cfbdd6deaa5624e9cb513c03578c983>","slug":"craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983","link":"#craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983","children":[]},{"level":3,"title":"CraftingDataPacket::read::__l21::<lambda_0281d7cf4dad9b4308c03ae95eb3a525>","slug":"craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525","link":"#craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525","children":[]},{"level":3,"title":"CraftingDataPacket::read::__l2::<lambda_1b84a61e5063cd2a0e9cc8970d0b665a>","slug":"craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a","link":"#craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a","children":[]},{"level":3,"title":"CraftingDataPacket::read::__l2::<lambda_54bc7cd634b04089ec4ff322c27cddbb>","slug":"craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb","link":"#craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb","children":[]},{"level":3,"title":"CraftingDataPacket::read::__l2::<lambda_03aa26e243735ee9ece5930a778e19bb>","slug":"craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb","link":"#craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb","children":[]},{"level":3,"title":"CraftingDataPacket::write::__l2::<lambda_e5ff81a04513ae571fd2ed01ede86d57>","slug":"craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57","link":"#craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57","children":[]},{"level":3,"title":"CraftingDataPacket::write::__l2::<lambda_f66ca93671b251d3fd735aa0bf744948>","slug":"craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948","link":"#craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948","children":[]},{"level":3,"title":"CraftingDataPacket::write::__l2::<lambda_b8b5ea0a1f44ec41ec43cb7cf66d6afd>","slug":"craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd","link":"#craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd","children":[]},{"level":3,"title":"CraftingDataPacket::write::__l2::<lambda_f0c4f01fa12286088002e5b7913413d8>","slug":"craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8","link":"#craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8","children":[]},{"level":3,"title":"Crypto::encryptedFileHeader::<unnamed_type__efheader>","slug":"crypto-encryptedfileheader-unnamed-type-efheader","link":"#crypto-encryptedfileheader-unnamed-type-efheader","children":[]},{"level":3,"title":"CompositePackSource::forEachPack::__l6::<lambda_367a75bf960abb288ec97e873c12428a>","slug":"compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a","link":"#compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a","children":[]},{"level":3,"title":"CompositePackSource::forEachPackConst::__l6::<lambda_559bc3fba05953cf51044a45a84dcf0d>","slug":"compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d","link":"#compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d","children":[]},{"level":3,"title":"Core::UnzipInternals","slug":"core-unzipinternals","link":"#core-unzipinternals","children":[]},{"level":3,"title":"CommandMessage::MessageComponent","slug":"commandmessage-messagecomponent","link":"#commandmessage-messagecomponent","children":[]},{"level":3,"title":"CommandMessage","slug":"commandmessage","link":"#commandmessage","children":[]},{"level":3,"title":"CommandRawText","slug":"commandrawtext","link":"#commandrawtext","children":[]},{"level":3,"title":"CommandWildcardInt","slug":"commandwildcardint","link":"#commandwildcardint","children":[]},{"level":3,"title":"ClientAutomationCommandOrigin","slug":"clientautomationcommandorigin","link":"#clientautomationcommandorigin","children":[]},{"level":3,"title":"ClientAutomationCommandOrigin_vtbl","slug":"clientautomationcommandorigin-vtbl","link":"#clientautomationcommandorigin-vtbl","children":[]},{"level":3,"title":"ClientBlobCache::Server::ActiveTransfersManager::rememberBlob::__l13::<lambda_cbe0fac81da36102ba2c1cdce3ecd16e>","slug":"clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e","link":"#clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e","children":[]},{"level":3,"title":"CommandOrigin::fromCommandOriginData::__l5::<lambda_c4f9d28d0d1549595c039f306673e27c>","slug":"commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c","link":"#commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c","children":[]},{"level":3,"title":"CommandAreaFactory::_getArea::__l23::<lambda_0efece9ce348f4d9959d0fd4083ac376>","slug":"commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376","link":"#commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376","children":[]},{"level":3,"title":"CommandAreaFactory::_getArea::__l2::<lambda_2c28d13bbbdff35c73a055f9292bfe19>","slug":"commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19","link":"#commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<CommandItem>","slug":"commandregistry-defaultidconverter-commanditem","link":"#commandregistry-defaultidconverter-commanditem","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<Block const *>","slug":"commandregistry-defaultidconverter-block-const","link":"#commandregistry-defaultidconverter-block-const","children":[]},{"level":3,"title":"CommandRegistry::getAutoCompleteOptions::__l2::<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>","slug":"commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d","link":"#commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d","children":[]},{"level":3,"title":"CommandRegistry::getAutoCompleteOptions::__l2::<lambda_54885e06ac509493fd3c71e97ba31bd5>","slug":"commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5","link":"#commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5","children":[]},{"level":3,"title":"CommandRegistry::getAutoCompleteOptions::__l2::<lambda_ae8832d910885e324562d537f39d8b6e>","slug":"commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e","link":"#commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e","children":[]},{"level":3,"title":"CommandRegistry::ParseTreeVisitor<<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>,<lambda_54885e06ac509493fd3c71e97ba31bd5>,<lambda_ae8832d910885e324562d537f39d8b6e> >","slug":"commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e","link":"#commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e","children":[]},{"level":3,"title":"CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ee50b28ac559fb7167610861c82c3b8>","slug":"commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8","link":"#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8","children":[]},{"level":3,"title":"CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_19d920e626aebe51e6ca8191f97cc035>","slug":"commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035","link":"#commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035","children":[]},{"level":3,"title":"CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ce6a8587e76f234789878ea4f4227fa>","slug":"commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa","link":"#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa","children":[]},{"level":3,"title":"CommandRegistry::ParseTreeVisitor<<lambda_0ee50b28ac559fb7167610861c82c3b8>,<lambda_19d920e626aebe51e6ca8191f97cc035>,<lambda_0ce6a8587e76f234789878ea4f4227fa> >","slug":"commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa","link":"#commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa","children":[]},{"level":3,"title":"CodeBuilderCommand","slug":"codebuildercommand","link":"#codebuildercommand","children":[]},{"level":3,"title":"CodeBuilderCommand_vtbl","slug":"codebuildercommand-vtbl","link":"#codebuildercommand-vtbl","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum GameType>","slug":"commandregistry-defaultidconverter-enum-gametype","link":"#commandregistry-defaultidconverter-enum-gametype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<bool>","slug":"commandregistry-defaultidconverter-bool","link":"#commandregistry-defaultidconverter-bool","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<int>","slug":"commandregistry-defaultidconverter-int","link":"#commandregistry-defaultidconverter-int","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum AgentCommands::Direction>","slug":"commandregistry-defaultidconverter-enum-agentcommands-direction","link":"#commandregistry-defaultidconverter-enum-agentcommands-direction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum AgentCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-agentcommand-mode","link":"#commandregistry-defaultidconverter-enum-agentcommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum AgentCommands::CollectCommand::CollectionSpecification>","slug":"commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification","link":"#commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum CodeBuilderCommand::Action>","slug":"commandregistry-defaultidconverter-enum-codebuildercommand-action","link":"#commandregistry-defaultidconverter-enum-codebuildercommand-action","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l54::<lambda_22f7ffa562b6d789d635310378f0cdae>","slug":"commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae","link":"#commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l52::<lambda_6f8eabf9af8392d984153e547b4fd261>","slug":"commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261","link":"#commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l44::<lambda_70a396ffbdb6e1b92161cf002e1e6fae>","slug":"commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae","link":"#commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l2::<lambda_361045df7e3bde2e5a2028877afb9a53>","slug":"commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53","link":"#commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l2::<lambda_7f6b17ab23224a5d644798305b18dea4>","slug":"commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4","link":"#commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l2::<lambda_414f2af8519f0713a5e0c677db6bb898>","slug":"commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898","link":"#commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l5::<lambda_cf1a3bc1337d755975289f3f698b3589>","slug":"commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589","link":"#commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l5::<lambda_f5186b54b476c2be3f76bb2a1af8b06a>","slug":"commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a","link":"#commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a","children":[]},{"level":3,"title":"CommandRegistry::{ctor}::__l2::<lambda_605018ec809aeceb683bc762484a9d96>","slug":"commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96","link":"#commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96","children":[]},{"level":3,"title":"CommandRegistry::parseSelector::__l249::<lambda_d62e97e7a0676903544f97c1fc2704a6>","slug":"commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6","link":"#commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6","children":[]},{"level":3,"title":"CommandRegistry::parseSelector::__l246::<lambda_28bcc386864748a0e234273411c43c59>","slug":"commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59","link":"#commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59","children":[]},{"level":3,"title":"CommandRegistry::parseSelector::__l237::<lambda_63db28ceedc03525f27c514cb8cf71ac>","slug":"commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac","link":"#commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac","children":[]},{"level":3,"title":"CommandRegistry::parseSelector::__l67::<lambda_4e234e3626d90af13bf77dbb36bd4669>","slug":"commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669","link":"#commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669","children":[]},{"level":3,"title":"CommandOutputSender::sendToAdmins::__l23::<lambda_038d1a6e7bb914ec0d3b2509a54419db>","slug":"commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db","link":"#commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db","children":[]},{"level":3,"title":"CommandOutputSender::sendToAdmins::__l26::<lambda_3349d776e79858640ef0ba11afaa57fd>","slug":"commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd","link":"#commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd","children":[]},{"level":3,"title":"CommandOutputSender::send::__l20::<lambda_2ce2c90252fa1240d87f82a6879ddf14>","slug":"commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14","link":"#commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l38::<lambda_392e9dd357a2416c9c1270d21bdf5be7>","slug":"commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7","link":"#commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l36::<lambda_05f2e04d42b55be64a3cf7612824c8db>","slug":"commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db","link":"#commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l24::<lambda_edd84d20487ee55e23e25db858881012>","slug":"commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012","link":"#commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l38::<lambda_617a76d12e6d2a53077fb1597f7a3dd1>","slug":"commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1","link":"#commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l36::<lambda_1b330ce45f34653cad8c98af9609e36a>","slug":"commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a","link":"#commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a","children":[]},{"level":3,"title":"CommandRegistry::_visitCommandParseTree::__l24::<lambda_a600244a6bf1c54ab33531b7c0f5fcee>","slug":"commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee","link":"#commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l46::<lambda_c263e4b3886672215959338cc46972af>","slug":"commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af","link":"#commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l41::<lambda_48a585b10008cbd8b875398ee88491b1>","slug":"commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1","link":"#commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l39::<lambda_c1528fafb0866bfed861d2fb0d691fd4>","slug":"commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4","link":"#commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4","children":[]},{"level":3,"title":"CommandSelectorBase::newResults::__l37::<lambda_3273758fa95c626e53ac475073e44526>","slug":"commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526","link":"#commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526","children":[]},{"level":3,"title":"CommandDispatcher","slug":"commanddispatcher","link":"#commanddispatcher","children":[]},{"level":3,"title":"CommandDispatcher_vtbl","slug":"commanddispatcher-vtbl","link":"#commanddispatcher-vtbl","children":[]},{"level":3,"title":"CommandFunctionEntry","slug":"commandfunctionentry","link":"#commandfunctionentry","children":[]},{"level":3,"title":"CommandFunctionEntry_vtbl","slug":"commandfunctionentry-vtbl","link":"#commandfunctionentry-vtbl","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<IFeature const *>","slug":"commandregistry-defaultidconverter-ifeature-const","link":"#commandregistry-defaultidconverter-ifeature-const","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<ActorDefinitionIdentifier const *>","slug":"commandregistry-defaultidconverter-actordefinitionidentifier-const","link":"#commandregistry-defaultidconverter-actordefinitionidentifier-const","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum StructureFeatureType>","slug":"commandregistry-defaultidconverter-enum-structurefeaturetype","link":"#commandregistry-defaultidconverter-enum-structurefeaturetype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum Enchant::Type>","slug":"commandregistry-defaultidconverter-enum-enchant-type","link":"#commandregistry-defaultidconverter-enum-enchant-type","children":[]},{"level":3,"title":"ClearCommand","slug":"clearcommand","link":"#clearcommand","children":[]},{"level":3,"title":"ClearCommand_vtbl","slug":"clearcommand-vtbl","link":"#clearcommand-vtbl","children":[]},{"level":3,"title":"CloneCommand","slug":"clonecommand","link":"#clonecommand","children":[]},{"level":3,"title":"CloneCommand_vtbl","slug":"clonecommand-vtbl","link":"#clonecommand-vtbl","children":[]},{"level":3,"title":"CommandPositionFloat","slug":"commandpositionfloat","link":"#commandpositionfloat","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum Rotation>","slug":"commandregistry-defaultidconverter-enum-rotation","link":"#commandregistry-defaultidconverter-enum-rotation","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarAction>","slug":"commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction","link":"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarGetOption>","slug":"commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption","link":"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarSetOption>","slug":"commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption","link":"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum BossBarColor>","slug":"commandregistry-defaultidconverter-enum-bossbarcolor","link":"#commandregistry-defaultidconverter-enum-bossbarcolor","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum CloneCommand::MaskMode>","slug":"commandregistry-defaultidconverter-enum-clonecommand-maskmode","link":"#commandregistry-defaultidconverter-enum-clonecommand-maskmode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum CloneCommand::CloneMode>","slug":"commandregistry-defaultidconverter-enum-clonecommand-clonemode","link":"#commandregistry-defaultidconverter-enum-clonecommand-clonemode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum Difficulty>","slug":"commandregistry-defaultidconverter-enum-difficulty","link":"#commandregistry-defaultidconverter-enum-difficulty","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum EffectCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-effectcommand-mode","link":"#commandregistry-defaultidconverter-enum-effectcommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<MobEffect const *>","slug":"commandregistry-defaultidconverter-mobeffect-const","link":"#commandregistry-defaultidconverter-mobeffect-const","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ExecuteCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-executecommand-mode","link":"#commandregistry-defaultidconverter-enum-executecommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum FillCommand::FillMode>","slug":"commandregistry-defaultidconverter-enum-fillcommand-fillmode","link":"#commandregistry-defaultidconverter-enum-fillcommand-fillmode","children":[]},{"level":3,"title":"ClearCommand::execute::__l24::<lambda_a1fc2660f4ed9e2cc3d3b9bb3bd21c50>","slug":"clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50","link":"#clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ListDCommand::DetailMode>","slug":"commandregistry-defaultidconverter-enum-listdcommand-detailmode","link":"#commandregistry-defaultidconverter-enum-listdcommand-detailmode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum PermissionCommand::Action>","slug":"commandregistry-defaultidconverter-enum-permissioncommand-action","link":"#commandregistry-defaultidconverter-enum-permissioncommand-action","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum PermissionCommand::AvailableCommandPermissionPresets>","slug":"commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets","link":"#commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum BlockSlot>","slug":"commandregistry-defaultidconverter-enum-blockslot","link":"#commandregistry-defaultidconverter-enum-blockslot","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum EquipmentSlot>","slug":"commandregistry-defaultidconverter-enum-equipmentslot","link":"#commandregistry-defaultidconverter-enum-equipmentslot","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::TargetType>","slug":"commandregistry-defaultidconverter-enum-replaceitemcommand-targettype","link":"#commandregistry-defaultidconverter-enum-replaceitemcommand-targettype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::ReplaceMode>","slug":"commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode","link":"#commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Category>","slug":"commandregistry-defaultidconverter-enum-scoreboardcommand-category","link":"#commandregistry-defaultidconverter-enum-scoreboardcommand-category","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Action>","slug":"commandregistry-defaultidconverter-enum-scoreboardcommand-action","link":"#commandregistry-defaultidconverter-enum-scoreboardcommand-action","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum ObjectiveSortOrder>","slug":"commandregistry-defaultidconverter-enum-objectivesortorder","link":"#commandregistry-defaultidconverter-enum-objectivesortorder","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum SetBlockCommand::SetBlockMode>","slug":"commandregistry-defaultidconverter-enum-setblockcommand-setblockmode","link":"#commandregistry-defaultidconverter-enum-setblockcommand-setblockmode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TagCommand::Action>","slug":"commandregistry-defaultidconverter-enum-tagcommand-action","link":"#commandregistry-defaultidconverter-enum-tagcommand-action","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TeleportCommand::FacingResult>","slug":"commandregistry-defaultidconverter-enum-teleportcommand-facingresult","link":"#commandregistry-defaultidconverter-enum-teleportcommand-facingresult","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TestForBlocksCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-testforblockscommand-mode","link":"#commandregistry-defaultidconverter-enum-testforblockscommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-tickingareacommand-mode","link":"#commandregistry-defaultidconverter-enum-tickingareacommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::AddAreaType>","slug":"commandregistry-defaultidconverter-enum-tickingareacommand-addareatype","link":"#commandregistry-defaultidconverter-enum-tickingareacommand-addareatype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::TargetDimensions>","slug":"commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions","link":"#commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TimeCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-timecommand-mode","link":"#commandregistry-defaultidconverter-enum-timecommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TimeCommand::Query>","slug":"commandregistry-defaultidconverter-enum-timecommand-query","link":"#commandregistry-defaultidconverter-enum-timecommand-query","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TimeCommand::TimeSpec>","slug":"commandregistry-defaultidconverter-enum-timecommand-timespec","link":"#commandregistry-defaultidconverter-enum-timecommand-timespec","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TitleCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-titlecommand-mode","link":"#commandregistry-defaultidconverter-enum-titlecommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum TitleRawCommand::Mode>","slug":"commandregistry-defaultidconverter-enum-titlerawcommand-mode","link":"#commandregistry-defaultidconverter-enum-titlerawcommand-mode","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherType>","slug":"commandregistry-defaultidconverter-enum-weathercommand-weathertype","link":"#commandregistry-defaultidconverter-enum-weathercommand-weathertype","children":[]},{"level":3,"title":"CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherRequest>","slug":"commandregistry-defaultidconverter-enum-weathercommand-weatherrequest","link":"#commandregistry-defaultidconverter-enum-weathercommand-weatherrequest","children":[]},{"level":3,"title":"ContentKeysFile","slug":"contentkeysfile","link":"#contentkeysfile","children":[]},{"level":3,"title":"Core::Profile::ProfileThread","slug":"core-profile-profilethread","link":"#core-profile-profilethread","children":[]},{"level":3,"title":"Common::BuildInfo","slug":"common-buildinfo","link":"#common-buildinfo","children":[]},{"level":3,"title":"ChanceInformation","slug":"chanceinformation","link":"#chanceinformation","children":[]},{"level":3,"title":"CRCDataInput","slug":"crcdatainput","link":"#crcdatainput","children":[]},{"level":3,"title":"CRCDataInput_vtbl","slug":"crcdatainput-vtbl","link":"#crcdatainput-vtbl","children":[]},{"level":3,"title":"CRCDataOutput","slug":"crcdataoutput","link":"#crcdataoutput","children":[]},{"level":3,"title":"CRCDataOutput_vtbl","slug":"crcdataoutput-vtbl","link":"#crcdataoutput-vtbl","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::rename::__l2::<lambda_d106db2de3b6b6e6de326311fa5fb1d9>","slug":"compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9","link":"#compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::remove::__l2::<lambda_34a013135a39fc1d9dd5a5b78a6ccc8a>","slug":"compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a","link":"#compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::remove::__l2::<lambda_9bf85ca8f27b27e71d561c4189565661>","slug":"compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661","link":"#compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::edit::__l2::<lambda_bad5b299bb6422fa44f16a14d28fd631>","slug":"compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631","link":"#compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::edit::__l2::<lambda_4566ce3f28a6fca1a020328f1b5bf986>","slug":"compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986","link":"#compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::edit::__l2::<lambda_f5f8445f343ec4ca9f1ae6c366fde01d>","slug":"compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d","link":"#compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_982407142d7d5112fbad9f0663beebac>","slug":"compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac","link":"#compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_2d39432ab1e8c62c46cf985cf99723dd>","slug":"compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd","link":"#compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::visit::__l2::<lambda_1b95be20721d5b0d9ad9446ef678356b>","slug":"compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b","link":"#compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::visit::__l2::<lambda_a2ba0478e2148f8507ead2b53b60900f>","slug":"compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f","link":"#compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f","children":[]},{"level":3,"title":"ColorDefinition","slug":"colordefinition","link":"#colordefinition","children":[]},{"level":3,"title":"Color2Definition","slug":"color2definition","link":"#color2definition","children":[]},{"level":3,"title":"CanClimbDefinition","slug":"canclimbdefinition","link":"#canclimbdefinition","children":[]},{"level":3,"title":"CanFlyDefinition","slug":"canflydefinition","link":"#canflydefinition","children":[]},{"level":3,"title":"CanPowerJumpDefinition","slug":"canpowerjumpdefinition","link":"#canpowerjumpdefinition","children":[]},{"level":3,"title":"CollisionBoxDefinition","slug":"collisionboxdefinition","link":"#collisionboxdefinition","children":[]},{"level":3,"title":"CaveSpider","slug":"cavespider","link":"#cavespider","children":[]},{"level":3,"title":"CustomEntityTypeComponent","slug":"customentitytypecomponent","link":"#customentitytypecomponent","children":[]},{"level":3,"title":"ChargeHeldItemDefinition","slug":"chargehelditemdefinition","link":"#chargehelditemdefinition","children":[]},{"level":3,"title":"ChargeHeldItemDefinition_vtbl","slug":"chargehelditemdefinition-vtbl","link":"#chargehelditemdefinition-vtbl","children":[]},{"level":3,"title":"ChargeHeldItemGoal","slug":"chargehelditemgoal","link":"#chargehelditemgoal","children":[]},{"level":3,"title":"ChargeHeldItemGoal_vtbl","slug":"chargehelditemgoal-vtbl","link":"#chargehelditemgoal-vtbl","children":[]},{"level":3,"title":"ChargeHeldItemDefinition::buildSchema::__l2::<lambda_d321ada88c0fdca2ff94e3a1fa49eb64>","slug":"chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64","link":"#chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64","children":[]},{"level":3,"title":"ChargeHeldItemDefinition::buildSchema::__l2::<lambda_2b6125119ea09ae250fa822690004f9d>","slug":"chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d","link":"#chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d","children":[]},{"level":3,"title":"Cat","slug":"cat","link":"#cat","children":[]},{"level":3,"title":"Chicken","slug":"chicken","link":"#chicken","children":[]},{"level":3,"title":"CompositeDefinition","slug":"compositedefinition","link":"#compositedefinition","children":[]},{"level":3,"title":"CompositeDefinition_vtbl","slug":"compositedefinition-vtbl","link":"#compositedefinition-vtbl","children":[]},{"level":3,"title":"ConsumeItemNode","slug":"consumeitemnode","link":"#consumeitemnode","children":[]},{"level":3,"title":"ConsumeItemNode_vtbl","slug":"consumeitemnode-vtbl","link":"#consumeitemnode-vtbl","children":[]},{"level":3,"title":"ConsumeItemDefinition","slug":"consumeitemdefinition","link":"#consumeitemdefinition","children":[]},{"level":3,"title":"ConsumeItemDefinition_vtbl","slug":"consumeitemdefinition-vtbl","link":"#consumeitemdefinition-vtbl","children":[]},{"level":3,"title":"CheckDistNode","slug":"checkdistnode","link":"#checkdistnode","children":[]},{"level":3,"title":"CheckDistNode_vtbl","slug":"checkdistnode-vtbl","link":"#checkdistnode-vtbl","children":[]},{"level":3,"title":"CheckDistDefinition","slug":"checkdistdefinition","link":"#checkdistdefinition","children":[]},{"level":3,"title":"CheckDistDefinition_vtbl","slug":"checkdistdefinition-vtbl","link":"#checkdistdefinition-vtbl","children":[]},{"level":3,"title":"CheckHarvestConditionDefinition","slug":"checkharvestconditiondefinition","link":"#checkharvestconditiondefinition","children":[]},{"level":3,"title":"CheckHarvestConditionDefinition_vtbl","slug":"checkharvestconditiondefinition-vtbl","link":"#checkharvestconditiondefinition-vtbl","children":[]},{"level":3,"title":"CraftItemDefinition","slug":"craftitemdefinition","link":"#craftitemdefinition","children":[]},{"level":3,"title":"CraftItemDefinition_vtbl","slug":"craftitemdefinition-vtbl","link":"#craftitemdefinition-vtbl","children":[]},{"level":3,"title":"CraftingContainerController","slug":"craftingcontainercontroller","link":"#craftingcontainercontroller","children":[]},{"level":3,"title":"CraftingContainerController_vtbl","slug":"craftingcontainercontroller-vtbl","link":"#craftingcontainercontroller-vtbl","children":[]},{"level":3,"title":"CraftingInputContainerController","slug":"craftinginputcontainercontroller","link":"#craftinginputcontainercontroller","children":[]},{"level":3,"title":"CraftingInputContainerController_vtbl","slug":"craftinginputcontainercontroller-vtbl","link":"#craftinginputcontainercontroller-vtbl","children":[]},{"level":3,"title":"CraftingOutputContainerController","slug":"craftingoutputcontainercontroller","link":"#craftingoutputcontainercontroller","children":[]},{"level":3,"title":"CraftingOutputContainerController_vtbl","slug":"craftingoutputcontainercontroller-vtbl","link":"#craftingoutputcontainercontroller-vtbl","children":[]},{"level":3,"title":"CreativeContainerController","slug":"creativecontainercontroller","link":"#creativecontainercontroller","children":[]},{"level":3,"title":"CreativeContainerController_vtbl","slug":"creativecontainercontroller-vtbl","link":"#creativecontainercontroller-vtbl","children":[]},{"level":3,"title":"CompoundItem","slug":"compounditem","link":"#compounditem","children":[]},{"level":3,"title":"ContainerValidation","slug":"containervalidation","link":"#containervalidation","children":[]},{"level":3,"title":"ContainerValidation::_assignAllowedInContainerDelegate::__l4::<lambda_ca14cee2759167866a14f98c13ae1b05>","slug":"containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05","link":"#containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_a94226eda5fc26b1cbfbc88e36506e72>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72","link":"#containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_d5ee424f0847ea65030b7c6f6c1b586d>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d","link":"#containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l18::<lambda_0ebe49e2c95965dee3ca7618c3b9009e>","slug":"containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e","link":"#containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_13fb63bd1fb91e659eed4da5282b6372>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372","link":"#containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_e569b0479cf2828d4244f0b5c7303b23>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23","link":"#containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_ff26520e30a38044df172b5778af010a>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a","link":"#containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_d032c3e0a9f5cb65ef6b2067239804b5>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5","link":"#containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_571cf091bef6dba301b8f8dc63bbd974>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974","link":"#containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_29b95d068c06a7e703fe9d21cb73de5e>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e","link":"#containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_9b3a8e0d18f88b6b2f36e5ab819ecc64>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64","link":"#containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_c57785192ac75762ce53fbae61c013ae>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae","link":"#containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_18bb92ef1ae5f58703be325415154ee1>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1","link":"#containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_015afaa8d4ac12f7081f67fc3327889e>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e","link":"#containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_28c1d666805352606ecc6aa691bede5a>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a","link":"#containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_3737fd909942acaf574821aaa99cf1ad>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad","link":"#containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_6a3d1f33c6cbf3efe5f892e64fe9f692>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692","link":"#containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_80788f509c3a4df1534e8891dcda3096>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096","link":"#containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_561de59b7805bdb21e2646c582f78dfe>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe","link":"#containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_cab0653dadf048ef221190874c930768>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768","link":"#containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768","children":[]},{"level":3,"title":"Container::sameItemAndAuxComparator::__l2::<lambda_bc92f6dd1e60a290da569381c0bbc2a9>","slug":"container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9","link":"#container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9","children":[]},{"level":3,"title":"CraftableElements","slug":"craftableelements","link":"#craftableelements","children":[]},{"level":3,"title":"CraftableElements_vtbl","slug":"craftableelements-vtbl","link":"#craftableelements-vtbl","children":[]},{"level":3,"title":"CraftingContainerManagerController::_getRecipesForItem::__l2::<lambda_6caeab14354bdd5c84e4ab8c2ea764bf>","slug":"craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf","link":"#craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf","children":[]},{"level":3,"title":"CraftingContainerManagerController::_filterRecipes::__l2::<lambda_cdb5314bee1f97240ba0cd908eecf8e9>","slug":"craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9","link":"#craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9","children":[]},{"level":3,"title":"CraftingContainerManagerController::_craftItem::__l21::<lambda_3c63015ccb477dfee5c6c66864ee0dc0>","slug":"craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0","link":"#craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0","children":[]},{"level":3,"title":"CraftingContainerManagerController::getCraftableCount::__l2::<lambda_aa96b04be3948fd8222e3f0611ad44d0>","slug":"craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0","link":"#craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0","children":[]},{"level":3,"title":"CraftingContainerManagerController::_setupCallbacks::__l2::<lambda_d90798886221ba8ec068417f5dff86e6>","slug":"craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6","link":"#craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6","children":[]},{"level":3,"title":"CraftingContainerManagerController::{ctor}::__l2::<lambda_800ba8d7ddb3e3161c5f891001bcfb9c>","slug":"craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c","link":"#craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c","children":[]},{"level":3,"title":"ContainerManagerController::registerContainerCallbacks::__l12::<lambda_ffe46bfded42ef6cce34996a89535ed2>","slug":"containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2","link":"#containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2","children":[]},{"level":3,"title":"ContainerManagerController::registerContainerCallbacks::__l9::<lambda_dc250ab7902177dc8a7fb2a2aa1b1d5e>","slug":"containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e","link":"#containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e","children":[]},{"level":3,"title":"CraftingInputUIContainerModel","slug":"craftinginputuicontainermodel","link":"#craftinginputuicontainermodel","children":[]},{"level":3,"title":"CraftingInputUIContainerModel_vtbl","slug":"craftinginputuicontainermodel-vtbl","link":"#craftinginputuicontainermodel-vtbl","children":[]},{"level":3,"title":"ContainerModel::serverInitItemStackIds::__l5::<lambda_3ceb7baffe147371abb8ef0876d49f62>","slug":"containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62","link":"#containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>::()::__l5::<lambda_fcf8e0e085a275fe1caed95ccdf54f52>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_67395b7a0ffee627249620bb17590dfa>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>::()::__l5::<lambda_1ce802a31af62b630ae423dca09bea4a>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a","children":[]},{"level":3,"title":"CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d013e68ca17835317031a2aeceb600f4>","slug":"craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4","link":"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4","children":[]},{"level":3,"title":"CraftingContainerManagerModel::_filterByInventory::__l5::<lambda_f6b29bd3f04dbc18ccf3d2fd33e47d6c>","slug":"craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c","link":"#craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c","children":[]},{"level":3,"title":"CraftingContainerManagerModel::_postInit::__l2::<lambda_f9fa4eb62304d0425ba9cc315955a7b9>","slug":"craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9","link":"#craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerCreated::__l2::<lambda_cbb646d286c056753ea8bb17996e0baf>","slug":"clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf","link":"#clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerStopRiding::__l2::<lambda_d603610a604c5d778adc893eadca2b75>","slug":"clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75","link":"#clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerStartRiding::__l2::<lambda_4f6468d189e6f140542d3caf9506a7b4>","slug":"clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4","link":"#clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendLocalPlayerRespawn::__l2::<lambda_13e49c72a3fd0c359103c3c3e8752bfe>","slug":"clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe","link":"#clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendLocalPlayerDeath::__l2::<lambda_957d1afedc287aa655fd9d822a5c66fd>","slug":"clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd","link":"#clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerDestroyedBlock::__l2::<lambda_7de0e8b341ebea8a59785104915845ed>","slug":"clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed","link":"#clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendStartDestroyBlock::__l2::<lambda_306705e6c21dd23dbe7a62e736a559a5>","slug":"clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5","link":"#clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerTurn::__l2::<lambda_928c0980f93f358810417fb87f5a4a69>","slug":"clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69","link":"#clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator::sendPlayerInput::__l2::<lambda_4b6575f26cb031f0d5a8936a9950dab3>","slug":"clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3","link":"#clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendStartLeaveGame::__l2::<lambda_8a82e27afbaa5b3ed078861894dbbaf7>","slug":"clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7","link":"#clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientEnteredWorld::__l2::<lambda_aa8bf0031d48e9bb7466024d647d8181>","slug":"clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181","link":"#clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientSuspend::__l2::<lambda_3a59cd1777c222e9b7d72fcb4828994d>","slug":"clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d","link":"#clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientUpdateEnd::__l2::<lambda_5547db528708a9f123e39e444b1ce0c4>","slug":"clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4","link":"#clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientUpdateStart::__l2::<lambda_7fb2a44e2ccf295a22fc580a9edaa1e6>","slug":"clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6","link":"#clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientCreatedLevel::__l2::<lambda_82e58d8e24e455a327e677fd8c43ed78>","slug":"clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78","link":"#clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientMinecraftInitialized::__l2::<lambda_ded5d68558497ba91b283686b43c5afc>","slug":"clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc","link":"#clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientInitializeEnd::__l2::<lambda_fae6b47936c8bd0d3d88c82eb8ab6250>","slug":"clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250","link":"#clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator::sendClientInitializeStart::__l2::<lambda_86c15645a56632f21ecc7d1e02c49df7>","slug":"clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7","link":"#clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7","children":[]},{"level":3,"title":"ClientHitDetectCoordinator::sendContinuousPickHitResult::__l2::<lambda_4cf05be3c943c8f3543e21b9a5f563b8>","slug":"clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8","link":"#clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8","children":[]},{"level":3,"title":"ClientHitDetectCoordinator::sendChangedPickHitResult::__l2::<lambda_b21f51f0655eacdc77738b23dbe4a069>","slug":"clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069","link":"#clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069","children":[]},{"level":3,"title":"ClientHitDetectCoordinator::sendContinuousHitResult::__l2::<lambda_c2529579edb7345e3bf2ed9ad53c8428>","slug":"clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428","link":"#clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428","children":[]},{"level":3,"title":"ClientHitDetectCoordinator::sendChangedHitResult::__l2::<lambda_3d6978abe3b73298ad5ac47b140c6cb9>","slug":"clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9","link":"#clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9","children":[]},{"level":3,"title":"ContainerMenu","slug":"containermenu","link":"#containermenu","children":[]},{"level":3,"title":"ContainerMenu_vtbl","slug":"containermenu-vtbl","link":"#containermenu-vtbl","children":[]},{"level":3,"title":"CraftHandleNonImplemented_DEPRECATEDASKTYLAING","slug":"crafthandlenonimplemented-deprecatedasktylaing","link":"#crafthandlenonimplemented-deprecatedasktylaing","children":[]},{"level":3,"title":"CraftHandleNonImplemented_DEPRECATEDASKTYLAING_vtbl","slug":"crafthandlenonimplemented-deprecatedasktylaing-vtbl","link":"#crafthandlenonimplemented-deprecatedasktylaing-vtbl","children":[]},{"level":3,"title":"CraftHandlerCrafting","slug":"crafthandlercrafting","link":"#crafthandlercrafting","children":[]},{"level":3,"title":"CraftHandlerCrafting_vtbl","slug":"crafthandlercrafting-vtbl","link":"#crafthandlercrafting-vtbl","children":[]},{"level":3,"title":"CraftHandlerEnchant","slug":"crafthandlerenchant","link":"#crafthandlerenchant","children":[]},{"level":3,"title":"CraftHandlerEnchant_vtbl","slug":"crafthandlerenchant-vtbl","link":"#crafthandlerenchant-vtbl","children":[]},{"level":3,"title":"CraftHandlerTrade","slug":"crafthandlertrade","link":"#crafthandlertrade","children":[]},{"level":3,"title":"CraftHandlerTrade_vtbl","slug":"crafthandlertrade-vtbl","link":"#crafthandlertrade-vtbl","children":[]},{"level":3,"title":"CarrotOnAStickItem","slug":"carrotonastickitem","link":"#carrotonastickitem","children":[]},{"level":3,"title":"ChemistryBlockItem","slug":"chemistryblockitem","link":"#chemistryblockitem","children":[]},{"level":3,"title":"ChemistryAuxDataBlockItem","slug":"chemistryauxdatablockitem","link":"#chemistryauxdatablockitem","children":[]},{"level":3,"title":"CoralFanBlockItem","slug":"coralfanblockitem","link":"#coralfanblockitem","children":[]},{"level":3,"title":"CoralFanBlockItem::_useOn::__l72::<lambda_1e855bb0deac619b44ec09dd5754848c>","slug":"coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c","link":"#coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c","children":[]},{"level":3,"title":"ChemistryRecipes","slug":"chemistryrecipes","link":"#chemistryrecipes","children":[]},{"level":3,"title":"ColoredTorchBlock","slug":"coloredtorchblock","link":"#coloredtorchblock","children":[]},{"level":3,"title":"ColoredTorchBlock_vtbl","slug":"coloredtorchblock-vtbl","link":"#coloredtorchblock-vtbl","children":[]},{"level":3,"title":"CocoaBlock","slug":"cocoablock","link":"#cocoablock","children":[]},{"level":3,"title":"CocoaBlock_vtbl","slug":"cocoablock-vtbl","link":"#cocoablock-vtbl","children":[]},{"level":3,"title":"CrossbowEnchant","slug":"crossbowenchant","link":"#crossbowenchant","children":[]},{"level":3,"title":"CrossbowEnchant_vtbl","slug":"crossbowenchant-vtbl","link":"#crossbowenchant-vtbl","children":[]},{"level":3,"title":"CurseBindingEnchant","slug":"cursebindingenchant","link":"#cursebindingenchant","children":[]},{"level":3,"title":"CurseBindingEnchant_vtbl","slug":"cursebindingenchant-vtbl","link":"#cursebindingenchant-vtbl","children":[]},{"level":3,"title":"CurseVanishingEnchant","slug":"cursevanishingenchant","link":"#cursevanishingenchant","children":[]},{"level":3,"title":"CurseVanishingEnchant_vtbl","slug":"cursevanishingenchant-vtbl","link":"#cursevanishingenchant-vtbl","children":[]},{"level":3,"title":"CameraItem","slug":"cameraitem","link":"#cameraitem","children":[]},{"level":3,"title":"ClothBlockItem","slug":"clothblockitem","link":"#clothblockitem","children":[]},{"level":3,"title":"CoalItem","slug":"coalitem","link":"#coalitem","children":[]},{"level":3,"title":"ChemistryTableBlock","slug":"chemistrytableblock","link":"#chemistrytableblock","children":[]},{"level":3,"title":"ChemistryTableBlock_vtbl","slug":"chemistrytableblock-vtbl","link":"#chemistrytableblock-vtbl","children":[]},{"level":3,"title":"CustomSkyColorAttributes","slug":"customskycolorattributes","link":"#customskycolorattributes","children":[]},{"level":3,"title":"CustomFoliageColorAttributes","slug":"customfoliagecolorattributes","link":"#customfoliagecolorattributes","children":[]},{"level":3,"title":"ColorPaletteAttributes","slug":"colorpaletteattributes","link":"#colorpaletteattributes","children":[]},{"level":3,"title":"CustomMapFoliageColorAttributes","slug":"custommapfoliagecolorattributes","link":"#custommapfoliagecolorattributes","children":[]},{"level":3,"title":"CustomGrassColorAttributes","slug":"customgrasscolorattributes","link":"#customgrasscolorattributes","children":[]},{"level":3,"title":"CustomMapGrassColorAttributes","slug":"custommapgrasscolorattributes","link":"#custommapgrasscolorattributes","children":[]},{"level":3,"title":"CustomDebugMapColorAttributes","slug":"customdebugmapcolorattributes","link":"#customdebugmapcolorattributes","children":[]},{"level":3,"title":"CustomDebugMapColorOddAttributes","slug":"customdebugmapcoloroddattributes","link":"#customdebugmapcoloroddattributes","children":[]},{"level":3,"title":"CustomTemperatureCategoryAttributes","slug":"customtemperaturecategoryattributes","link":"#customtemperaturecategoryattributes","children":[]},{"level":3,"title":"CustomHumidityAttributes","slug":"customhumidityattributes","link":"#customhumidityattributes","children":[]},{"level":3,"title":"ComparatorBlockActor","slug":"comparatorblockactor","link":"#comparatorblockactor","children":[]},{"level":3,"title":"ComparatorBlockActor_vtbl","slug":"comparatorblockactor-vtbl","link":"#comparatorblockactor-vtbl","children":[]},{"level":3,"title":"ChestBlock","slug":"chestblock","link":"#chestblock","children":[]},{"level":3,"title":"ChestBlock_vtbl","slug":"chestblock-vtbl","link":"#chestblock-vtbl","children":[]},{"level":3,"title":"CapacitorComponent","slug":"capacitorcomponent","link":"#capacitorcomponent","children":[]},{"level":3,"title":"CapacitorComponent_vtbl","slug":"capacitorcomponent-vtbl","link":"#capacitorcomponent-vtbl","children":[]},{"level":3,"title":"ComparatorCapacitor","slug":"comparatorcapacitor","link":"#comparatorcapacitor","children":[]},{"level":3,"title":"ComparatorCapacitor_vtbl","slug":"comparatorcapacitor-vtbl","link":"#comparatorcapacitor-vtbl","children":[]},{"level":3,"title":"ConduitBlockActor::_applyEffects::__l8::<lambda_b0b76dacb6f6d005bd21b9d622471658>","slug":"conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658","link":"#conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658","children":[]},{"level":3,"title":"ConduitBlockActor::_checkShape::__l71::<lambda_b28f6ce02576140d0e92aeec4d4fffc7>","slug":"conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7","link":"#conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7","children":[]},{"level":3,"title":"ChestBlockActor::serverInitItemStackIds::__l40::<lambda_2e8d0c4f468d46e7194921aff72bdf51>","slug":"chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51","link":"#chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51","children":[]},{"level":3,"title":"ConsumerComponent","slug":"consumercomponent","link":"#consumercomponent","children":[]},{"level":3,"title":"ConsumerComponent_vtbl","slug":"consumercomponent-vtbl","link":"#consumercomponent-vtbl","children":[]},{"level":3,"title":"ConnectionComponentDescription","slug":"connectioncomponentdescription","link":"#connectioncomponentdescription","children":[]},{"level":3,"title":"ConnectionComponentDescription_vtbl","slug":"connectioncomponentdescription-vtbl","link":"#connectioncomponentdescription-vtbl","children":[]},{"level":3,"title":"CactusBlock","slug":"cactusblock","link":"#cactusblock","children":[]},{"level":3,"title":"CactusBlock_vtbl","slug":"cactusblock-vtbl","link":"#cactusblock-vtbl","children":[]},{"level":3,"title":"CakeBlock","slug":"cakeblock","link":"#cakeblock","children":[]},{"level":3,"title":"CakeBlock_vtbl","slug":"cakeblock-vtbl","link":"#cakeblock-vtbl","children":[]},{"level":3,"title":"CameraBlock","slug":"camerablock","link":"#camerablock","children":[]},{"level":3,"title":"CameraBlock_vtbl","slug":"camerablock-vtbl","link":"#camerablock-vtbl","children":[]},{"level":3,"title":"CarrotBlock","slug":"carrotblock","link":"#carrotblock","children":[]},{"level":3,"title":"CarrotBlock_vtbl","slug":"carrotblock-vtbl","link":"#carrotblock-vtbl","children":[]},{"level":3,"title":"CartographyTableBlock","slug":"cartographytableblock","link":"#cartographytableblock","children":[]},{"level":3,"title":"CartographyTableBlock_vtbl","slug":"cartographytableblock-vtbl","link":"#cartographytableblock-vtbl","children":[]},{"level":3,"title":"ChemicalHeatBlock","slug":"chemicalheatblock","link":"#chemicalheatblock","children":[]},{"level":3,"title":"ChemicalHeatBlock_vtbl","slug":"chemicalheatblock-vtbl","link":"#chemicalheatblock-vtbl","children":[]},{"level":3,"title":"ClayBlock","slug":"clayblock","link":"#clayblock","children":[]},{"level":3,"title":"ClayBlock_vtbl","slug":"clayblock-vtbl","link":"#clayblock-vtbl","children":[]},{"level":3,"title":"ClothBlock","slug":"clothblock","link":"#clothblock","children":[]},{"level":3,"title":"ClothBlock_vtbl","slug":"clothblock-vtbl","link":"#clothblock-vtbl","children":[]},{"level":3,"title":"ColoredBlock","slug":"coloredblock","link":"#coloredblock","children":[]},{"level":3,"title":"ColoredBlock_vtbl","slug":"coloredblock-vtbl","link":"#coloredblock-vtbl","children":[]},{"level":3,"title":"CommandBlock::updateBlock::__l8::<lambda_6680b22252abc8a807bb3d1916695fb2>","slug":"commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2","link":"#commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2","children":[]},{"level":3,"title":"ComparatorBlock","slug":"comparatorblock","link":"#comparatorblock","children":[]},{"level":3,"title":"ComparatorBlock_vtbl","slug":"comparatorblock-vtbl","link":"#comparatorblock-vtbl","children":[]},{"level":3,"title":"ConcreteBlock","slug":"concreteblock","link":"#concreteblock","children":[]},{"level":3,"title":"ConcreteBlock_vtbl","slug":"concreteblock-vtbl","link":"#concreteblock-vtbl","children":[]},{"level":3,"title":"ConcretePowderBlock","slug":"concretepowderblock","link":"#concretepowderblock","children":[]},{"level":3,"title":"ConcretePowderBlock_vtbl","slug":"concretepowderblock-vtbl","link":"#concretepowderblock-vtbl","children":[]},{"level":3,"title":"ConduitBlock","slug":"conduitblock","link":"#conduitblock","children":[]},{"level":3,"title":"ConduitBlock_vtbl","slug":"conduitblock-vtbl","link":"#conduitblock-vtbl","children":[]}],"git":{"updatedTime":1659743947000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1}]},"filePathRelative":"1.16.201/structure/C~2.md"}`);export{p as comp,m as data};
