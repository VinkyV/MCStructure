import{_ as s,c as a,o as e,d as n}from"./app-stvwdKan.js";const l={},i=n(`<h1 id="s-4" tabindex="-1"><a class="header-anchor" href="#s-4"><span>S~4</span></a></h1><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_93622f71b2d1b3da07fa44fe633e4d31&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_93622f71b2d1b3da07fa44fe633e4d31&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_a4dc38abafd6bb1f7f898eecf86647d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_a4dc38abafd6bb1f7f898eecf86647d8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_599c3e3b52bab211657dd2b12258525f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_599c3e3b52bab211657dd2b12258525f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_843fbf8f658197deabd5d66aca0b5d2c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_843fbf8f658197deabd5d66aca0b5d2c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_44713807c694a34247116ac42237d921&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_44713807c694a34247116ac42237d921&gt;</span>
<span class="line">{</span>
<span class="line">  RedstoneScreenType &lt;args_0&gt;;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_2dc9e558cd4384c30952098dabdf69a6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_2dc9e558cd4384c30952098dabdf69a6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_bf6bd47537effc5005cc8af06f921a6b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_bf6bd47537effc5005cc8af06f921a6b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_0ebaf0371ff09f45dab2f48e7253d4f7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_0ebaf0371ff09f45dab2f48e7253d4f7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_b7f24edb716c239e18ac72d4f3c6733d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_b7f24edb716c239e18ac72d4f3c6733d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_a36afaf8a1afa0684c71071850b6dc59&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_a36afaf8a1afa0684c71071850b6dc59&gt;</span>
<span class="line">{</span>
<span class="line">  const HashedString &lt;args_0&gt;;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_3d8d548af9390a3e89d693eb21f9053e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_3d8d548af9390a3e89d693eb21f9053e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_0b5b22390697ce2a7c10dc25a536ea1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_0b5b22390697ce2a7c10dc25a536ea1d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d" tabindex="-1"><a class="header-anchor" href="#scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d"><span><code>SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_ce0fde19203617737ec3f13040734e6d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::&lt;lambda_ce0fde19203617737ec3f13040734e6d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59" tabindex="-1"><a class="header-anchor" href="#social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59"><span><code>Social::&lt;lambda_a70a5a9432f0adfeb3ed076c01d0ac59&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::&lt;lambda_a70a5a9432f0adfeb3ed076c01d0ac59&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876" tabindex="-1"><a class="header-anchor" href="#social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876"><span><code>Social::&lt;lambda_52ce7f45f90c5c2a0dd6d8adeb080876&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::&lt;lambda_52ce7f45f90c5c2a0dd6d8adeb080876&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-lambda-b7ca127a156cd86fc46069d07be131eb" tabindex="-1"><a class="header-anchor" href="#social-lambda-b7ca127a156cd86fc46069d07be131eb"><span><code>Social::&lt;lambda_b7ca127a156cd86fc46069d07be131eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::&lt;lambda_b7ca127a156cd86fc46069d07be131eb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a" tabindex="-1"><a class="header-anchor" href="#social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a"><span><code>Social::&lt;lambda_2ffb157acc314cd7a898b1a1b9dafa1a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::&lt;lambda_2ffb157acc314cd7a898b1a1b9dafa1a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaffoldingclimbersystem" tabindex="-1"><a class="header-anchor" href="#scaffoldingclimbersystem"><span><code>ScaffoldingClimberSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScaffoldingClimberSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaffoldingclimbersystem-vtbl" tabindex="-1"><a class="header-anchor" href="#scaffoldingclimbersystem-vtbl"><span><code>ScaffoldingClimberSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScaffoldingClimberSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scalebyagesystem" tabindex="-1"><a class="header-anchor" href="#scalebyagesystem"><span><code>ScaleByAgeSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScaleByAgeSystem : ITickingSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scalebyagesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#scalebyagesystem-vtbl"><span><code>ScaleByAgeSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScaleByAgeSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ITickingSystem)(ITickingSystem *this);</span>
<span class="line">  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sleepstate" tabindex="-1"><a class="header-anchor" href="#sleepstate"><span><code>SleepState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SleepState : PetSleepWithOwnerState</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sleepstate-vtbl" tabindex="-1"><a class="header-anchor" href="#sleepstate-vtbl"><span><code>SleepState_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SleepState_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PetSleepWithOwnerState)(PetSleepWithOwnerState *this);</span>
<span class="line">  void (__fastcall *tick)(PetSleepWithOwnerState *this);</span>
<span class="line">  void (__fastcall *start)(PetSleepWithOwnerState *this);</span>
<span class="line">  void (__fastcall *stop)(PetSleepWithOwnerState *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaredgoal" tabindex="-1"><a class="header-anchor" href="#scaredgoal"><span><code>ScaredGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ScaredGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mInterval;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaredgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#scaredgoal-vtbl"><span><code>ScaredGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScaredGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shareitemsgoal" tabindex="-1"><a class="header-anchor" href="#shareitemsgoal"><span><code>ShareItemsGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShareItemsGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mThrowCountdown;</span>
<span class="line">  int mSearchRange;</span>
<span class="line">  float mSpeedModifier;</span>
<span class="line">  float mGoalRadiusSq;</span>
<span class="line">  int mTimeToRecalcPath;</span>
<span class="line">  std::vector&lt;MobDescriptor&gt; mMobFilters;</span>
<span class="line">  ItemStack mItemToShare;</span>
<span class="line">  std::unique_ptr&lt;Path&gt; mPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shareitemsgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#shareitemsgoal-vtbl"><span><code>ShareItemsGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShareItemsGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulkerpeekgoal" tabindex="-1"><a class="header-anchor" href="#shulkerpeekgoal"><span><code>ShulkerPeekGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShulkerPeekGoal : Goal</span>
<span class="line">{</span>
<span class="line">  int mPeekTime;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulkerpeekgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#shulkerpeekgoal-vtbl"><span><code>ShulkerPeekGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShulkerPeekGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sitgoal" tabindex="-1"><a class="header-anchor" href="#sitgoal"><span><code>SitGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SitGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sitgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#sitgoal-vtbl"><span><code>SitGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SitGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skeletonhorsetrapgoal" tabindex="-1"><a class="header-anchor" href="#skeletonhorsetrapgoal"><span><code>SkeletonHorseTrapGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SkeletonHorseTrapGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Horse *mHorse;</span>
<span class="line">  int mTrapLifeTicks;</span>
<span class="line">  float mTriggerDistance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skeletonhorsetrapgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#skeletonhorsetrapgoal-vtbl"><span><code>SkeletonHorseTrapGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SkeletonHorseTrapGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sleepgoal" tabindex="-1"><a class="header-anchor" href="#sleepgoal"><span><code>SleepGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SleepGoal : MoveToPOIGoal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  BedHelper mBedHelper;</span>
<span class="line">  BlockPos mBedPos;</span>
<span class="line">  Vec3 mSleepPos;</span>
<span class="line">  Vec3 mBedOffset;</span>
<span class="line">  Vec3 mExitPos;</span>
<span class="line">  int mBedDir;</span>
<span class="line">  float mBodyRot;</span>
<span class="line">  const float mSleepYOffset;</span>
<span class="line">  const float mSleepColliderHeight;</span>
<span class="line">  const float mSleepColliderWidth;</span>
<span class="line">  Vec2 mDefaultColliderDim;</span>
<span class="line">  const Tick mGoalCooldownMax;</span>
<span class="line">  Tick mCooldownTick;</span>
<span class="line">  bool mWoken;</span>
<span class="line">  bool mGoalEndedEarly;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sleepgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#sleepgoal-vtbl"><span><code>SleepGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SleepGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *getPOI)(MoveToPOIGoal *this, POIType);</span>
<span class="line">  std::weak_ptr&lt;POIInstance&gt; *(__fastcall *_getOwnedPOI)(MoveToPOIGoal *this, std::weak_ptr&lt;POIInstance&gt; *result, POIType);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimeattackdefinition" tabindex="-1"><a class="header-anchor" href="#slimeattackdefinition"><span><code>SlimeAttackDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SlimeAttackDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mMaxRotationX;</span>
<span class="line">  float mMaxRotationY;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  float mGrowTiredCooldownTime;</span>
<span class="line">  bool mSetPersistent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimeattackdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#slimeattackdefinition-vtbl"><span><code>SlimeAttackDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeAttackDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimeattackgoal" tabindex="-1"><a class="header-anchor" href="#slimeattackgoal"><span><code>SlimeAttackGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SlimeAttackGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mGrowTiredTicks;</span>
<span class="line">  int mGrowTiredCooldownTicks;</span>
<span class="line">  float mMaxRotationX;</span>
<span class="line">  float mMaxRotationY;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  float mSetPersistent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimeattackgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#slimeattackgoal-vtbl"><span><code>SlimeAttackGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeAttackGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimefloatdefinition" tabindex="-1"><a class="header-anchor" href="#slimefloatdefinition"><span><code>SlimeFloatDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SlimeFloatDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mJumpChancePercentage;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimefloatdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#slimefloatdefinition-vtbl"><span><code>SlimeFloatDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeFloatDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimefloatgoal" tabindex="-1"><a class="header-anchor" href="#slimefloatgoal"><span><code>SlimeFloatGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SlimeFloatGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mJumpChancePercentage;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimefloatgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#slimefloatgoal-vtbl"><span><code>SlimeFloatGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeFloatGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimekeeponjumpingdefinition" tabindex="-1"><a class="header-anchor" href="#slimekeeponjumpingdefinition"><span><code>SlimeKeepOnJumpingDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SlimeKeepOnJumpingDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimekeeponjumpingdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#slimekeeponjumpingdefinition-vtbl"><span><code>SlimeKeepOnJumpingDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeKeepOnJumpingDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimekeeponjumpinggoal" tabindex="-1"><a class="header-anchor" href="#slimekeeponjumpinggoal"><span><code>SlimeKeepOnJumpingGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SlimeKeepOnJumpingGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimekeeponjumpinggoal-vtbl" tabindex="-1"><a class="header-anchor" href="#slimekeeponjumpinggoal-vtbl"><span><code>SlimeKeepOnJumpingGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeKeepOnJumpingGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimerandomdirectiondefinition" tabindex="-1"><a class="header-anchor" href="#slimerandomdirectiondefinition"><span><code>SlimeRandomDirectionDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SlimeRandomDirectionDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  int mAddRandomTime;</span>
<span class="line">  int mTurnRange;</span>
<span class="line">  float mMinChangeDirectionTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimerandomdirectiondefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#slimerandomdirectiondefinition-vtbl"><span><code>SlimeRandomDirectionDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeRandomDirectionDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimerandomdirectiongoal" tabindex="-1"><a class="header-anchor" href="#slimerandomdirectiongoal"><span><code>SlimeRandomDirectionGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SlimeRandomDirectionGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mNextRandomizeTicks;</span>
<span class="line">  int mMinChangeDirectionTicks;</span>
<span class="line">  int mAddRandomTicks;</span>
<span class="line">  int mTurnRange;</span>
<span class="line">  float mChosenDegrees;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slimerandomdirectiongoal-vtbl" tabindex="-1"><a class="header-anchor" href="#slimerandomdirectiongoal-vtbl"><span><code>SlimeRandomDirectionGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SlimeRandomDirectionGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="snackgoal" tabindex="-1"><a class="header-anchor" href="#snackgoal"><span><code>SnackGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SnackGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  std::vector&lt;ItemDescriptor&gt; mItems;</span>
<span class="line">  unsigned __int64 mCooldown;</span>
<span class="line">  const int mSnackCooldownTotal;</span>
<span class="line">  const int mCooldownMin;</span>
<span class="line">  const int mStopChance;</span>
<span class="line">  TempEPtr&lt;Actor&gt; mTarget;</span>
<span class="line">  std::unique_ptr&lt;Path&gt; mPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="snackgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#snackgoal-vtbl"><span><code>SnackGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SnackGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  int (__fastcall *getRandomEatingEnd)(SnackGoal *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sneezegoal" tabindex="-1"><a class="header-anchor" href="#sneezegoal"><span><code>SneezeGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SneezeGoal : Goal</span>
<span class="line">{</span>
<span class="line">  int mCooldown;</span>
<span class="line">  int mCooldownTimer;</span>
<span class="line">  float mProbability;</span>
<span class="line">  int mPreSneezeTimer;</span>
<span class="line">  float mDropItemChance;</span>
<span class="line">  std::string mLootTable;</span>
<span class="line">  LevelSoundEvent mSneezeSound;</span>
<span class="line">  LevelSoundEvent mPreSneezeSound;</span>
<span class="line">  float mPrepareTime;</span>
<span class="line">  const std::vector&lt;MobDescriptor&gt; mReactMobFilters;</span>
<span class="line">  float mReactWithin;</span>
<span class="line">  Mob *mMob;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sneezegoal-vtbl" tabindex="-1"><a class="header-anchor" href="#sneezegoal-vtbl"><span><code>SneezeGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SneezeGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stalkandpounceontargetgoal" tabindex="-1"><a class="header-anchor" href="#stalkandpounceontargetgoal"><span><code>StalkAndPounceOnTargetGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) StalkAndPounceOnTargetGoal : Goal</span>
<span class="line">{</span>
<span class="line">  float mStalkSpeed;</span>
<span class="line">  float mStalkingMaxDistanceSqr;</span>
<span class="line">  float mLeapHeight;</span>
<span class="line">  float mLeapDistance;</span>
<span class="line">  float mMaxPounceDistanceSqr;</span>
<span class="line">  float mStrikeDistanceSqr;</span>
<span class="line">  int mInterestedTicks;</span>
<span class="line">  int mStuckTicks;</span>
<span class="line">  Tick mEndTimestamp;</span>
<span class="line">  ActorFilterGroup mStuckBlockList;</span>
<span class="line">  _BYTE mState[1];</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  bool mSetPersistent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stalkandpounceontargetgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#stalkandpounceontargetgoal-vtbl"><span><code>StalkAndPounceOnTargetGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StalkAndPounceOnTargetGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompattackdefinition" tabindex="-1"><a class="header-anchor" href="#stompattackdefinition"><span><code>StompAttackDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StompAttackDefinition : MeleeAttackDefinition</span>
<span class="line">{</span>
<span class="line">  float mStompRangeMultiplier;</span>
<span class="line">  float mNoDamageRangeMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompattackdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#stompattackdefinition-vtbl"><span><code>StompAttackDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StompAttackDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompattackgoal" tabindex="-1"><a class="header-anchor" href="#stompattackgoal"><span><code>StompAttackGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StompAttackGoal : MeleeAttackGoal</span>
<span class="line">{</span>
<span class="line">  float mStompRangeMultiplier;</span>
<span class="line">  float mNoDamageRangeMultiplier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompattackgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#stompattackgoal-vtbl"><span><code>StompAttackGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StompAttackGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  void (__fastcall *_attemptMoveToTarget)(MeleeAttackGoal *this, Actor *);</span>
<span class="line">  void (__fastcall *_attemptAttackTarget)(MeleeAttackGoal *this, Actor *, float, float, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompblockgoal" tabindex="-1"><a class="header-anchor" href="#stompblockgoal"><span><code>StompBlockGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) StompBlockGoal : BaseMoveToBlockGoal</span>
<span class="line">{</span>
<span class="line">  const Block *mBlockToRemove;</span>
<span class="line">  int mTicksSinceReachedGoal;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompblockgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#stompblockgoal-vtbl"><span><code>StompBlockGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StompBlockGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);</span>
<span class="line">  void (__fastcall *_createBreakProgressParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_createDestroyParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_playBreakProgressSound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_playDestroySound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6" tabindex="-1"><a class="header-anchor" href="#stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6"><span><code>StompBlockGoal::findTargetBlock::__l2::&lt;lambda_a693b3bf6a29e3a3addea54b11f109b6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StompBlockGoal::findTargetBlock::__l2::&lt;lambda_a693b3bf6a29e3a3addea54b11f109b6&gt;</span>
<span class="line">{</span>
<span class="line">  StompBlockGoal *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompegggoal" tabindex="-1"><a class="header-anchor" href="#stompegggoal"><span><code>StompEggGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StompEggGoal : StompBlockGoal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stompegggoal-vtbl" tabindex="-1"><a class="header-anchor" href="#stompegggoal-vtbl"><span><code>StompEggGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StompEggGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);</span>
<span class="line">  void (__fastcall *_createBreakProgressParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_createDestroyParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_playBreakProgressSound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">  void (__fastcall *_playDestroySound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strolltowardsvillagegoal" tabindex="-1"><a class="header-anchor" href="#strolltowardsvillagegoal"><span><code>StrollTowardsVillageGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) StrollTowardsVillageGoal : MoveToVillageGoal</span>
<span class="line">{</span>
<span class="line">  float mStartChance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strolltowardsvillagegoal-vtbl" tabindex="-1"><a class="header-anchor" href="#strolltowardsvillagegoal-vtbl"><span><code>StrollTowardsVillageGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StrollTowardsVillageGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);</span>
<span class="line">  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);</span>
<span class="line">  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);</span>
<span class="line">  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);</span>
<span class="line">  BlockPos *(__fastcall *_selectRandomPosInVillage)(MoveToVillageGoal *this, BlockPos *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swellgoal" tabindex="-1"><a class="header-anchor" href="#swellgoal"><span><code>SwellGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwellGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Creeper *mCreeper;</span>
<span class="line">  float mStartSwellDist;</span>
<span class="line">  float mStopSwellDist;</span>
<span class="line">  TempEPtr&lt;Actor&gt; mTarget;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swellgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#swellgoal-vtbl"><span><code>SwellGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwellGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimidledefinition" tabindex="-1"><a class="header-anchor" href="#swimidledefinition"><span><code>SwimIdleDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimIdleDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mSuccessRate;</span>
<span class="line">  float mIdleTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimidledefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#swimidledefinition-vtbl"><span><code>SwimIdleDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimIdleDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimidlegoal" tabindex="-1"><a class="header-anchor" href="#swimidlegoal"><span><code>SwimIdleGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimIdleGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mTicks;</span>
<span class="line">  int mIdleTicks;</span>
<span class="line">  float mSuccessRate;</span>
<span class="line">  Vec3 mWantedPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimidlegoal-vtbl" tabindex="-1"><a class="header-anchor" href="#swimidlegoal-vtbl"><span><code>SwimIdleGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimIdleGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwanderdefinition" tabindex="-1"><a class="header-anchor" href="#swimwanderdefinition"><span><code>SwimWanderDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimWanderDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mInterval;</span>
<span class="line">  float mLookAheadDistance;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  float mWanderTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwanderdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#swimwanderdefinition-vtbl"><span><code>SwimWanderDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimWanderDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwandergoal" tabindex="-1"><a class="header-anchor" href="#swimwandergoal"><span><code>SwimWanderGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimWanderGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  int mTicks;</span>
<span class="line">  int mWanderTicks;</span>
<span class="line">  float mInterval;</span>
<span class="line">  float mLookAheadDistance;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  Vec3 mWanted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwandergoal-vtbl" tabindex="-1"><a class="header-anchor" href="#swimwandergoal-vtbl"><span><code>SwimWanderGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimWanderGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwithentitydefinition" tabindex="-1"><a class="header-anchor" href="#swimwithentitydefinition"><span><code>SwimWithEntityDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimWithEntityDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mSuccessRate;</span>
<span class="line">  float mChanceToStop;</span>
<span class="line">  float mIntervalRefreshTime;</span>
<span class="line">  float mCatchUpThreshold;</span>
<span class="line">  float mMatchDirectionThreshold;</span>
<span class="line">  float mCatchUpMultiplier;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  float mSearchRange;</span>
<span class="line">  float mStopDistance;</span>
<span class="line">  std::vector&lt;MobDescriptor&gt; mTargetTypes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwithentitydefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#swimwithentitydefinition-vtbl"><span><code>SwimWithEntityDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimWithEntityDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwithentitygoal" tabindex="-1"><a class="header-anchor" href="#swimwithentitygoal"><span><code>SwimWithEntityGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwimWithEntityGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  TempEPtr&lt;Actor&gt; mFollowing;</span>
<span class="line">  int mIntervalRefreshTicks;</span>
<span class="line">  int mIntervalTicks;</span>
<span class="line">  float mChanceToStop;</span>
<span class="line">  float mSuccessRate;</span>
<span class="line">  float mCatchUpThreshold;</span>
<span class="line">  float mMatchDirectionThreshold;</span>
<span class="line">  float mCatchUpMultiplier;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  float mSearchRange;</span>
<span class="line">  float mStopDistance;</span>
<span class="line">  SwimWithEntityGoal::EntityGoals mCurrentGoal;</span>
<span class="line">  std::vector&lt;MobDescriptor&gt; mTargetTypes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swimwithentitygoal-vtbl" tabindex="-1"><a class="header-anchor" href="#swimwithentitygoal-vtbl"><span><code>SwimWithEntityGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwimWithEntityGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackdefinition" tabindex="-1"><a class="header-anchor" href="#swoopattackdefinition"><span><code>SwoopAttackDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwoopAttackDefinition : BaseGoalDefinition</span>
<span class="line">{</span>
<span class="line">  float mDamageReach;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  FloatRange mCooldownTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackdefinition-vtbl" tabindex="-1"><a class="header-anchor" href="#swoopattackdefinition-vtbl"><span><code>SwoopAttackDefinition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwoopAttackDefinition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);</span>
<span class="line">  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackgoal" tabindex="-1"><a class="header-anchor" href="#swoopattackgoal"><span><code>SwoopAttackGoal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwoopAttackGoal : Goal</span>
<span class="line">{</span>
<span class="line">  Mob *mMob;</span>
<span class="line">  bool mHurtTarget;</span>
<span class="line">  int mAttackTicks;</span>
<span class="line">  float mDamageReach;</span>
<span class="line">  float mSpeedMultiplier;</span>
<span class="line">  FloatRange mCooldownTicks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackgoal-vtbl" tabindex="-1"><a class="header-anchor" href="#swoopattackgoal-vtbl"><span><code>SwoopAttackGoal_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwoopAttackGoal_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Goal)(Goal *this);</span>
<span class="line">  bool (__fastcall *canUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canContinueToUse)(Goal *this);</span>
<span class="line">  bool (__fastcall *canBeInterrupted)(Goal *this);</span>
<span class="line">  void (__fastcall *start)(Goal *this);</span>
<span class="line">  void (__fastcall *stop)(Goal *this);</span>
<span class="line">  void (__fastcall *tick)(Goal *this);</span>
<span class="line">  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);</span>
<span class="line">  bool (__fastcall *isTargetGoal)(Goal *this);</span>
<span class="line">  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253" tabindex="-1"><a class="header-anchor" href="#swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253"><span><code>SwoopAttackDefinition::buildSchema::__l2::&lt;lambda_0a8e5f314faa38471a21cb2cdc3a3253&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwoopAttackDefinition::buildSchema::__l2::&lt;lambda_0a8e5f314faa38471a21cb2cdc3a3253&gt;</span>
<span class="line">{</span>
<span class="line">  bool cooldownJsonRequired;</span>
<span class="line">  std::string cooldownField;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5" tabindex="-1"><a class="header-anchor" href="#swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5"><span><code>SwoopAttackDefinition::buildSchema::__l2::&lt;lambda_dac5f2c072a8807319193c03bd4687d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SwoopAttackDefinition::buildSchema::__l2::&lt;lambda_dac5f2c072a8807319193c03bd4687d5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892" tabindex="-1"><a class="header-anchor" href="#smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892"><span><code>SmithingTableContainerManagerController::_setupCallbacks::__l8::&lt;lambda_7fd07675839948997f4dbbeb20ca8892&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SmithingTableContainerManagerController::_setupCallbacks::__l8::&lt;lambda_7fd07675839948997f4dbbeb20ca8892&gt;</span>
<span class="line">{</span>
<span class="line">  SmithingTableContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56" tabindex="-1"><a class="header-anchor" href="#smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56"><span><code>SmithingTableContainerManagerController::_setupCallbacks::__l5::&lt;lambda_6f8bbbdf91b02ffa39d5070bc0fe2f56&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SmithingTableContainerManagerController::_setupCallbacks::__l5::&lt;lambda_6f8bbbdf91b02ffa39d5070bc0fe2f56&gt;</span>
<span class="line">{</span>
<span class="line">  SmithingTableContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb" tabindex="-1"><a class="header-anchor" href="#stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb"><span><code>StonecutterContainerManagerController::_setupCallbacks::__l2::&lt;lambda_14fc1e693546ebebc2676629b20a40fb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StonecutterContainerManagerController::_setupCallbacks::__l2::&lt;lambda_14fc1e693546ebebc2676629b20a40fb&gt;</span>
<span class="line">{</span>
<span class="line">  StonecutterContainerManagerController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70" tabindex="-1"><a class="header-anchor" href="#stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70"><span><code>StonecutterContainerManagerModel::getResultForItem::__l2::&lt;lambda_941bbeac7973bc74b49ff8e09c55ff70&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StonecutterContainerManagerModel::getResultForItem::__l2::&lt;lambda_941bbeac7973bc74b49ff8e09c55ff70&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::reference_wrapper&lt;Recipe const &gt;&gt; *recipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spikefeature-endspike" tabindex="-1"><a class="header-anchor" href="#spikefeature-endspike"><span><code>SpikeFeature::EndSpike</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpikeFeature::EndSpike</span>
<span class="line">{</span>
<span class="line">  const int mCenterX;</span>
<span class="line">  const int mCenterZ;</span>
<span class="line">  const int mRadius;</span>
<span class="line">  const int mHeight;</span>
<span class="line">  const bool mGuarded;</span>
<span class="line">  const AABB mTopBoundingBox;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spikefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#spikefeature-vtbl"><span><code>SpikeFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SpikeFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatteredfeaturestart" tabindex="-1"><a class="header-anchor" href="#scatteredfeaturestart"><span><code>ScatteredFeatureStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatteredFeatureStart : StructureStart</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatteredfeaturestart-vtbl" tabindex="-1"><a class="header-anchor" href="#scatteredfeaturestart-vtbl"><span><code>ScatteredFeatureStart_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScatteredFeatureStart_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureStart)(StructureStart *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  bool (__fastcall *isValid)(StructureStart *this);</span>
<span class="line">  StructureFeatureType (__fastcall *getType)(StructureStart *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strongholdfeature" tabindex="-1"><a class="header-anchor" href="#strongholdfeature"><span><code>StrongholdFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StrongholdFeature : StructureFeature</span>
<span class="line">{</span>
<span class="line">  bool isSpotSelected;</span>
<span class="line">  const Biome *forceBiomeOverride;</span>
<span class="line">  ChunkPos selectedChunks[3];</span>
<span class="line">  VillageFeature *villages;</span>
<span class="line">  std::mutex positionMutex;</span>
<span class="line">  const int TOTAL_VILLAGE_STRONGHOLDS;</span>
<span class="line">  const int GRID_SIZE;</span>
<span class="line">  const int GRID_INSET;</span>
<span class="line">  const int MIN_STRONGHOLD_DISTANCE;</span>
<span class="line">  const float STRONGHOLD_CHANCE;</span>
<span class="line">  const int MAX_GRID_SEARCH_DISTANCE;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strongholdfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#strongholdfeature-vtbl"><span><code>StrongholdFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StrongholdFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureFeature)(StructureFeature *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);</span>
<span class="line">  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);</span>
<span class="line">  std::unique_ptr&lt;StructureStart&gt; *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr&lt;StructureStart&gt; *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);</span>
<span class="line">  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);</span>
<span class="line">  std::vector&lt;BlockPos&gt; *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector&lt;BlockPos&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckfeature" tabindex="-1"><a class="header-anchor" href="#shipwreckfeature"><span><code>ShipwreckFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShipwreckFeature : StructureFeature</span>
<span class="line">{</span>
<span class="line">  int mSpacing;</span>
<span class="line">  int mMinSeparation;</span>
<span class="line">  OceanMonumentFeature *mMonument;</span>
<span class="line">  std::vector&lt;int&gt; mAllowedBiomes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#shipwreckfeature-vtbl"><span><code>ShipwreckFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShipwreckFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureFeature)(StructureFeature *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);</span>
<span class="line">  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);</span>
<span class="line">  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);</span>
<span class="line">  std::unique_ptr&lt;StructureStart&gt; *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr&lt;StructureStart&gt; *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);</span>
<span class="line">  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);</span>
<span class="line">  std::vector&lt;BlockPos&gt; *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector&lt;BlockPos&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckstart" tabindex="-1"><a class="header-anchor" href="#shipwreckstart"><span><code>ShipwreckStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShipwreckStart : StructureStart</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckstart-vtbl" tabindex="-1"><a class="header-anchor" href="#shipwreckstart-vtbl"><span><code>ShipwreckStart_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShipwreckStart_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureStart)(StructureStart *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  bool (__fastcall *isValid)(StructureStart *this);</span>
<span class="line">  StructureFeatureType (__fastcall *getType)(StructureStart *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckpiece" tabindex="-1"><a class="header-anchor" href="#shipwreckpiece"><span><code>ShipwreckPiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShipwreckPiece : StructurePiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shipwreckpiece-vtbl" tabindex="-1"><a class="header-anchor" href="#shipwreckpiece-vtbl"><span><code>ShipwreckPiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShipwreckPiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strongholdstart" tabindex="-1"><a class="header-anchor" href="#strongholdstart"><span><code>StrongholdStart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) StrongholdStart : StructureStart</span>
<span class="line">{</span>
<span class="line">  bool valid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strongholdstart-vtbl" tabindex="-1"><a class="header-anchor" href="#strongholdstart-vtbl"><span><code>StrongholdStart_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StrongholdStart_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructureStart)(StructureStart *this);</span>
<span class="line">  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  bool (__fastcall *isValid)(StructureStart *this);</span>
<span class="line">  StructureFeatureType (__fastcall *getType)(StructureStart *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sandfeature" tabindex="-1"><a class="header-anchor" href="#sandfeature"><span><code>SandFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SandFeature : Feature</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">  int mRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sandfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#sandfeature-vtbl"><span><code>SandFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SandFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="springfeature" tabindex="-1"><a class="header-anchor" href="#springfeature"><span><code>SpringFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpringFeature : Feature</span>
<span class="line">{</span>
<span class="line">  const Block *mBlock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="springfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#springfeature-vtbl"><span><code>SpringFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SpringFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seaanemonefeature" tabindex="-1"><a class="header-anchor" href="#seaanemonefeature"><span><code>SeaAnemoneFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SeaAnemoneFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seaanemonefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#seaanemonefeature-vtbl"><span><code>SeaAnemoneFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SeaAnemoneFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seagrassfeature" tabindex="-1"><a class="header-anchor" href="#seagrassfeature"><span><code>SeagrassFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SeagrassFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seagrassfeature-vtbl" tabindex="-1"><a class="header-anchor" href="#seagrassfeature-vtbl"><span><code>SeagrassFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SeagrassFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seapicklefeature" tabindex="-1"><a class="header-anchor" href="#seapicklefeature"><span><code>SeaPickleFeature</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SeaPickleFeature : Feature</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seapicklefeature-vtbl" tabindex="-1"><a class="header-anchor" href="#seapicklefeature-vtbl"><span><code>SeaPickleFeature_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SeaPickleFeature_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFeature)(IFeature *this);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *place)(IFeature *this, std::optional&lt;BlockPos&gt; *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);</span>
<span class="line">  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);</span>
<span class="line">  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;,rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; *, IWorldRegistriesProvider *);</span>
<span class="line">  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_9a0cf54a7c6987b75629f9dc8e25d931&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_9a0cf54a7c6987b75629f9dc8e25d931&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578"><span><code>SimpleTreeTrunk::_buildSchema::__l4::&lt;lambda_5a49cb9530c9848feed416a429bb7578&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l4::&lt;lambda_5a49cb9530c9848feed416a429bb7578&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_aa946525ce16594a79edba5c0ce3c281&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_aa946525ce16594a79edba5c0ce3c281&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_334c50db7f7943517c1d62b1a1f6ed19&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_334c50db7f7943517c1d62b1a1f6ed19&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f"><span><code>SimpleTreeTrunk::_buildSchema::__l3::&lt;lambda_47acba9ca575e196af6184deb709b75f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l3::&lt;lambda_47acba9ca575e196af6184deb709b75f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_2694a72f79fa4fb7ed9ec7d7aeab4a73&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_2694a72f79fa4fb7ed9ec7d7aeab4a73&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_7204e36fc61c7f88675eae865e9c7faf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_7204e36fc61c7f88675eae865e9c7faf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_4f2736b071532fdaed6c3238c29de24e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_4f2736b071532fdaed6c3238c29de24e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_8fdc9b990dea9ddb2781ac8baaf6f522&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_8fdc9b990dea9ddb2781ac8baaf6f522&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_f6e5d4c154a8ae9bd1f6062d56bb7f2c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_f6e5d4c154a8ae9bd1f6062d56bb7f2c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_5fd9c82cf29ce0f35711c88be0cbb321&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_5fd9c82cf29ce0f35711c88be0cbb321&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_6b8601fb6dc02f88ec8688cedf2edab9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_6b8601fb6dc02f88ec8688cedf2edab9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1"><span><code>SimpleTreeCanopy::_buildSchema::__l5::&lt;lambda_8a5617fb33e81e3200dd8bc1f270cae1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l5::&lt;lambda_8a5617fb33e81e3200dd8bc1f270cae1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_18810eaec2e6274e1efb268878dc3223&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_18810eaec2e6274e1efb268878dc3223&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_633d5d73bf0d4ff5fb3df6ad3999b270&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_633d5d73bf0d4ff5fb3df6ad3999b270&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_f2a04e346fc5c98f20440d9e14936534&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_f2a04e346fc5c98f20440d9e14936534&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_77c8da8048774a10c2ccfe7c1faf3c6d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_77c8da8048774a10c2ccfe7c1faf3c6d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_cd0696f13ce9c1d0a0684a62f58acccf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_cd0696f13ce9c1d0a0684a62f58acccf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_0eefe2a7ccefc732975aba87eb8f6491&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_0eefe2a7ccefc732975aba87eb8f6491&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_44126bd2db340a1b088a36a59ab8f28d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_44126bd2db340a1b088a36a59ab8f28d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_fa648e9934b0a3209964fba61308bc56&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_fa648e9934b0a3209964fba61308bc56&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_9239166c63a95c8d3353ef96d31987cf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_9239166c63a95c8d3353ef96d31987cf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_d107e4e3f3cf13351d394e09260d3385&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_d107e4e3f3cf13351d394e09260d3385&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_fca7866f235039823ff3afefd1b4d428&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_fca7866f235039823ff3afefd1b4d428&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_401c47c46ba1b3035efaf6e498058cf3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_401c47c46ba1b3035efaf6e498058cf3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_99ca4703c28310cf1b5d42a8a68d1b8e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_99ca4703c28310cf1b5d42a8a68d1b8e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_17d26e6de326e0cb30a78ea9675b8c02&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_17d26e6de326e0cb30a78ea9675b8c02&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_297f1d7cada4032c574fd76d19fb9c3f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_297f1d7cada4032c574fd76d19fb9c3f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_d0af4e4571eece2f793be4451608e3f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_d0af4e4571eece2f793be4451608e3f8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_66f16c7c6c79bb568769181120decd24&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_66f16c7c6c79bb568769181120decd24&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_1e212d0f28d8e1c31753c88b2200c09c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_1e212d0f28d8e1c31753c88b2200c09c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_413cf5e39448ade55c26a9f72b911c3f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_413cf5e39448ade55c26a9f72b911c3f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_2b1dec13cb427f4a2c5893153eb1ccfb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_2b1dec13cb427f4a2c5893153eb1ccfb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_b0526add3214a40b1f63dc26b9bec28d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_b0526add3214a40b1f63dc26b9bec28d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_9b8ce1f677434b80763cdd6dc239f214&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_9b8ce1f677434b80763cdd6dc239f214&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_eccc61c7bc240398106f0c3ec97076bb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_eccc61c7bc240398106f0c3ec97076bb&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9105a6e584fc9f5b2e1653f92d74c379&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9105a6e584fc9f5b2e1653f92d74c379&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_a0fd6c49d498a24c3b9bbf2f9aa7545f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_a0fd6c49d498a24c3b9bbf2f9aa7545f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1db25be528727c880487320b6fe0653e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1db25be528727c880487320b6fe0653e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9ee29b475dc6eac67a5ef09bf23aa45c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9ee29b475dc6eac67a5ef09bf23aa45c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_7b952491334165ac96498525aca14203&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_7b952491334165ac96498525aca14203&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca"><span><code>SimpleTreeCanopy::_buildSchema::__l5::&lt;lambda_96fb45bf078dfc128c134291bd87f0ca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l5::&lt;lambda_96fb45bf078dfc128c134291bd87f0ca&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_38fd965631aa6711f037f9057add2524&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_38fd965631aa6711f037f9057add2524&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_115e85a690f241af304488eebedeb75b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_115e85a690f241af304488eebedeb75b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_8088bcbb51f3e94fa86fc3e4425ccd25&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_8088bcbb51f3e94fa86fc3e4425ccd25&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_f0c0b10dbc699410ad3ed1c03f581df4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_f0c0b10dbc699410ad3ed1c03f581df4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c"><span><code>SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_b1ed281f6e775bfc2d4f3f8e4f04ba1c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::&lt;lambda_b1ed281f6e775bfc2d4f3f8e4f04ba1c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_6108a2c04376bc528045d0627f45713d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_6108a2c04376bc528045d0627f45713d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c670f8d9a276d5fde9772c8a3b6e2d11&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c670f8d9a276d5fde9772c8a3b6e2d11&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_aec916c82bceefd18b7ad1999ca05487&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_aec916c82bceefd18b7ad1999ca05487&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318"><span><code>SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_0007908e8fc98706aac256d2be0c4318&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::&lt;lambda_0007908e8fc98706aac256d2be0c4318&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatteredfeaturepiece" tabindex="-1"><a class="header-anchor" href="#scatteredfeaturepiece"><span><code>ScatteredFeaturePiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatteredFeaturePiece : StructurePiece</span>
<span class="line">{</span>
<span class="line">  int mWidth;</span>
<span class="line">  int mHeight;</span>
<span class="line">  int mDepth;</span>
<span class="line">  int mHeightPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatteredfeaturepiece-vtbl" tabindex="-1"><a class="header-anchor" href="#scatteredfeaturepiece-vtbl"><span><code>ScatteredFeaturePiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScatteredFeaturePiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swamplandhut" tabindex="-1"><a class="header-anchor" href="#swamplandhut"><span><code>SwamplandHut</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SwamplandHut : ScatteredFeaturePiece</span>
<span class="line">{</span>
<span class="line">  bool mSpawnedWitch;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swamplandhut-vtbl" tabindex="-1"><a class="header-anchor" href="#swamplandhut-vtbl"><span><code>SwamplandHut_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SwamplandHut_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strongholdpiece-vtbl" tabindex="-1"><a class="header-anchor" href="#strongholdpiece-vtbl"><span><code>StrongholdPiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StrongholdPiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstairsdown" tabindex="-1"><a class="header-anchor" href="#shstairsdown"><span><code>SHStairsDown</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHStairsDown : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool isSource;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstairsdown-vtbl" tabindex="-1"><a class="header-anchor" href="#shstairsdown-vtbl"><span><code>SHStairsDown_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHStairsDown_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shportalroom" tabindex="-1"><a class="header-anchor" href="#shportalroom"><span><code>SHPortalRoom</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHPortalRoom : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool hasPlacedMobSpawner;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shportalroom-vtbl" tabindex="-1"><a class="header-anchor" href="#shportalroom-vtbl"><span><code>SHPortalRoom_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHPortalRoom_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstartpiece" tabindex="-1"><a class="header-anchor" href="#shstartpiece"><span><code>SHStartPiece</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHStartPiece : SHStairsDown</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;StructurePiece *&gt; pendingChildren;</span>
<span class="line">  SHPortalRoom *portalRoom;</span>
<span class="line">  std::string imposedPiece;</span>
<span class="line">  std::string previousPiece;</span>
<span class="line">  std::vector&lt;PieceWeight&gt; pieceWeights;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstartpiece-vtbl" tabindex="-1"><a class="header-anchor" href="#shstartpiece-vtbl"><span><code>SHStartPiece_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHStartPiece_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shchestcorridor" tabindex="-1"><a class="header-anchor" href="#shchestcorridor"><span><code>SHChestCorridor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHChestCorridor : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool hasPlacedChest;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shchestcorridor-vtbl" tabindex="-1"><a class="header-anchor" href="#shchestcorridor-vtbl"><span><code>SHChestCorridor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHChestCorridor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shfillercorridor" tabindex="-1"><a class="header-anchor" href="#shfillercorridor"><span><code>SHFillerCorridor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHFillerCorridor : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  int steps;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shfillercorridor-vtbl" tabindex="-1"><a class="header-anchor" href="#shfillercorridor-vtbl"><span><code>SHFillerCorridor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHFillerCorridor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shfivecrossing" tabindex="-1"><a class="header-anchor" href="#shfivecrossing"><span><code>SHFiveCrossing</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHFiveCrossing : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool leftHigh;</span>
<span class="line">  bool leftLow;</span>
<span class="line">  bool rightHigh;</span>
<span class="line">  bool rightLow;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shfivecrossing-vtbl" tabindex="-1"><a class="header-anchor" href="#shfivecrossing-vtbl"><span><code>SHFiveCrossing_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHFiveCrossing_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shleftturn" tabindex="-1"><a class="header-anchor" href="#shleftturn"><span><code>SHLeftTurn</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHLeftTurn : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shleftturn-vtbl" tabindex="-1"><a class="header-anchor" href="#shleftturn-vtbl"><span><code>SHLeftTurn_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHLeftTurn_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shrightturn" tabindex="-1"><a class="header-anchor" href="#shrightturn"><span><code>SHRightTurn</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHRightTurn : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shrightturn-vtbl" tabindex="-1"><a class="header-anchor" href="#shrightturn-vtbl"><span><code>SHRightTurn_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHRightTurn_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shlibrary" tabindex="-1"><a class="header-anchor" href="#shlibrary"><span><code>SHLibrary</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHLibrary : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool isTall;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shlibrary-vtbl" tabindex="-1"><a class="header-anchor" href="#shlibrary-vtbl"><span><code>SHLibrary_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHLibrary_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shprisonhall" tabindex="-1"><a class="header-anchor" href="#shprisonhall"><span><code>SHPrisonHall</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHPrisonHall : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shprisonhall-vtbl" tabindex="-1"><a class="header-anchor" href="#shprisonhall-vtbl"><span><code>SHPrisonHall_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHPrisonHall_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shroomcrossing" tabindex="-1"><a class="header-anchor" href="#shroomcrossing"><span><code>SHRoomCrossing</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHRoomCrossing : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  int type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shroomcrossing-vtbl" tabindex="-1"><a class="header-anchor" href="#shroomcrossing-vtbl"><span><code>SHRoomCrossing_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHRoomCrossing_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstraight" tabindex="-1"><a class="header-anchor" href="#shstraight"><span><code>SHStraight</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SHStraight : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">  bool leftChild;</span>
<span class="line">  bool rightChild;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstraight-vtbl" tabindex="-1"><a class="header-anchor" href="#shstraight-vtbl"><span><code>SHStraight_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHStraight_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstraightstairsdown" tabindex="-1"><a class="header-anchor" href="#shstraightstairsdown"><span><code>SHStraightStairsDown</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHStraightStairsDown : StrongholdPiece</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shstraightstairsdown-vtbl" tabindex="-1"><a class="header-anchor" href="#shstraightstairsdown-vtbl"><span><code>SHStraightStairsDown_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SHStraightStairsDown_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StructurePiece)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);</span>
<span class="line">  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);</span>
<span class="line">  StructurePieceType (__fastcall *getType)(StructurePiece *this);</span>
<span class="line">  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector&lt;std::unique_ptr&lt;StructurePiece&gt;&gt; *, Random *);</span>
<span class="line">  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);</span>
<span class="line">  int (__fastcall *getWorldX)(StructurePiece *this, int, int);</span>
<span class="line">  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);</span>
<span class="line">  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);</span>
<span class="line">  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);</span>
<span class="line">  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="smoothstoneselector" tabindex="-1"><a class="header-anchor" href="#smoothstoneselector"><span><code>SmoothStoneSelector</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SmoothStoneSelector : BlockSelector</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="smoothstoneselector-vtbl" tabindex="-1"><a class="header-anchor" href="#smoothstoneselector-vtbl"><span><code>SmoothStoneSelector_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SmoothStoneSelector_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSelector)(BlockSelector *this);</span>
<span class="line">  const Block *(__fastcall *next)(BlockSelector *this, Random *, int, int, int, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sharedcounter-endcrystalitem" tabindex="-1"><a class="header-anchor" href="#sharedcounter-endcrystalitem"><span><code>SharedCounter&lt;EndCrystalItem&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SharedCounter&lt;EndCrystalItem&gt;</span>
<span class="line">{</span>
<span class="line">  EndCrystalItem *ptr;</span>
<span class="line">  std::atomic&lt;int&gt; share_count;</span>
<span class="line">  std::atomic&lt;int&gt; weak_count;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sharedptr-endcrystalitem" tabindex="-1"><a class="header-anchor" href="#sharedptr-endcrystalitem"><span><code>SharedPtr&lt;EndCrystalItem&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SharedPtr&lt;EndCrystalItem&gt;</span>
<span class="line">{</span>
<span class="line">  SharedCounter&lt;EndCrystalItem&gt; *pc;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sharedcounter-endgatewayblock" tabindex="-1"><a class="header-anchor" href="#sharedcounter-endgatewayblock"><span><code>SharedCounter&lt;EndGatewayBlock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SharedCounter&lt;EndGatewayBlock&gt;</span>
<span class="line">{</span>
<span class="line">  EndGatewayBlock *ptr;</span>
<span class="line">  std::atomic&lt;int&gt; share_count;</span>
<span class="line">  std::atomic&lt;int&gt; weak_count;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundchannelfmod" tabindex="-1"><a class="header-anchor" href="#soundchannelfmod"><span><code>SoundChannelFMOD</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundChannelFMOD</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd"><span><code>SoundSystemFMOD::_addToSoundCache::__l5::&lt;lambda_cae3fd833bb655085bfe054d224c3470&gt;::()::__l2::&lt;lambda_9b09a02bff452da82691cbf9ff79d1cd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::_addToSoundCache::__l5::&lt;lambda_cae3fd833bb655085bfe054d224c3470&gt;::()::__l2::&lt;lambda_9b09a02bff452da82691cbf9ff79d1cd&gt;</span>
<span class="line">{</span>
<span class="line">  FMOD::System *system;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3"><span><code>SoundSystemFMOD::_updateMusicStatus::__l5::&lt;lambda_8360d204e655f2c1c10b888daad4dfc3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::_updateMusicStatus::__l5::&lt;lambda_8360d204e655f2c1c10b888daad4dfc3&gt;</span>
<span class="line">{</span>
<span class="line">  SoundSystemFMOD *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea"><span><code>SoundSystemFMOD::stopMusic::__l8::&lt;lambda_6ef4ca1ed178cf81809ef2edf360f6ea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::stopMusic::__l8::&lt;lambda_6ef4ca1ed178cf81809ef2edf360f6ea&gt;</span>
<span class="line">{</span>
<span class="line">  SoundSystemFMOD *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab"><span><code>SoundSystemFMOD::loadRawFromMemory::__l8::&lt;lambda_5bb05d132cbf8074618a264696cff1ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::loadRawFromMemory::__l8::&lt;lambda_5bb05d132cbf8074618a264696cff1ab&gt;</span>
<span class="line">{</span>
<span class="line">  int numchannels;</span>
<span class="line">  int defaultfrequency;</span>
<span class="line">  SoundFormat format;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36"><span><code>SoundSystemFMOD::loadAsync::__l43::&lt;lambda_9e3fdf78c49eb3088301e0fd4fc6aa36&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::loadAsync::__l43::&lt;lambda_9e3fdf78c49eb3088301e0fd4fc6aa36&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Bedrock::Threading::AsyncDeferredResultT&lt;bool&gt; &gt; resultTask;</span>
<span class="line">  const Core::Path soundName;</span>
<span class="line">  SoundSystemFMOD *const __this;</span>
<span class="line">  std::shared_ptr&lt;Bedrock::Threading::IAsyncResult&lt;std::string &gt; &gt; ioTask;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0"><span><code>SoundSystemFMOD::_handleLooping::__l2::&lt;lambda_b390fbefbce80ef595f22443b108ead0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::_handleLooping::__l2::&lt;lambda_b390fbefbce80ef595f22443b108ead0&gt;</span>
<span class="line">{</span>
<span class="line">  SoundSystemFMOD *const __this;</span>
<span class="line">  unsigned __int64 soundHandle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="savable-state" tabindex="-1"><a class="header-anchor" href="#savable-state"><span><code>savable_state</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct savable_state</span>
<span class="line">{</span>
<span class="line">  int put_buffer;</span>
<span class="line">  int put_bits;</span>
<span class="line">  int last_dc_val[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strandbool" tabindex="-1"><a class="header-anchor" href="#strandbool"><span><code>StrAndBool</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) StrAndBool</span>
<span class="line">{</span>
<span class="line">  char *str;</span>
<span class="line">  bool b;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider" tabindex="-1"><a class="header-anchor" href="#serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider"><span><code>ServiceOverrider&lt;bool (__cdecl*)(AssertHandlerContext const &amp;)&gt;::ScopedOverrider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServiceOverrider&lt;bool (__cdecl*)(AssertHandlerContext const &amp;)&gt;::ScopedOverrider</span>
<span class="line">{</span>
<span class="line">  ServiceOverrider&lt;bool (__cdecl*)(AssertHandlerContext const &amp;)&gt; *mOverrider;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-fatcellvaluetype" tabindex="-1"><a class="header-anchor" href="#sfat-fatcellvaluetype"><span><code>SFAT::FATCellValueType</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::FATCellValueType</span>
<span class="line">{</span>
<span class="line">  unsigned int mPrev;</span>
<span class="line">  unsigned int mNext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filedescriptorrecord" tabindex="-1"><a class="header-anchor" href="#sfat-filedescriptorrecord"><span><code>SFAT::FileDescriptorRecord</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj SFAT::FileDescriptorRecord</span>
<span class="line">{</span>
<span class="line">  char mEntityName[128];</span>
<span class="line">  unsigned int mAttributes;</span>
<span class="line">  unsigned int mUniqueID;</span>
<span class="line">  unsigned __int64 mFileSize;</span>
<span class="line">  unsigned int mStartCluster;</span>
<span class="line">  unsigned int mCRC;</span>
<span class="line">  __int64 mTimeCreated;</span>
<span class="line">  __int64 mTimeModified;</span>
<span class="line">  unsigned int mLastCluster;</span>
<span class="line">  unsigned int mOldClusterTrace;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filebase" tabindex="-1"><a class="header-anchor" href="#sfat-filebase"><span><code>SFAT::FileBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::FileBase</span>
<span class="line">{</span>
<span class="line">  SFAT::FileBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  SFAT::FileStorageBase *mFileStorage;</span>
<span class="line">  unsigned int mAccessMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filebase-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-filebase-vtbl"><span><code>SFAT::FileBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::FileBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileBase)(SFAT::FileBase *this);</span>
<span class="line">  bool (__fastcall *isOpen)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *close)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *read)(SFAT::FileBase *this, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *write)(SFAT::FileBase *this, const void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *readAtPosition)(SFAT::FileBase *this, void *, unsigned __int64, __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *writeAtPosition)(SFAT::FileBase *this, const void *, unsigned __int64, __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *seek)(SFAT::FileBase *this, __int64, SFAT::SeekMode);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getPosition)(SFAT::FileBase *this, __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getSize)(SFAT::FileBase *this, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flush)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filestoragebase" tabindex="-1"><a class="header-anchor" href="#sfat-filestoragebase"><span><code>SFAT::FileStorageBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::FileStorageBase</span>
<span class="line">{</span>
<span class="line">  SFAT::FileStorageBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filestoragebase-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-filestoragebase-vtbl"><span><code>SFAT::FileStorageBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::FileStorageBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileStorageBase)(SFAT::FileStorageBase *this);</span>
<span class="line">  bool (__fastcall *fileExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *directoryExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *fileOrDirectoryExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *deleteFile)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *removeDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *renameFile)(SFAT::FileStorageBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *renameDirectory)(SFAT::FileStorageBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getFileSize)(SFAT::FileStorageBase *this, const char *, unsigned __int64 *);</span>
<span class="line">  bool (__fastcall *isFile)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *isDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *iterateThroughDirectory)(SFAT::FileStorageBase *this, const char *, unsigned int, std::function&lt;enum SFAT::ErrorCode __cdecl(bool &amp;,SFAT::FileDescriptorRecord const &amp;,std::string const &amp;)&gt;);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getFreeSpace)(SFAT::FileStorageBase *this, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createFileImpl)(SFAT::FileStorageBase *this, std::shared_ptr&lt;SFAT::FileBase&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filehandle" tabindex="-1"><a class="header-anchor" href="#sfat-filehandle"><span><code>SFAT::FileHandle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::FileHandle</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;SFAT::FileBase&gt; mFileImpl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatconfigurationbase" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatconfigurationbase"><span><code>SFAT::SplitFATConfigurationBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::SplitFATConfigurationBase</span>
<span class="line">{</span>
<span class="line">  SFAT::SplitFATConfigurationBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  volatile bool mIsReady;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-blockvirtualizationheader" tabindex="-1"><a class="header-anchor" href="#sfat-blockvirtualizationheader"><span><code>SFAT::BlockVirtualizationHeader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::BlockVirtualizationHeader</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 verificationCode;</span>
<span class="line">  unsigned __int8 id;</span>
<span class="line">  unsigned __int8 headerSize;</span>
<span class="line">  unsigned __int8 virtualBlocksCount;</span>
<span class="line">  unsigned __int8 scratchBlockIndex;</span>
<span class="line">  unsigned int dataCRC;</span>
<span class="line">  unsigned int headerCRC;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-blockvirtualizationdescriptor" tabindex="-1"><a class="header-anchor" href="#sfat-blockvirtualizationdescriptor"><span><code>SFAT::BlockVirtualizationDescriptor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::BlockVirtualizationDescriptor</span>
<span class="line">{</span>
<span class="line">  SFAT::BlockVirtualizationHeader header;</span>
<span class="line">  unsigned __int8 blockIndices[64];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-volumedescriptorextraparameters" tabindex="-1"><a class="header-anchor" href="#sfat-volumedescriptorextraparameters"><span><code>SFAT::VolumeDescriptorExtraParameters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VolumeDescriptorExtraParameters</span>
<span class="line">{</span>
<span class="line">  SFAT::BlockVirtualizationDescriptor descriptors[2];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-volumedescriptor" tabindex="-1"><a class="header-anchor" href="#sfat-volumedescriptor"><span><code>SFAT::VolumeDescriptor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VolumeDescriptor</span>
<span class="line">{</span>
<span class="line">  unsigned int mVolumeVerificationCode;</span>
<span class="line">  unsigned int mVersion;</span>
<span class="line">  unsigned int mVolumeDescriptorSize;</span>
<span class="line">  unsigned int mVolumeControlDataSize;</span>
<span class="line">  unsigned int mBlockControlDataSize;</span>
<span class="line">  unsigned int mMaxBlocksCount;</span>
<span class="line">  unsigned int mFirstClusterOffset;</span>
<span class="line">  unsigned int mClusterSizeInBytes;</span>
<span class="line">  unsigned int mChunkSizeInBytes;</span>
<span class="line">  unsigned int mBytesPerVolumeBlock;</span>
<span class="line">  unsigned int mFATCopies;</span>
<span class="line">  unsigned int mFirstFileDataBlockIndex;</span>
<span class="line">  unsigned int mFlags;</span>
<span class="line">  unsigned int mFileDescriptorRecordStorageSize;</span>
<span class="line">  unsigned int mMaxFileNameLength;</span>
<span class="line">  unsigned int mBytesPerSymbol;</span>
<span class="line">  $9C8DDCC8F5E8C56759E7410EBD92952D ___u16;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-bitset" tabindex="-1"><a class="header-anchor" href="#sfat-bitset"><span><code>SFAT::BitSet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::BitSet</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mSize;</span>
<span class="line">  std::vector&lt;unsigned __int64&gt; mElements;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-fatblock" tabindex="-1"><a class="header-anchor" href="#sfat-fatblock"><span><code>SFAT::FATBlock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::FATBlock</span>
<span class="line">{</span>
<span class="line">  const SFAT::VolumeDescriptor *mVolumeDescriptor;</span>
<span class="line">  unsigned int mBlockIndex;</span>
<span class="line">  unsigned int mStartClusterIndex;</span>
<span class="line">  unsigned int mEndClusterIndex;</span>
<span class="line">  std::vector&lt;SFAT::FATCellValueType&gt; mTable;</span>
<span class="line">  SFAT::BitSet mFreeClustersBitSet;</span>
<span class="line">  bool mIsCacheInSync;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-volumemanager" tabindex="-1"><a class="header-anchor" href="#sfat-volumemanager"><span><code>SFAT::VolumeManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::VolumeManager</span>
<span class="line">{</span>
<span class="line">  SFAT::VolumeDescriptor mVolumeDescriptor;</span>
<span class="line">  std::unique_ptr&lt;SFAT::FATDataManager&gt; mFATDataManager;</span>
<span class="line">  std::unique_ptr&lt;SFAT::DataBlockManager&gt; mDataBlockManager;</span>
<span class="line">  SFAT::SFATMutex mVolumeExpansionMutex;</span>
<span class="line">  SFAT::VolumeControlData mVolumeControlData;</span>
<span class="line">  std::shared_ptr&lt;SFAT::SplitFATConfigurationBase&gt; mLowLevelAccess;</span>
<span class="line">  SFAT::TransactionEventsLog mTransaction;</span>
<span class="line">  SFAT::BlockVirtualization mBlockVirtualization;</span>
<span class="line">  SFAT::FileSystemState mState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-sfatmutex" tabindex="-1"><a class="header-anchor" href="#sfat-sfatmutex"><span><code>SFAT::SFATMutex</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SFATMutex</span>
<span class="line">{</span>
<span class="line">  std::mutex mMutex;</span>
<span class="line">  volatile bool mLocked;</span>
<span class="line">  std::thread::id mThreadId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-fatdatamanager" tabindex="-1"><a class="header-anchor" href="#sfat-fatdatamanager"><span><code>SFAT::FATDataManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::FATDataManager</span>
<span class="line">{</span>
<span class="line">  const SFAT::VolumeDescriptor *mVolumeDescriptor;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;SFAT::FATBlock&gt;&gt; mFATBlocksCache;</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  SFAT::SFATMutex mFATBlockReadWriteMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-clusterdatacache" tabindex="-1"><a class="header-anchor" href="#sfat-clusterdatacache"><span><code>SFAT::ClusterDataCache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::ClusterDataCache</span>
<span class="line">{</span>
<span class="line">  unsigned int mClusterIndex;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mBuffer;</span>
<span class="line">  bool mIsCacheInSync;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-datablockmanager" tabindex="-1"><a class="header-anchor" href="#sfat-datablockmanager"><span><code>SFAT::DataBlockManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::DataBlockManager</span>
<span class="line">{</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  unsigned int mClustersPerFATBlock;</span>
<span class="line">  unsigned int mMaxPossibleBlocksCount;</span>
<span class="line">  unsigned __int64 mClusterSize;</span>
<span class="line">  unsigned __int64 mDataBlockSize;</span>
<span class="line">  std::map&lt;unsigned int,SFAT::ClusterDataCache&gt; mCachedClusters;</span>
<span class="line">  SFAT::SFATMutex mClusterReadWriteMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-volumecontroldata" tabindex="-1"><a class="header-anchor" href="#sfat-volumecontroldata"><span><code>SFAT::VolumeControlData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VolumeControlData</span>
<span class="line">{</span>
<span class="line">  volatile unsigned int mCountAllocatedDataBlocks;</span>
<span class="line">  volatile unsigned int mCountAllocatedFATBlocks;</span>
<span class="line">  volatile unsigned int mCountTotalDataClusters;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-transactionevent" tabindex="-1"><a class="header-anchor" href="#sfat-transactionevent"><span><code>SFAT::TransactionEvent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SFAT::TransactionEvent</span>
<span class="line">{</span>
<span class="line">  SFAT::TransactionEventType mEventType;</span>
<span class="line">  $D35D2DBDCE7D4A8DBDCD409945A10809 ___u1;</span>
<span class="line">  unsigned int mCRC;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-transactioneventslog" tabindex="-1"><a class="header-anchor" href="#sfat-transactioneventslog"><span><code>SFAT::TransactionEventsLog</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::TransactionEventsLog</span>
<span class="line">{</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  std::unordered_map&lt;unsigned int,SFAT::TransactionEvent&gt; mFATBlockChanges;</span>
<span class="line">  std::unordered_map&lt;unsigned int,SFAT::TransactionEvent&gt; mFileClusterChanges;</span>
<span class="line">  std::unordered_map&lt;unsigned int,SFAT::TransactionEvent&gt; mDirectoryClusterChanges;</span>
<span class="line">  bool mIsInTransaction;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mClusterDataBuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-blockvirtualization" tabindex="-1"><a class="header-anchor" href="#sfat-blockvirtualization"><span><code>SFAT::BlockVirtualization</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::BlockVirtualization</span>
<span class="line">{</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  unsigned __int64 mDescriptorIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-dataplacementstrategybase" tabindex="-1"><a class="header-anchor" href="#sfat-dataplacementstrategybase"><span><code>SFAT::DataPlacementStrategyBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::DataPlacementStrategyBase</span>
<span class="line">{</span>
<span class="line">  SFAT::DataPlacementStrategyBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  SFAT::VirtualFileSystem *mVirtualFileSystem;</span>
<span class="line">  bool mIsActive;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-dataplacementstrategybase-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-dataplacementstrategybase-vtbl"><span><code>SFAT::DataPlacementStrategyBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::DataPlacementStrategyBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~DataPlacementStrategyBase)(SFAT::DataPlacementStrategyBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *prepareForWriteTransaction)(SFAT::DataPlacementStrategyBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *performDefragmentaionOnTransactionEnd)(SFAT::DataPlacementStrategyBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *findFreeCluster)(SFAT::DataPlacementStrategyBase *this, unsigned int *, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-recoverymanager" tabindex="-1"><a class="header-anchor" href="#sfat-recoverymanager"><span><code>SFAT::RecoveryManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::RecoveryManager</span>
<span class="line">{</span>
<span class="line">  SFAT::RecoveryManager_vtbl *__vftable /*VFT*/;</span>
<span class="line">  SFAT::VolumeManager *mVolumeManager;</span>
<span class="line">  SFAT::VirtualFileSystem *mVirtualFileSystem;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mClusterDataBuffer;</span>
<span class="line">  std::vector&lt;SFAT::CellTestResult&gt; mCellsWithProblem;</span>
<span class="line">  std::vector&lt;SFAT::ClusterChainTestResult&gt; mClusterChainsWithProblem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-recoverymanager-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-recoverymanager-vtbl"><span><code>SFAT::RecoveryManager_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::RecoveryManager_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RecoveryManager)(SFAT::RecoveryManager *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem"><span><code>SFAT::VirtualFileSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem</span>
<span class="line">{</span>
<span class="line">  SFAT::VolumeManager mVolumeManager;</span>
<span class="line">  bool mIsValid;</span>
<span class="line">  std::unique_ptr&lt;SFAT::RecoveryManager&gt; mRecoveryManager;</span>
<span class="line">  unsigned int mClusterSize;</span>
<span class="line">  std::unique_ptr&lt;SFAT::MemoryBufferPool&gt; mMemoryBufferPool;</span>
<span class="line">  std::shared_ptr&lt;SFAT::DataPlacementStrategyBase&gt; mDefragmentation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-celltestresult" tabindex="-1"><a class="header-anchor" href="#sfat-celltestresult"><span><code>SFAT::CellTestResult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SFAT::CellTestResult</span>
<span class="line">{</span>
<span class="line">  SFAT::IntegrityStatus mStatus;</span>
<span class="line">  unsigned int mClusterIndex;</span>
<span class="line">  unsigned int mRecordIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-descriptorlocation" tabindex="-1"><a class="header-anchor" href="#sfat-descriptorlocation"><span><code>SFAT::DescriptorLocation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SFAT::DescriptorLocation</span>
<span class="line">{</span>
<span class="line">  unsigned int mDirectoryStartClusterIndex;</span>
<span class="line">  unsigned int mDescriptorClusterIndex;</span>
<span class="line">  unsigned int mRecordIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-clusterchaintestresult" tabindex="-1"><a class="header-anchor" href="#sfat-clusterchaintestresult"><span><code>SFAT::ClusterChainTestResult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SFAT::ClusterChainTestResult</span>
<span class="line">{</span>
<span class="line">  SFAT::IntegrityStatus mStatus;</span>
<span class="line">  unsigned int mClusterIndex;</span>
<span class="line">  SFAT::DescriptorLocation mLocation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-memorybufferpool" tabindex="-1"><a class="header-anchor" href="#sfat-memorybufferpool"><span><code>SFAT::MemoryBufferPool</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SFAT::MemoryBufferPool</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;std::vector&lt;unsigned char&gt;&gt;&gt; mFreeResourceBlocks;</span>
<span class="line">  const unsigned __int64 mBufferSize;</span>
<span class="line">  SFAT::SFATMutex mBufferUpdates;</span>
<span class="line">  const unsigned __int64 mRecommendedReourceMaxCount;</span>
<span class="line">  volatile int mTotalCountUsed;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatconfigurationbase-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatconfigurationbase-vtbl"><span><code>SFAT::SplitFATConfigurationBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::SplitFATConfigurationBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SplitFATConfigurationBase)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *shutdown)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *create)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *close)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::FileHandle *(__fastcall *getClusterDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);</span>
<span class="line">  SFAT::FileHandle *(__fastcall *getFATDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *remove)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flushFATDataFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flushClusterDataFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *allocateDataBlock)(SFAT::SplitFATConfigurationBase *this, SFAT::VolumeManager *, unsigned int);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *defragmentationOnTransactionEnd)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  bool (__fastcall *clusterDataFileExists)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  bool (__fastcall *fatDataFileExists)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createDataPlacementStrategy)(SFAT::SplitFATConfigurationBase *this, std::shared_ptr&lt;SFAT::DataPlacementStrategyBase&gt; *, SFAT::VolumeManager *, SFAT::VirtualFileSystem *);</span>
<span class="line">  bool (__fastcall *isTransactionSupported)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createTransactionFiles)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *tryOpenDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *tryOpenDataTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupDataTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupTempTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *finalizeTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  void (__fastcall *getTempTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  void (__fastcall *getDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-sfatrecursivemutex" tabindex="-1"><a class="header-anchor" href="#sfat-sfatrecursivemutex"><span><code>SFAT::SFATRecursiveMutex</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SFATRecursiveMutex</span>
<span class="line">{</span>
<span class="line">  std::recursive_mutex mMutex;</span>
<span class="line">  std::atomic&lt;int&gt; mLockCount;</span>
<span class="line">  std::thread::id mThreadId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatfilestorage" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatfilestorage"><span><code>SFAT::SplitFATFileStorage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SplitFATFileStorage : SFAT::FileStorageBase</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;SFAT::VirtualFileSystem&gt; mVirtualFileSystem;</span>
<span class="line">  SFAT::SFATRecursiveMutex mTransactionMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatfilestorage-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatfilestorage-vtbl"><span><code>SFAT::SplitFATFileStorage_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::SplitFATFileStorage_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileStorageBase)(SFAT::FileStorageBase *this);</span>
<span class="line">  bool (__fastcall *fileExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *directoryExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *fileOrDirectoryExists)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *deleteFile)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *removeDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *renameFile)(SFAT::FileStorageBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *renameDirectory)(SFAT::FileStorageBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getFileSize)(SFAT::FileStorageBase *this, const char *, unsigned __int64 *);</span>
<span class="line">  bool (__fastcall *isFile)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  bool (__fastcall *isDirectory)(SFAT::FileStorageBase *this, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *iterateThroughDirectory)(SFAT::FileStorageBase *this, const char *, unsigned int, std::function&lt;enum SFAT::ErrorCode __cdecl(bool &amp;,SFAT::FileDescriptorRecord const &amp;,std::string const &amp;)&gt;);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getFreeSpace)(SFAT::FileStorageBase *this, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createFileImpl)(SFAT::FileStorageBase *this, std::shared_ptr&lt;SFAT::FileBase&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbifile" tabindex="-1"><a class="header-anchor" href="#stbifile"><span><code>StbiFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StbiFile</span>
<span class="line">{</span>
<span class="line">  Core::File mFile;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="savegamesecurestorage" tabindex="-1"><a class="header-anchor" href="#savegamesecurestorage"><span><code>SaveGameSecureStorage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) SaveGameSecureStorage : SecureStorage</span>
<span class="line">{</span>
<span class="line">  std::string mSettingsPath;</span>
<span class="line">  Json::Value mJsonValue;</span>
<span class="line">  bool mInitialized;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="savegamesecurestorage-vtbl" tabindex="-1"><a class="header-anchor" href="#savegamesecurestorage-vtbl"><span><code>SaveGameSecureStorage_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SaveGameSecureStorage_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SecureStorage)(SecureStorage *this);</span>
<span class="line">  bool (__fastcall *add)(SecureStorage *this, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *addOrUpdate)(SecureStorage *this, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *remove)(SecureStorage *this, const std::string *);</span>
<span class="line">  bool (__fastcall *get)(SecureStorage *this, const std::string *, std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-huffman" tabindex="-1"><a class="header-anchor" href="#stbi-huffman"><span><code>stbi__huffman</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbi__huffman</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 fast[512];</span>
<span class="line">  unsigned __int16 code[256];</span>
<span class="line">  unsigned __int8 values[256];</span>
<span class="line">  unsigned __int8 size[257];</span>
<span class="line">  unsigned int maxcode[18];</span>
<span class="line">  int delta[17];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-jpeg-unnamed-type-img-comp" tabindex="-1"><a class="header-anchor" href="#stbi-jpeg-unnamed-type-img-comp"><span><code>stbi__jpeg::&lt;unnamed_type_img_comp&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbi__jpeg::&lt;unnamed_type_img_comp&gt;</span>
<span class="line">{</span>
<span class="line">  int id;</span>
<span class="line">  int h;</span>
<span class="line">  int v;</span>
<span class="line">  int tq;</span>
<span class="line">  int hd;</span>
<span class="line">  int ha;</span>
<span class="line">  int dc_pred;</span>
<span class="line">  int x;</span>
<span class="line">  int y;</span>
<span class="line">  int w2;</span>
<span class="line">  int h2;</span>
<span class="line">  unsigned __int8 *data;</span>
<span class="line">  void *raw_data;</span>
<span class="line">  void *raw_coeff;</span>
<span class="line">  unsigned __int8 *linebuf;</span>
<span class="line">  __int16 *coeff;</span>
<span class="line">  int coeff_w;</span>
<span class="line">  int coeff_h;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-jpeg" tabindex="-1"><a class="header-anchor" href="#stbi-jpeg"><span><code>stbi__jpeg</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbi__jpeg</span>
<span class="line">{</span>
<span class="line">  stbi__context *s;</span>
<span class="line">  stbi__huffman huff_dc[4];</span>
<span class="line">  stbi__huffman huff_ac[4];</span>
<span class="line">  unsigned __int16 dequant[4][64];</span>
<span class="line">  __int16 fast_ac[4][512];</span>
<span class="line">  int img_h_max;</span>
<span class="line">  int img_v_max;</span>
<span class="line">  int img_mcu_x;</span>
<span class="line">  int img_mcu_y;</span>
<span class="line">  int img_mcu_w;</span>
<span class="line">  int img_mcu_h;</span>
<span class="line">  stbi__jpeg::&lt;unnamed_type_img_comp&gt; img_comp[4];</span>
<span class="line">  unsigned int code_buffer;</span>
<span class="line">  int code_bits;</span>
<span class="line">  unsigned __int8 marker;</span>
<span class="line">  int nomore;</span>
<span class="line">  int progressive;</span>
<span class="line">  int spec_start;</span>
<span class="line">  int spec_end;</span>
<span class="line">  int succ_high;</span>
<span class="line">  int succ_low;</span>
<span class="line">  int eob_run;</span>
<span class="line">  int jfif;</span>
<span class="line">  int app14_color_transform;</span>
<span class="line">  int rgb;</span>
<span class="line">  int scan_n;</span>
<span class="line">  int order[4];</span>
<span class="line">  int restart_interval;</span>
<span class="line">  int todo;</span>
<span class="line">  void (__fastcall *idct_block_kernel)(unsigned __int8 *, int, __int16 *);</span>
<span class="line">  void (__fastcall *YCbCr_to_RGB_kernel)(unsigned __int8 *, const unsigned __int8 *, const unsigned __int8 *, const unsigned __int8 *, int, int);</span>
<span class="line">  unsigned __int8 *(__fastcall *resample_row_hv_2_kernel)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, int, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-resample" tabindex="-1"><a class="header-anchor" href="#stbi-resample"><span><code>stbi__resample</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) stbi__resample</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 *(__fastcall *resample)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, int, int);</span>
<span class="line">  unsigned __int8 *line0;</span>
<span class="line">  unsigned __int8 *line1;</span>
<span class="line">  int hs;</span>
<span class="line">  int vs;</span>
<span class="line">  int w_lores;</span>
<span class="line">  int ystep;</span>
<span class="line">  int ypos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-pngchunk" tabindex="-1"><a class="header-anchor" href="#stbi-pngchunk"><span><code>stbi__pngchunk</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbi__pngchunk</span>
<span class="line">{</span>
<span class="line">  unsigned int length;</span>
<span class="line">  unsigned int type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbi-pic-packet" tabindex="-1"><a class="header-anchor" href="#stbi-pic-packet"><span><code>stbi__pic_packet</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbi__pic_packet</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 size;</span>
<span class="line">  unsigned __int8 type;</span>
<span class="line">  unsigned __int8 channel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbir-contributors" tabindex="-1"><a class="header-anchor" href="#stbir-contributors"><span><code>stbir__contributors</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbir__contributors</span>
<span class="line">{</span>
<span class="line">  int n0;</span>
<span class="line">  int n1;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shareablelock" tabindex="-1"><a class="header-anchor" href="#shareablelock"><span><code>ShareableLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShareableLock</span>
<span class="line">{</span>
<span class="line">  std::shared_timed_mutex mMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shareablelock-scopedunique" tabindex="-1"><a class="header-anchor" href="#shareablelock-scopedunique"><span><code>ShareableLock::ScopedUnique</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShareableLock::ScopedUnique</span>
<span class="line">{</span>
<span class="line">  ShareableLock *mLk;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shareablelock-scopedshared" tabindex="-1"><a class="header-anchor" href="#shareablelock-scopedshared"><span><code>ShareableLock::ScopedShared</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShareableLock::ScopedShared</span>
<span class="line">{</span>
<span class="line">  ShareableLock *mLk;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stopwatchnlast" tabindex="-1"><a class="header-anchor" href="#stopwatchnlast"><span><code>StopwatchNLast</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StopwatchNLast : Stopwatch</span>
<span class="line">{</span>
<span class="line">  int n;</span>
<span class="line">  int k;</span>
<span class="line">  std::vector&lt;double&gt; t;</span>
<span class="line">  long double sum;</span>
<span class="line">  Stopwatch sw;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stopwatchnlast-vtbl" tabindex="-1"><a class="header-anchor" href="#stopwatchnlast-vtbl"><span><code>StopwatchNLast_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ StopwatchNLast_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Stopwatch)(Stopwatch *this);</span>
<span class="line">  long double (__fastcall *stop)(Stopwatch *this);</span>
<span class="line">  long double (__fastcall *stopContinue)(Stopwatch *this);</span>
<span class="line">  void (__fastcall *print)(Stopwatch *this, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scopewatchdog" tabindex="-1"><a class="header-anchor" href="#scopewatchdog"><span><code>ScopeWatchdog</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScopeWatchdog</span>
<span class="line">{</span>
<span class="line">  const std::string mName;</span>
<span class="line">  std::chrono::duration&lt;__int64,std::ratio&lt;1,1000&gt; &gt; mTimeLimit;</span>
<span class="line">  bool mLogAlways;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mStartTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-crc32" tabindex="-1"><a class="header-anchor" href="#sfat-crc32"><span><code>SFAT::CRC32</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::CRC32</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-sfatlockguard" tabindex="-1"><a class="header-anchor" href="#sfat-sfatlockguard"><span><code>SFAT::SFATLockGuard</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SFATLockGuard</span>
<span class="line">{</span>
<span class="line">  SFAT::SFATMutex *mMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-memorybufferhandle" tabindex="-1"><a class="header-anchor" href="#sfat-memorybufferhandle"><span><code>SFAT::MemoryBufferHandle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::MemoryBufferHandle</span>
<span class="line">{</span>
<span class="line">  SFAT::MemoryBufferPool *mMemoryBufferPool;</span>
<span class="line">  std::unique_ptr&lt;std::vector&lt;unsigned char&gt;&gt; mObject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-pathstring" tabindex="-1"><a class="header-anchor" href="#sfat-pathstring"><span><code>SFAT::PathString</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::PathString</span>
<span class="line">{</span>
<span class="line">  std::string mPath;</span>
<span class="line">  unsigned __int64 mPosition;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-filemanipulator" tabindex="-1"><a class="header-anchor" href="#sfat-filemanipulator"><span><code>SFAT::FileManipulator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::FileManipulator</span>
<span class="line">{</span>
<span class="line">  SFAT::FileDescriptorRecord mFileDescriptorRecord;</span>
<span class="line">  SFAT::DescriptorLocation mLocation;</span>
<span class="line">  SFAT::PathString mFullPath;</span>
<span class="line">  unsigned int mAccessMode;</span>
<span class="line">  __int64 mPosition;</span>
<span class="line">  unsigned int mPositionClusterIndex;</span>
<span class="line">  __int64 mNextPosition;</span>
<span class="line">  bool mIsValid;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mBuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-crc16" tabindex="-1"><a class="header-anchor" href="#sfat-crc16"><span><code>SFAT::CRC16</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::CRC16</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc" tabindex="-1"><a class="header-anchor" href="#sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc"><span><code>SFAT::RecoveryManager::testSingleFileIntegrity::__l8::&lt;lambda_1e070c6a2247d80fbe8c7e14a3aea2dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::RecoveryManager::testSingleFileIntegrity::__l8::&lt;lambda_1e070c6a2247d80fbe8c7e14a3aea2dc&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *counter;</span>
<span class="line">  SFAT::ClusterChainTestResult *result;</span>
<span class="line">  SFAT::FATDataManager *fatMgr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatfile" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatfile"><span><code>SFAT::SplitFATFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SplitFATFile : SFAT::FileBase</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;SFAT::FileManipulator&gt; mFileManipulator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfatfile-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-splitfatfile-vtbl"><span><code>SFAT::SplitFATFile_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::SplitFATFile_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileBase)(SFAT::FileBase *this);</span>
<span class="line">  bool (__fastcall *isOpen)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *close)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *read)(SFAT::FileBase *this, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *write)(SFAT::FileBase *this, const void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *readAtPosition)(SFAT::FileBase *this, void *, unsigned __int64, __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *writeAtPosition)(SFAT::FileBase *this, const void *, unsigned __int64, __int64, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *seek)(SFAT::FileBase *this, __int64, SFAT::SeekMode);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getPosition)(SFAT::FileBase *this, __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *getSize)(SFAT::FileBase *this, unsigned __int64 *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flush)(SFAT::FileBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, const char *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfattransactconfiguration" tabindex="-1"><a class="header-anchor" href="#sfat-splitfattransactconfiguration"><span><code>SFAT::SplitFATTransactConfiguration</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::SplitFATTransactConfiguration : SFAT::SplitFATConfigurationBase</span>
<span class="line">{</span>
<span class="line">  SFAT::FileHandle mTempTransactionFile;</span>
<span class="line">  SFAT::FileHandle mDirectoryTransactionFile;</span>
<span class="line">  SFAT::FileHandle mDataTransactionFile;</span>
<span class="line">  std::shared_ptr&lt;SFAT::FileStorageBase&gt; mTransactionFileStorage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-splitfattransactconfiguration-vtbl" tabindex="-1"><a class="header-anchor" href="#sfat-splitfattransactconfiguration-vtbl"><span><code>SFAT::SplitFATTransactConfiguration_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SFAT::SplitFATTransactConfiguration_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SplitFATConfigurationBase)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *shutdown)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *create)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *open)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *close)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::FileHandle *(__fastcall *getClusterDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);</span>
<span class="line">  SFAT::FileHandle *(__fastcall *getFATDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *remove)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flushFATDataFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *flushClusterDataFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *allocateDataBlock)(SFAT::SplitFATConfigurationBase *this, SFAT::VolumeManager *, unsigned int);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *defragmentationOnTransactionEnd)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  bool (__fastcall *clusterDataFileExists)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  bool (__fastcall *fatDataFileExists)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createDataPlacementStrategy)(SFAT::SplitFATConfigurationBase *this, std::shared_ptr&lt;SFAT::DataPlacementStrategyBase&gt; *, SFAT::VolumeManager *, SFAT::VirtualFileSystem *);</span>
<span class="line">  bool (__fastcall *isTransactionSupported)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *createTransactionFiles)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *tryOpenDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *tryOpenDataTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupDataTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *cleanupTempTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  SFAT::ErrorCode (__fastcall *finalizeTransactionFile)(SFAT::SplitFATConfigurationBase *this);</span>
<span class="line">  void (__fastcall *getTempTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  void (__fastcall *getDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);</span>
<span class="line">  const char *(__fastcall *_getDirectoryTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);</span>
<span class="line">  const char *(__fastcall *_getTempTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);</span>
<span class="line">  const char *(__fastcall *_getDataTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e" tabindex="-1"><a class="header-anchor" href="#sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e"><span><code>SFAT::TransactionEventsLog::_restoreFromTransactionFile::__l14::&lt;lambda_f464715ebff49e584bad436c62bdaa1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::TransactionEventsLog::_restoreFromTransactionFile::__l14::&lt;lambda_f464715ebff49e584bad436c62bdaa1e&gt;</span>
<span class="line">{</span>
<span class="line">  SFAT::FileHandle *fileHandle;</span>
<span class="line">  __int64 *position;</span>
<span class="line">  unsigned __int64 *countBytesToRead;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-crc24" tabindex="-1"><a class="header-anchor" href="#sfat-crc24"><span><code>SFAT::CRC24</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::CRC24</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b"><span><code>SFAT::VirtualFileSystem::_isDirectoryEmpty::__l2::&lt;lambda_249a999051cf4832137a3f59aaa6c45b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_isDirectoryEmpty::__l2::&lt;lambda_249a999051cf4832137a3f59aaa6c45b&gt;</span>
<span class="line">{</span>
<span class="line">  bool *foundEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd"><span><code>SFAT::VirtualFileSystem::_createEntity::__l2::&lt;lambda_8b7276f0a3e09da4a84a4e133743effd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_createEntity::__l2::&lt;lambda_8b7276f0a3e09da4a84a4e133743effd&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *selectedRecordIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6"><span><code>SFAT::VirtualFileSystem::read::__l2::&lt;lambda_c23223065a2b55117ec1766b47f7c2a6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::read::__l2::&lt;lambda_c23223065a2b55117ec1766b47f7c2a6&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 **outputBuffer;</span>
<span class="line">  unsigned __int64 *bytesRemainedToCopy;</span>
<span class="line">  unsigned int *clusterReadOffset;</span>
<span class="line">  std::vector&lt;unsigned char&gt; *clusterData;</span>
<span class="line">  unsigned int *countClustersRead;</span>
<span class="line">  unsigned int countClustersToRead;</span>
<span class="line">  SFAT::VirtualFileSystem *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e"><span><code>SFAT::VirtualFileSystem::iterateThroughDirectory::__l2::&lt;lambda_cecd217142c34c71fdeb7b761f727b9e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::iterateThroughDirectory::__l2::&lt;lambda_cecd217142c34c71fdeb7b761f727b9e&gt;</span>
<span class="line">{</span>
<span class="line">  std::function&lt;enum SFAT::ErrorCode __cdecl(bool &amp;,SFAT::FileDescriptorRecord const &amp;,std::string const &amp;)&gt; *callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd"><span><code>SFAT::VirtualFileSystem::_trunc::__l26::&lt;lambda_47ce944f0503b9b4adb1d6cbf279dfdd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_trunc::__l26::&lt;lambda_47ce944f0503b9b4adb1d6cbf279dfdd&gt;</span>
<span class="line">{</span>
<span class="line">  const SFAT::DescriptorLocation *location;</span>
<span class="line">  unsigned int newLastClusterIndex;</span>
<span class="line">  SFAT::VirtualFileSystem *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb"><span><code>SFAT::VirtualFileSystem::_iterateThroughDirectoryRecursively::__l2::&lt;lambda_ebf0c4dc747ea335e16db93745c87fdb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_iterateThroughDirectoryRecursively::__l2::&lt;lambda_ebf0c4dc747ea335e16db93745c87fdb&gt;</span>
<span class="line">{</span>
<span class="line">  SFAT::VirtualFileSystem *const __this;</span>
<span class="line">  unsigned int *flags;</span>
<span class="line">  std::function&lt;enum SFAT::ErrorCode __cdecl(bool &amp;,SFAT::DescriptorLocation const &amp;,SFAT::FileDescriptorRecord const &amp;,std::string const &amp;)&gt; *callback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905"><span><code>SFAT::VirtualFileSystem::_getClusterForPosition::__l2::&lt;lambda_25729679247d20f75b7b6e5e2871a905&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_getClusterForPosition::__l2::&lt;lambda_25729679247d20f75b7b6e5e2871a905&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *foundClusterIndex;</span>
<span class="line">  unsigned int *clusterInverseCounter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba"><span><code>SFAT::VirtualFileSystem::_renameEntity::__l2::&lt;lambda_d12879e995d60e1f647dd732045a77ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_renameEntity::__l2::&lt;lambda_d12879e995d60e1f647dd732045a77ba&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *newNameStr;</span>
<span class="line">  bool *foundEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e"><span><code>SFAT::VirtualFileSystem::_getCountClusters::__l2::&lt;lambda_1e9471e70c826f487760fd9bb4988c6e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::_getCountClusters::__l2::&lt;lambda_1e9471e70c826f487760fd9bb4988c6e&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *countClusters;</span>
<span class="line">  unsigned int *lastClusterIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a" tabindex="-1"><a class="header-anchor" href="#sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a"><span><code>SFAT::VirtualFileSystem::write::__l2::&lt;lambda_8ccf35fa49cd2e7a64c0d636e7f3b02a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SFAT::VirtualFileSystem::write::__l2::&lt;lambda_8ccf35fa49cd2e7a64c0d636e7f3b02a&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 *sizeWritten;</span>
<span class="line">  SFAT::FileManipulator *fileManipulator;</span>
<span class="line">  const unsigned __int8 **inputBuffer;</span>
<span class="line">  unsigned __int64 *bytesRemainedToCopy;</span>
<span class="line">  unsigned int *clusterWriteOffset;</span>
<span class="line">  std::vector&lt;unsigned char&gt; *clusterData;</span>
<span class="line">  unsigned int *countClustersWritten;</span>
<span class="line">  unsigned int countClustersToWrite;</span>
<span class="line">  SFAT::VirtualFileSystem *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sfnt-headerrec" tabindex="-1"><a class="header-anchor" href="#sfnt-headerrec"><span><code>SFNT_HeaderRec_</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SFNT_HeaderRec_</span>
<span class="line">{</span>
<span class="line">  unsigned int format_tag;</span>
<span class="line">  unsigned __int16 num_tables;</span>
<span class="line">  unsigned __int16 search_range;</span>
<span class="line">  unsigned __int16 entry_selector;</span>
<span class="line">  unsigned __int16 range_shift;</span>
<span class="line">  unsigned int offset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stbrp-findresult" tabindex="-1"><a class="header-anchor" href="#stbrp-findresult"><span><code>stbrp__findresult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stbrp__findresult</span>
<span class="line">{</span>
<span class="line">  int x;</span>
<span class="line">  int y;</span>
<span class="line">  stbrp_node **prev_link;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator" tabindex="-1"><a class="header-anchor" href="#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator"><span><code>static_vector&lt;std::weak_ptr&lt;Bedrock::PubSub::Detail::PublisherBase&lt;Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &amp;)&gt;::SubscriptionBody&gt;,32&gt;::iterator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj static_vector&lt;std::weak_ptr&lt;Bedrock::PubSub::Detail::PublisherBase&lt;Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &amp;)&gt;::SubscriptionBody&gt;,32&gt;::iterator</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;Bedrock::PubSub::Detail::PublisherBase&lt;Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &amp;)&gt;::SubscriptionBody&gt; *mPtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32" tabindex="-1"><a class="header-anchor" href="#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32"><span><code>static_vector&lt;std::weak_ptr&lt;Bedrock::PubSub::Detail::PublisherBase&lt;Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &amp;)&gt;::SubscriptionBody&gt;,32&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj static_vector&lt;std::weak_ptr&lt;Bedrock::PubSub::Detail::PublisherBase&lt;Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &amp;)&gt;::SubscriptionBody&gt;,32&gt;</span>
<span class="line">{</span>
<span class="line">  std::_Align_type&lt;double,16&gt; mArray[32];</span>
<span class="line">  unsigned __int64 mSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b" tabindex="-1"><a class="header-anchor" href="#serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b"><span><code>Serializer::serializePrimaryField::__l2::&lt;lambda_9af6748ea60d8af6979b10ce9c586e9b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Serializer::serializePrimaryField::__l2::&lt;lambda_9af6748ea60d8af6979b10ce9c586e9b&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int kAttributesId;</span>
<span class="line">  entt::meta_any *any;</span>
<span class="line">  Serializer *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="starmapobject" tabindex="-1"><a class="header-anchor" href="#starmapobject"><span><code>starmapobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct starmapobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *func;</span>
<span class="line">  _object *it;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringio" tabindex="-1"><a class="header-anchor" href="#stringio"><span><code>stringio</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stringio</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  wchar_t *buf;</span>
<span class="line">  __int64 pos;</span>
<span class="line">  __int64 string_size;</span>
<span class="line">  unsigned __int64 buf_size;</span>
<span class="line">  char ok;</span>
<span class="line">  char closed;</span>
<span class="line">  char readuniversal;</span>
<span class="line">  char readtranslate;</span>
<span class="line">  _object *decoder;</span>
<span class="line">  _object *readnl;</span>
<span class="line">  _object *writenl;</span>
<span class="line">  _object *dict;</span>
<span class="line">  _object *weakreflist;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="semlockobject" tabindex="-1"><a class="header-anchor" href="#semlockobject"><span><code>SemLockObject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SemLockObject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  void *handle;</span>
<span class="line">  int last_tid;</span>
<span class="line">  int count;</span>
<span class="line">  int maxvalue;</span>
<span class="line">  int kind;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sre-repeat-t" tabindex="-1"><a class="header-anchor" href="#sre-repeat-t"><span><code>SRE_REPEAT_T</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct SRE_REPEAT_T</span>
<span class="line">{</span>
<span class="line">  __int64 count;</span>
<span class="line">  unsigned int *pattern;</span>
<span class="line">  void *last_ptr;</span>
<span class="line">  SRE_REPEAT_T *prev;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scannerobject" tabindex="-1"><a class="header-anchor" href="#scannerobject"><span><code>ScannerObject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct ScannerObject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *pattern;</span>
<span class="line">  SRE_STATE state;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sre-umatch-context" tabindex="-1"><a class="header-anchor" href="#sre-umatch-context"><span><code>sre_umatch_context</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct sre_umatch_context</span>
<span class="line">{</span>
<span class="line">  __int64 last_ctx_pos;</span>
<span class="line">  __int64 jump;</span>
<span class="line">  wchar_t *ptr;</span>
<span class="line">  unsigned int *pattern;</span>
<span class="line">  __int64 count;</span>
<span class="line">  __int64 lastmark;</span>
<span class="line">  __int64 lastindex;</span>
<span class="line">  union</span>
<span class="line">  {</span>
<span class="line">    unsigned int chr;</span>
<span class="line">    SRE_REPEAT_T *rep;</span>
<span class="line">  } u;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sre-match-context" tabindex="-1"><a class="header-anchor" href="#sre-match-context"><span><code>sre_match_context</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct sre_match_context</span>
<span class="line">{</span>
<span class="line">  __int64 last_ctx_pos;</span>
<span class="line">  __int64 jump;</span>
<span class="line">  unsigned __int8 *ptr;</span>
<span class="line">  unsigned int *pattern;</span>
<span class="line">  __int64 count;</span>
<span class="line">  __int64 lastmark;</span>
<span class="line">  __int64 lastindex;</span>
<span class="line">  union</span>
<span class="line">  {</span>
<span class="line">    unsigned int chr;</span>
<span class="line">    SRE_REPEAT_T *rep;</span>
<span class="line">  } u;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="staticmethod" tabindex="-1"><a class="header-anchor" href="#staticmethod"><span><code>staticmethod</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct staticmethod</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *sm_callable;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seqiterobject" tabindex="-1"><a class="header-anchor" href="#seqiterobject"><span><code>seqiterobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct seqiterobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  int it_index;</span>
<span class="line">  _object *it_seq;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sortwrapperobject" tabindex="-1"><a class="header-anchor" href="#sortwrapperobject"><span><code>sortwrapperobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct sortwrapperobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _object *key;</span>
<span class="line">  _object *value;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setiterobject" tabindex="-1"><a class="header-anchor" href="#setiterobject"><span><code>setiterobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct setiterobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _setobject *si_set;</span>
<span class="line">  __int64 si_used;</span>
<span class="line">  __int64 si_pos;</span>
<span class="line">  __int64 len;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="superobject" tabindex="-1"><a class="header-anchor" href="#superobject"><span><code>superobject</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct superobject</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  _typeobject *type;</span>
<span class="line">  _object *obj;</span>
<span class="line">  _typeobject *obj_type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stackentry" tabindex="-1"><a class="header-anchor" href="#stackentry"><span><code>stackentry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stackentry</span>
<span class="line">{</span>
<span class="line">  int s_state;</span>
<span class="line">  dfa *s_dfa;</span>
<span class="line">  _node *s_parent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stack" tabindex="-1"><a class="header-anchor" href="#stack"><span><code>stack</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct stack</span>
<span class="line">{</span>
<span class="line">  stackentry *s_top;</span>
<span class="line">  stackentry s_base[1500];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sp-handle-object" tabindex="-1"><a class="header-anchor" href="#sp-handle-object"><span><code>sp_handle_object</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct sp_handle_object</span>
<span class="line">{</span>
<span class="line">  __int64 ob_refcnt;</span>
<span class="line">  _typeobject *ob_type;</span>
<span class="line">  void *handle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shaderslibrary" tabindex="-1"><a class="header-anchor" href="#shaderslibrary"><span><code>ShadersLibrary</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ShadersLibrary</span>
<span class="line">{</span>
<span class="line">  std::map&lt;std::wstring,unsigned int&gt; shaderCacheMap;</span>
<span class="line">  std::vector&lt;void *&gt; loadedShadersData;</span>
<span class="line">  unsigned int storedShaderCount;</span>
<span class="line">  CustomBlob *shaderCache;</span>
<span class="line">  unsigned __int64 xorKeyLength;</span>
<span class="line">  unsigned __int64 xorKeyCurrentOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a" tabindex="-1"><a class="header-anchor" href="#slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a"><span><code>SliderComponent::_updateSliderBarProgress::__l2::&lt;lambda_0fa219b87a373a09d30835719138e33a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SliderComponent::_updateSliderBarProgress::__l2::&lt;lambda_0fa219b87a373a09d30835719138e33a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6" tabindex="-1"><a class="header-anchor" href="#storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6"><span><code>StorageDependencyScreenController::_registerBindings::__l2::&lt;lambda_abc0411e58cca189896914892e40c16b&gt;::()::__l6::&lt;lambda_15b24bd133e958d68a060ebbc5b1ece6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StorageDependencyScreenController::_registerBindings::__l2::&lt;lambda_abc0411e58cca189896914892e40c16b&gt;::()::__l6::&lt;lambda_15b24bd133e958d68a060ebbc5b1ece6&gt;</span>
<span class="line">{</span>
<span class="line">  PackContentItem *const content;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b" tabindex="-1"><a class="header-anchor" href="#startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b"><span><code>StartMenuScreenController::onOpen::__l5::&lt;lambda_1574bd2e3698b4f242153fd310cd920b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StartMenuScreenController::onOpen::__l5::&lt;lambda_1574bd2e3698b4f242153fd310cd920b&gt;</span>
<span class="line">{</span>
<span class="line">  StartMenuScreenController *const __this;</span>
<span class="line">  const GamePadRemappingLayout *gamepadRemapping;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932" tabindex="-1"><a class="header-anchor" href="#storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932"><span><code>StorageDependencyScreenController::_populateAllDependencies::__l2::&lt;lambda_50ff95644bda46b030d63d05eaa74932&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StorageDependencyScreenController::_populateAllDependencies::__l2::&lt;lambda_50ff95644bda46b030d63d05eaa74932&gt;</span>
<span class="line">{</span>
<span class="line">  StorageDependencyScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e" tabindex="-1"><a class="header-anchor" href="#serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e"><span><code>ServerFormBindingInformation::createBindingData::__l2::&lt;lambda_5877bbc18e65de1799e21a4d6baf222e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerFormBindingInformation::createBindingData::__l2::&lt;lambda_5877bbc18e65de1799e21a4d6baf222e&gt;</span>
<span class="line">{</span>
<span class="line">  ServerFormBindingInformation *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6" tabindex="-1"><a class="header-anchor" href="#subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6"><span><code>SubscriptionsScreenController::tick::__l11::&lt;lambda_1109a751a3b331261c66bffc74b4c0d6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubscriptionsScreenController::tick::__l11::&lt;lambda_1109a751a3b331261c66bffc74b4c0d6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e" tabindex="-1"><a class="header-anchor" href="#subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e"><span><code>SubscriptionsScreenController::tick::__l11::&lt;lambda_3405681c330be99db571a029a5de6d5e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubscriptionsScreenController::tick::__l11::&lt;lambda_3405681c330be99db571a029a5de6d5e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397" tabindex="-1"><a class="header-anchor" href="#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397"><span><code>SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::&lt;lambda_5cdf67128f3bea6159dd8fc163d38d57&gt;::()::__l8::&lt;lambda_87d887136041d2858ff416203462d397&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::&lt;lambda_5cdf67128f3bea6159dd8fc163d38d57&gt;::()::__l8::&lt;lambda_87d887136041d2858ff416203462d397&gt;</span>
<span class="line">{</span>
<span class="line">  const Realms::RealmId *realmId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721" tabindex="-1"><a class="header-anchor" href="#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721"><span><code>SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::&lt;lambda_5cdf67128f3bea6159dd8fc163d38d57&gt;::()::__l17::&lt;lambda_bae8d35094fb397bedc67c3ba62ad721&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::&lt;lambda_5cdf67128f3bea6159dd8fc163d38d57&gt;::()::__l17::&lt;lambda_bae8d35094fb397bedc67c3ba62ad721&gt;</span>
<span class="line">{</span>
<span class="line">  const Realms::RealmId *realmId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8" tabindex="-1"><a class="header-anchor" href="#screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8"><span><code>ScreenView::_updateControlCollections::__l36::&lt;lambda_803420e90046a466ebce054da63600a8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScreenView::_updateControlCollections::__l36::&lt;lambda_803420e90046a466ebce054da63600a8&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;UIControl&gt;&gt; *controlsToRemove;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557" tabindex="-1"><a class="header-anchor" href="#scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557"><span><code>SceneStack::flushStack::__l5::&lt;lambda_08197decf7f176c94b189045c2e91557&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneStack::flushStack::__l5::&lt;lambda_08197decf7f176c94b189045c2e91557&gt;</span>
<span class="line">{</span>
<span class="line">  SceneStack *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae" tabindex="-1"><a class="header-anchor" href="#screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae"><span><code>ScreenView::_handleDirtyVisualTree::__l50::&lt;lambda_2111019e43bda338732d87a7a0c5b0ae&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScreenView::_handleDirtyVisualTree::__l50::&lt;lambda_2111019e43bda338732d87a7a0c5b0ae&gt;</span>
<span class="line">{</span>
<span class="line">  ScreenView *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6" tabindex="-1"><a class="header-anchor" href="#scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6"><span><code>SceneStack::isScreenReplaceable::__l8::&lt;lambda_42a230a3bda507ad00601db397fdd7c6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneStack::isScreenReplaceable::__l8::&lt;lambda_42a230a3bda507ad00601db397fdd7c6&gt;</span>
<span class="line">{</span>
<span class="line">  bool *canReplace;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c" tabindex="-1"><a class="header-anchor" href="#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c"><span><code>SceneFactory::createActiveDirectoryModal::__l2::&lt;lambda_9f02b271ede7732ee4ddc2d56da6dc4c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneFactory::createActiveDirectoryModal::__l2::&lt;lambda_9f02b271ede7732ee4ddc2d56da6dc4c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor" tabindex="-1"><a class="header-anchor" href="#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor"><span><code>SceneFactory::createActiveDirectoryModal::__l2::&lt;lambda_9f02b271ede7732ee4ddc2d56da6dc4c&gt;::()::__l2::StrAccessor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneFactory::createActiveDirectoryModal::__l2::&lt;lambda_9f02b271ede7732ee4ddc2d56da6dc4c&gt;::()::__l2::StrAccessor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251" tabindex="-1"><a class="header-anchor" href="#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251"><span><code>SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::&lt;lambda_adcf6bd9062ebad447b2428204664251&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::&lt;lambda_adcf6bd9062ebad447b2428204664251&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor" tabindex="-1"><a class="header-anchor" href="#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor"><span><code>SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::&lt;lambda_adcf6bd9062ebad447b2428204664251&gt;::()::__l2::StrAccessor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::&lt;lambda_adcf6bd9062ebad447b2428204664251&gt;::()::__l2::StrAccessor</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537" tabindex="-1"><a class="header-anchor" href="#skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537"><span><code>SkinnedMesh::draw::__l2::&lt;lambda_d8b94b46a694729780a8881de11c5537&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SkinnedMesh::draw::__l2::&lt;lambda_d8b94b46a694729780a8881de11c5537&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e" tabindex="-1"><a class="header-anchor" href="#scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e"><span><code>ScriptEngineWithContext&lt;ScriptClientContext&gt;::createEntity::__l2::&lt;lambda_e35908d952b2d50bdbc7c021fe0b8d2e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScriptEngineWithContext&lt;ScriptClientContext&gt;::createEntity::__l2::&lt;lambda_e35908d952b2d50bdbc7c021fe0b8d2e&gt;</span>
<span class="line">{</span>
<span class="line">  ScriptEngineWithContext&lt;ScriptClientContext&gt; *const __this;</span>
<span class="line">  ScriptApi::ScriptObjectHandle *entityHandle;</span>
<span class="line">  const std::string *templateName;</span>
<span class="line">  const ScriptApi::ScriptVersionInfo *info;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0" tabindex="-1"><a class="header-anchor" href="#social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0"><span><code>Social::MultiplayerEDU::_joinGame::__l2::&lt;lambda_c0daf9fcddb69c3e6164bbe064128aa0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::MultiplayerEDU::_joinGame::__l2::&lt;lambda_c0daf9fcddb69c3e6164bbe064128aa0&gt;</span>
<span class="line">{</span>
<span class="line">  Social::MultiplayerEDU *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba" tabindex="-1"><a class="header-anchor" href="#social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba"><span><code>Social::UserManager::removeClient::__l4::&lt;lambda_8bffe92b839cdd3926f9f46b2b9196ba&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::UserManager::removeClient::__l4::&lt;lambda_8bffe92b839cdd3926f9f46b2b9196ba&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;IClientInstance&gt; ci;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab" tabindex="-1"><a class="header-anchor" href="#social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab"><span><code>Social::XboxLiveUser::isUserOnFriendList::__l2::&lt;lambda_938f7b7cbdf1e4157d9f58c7ba6ac2ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Social::XboxLiveUser::isUserOnFriendList::__l2::&lt;lambda_938f7b7cbdf1e4157d9f58c7ba6ac2ab&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string xuid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549" tabindex="-1"><a class="header-anchor" href="#soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549"><span><code>SoundEngine::_isNewMusicQueued::__l9::&lt;lambda_6058b0ebf9d487346dfc78cfeeed8549&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundEngine::_isNewMusicQueued::__l9::&lt;lambda_6058b0ebf9d487346dfc78cfeeed8549&gt;</span>
<span class="line">{</span>
<span class="line">  const Core::Path currentMusicItemName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75" tabindex="-1"><a class="header-anchor" href="#storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75"><span><code>StoreCatalogRepository::fetchRealmsCoinOffers::__l2::&lt;lambda_4414f3671be2def991047236b7ca18b5&gt;::()::__l9::&lt;lambda_5b34530ea6fe3708d069590feac9be75&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StoreCatalogRepository::fetchRealmsCoinOffers::__l2::&lt;lambda_4414f3671be2def991047236b7ca18b5&gt;::()::__l9::&lt;lambda_5b34530ea6fe3708d069590feac9be75&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string sku;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8" tabindex="-1"><a class="header-anchor" href="#serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8"><span><code>ServerPlayerBlockUseHandler::onBeforeMovementSimulation::__l2::&lt;lambda_c316d9e687abcf3d528563fc19364bf8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerPlayerBlockUseHandler::onBeforeMovementSimulation::__l2::&lt;lambda_c316d9e687abcf3d528563fc19364bf8&gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;ItemStackRequestData&gt; *itemStackRequest;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e" tabindex="-1"><a class="header-anchor" href="#servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e"><span><code>ServerNetworkHandler::engineDownloadingResponseHelper::__l18::&lt;lambda_00b0622c98e5187c8a83036a771f6e2e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l18::&lt;lambda_00b0622c98e5187c8a83036a771f6e2e&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *packIdStr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504" tabindex="-1"><a class="header-anchor" href="#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504"><span><code>ServerNetworkHandler::engineDownloadingResponseHelper::__l2::&lt;lambda_c2403a719f261949b9930649a7bed9eb&gt;::()::__l12::&lt;lambda_9d5d32d71ee2269e33a959b1a38ae504&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l2::&lt;lambda_c2403a719f261949b9930649a7bed9eb&gt;::()::__l12::&lt;lambda_9d5d32d71ee2269e33a959b1a38ae504&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *packIdStr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a" tabindex="-1"><a class="header-anchor" href="#servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a"><span><code>ServerNetworkHandler::_onClientAuthenticated::__l2::&lt;lambda_5bf7633c5afa8e06c799ce108426113a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerNetworkHandler::_onClientAuthenticated::__l2::&lt;lambda_5bf7633c5afa8e06c799ce108426113a&gt;</span>
<span class="line">{</span>
<span class="line">  ServerNetworkHandler *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87" tabindex="-1"><a class="header-anchor" href="#servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87"><span><code>ServerNetworkHandler::_getActiveAndInProgressPlayerCount::__l2::&lt;lambda_831ea39846ba7d8b403f58c6fc8cdb87&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerNetworkHandler::_getActiveAndInProgressPlayerCount::__l2::&lt;lambda_831ea39846ba7d8b403f58c6fc8cdb87&gt;</span>
<span class="line">{</span>
<span class="line">  const ServerNetworkHandler *const __this;</span>
<span class="line">  mce::UUID *excludePlayer;</span>
<span class="line">  int *numPlayers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb" tabindex="-1"><a class="header-anchor" href="#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb"><span><code>ServerNetworkHandler::engineDownloadingResponseHelper::__l2::&lt;lambda_c2403a719f261949b9930649a7bed9eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l2::&lt;lambda_c2403a719f261949b9930649a7bed9eb&gt;</span>
<span class="line">{</span>
<span class="line">  ServerNetworkHandler *const __this;</span>
<span class="line">  const NetworkIdentifier *source;</span>
<span class="line">  std::set&lt;std::string&gt; *downloading;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal" tabindex="-1"><a class="header-anchor" href="#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal"><span><code>ScriptInventoryContainerComponent::hasComponent::__l2::&lt;lambda_cbfd00fac5e89c48dc5b9818cc515444&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScriptInventoryContainerComponent::hasComponent::__l2::&lt;lambda_cbfd00fac5e89c48dc5b9818cc515444&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444" tabindex="-1"><a class="header-anchor" href="#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444"><span><code>ScriptInventoryContainerComponent::hasComponent::__l2::&lt;lambda_cbfd00fac5e89c48dc5b9818cc515444&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScriptInventoryContainerComponent::hasComponent::__l2::&lt;lambda_cbfd00fac5e89c48dc5b9818cc515444&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518" tabindex="-1"><a class="header-anchor" href="#serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518"><span><code>ServerInstance::suspend::__l5::&lt;lambda_e2bf1bc6a494a9ac2de26852ce0ed296&gt;::()::__l2::&lt;lambda_dc1051d76d2d8e5ed26ddec900f12518&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerInstance::suspend::__l5::&lt;lambda_e2bf1bc6a494a9ac2de26852ce0ed296&gt;::()::__l2::&lt;lambda_dc1051d76d2d8e5ed26ddec900f12518&gt;</span>
<span class="line">{</span>
<span class="line">  ServerInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f" tabindex="-1"><a class="header-anchor" href="#serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f"><span><code>ServerPlayer::recoverR5LostInventoryAndXP::__l2::&lt;lambda_07493d55d977c843ffdb606ac04a2f9f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerPlayer::recoverR5LostInventoryAndXP::__l2::&lt;lambda_07493d55d977c843ffdb606ac04a2f9f&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;BlockPos&gt; chestPositions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2" tabindex="-1"><a class="header-anchor" href="#serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2"><span><code>ServerInstance::initializeServer::__l49::&lt;lambda_3a7cf20926733d23785fdc1bad5b8ff2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerInstance::initializeServer::__l49::&lt;lambda_3a7cf20926733d23785fdc1bad5b8ff2&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;PackIdVersion,std::string&gt; *packIdToContentKey;</span>
<span class="line">  ResourcePackRepository *resourcePackRepository;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_20ed655d1fdb0c0dc03fd2267680f974&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_20ed655d1fdb0c0dc03fd2267680f974&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_81d88c366bffed15d10e67d2c2427073&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_81d88c366bffed15d10e67d2c2427073&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_f866df35e06d0821240572926370310a&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_f866df35e06d0821240572926370310a&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_a6ccd1b2e2a58943ed7603f95ec71137&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_a6ccd1b2e2a58943ed7603f95ec71137&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_745c8c632ec8667527937f4fd921d65d&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_745c8c632ec8667527937f4fd921d65d&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal"><span><code>Squid::aiStep::__l38::&lt;lambda_7c935aff097e3f4f0757a5f398e28e3b&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::aiStep::__l38::&lt;lambda_7c935aff097e3f4f0757a5f398e28e3b&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal"><span><code>Squid::spawnInkParticles::__l9::&lt;lambda_dd17807679feb6004cad8b221e669871&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l9::&lt;lambda_dd17807679feb6004cad8b221e669871&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal" tabindex="-1"><a class="header-anchor" href="#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal"><span><code>Squid::updateEntitySpecificMolangVariables::__l2::&lt;lambda_54ff11a541b599c5179e16b1d9d14457&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::updateEntitySpecificMolangVariables::__l2::&lt;lambda_54ff11a541b599c5179e16b1d9d14457&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_20ed655d1fdb0c0dc03fd2267680f974&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_20ed655d1fdb0c0dc03fd2267680f974&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457" tabindex="-1"><a class="header-anchor" href="#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457"><span><code>Squid::updateEntitySpecificMolangVariables::__l2::&lt;lambda_54ff11a541b599c5179e16b1d9d14457&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::updateEntitySpecificMolangVariables::__l2::&lt;lambda_54ff11a541b599c5179e16b1d9d14457&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_745c8c632ec8667527937f4fd921d65d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_745c8c632ec8667527937f4fd921d65d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b" tabindex="-1"><a class="header-anchor" href="#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b"><span><code>Squid::aiStep::__l38::&lt;lambda_7c935aff097e3f4f0757a5f398e28e3b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::aiStep::__l38::&lt;lambda_7c935aff097e3f4f0757a5f398e28e3b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_81d88c366bffed15d10e67d2c2427073&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_81d88c366bffed15d10e67d2c2427073&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_a6ccd1b2e2a58943ed7603f95ec71137&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_a6ccd1b2e2a58943ed7603f95ec71137&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871"><span><code>Squid::spawnInkParticles::__l9::&lt;lambda_dd17807679feb6004cad8b221e669871&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l9::&lt;lambda_dd17807679feb6004cad8b221e669871&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a" tabindex="-1"><a class="header-anchor" href="#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a"><span><code>Squid::spawnInkParticles::__l2::&lt;lambda_f866df35e06d0821240572926370310a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Squid::spawnInkParticles::__l2::&lt;lambda_f866df35e06d0821240572926370310a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a" tabindex="-1"><a class="header-anchor" href="#subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a"><span><code>SubtreeDefinition::load::__l2::&lt;lambda_812a7dd9662048876f94e3c602f5749a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubtreeDefinition::load::__l2::&lt;lambda_812a7dd9662048876f94e3c602f5749a&gt;</span>
<span class="line">{</span>
<span class="line">  SubtreeDefinition *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_7ee7d0e96e7f086bf09398b468cf2075&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_7ee7d0e96e7f086bf09398b468cf2075&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acd0cdf20e3b5cde0d6a58a55011ea1d&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acd0cdf20e3b5cde0d6a58a55011ea1d&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_bcd9dfb7d43d7c010ff946aba3e014f2&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_bcd9dfb7d43d7c010ff946aba3e014f2&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal" tabindex="-1"><a class="header-anchor" href="#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal"><span><code>Silverfish::spawnAnim::__l2::&lt;lambda_19e1d0aacea10af139bf394457913d53&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Silverfish::spawnAnim::__l2::&lt;lambda_19e1d0aacea10af139bf394457913d53&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acae4de5d24cbf0518c8cbf9196c47aa&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acae4de5d24cbf0518c8cbf9196c47aa&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53" tabindex="-1"><a class="header-anchor" href="#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53"><span><code>Silverfish::spawnAnim::__l2::&lt;lambda_19e1d0aacea10af139bf394457913d53&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Silverfish::spawnAnim::__l2::&lt;lambda_19e1d0aacea10af139bf394457913d53&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_7ee7d0e96e7f086bf09398b468cf2075&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_7ee7d0e96e7f086bf09398b468cf2075&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acae4de5d24cbf0518c8cbf9196c47aa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acae4de5d24cbf0518c8cbf9196c47aa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acd0cdf20e3b5cde0d6a58a55011ea1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_acd0cdf20e3b5cde0d6a58a55011ea1d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2" tabindex="-1"><a class="header-anchor" href="#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2"><span><code>Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_bcd9dfb7d43d7c010ff946aba3e014f2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::&lt;lambda_bcd9dfb7d43d7c010ff946aba3e014f2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal" tabindex="-1"><a class="header-anchor" href="#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal"><span><code>SpongeBlock::_spawnAbsorbParticles::__l4::&lt;lambda_281430efca4f4a8de2a9d661daf56df2&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpongeBlock::_spawnAbsorbParticles::__l4::&lt;lambda_281430efca4f4a8de2a9d661daf56df2&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2" tabindex="-1"><a class="header-anchor" href="#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2"><span><code>SpongeBlock::_spawnAbsorbParticles::__l4::&lt;lambda_281430efca4f4a8de2a9d661daf56df2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpongeBlock::_spawnAbsorbParticles::__l4::&lt;lambda_281430efca4f4a8de2a9d661daf56df2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_b89d7faeb8625652467465f4053f1a1e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_b89d7faeb8625652467465f4053f1a1e&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_ee02d42ed08427f9fb42002a8b8ca57d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_ee02d42ed08427f9fb42002a8b8ca57d&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_58da501a9e5a53b0697e720a47037e87&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_58da501a9e5a53b0697e720a47037e87&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_659fa460fcd8c91f9c29efb516ca29a4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_659fa460fcd8c91f9c29efb516ca29a4&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_bfaabf8c679a87b6e2d83295f0010d23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_bfaabf8c679a87b6e2d83295f0010d23&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_f8315e4b756b9df6ad9782338da705eb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_f8315e4b756b9df6ad9782338da705eb&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_b6e2926387827d0322d995e610a39062&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_b6e2926387827d0322d995e610a39062&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_79653376107e589b67701292641889fb&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_79653376107e589b67701292641889fb&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,2&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_41ef2a1cf9e6be72ad5379c22f5e274a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_41ef2a1cf9e6be72ad5379c22f5e274a&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_f6550f24920c305d2a3228c1caad78b8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_f6550f24920c305d2a3228c1caad78b8&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_bc44f7e86affe751fd9c46eb71543178&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_bc44f7e86affe751fd9c46eb71543178&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_469bd9e3b15d63a3bec8b65106f8890c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_469bd9e3b15d63a3bec8b65106f8890c&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_2c377cf4a0b195dfab8182eb8ff7fe0f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_2c377cf4a0b195dfab8182eb8ff7fe0f&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_bbbc0f4fafb53fc32059227f6c0c450f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_bbbc0f4fafb53fc32059227f6c0c450f&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_3950691e075ab91cd491b17c4310546e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_3950691e075ab91cd491b17c4310546e&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_83d310390567ffecea966b4919d30ac8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_83d310390567ffecea966b4919d30ac8&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_d7d9298a0aebfa663a195f3482260e81&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_d7d9298a0aebfa663a195f3482260e81&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_197910b15336c6c57fb079552212abf9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_197910b15336c6c57fb079552212abf9&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_8f4d5d31dc10279ae8a6f79bc1288959&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_8f4d5d31dc10279ae8a6f79bc1288959&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_6cac658f9939f9fdcf21c2bb28998155&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_6cac658f9939f9fdcf21c2bb28998155&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_29e923ba2bd56312b230cf095fc262ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_29e923ba2bd56312b230cf095fc262ab&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_8ed02beb6fa123e2e4b230d4b7fed29e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_8ed02beb6fa123e2e4b230d4b7fed29e&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_4b93ab98a1c1995005831a07db31e259&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_4b93ab98a1c1995005831a07db31e259&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_a742bfdf2437d491e99310db58d7daf2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_a742bfdf2437d491e99310db58d7daf2&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,8&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_cd9c28223f1f7e791d8b4829dc4db1a8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_cd9c28223f1f7e791d8b4829dc4db1a8&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_82094842f7d520b5264a46a912e7b041&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_82094842f7d520b5264a46a912e7b041&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_9a10c8d6d7cc96e7b05d64277e151ddc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_9a10c8d6d7cc96e7b05d64277e151ddc&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_9a59a157a43846344d974fc798480d36&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_9a59a157a43846344d974fc798480d36&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_9e1a0dcb27e98dcb2b0dd0c738266d83&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_9e1a0dcb27e98dcb2b0dd0c738266d83&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_19fb2b0eda159d1884bb0c9ded0eccd8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_19fb2b0eda159d1884bb0c9ded0eccd8&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_b99f6b3392fe60ef2f5160864d6377b0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_b99f6b3392fe60ef2f5160864d6377b0&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_9d4dc4f6cb6703c61b6dfd39d3a81637&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_9d4dc4f6cb6703c61b6dfd39d3a81637&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,16&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_e8bf3bc4d2c99c57826d07951044b5b5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_e8bf3bc4d2c99c57826d07951044b5b5&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_9c3c32c12509b945041a07efec1f4018&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_9c3c32c12509b945041a07efec1f4018&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_30ac5ed33c057b47ad3e061255bc9f85&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_30ac5ed33c057b47ad3e061255bc9f85&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_7a0286341374ba7ace6e9c1673e7fcf0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_7a0286341374ba7ace6e9c1673e7fcf0&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_d8c3aa28f4250d79cb1f214ff0524749&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_d8c3aa28f4250d79cb1f214ff0524749&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_c91dd27f63e11c7332a1b13efc647b2a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_c91dd27f63e11c7332a1b13efc647b2a&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_7ed2c87cb0677ad293c75ec93c239094&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_7ed2c87cb0677ad293c75ec93c239094&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_77cb8d6a030c374aa1dc15ade6754a87&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_77cb8d6a030c374aa1dc15ade6754a87&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,256&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_5c54a6d5e82ef8fe4e108535597a07a5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_5c54a6d5e82ef8fe4e108535597a07a5&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_d529bd2d858807c48987aaa1084a2b8d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_d529bd2d858807c48987aaa1084a2b8d&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_578a91390099f186d7171712656310be&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_578a91390099f186d7171712656310be&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_1ed035df95b6b5b1bbdacd8771e68b80&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_1ed035df95b6b5b1bbdacd8771e68b80&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_8470c3d3d53641c5f515fa0a50f7d203&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_8470c3d3d53641c5f515fa0a50f7d203&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_e64f1a17e18be658772b1736538eadb6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_e64f1a17e18be658772b1736538eadb6&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_00be663ed5f61e98eadb6cdeb28378f4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_00be663ed5f61e98eadb6cdeb28378f4&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_c31f78ab0fc73eaf1e1744a301d0ad5f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_c31f78ab0fc73eaf1e1744a301d0ad5f&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4096&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_961742dd9bc1d976bf071baf7b6a837b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_961742dd9bc1d976bf071baf7b6a837b&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_835c95f7d954b44a1692ec9f4c720c21&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_835c95f7d954b44a1692ec9f4c720c21&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_7a387bd6d2d2ba4bd42bcc8d34cd3cd7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_7a387bd6d2d2ba4bd42bcc8d34cd3cd7&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_016baf4e196323c8538fd94c98b531d8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_016baf4e196323c8538fd94c98b531d8&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_e1beab7cca7d279280ff45eb3be3974f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_e1beab7cca7d279280ff45eb3be3974f&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_922346ceb579a190cf9385daa338d6c0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_922346ceb579a190cf9385daa338d6c0&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_36b90fddf1b151e4e3615e85857d0647&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_36b90fddf1b151e4e3615e85857d0647&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_8cb60d75dc4e5d8b6cd616474e0a20f3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_8cb60d75dc4e5d8b6cd616474e0a20f3&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,32&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_8fa1d2d0560a314c97ef3959fc62aa6e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_8fa1d2d0560a314c97ef3959fc62aa6e&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_58a2dd194639f141c5dec720842771d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_58a2dd194639f141c5dec720842771d5&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_186f12fb5c9ea95857c941f086043dfd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_186f12fb5c9ea95857c941f086043dfd&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_ffb12327d2445fa1d089d3cd84baf000&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_ffb12327d2445fa1d089d3cd84baf000&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_00de30484d20d3df2ccba38bd470dad4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_00de30484d20d3df2ccba38bd470dad4&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_b337c4c891a1361a908e2abb77fa22e4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_b337c4c891a1361a908e2abb77fa22e4&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_2ecb361f8582be43669bd1b87db23296&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_2ecb361f8582be43669bd1b87db23296&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_07f6beca060ecad8ce0a9287d8b20e62&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_07f6beca060ecad8ce0a9287d8b20e62&gt;</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,64&gt; *remappingLookup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::fetchBlocksInBox::__l2::&lt;lambda_05dcea0d077ab08977860bf1536271dc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::fetchBlocksInBox::__l2::&lt;lambda_05dcea0d077ab08977860bf1536271dc&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_2225f5dd488587be97d5ef16dbb05a4e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_2225f5dd488587be97d5ef16dbb05a4e&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_2f8920f8aed8669ce026a439bb206b81&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_2f8920f8aed8669ce026a439bb206b81&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_31ae1f2113d30483dfa86a8979a4b0c4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_31ae1f2113d30483dfa86a8979a4b0c4&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::fetchBlocksInBox::__l2::&lt;lambda_333c91ec917de2d00c7d7b20be94f138&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::fetchBlocksInBox::__l2::&lt;lambda_333c91ec917de2d00c7d7b20be94f138&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::fetchBlocksInBox::__l2::&lt;lambda_3a25f8be0adce3e4613c2792bb15ad32&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::fetchBlocksInBox::__l2::&lt;lambda_3a25f8be0adce3e4613c2792bb15ad32&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::fetchBlocksInBox::__l2::&lt;lambda_6805beeeeb20926306bc087a374beb00&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::fetchBlocksInBox::__l2::&lt;lambda_6805beeeeb20926306bc087a374beb00&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_69eb90666f66735dbbd3c93a3c693a3d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_69eb90666f66735dbbd3c93a3c693a3d&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_6eff12cf755cbc8df5ad19484681e643&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_6eff12cf755cbc8df5ad19484681e643&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_7ad7ae9e0b04fad7956ba5c2462033f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_7ad7ae9e0b04fad7956ba5c2462033f8&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::fetchBlocksInBox::__l2::&lt;lambda_81f82229aefcc027330dfa10aa9c846d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::fetchBlocksInBox::__l2::&lt;lambda_81f82229aefcc027330dfa10aa9c846d&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_8505f348207d8ed882a967b263f00729&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_8505f348207d8ed882a967b263f00729&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_92f021db926b66e17c3d1841e8d27176&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::fetchBlocksInCylinder::__l2::&lt;lambda_92f021db926b66e17c3d1841e8d27176&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int height;</span>
<span class="line">  unsigned int radius;</span>
<span class="line">  const BlockPos *pos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::fetchBlocksInBox::__l2::&lt;lambda_997cfac59e34b9c498561474fd5a53aa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::fetchBlocksInBox::__l2::&lt;lambda_997cfac59e34b9c498561474fd5a53aa&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::fetchBlocksInBox::__l2::&lt;lambda_edcd7c6147545643dd4f557b53945643&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::fetchBlocksInBox::__l2::&lt;lambda_edcd7c6147545643dd4f557b53945643&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::fetchBlocksInBox::__l2::&lt;lambda_f43d19be392b01ec54de03992e19bbb7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::fetchBlocksInBox::__l2::&lt;lambda_f43d19be392b01ec54de03992e19bbb7&gt;</span>
<span class="line">{</span>
<span class="line">  const BoundingBox *box;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_3d3775961188f5d75cc9165de79473f8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::{ctor}::__l5::&lt;lambda_3d3775961188f5d75cc9165de79473f8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_544678e6bb1251d1e1246e2f40073bdf&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::{ctor}::__l5::&lt;lambda_544678e6bb1251d1e1246e2f40073bdf&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_783ffbd839a4ef6bf7f3e7e71a917099&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::{ctor}::__l5::&lt;lambda_783ffbd839a4ef6bf7f3e7e71a917099&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_7f372ce8f01d8e7eca85b0df7b158601&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::{ctor}::__l5::&lt;lambda_7f372ce8f01d8e7eca85b0df7b158601&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_9d948e124c24db4d860e66e0195e2b1b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::{ctor}::__l5::&lt;lambda_9d948e124c24db4d860e66e0195e2b1b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_b4ac387c3660a6cd85cfd19de4a596e5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::{ctor}::__l5::&lt;lambda_b4ac387c3660a6cd85cfd19de4a596e5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_bb5dbc2c16fccebb88d3f7ca9022c57c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::{ctor}::__l5::&lt;lambda_bb5dbc2c16fccebb88d3f7ca9022c57c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_f1843f9aa6d0f0bab8652ab8fb95c2ac&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::{ctor}::__l5::&lt;lambda_f1843f9aa6d0f0bab8652ab8fb95c2ac&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_09a7b7eccde96f168aefdcf4510b1048&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_09a7b7eccde96f168aefdcf4510b1048&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::findUsedIndices::__l2::&lt;lambda_17bedaa24e4c7f9ff6efe58e06d20e2c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::findUsedIndices::__l2::&lt;lambda_17bedaa24e4c7f9ff6efe58e06d20e2c&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;256&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::findUsedIndices::__l2::&lt;lambda_2ed1e938e204f4521098f089a261134c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::findUsedIndices::__l2::&lt;lambda_2ed1e938e204f4521098f089a261134c&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;4&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::findUsedIndices::__l2::&lt;lambda_42453c35bc07ae9da0d838fd6046c080&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::findUsedIndices::__l2::&lt;lambda_42453c35bc07ae9da0d838fd6046c080&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;4096&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::findUsedIndices::__l2::&lt;lambda_4c55d5191fba51a33256aebbbc639402&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::findUsedIndices::__l2::&lt;lambda_4c55d5191fba51a33256aebbbc639402&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;8&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::findUsedIndices::__l2::&lt;lambda_5326846d6b6a4a52eef1e117e9eaadd5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::findUsedIndices::__l2::&lt;lambda_5326846d6b6a4a52eef1e117e9eaadd5&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;64&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_5b5744cc523e02cf0d9ddc9cfb78437c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;16,16&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_5b5744cc523e02cf0d9ddc9cfb78437c&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_5c6bcf649dce0f48c2923e314a547cad&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;8,8&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_5c6bcf649dce0f48c2923e314a547cad&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_6d55ad4cff0dd4eabb29215fb608913f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;6,6&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_6d55ad4cff0dd4eabb29215fb608913f&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_6e0dba5c30f06b0dff0181aec7e4af94&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_6e0dba5c30f06b0dff0181aec7e4af94&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_77d2db69a28f5aff5902a2cc0216082c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_77d2db69a28f5aff5902a2cc0216082c&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_a77ad154162e45517fb3e1ee3c08a299&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;2,2&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_a77ad154162e45517fb3e1ee3c08a299&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;::findUsedIndices::__l2::&lt;lambda_b3a5c9534f819a154621d0e7553c71e5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;1,1&gt;::findUsedIndices::__l2::&lt;lambda_b3a5c9534f819a154621d0e7553c71e5&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;2&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;::findUsedIndices::__l2::&lt;lambda_cae54f3a68597e07934177246dc8cb8f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;4,4&gt;::findUsedIndices::__l2::&lt;lambda_cae54f3a68597e07934177246dc8cb8f&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;16&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;::findUsedIndices::__l2::&lt;lambda_ccd75c963cecbc6c25cfcda0d301d8c1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;5,5&gt;::findUsedIndices::__l2::&lt;lambda_ccd75c963cecbc6c25cfcda0d301d8c1&gt;</span>
<span class="line">{</span>
<span class="line">  std::bitset&lt;32&gt; *existing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_fa644e9c48b0892bfb38e0eb2c45d93d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SubChunkBlockStoragePaletted&lt;3,3&gt;::_zeroIndicesGreaterEqualThan::__l2::&lt;lambda_fa644e9c48b0892bfb38e0eb2c45d93d&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int16 *max;</span>
<span class="line">  std::vector&lt;unsigned short&gt; *outOfBoundSlots;</span>
<span class="line">  unsigned __int64 *idx;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35" tabindex="-1"><a class="header-anchor" href="#singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35"><span><code>SingleBlockFeature::_mayAttach::__l2::&lt;lambda_2a6fcf79d125f18d56e9ee3d23280c35&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SingleBlockFeature::_mayAttach::__l2::&lt;lambda_2a6fcf79d125f18d56e9ee3d23280c35&gt;</span>
<span class="line">{</span>
<span class="line">  const SingleBlockFeature *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a" tabindex="-1"><a class="header-anchor" href="#singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a"><span><code>SingleBlockFeature::_mayAttach::__l2::&lt;lambda_e9c20ccf746f09597e99f3b2df791d8a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SingleBlockFeature::_mayAttach::__l2::&lt;lambda_e9c20ccf746f09597e99f3b2df791d8a&gt;</span>
<span class="line">{</span>
<span class="line">  const SingleBlockFeature *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516" tabindex="-1"><a class="header-anchor" href="#structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516"><span><code>StructureFeature::waitForFeatureBlueprints::__l2::&lt;lambda_ae7082b559214a814fc226cfd7f32516&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StructureFeature::waitForFeatureBlueprints::__l2::&lt;lambda_ae7082b559214a814fc226cfd7f32516&gt;</span>
<span class="line">{</span>
<span class="line">  StructureFeature *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511" tabindex="-1"><a class="header-anchor" href="#structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511"><span><code>StructureTemplate::_fillBlockInfo::__l2::&lt;lambda_76eff4b48ee237c3d94a60cb41446511&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj StructureTemplate::_fillBlockInfo::__l2::&lt;lambda_76eff4b48ee237c3d94a60cb41446511&gt;</span>
<span class="line">{</span>
<span class="line">  const Block *voidBlock;</span>
<span class="line">  std::map&lt;Block const *,int&gt; *blockToIndex;</span>
<span class="line">  StructureBlockPalette *structureBlockPalette;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3a8b2a6fd80c4ca75449b56bc67f6f83&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3a8b2a6fd80c4ca75449b56bc67f6f83&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3f045b696bef04d0359231b688e14fa9&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3f045b696bef04d0359231b688e14fa9&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_ed116ff0a398b7fd701b935508d112de&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_ed116ff0a398b7fd701b935508d112de&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_2e1116f26d303492bb04bdbca35dcc0c&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_2e1116f26d303492bb04bdbca35dcc0c&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_f7db91837f2565cf3fd818ae5745584f&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_f7db91837f2565cf3fd818ae5745584f&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3f045b696bef04d0359231b688e14fa9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3f045b696bef04d0359231b688e14fa9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_ed116ff0a398b7fd701b935508d112de&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_ed116ff0a398b7fd701b935508d112de&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3a8b2a6fd80c4ca75449b56bc67f6f83&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_3a8b2a6fd80c4ca75449b56bc67f6f83&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_f7db91837f2565cf3fd818ae5745584f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_f7db91837f2565cf3fd818ae5745584f&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c" tabindex="-1"><a class="header-anchor" href="#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c"><span><code>ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_2e1116f26d303492bb04bdbca35dcc0c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::&lt;lambda_2e1116f26d303492bb04bdbca35dcc0c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a" tabindex="-1"><a class="header-anchor" href="#snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a"><span><code>SnapshotEnv::createSnapshot::__l14::&lt;lambda_633e2701bdb30152fc9f78453e74bb9a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SnapshotEnv::createSnapshot::__l14::&lt;lambda_633e2701bdb30152fc9f78453e74bb9a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8" tabindex="-1"><a class="header-anchor" href="#serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8"><span><code>ServerScoreboard::setDisplayObjective::__l8::&lt;lambda_0747d8f05afc99c477135c4d36b10fe8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ServerScoreboard::setDisplayObjective::__l8::&lt;lambda_0747d8f05afc99c477135c4d36b10fe8&gt;</span>
<span class="line">{</span>
<span class="line">  const DisplayObjective **displayObjective;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c365b97a846660e6b3fccbcc72a4c37e&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c365b97a846660e6b3fccbcc72a4c37e&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c365b97a846660e6b3fccbcc72a4c37e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_c365b97a846660e6b3fccbcc72a4c37e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1cd8d8773a9d60ac3364ae38a475281b&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1cd8d8773a9d60ac3364ae38a475281b&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1cd8d8773a9d60ac3364ae38a475281b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_1cd8d8773a9d60ac3364ae38a475281b&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_4bfd93ca7d63de59fdffead62714b7fa&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_4bfd93ca7d63de59fdffead62714b7fa&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_4bfd93ca7d63de59fdffead62714b7fa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_4bfd93ca7d63de59fdffead62714b7fa&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_db838ddadf31e2f802fde4f26a617c80&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_db838ddadf31e2f802fde4f26a617c80&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_db838ddadf31e2f802fde4f26a617c80&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_db838ddadf31e2f802fde4f26a617c80&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_60b6d1bba4b02c0e8d10fc8be75855af&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_60b6d1bba4b02c0e8d10fc8be75855af&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af" tabindex="-1"><a class="header-anchor" href="#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af"><span><code>SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_60b6d1bba4b02c0e8d10fc8be75855af&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::&lt;lambda_60b6d1bba4b02c0e8d10fc8be75855af&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_defce208a08fa9ea383a3b955bef6273&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_defce208a08fa9ea383a3b955bef6273&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273" tabindex="-1"><a class="header-anchor" href="#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273"><span><code>SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_defce208a08fa9ea383a3b955bef6273&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::&lt;lambda_defce208a08fa9ea383a3b955bef6273&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9b631e13b9a6582f77c27a8d4c523d13&gt;::()::__l2::Literal</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9b631e13b9a6582f77c27a8d4c523d13&gt;::()::__l2::Literal</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13" tabindex="-1"><a class="header-anchor" href="#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13"><span><code>SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9b631e13b9a6582f77c27a8d4c523d13&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::&lt;lambda_9b631e13b9a6582f77c27a8d4c523d13&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2" tabindex="-1"><a class="header-anchor" href="#shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2"><span><code>SHPortalRoom::postProcess::__l2::&lt;lambda_ad4ab04a3053cfc72944c670238dd6f2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SHPortalRoom::postProcess::__l2::&lt;lambda_ad4ab04a3053cfc72944c670238dd6f2&gt;</span>
<span class="line">{</span>
<span class="line">  const Block **endPortalEye;</span>
<span class="line">  const Block **endPortalNoEye;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406"><span><code>SoundSystemFMOD::_addToSoundCache::__l5::&lt;lambda_35441f677013214f2c5df3d329344406&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::_addToSoundCache::__l5::&lt;lambda_35441f677013214f2c5df3d329344406&gt;</span>
<span class="line">{</span>
<span class="line">  SoundSystemFMOD *const __this;</span>
<span class="line">  const Core::Path soundName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183"><span><code>SoundSystemFMOD::unloadAllExcept::__l20::&lt;lambda_0e65d4d3526df21953afe127ce5ce183&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::unloadAllExcept::__l20::&lt;lambda_0e65d4d3526df21953afe127ce5ce183&gt;</span>
<span class="line">{</span>
<span class="line">  const std::vector&lt;Core::PathBuffer&lt;std::string &gt;&gt; exceptions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059" tabindex="-1"><a class="header-anchor" href="#soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059"><span><code>SoundSystemFMOD::fadeOut::__l2::&lt;lambda_2b792a64d6c135a6d4a0beb3927c5059&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SoundSystemFMOD::fadeOut::__l2::&lt;lambda_2b792a64d6c135a6d4a0beb3927c5059&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 handle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83" tabindex="-1"><a class="header-anchor" href="#serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83"><span><code>SerializerEnumMapping::lookup::__l2::&lt;lambda_4bef74521c4bc00b8d630ed3c33fba83&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj SerializerEnumMapping::lookup::__l2::&lt;lambda_4bef74521c4bc00b8d630ed3c33fba83&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sequence" tabindex="-1"><a class="header-anchor" href="#sequence"><span><code>sequence</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) sequence</span>
<span class="line">{</span>
<span class="line">  _object *it;</span>
<span class="line">  int saw_StopIteration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scriptclientinstanceeventlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#scriptclientinstanceeventlistener-vtbl"><span><code>ScriptClientInstanceEventListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ScriptClientInstanceEventListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ClientInstanceEventListener)(ClientInstanceEventListener *this);</span>
<span class="line">  EventResult (__fastcall *onClientInitializeStart)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientInitializeEnd)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientMinecraftInitialized)(ClientInstanceEventListener *this, ClientInstance *, Minecraft *);</span>
<span class="line">  EventResult (__fastcall *onClientCreatedLevel)(ClientInstanceEventListener *this, ClientInstance *, Level *);</span>
<span class="line">  EventResult (__fastcall *onClientUpdateStart)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientUpdateEnd)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientSuspend)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientEnteredWorld)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onStartLeaveGame)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverlevel-vtbl" tabindex="-1"><a class="header-anchor" href="#serverlevel-vtbl"><span><code>ServerLevel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ServerLevel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);</span>
<span class="line">  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);</span>
<span class="line">  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);</span>
<span class="line">  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr&lt;BlockActor&gt;);</span>
<span class="line">  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);</span>
<span class="line">  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);</span>
<span class="line">  bool (__fastcall *initialize)(Level *this, const std::string *, const LevelSettings *, LevelData *, const std::string *);</span>
<span class="line">  bool (__fastcall *postProcessResources)(Level *this);</span>
<span class="line">  void (__fastcall *startLeaveGame)(Level *this);</span>
<span class="line">  Actor *(__fastcall *addEntity)(Level *this, BlockSource *, std::unique_ptr&lt;Actor&gt;);</span>
<span class="line">  Actor *(__fastcall *addGlobalEntity)(Level *this, BlockSource *, std::unique_ptr&lt;Actor&gt;);</span>
<span class="line">  Actor *(__fastcall *addAutonomousEntity)(Level *this, BlockSource *, std::unique_ptr&lt;Actor&gt;);</span>
<span class="line">  void (__fastcall *addPlayer)(Level *this, std::unique_ptr&lt;Player&gt;);</span>
<span class="line">  std::unique_ptr&lt;Actor&gt; *(__fastcall *takeEntity)(Level *this, std::unique_ptr&lt;Actor&gt; *result, ActorUniqueID);</span>
<span class="line">  std::unique_ptr&lt;Actor&gt; *(__fastcall *borrowEntity)(Level *this, std::unique_ptr&lt;Actor&gt; *result, ActorUniqueID, LevelChunk *);</span>
<span class="line">  const Tick *(__fastcall *getCurrentServerTick)(Level *this, const Tick *result);</span>
<span class="line">  Factory&lt;BaseLightTextureImageBuilder,Level &amp;,Scheduler &amp;&gt; *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);</span>
<span class="line">  const Factory&lt;BaseLightTextureImageBuilder,Level &amp;,Scheduler &amp;&gt; *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);</span>
<span class="line">  void (__fastcall *onPlayerDeath)(Level *this, Player *, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *tick)(Level *this);</span>
<span class="line">  void (__fastcall *directTickEntities)(Level *this, BlockSource *);</span>
<span class="line">  void (__fastcall *updateSleepingPlayerList)(Level *this);</span>
<span class="line">  void (__fastcall *setDifficulty)(Level *this, Difficulty);</span>
<span class="line">  void (__fastcall *setCommandsEnabled)(Level *this, bool);</span>
<span class="line">  void (__fastcall *setWorldTemplateOptionsUnlocked)(Level *this);</span>
<span class="line">  void (__fastcall *saveAdditionalData)(Level *this);</span>
<span class="line">  LevelEventCoordinator *(__fastcall *getLevelEventCoordinator)(Level *this);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(Level *this, ChunkSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *queueEntityRemoval)(Level *this, std::unique_ptr&lt;Actor&gt; *, bool);</span>
<span class="line">  void (__fastcall *removeEntityReferences)(Level *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *loadFunctionManager)(Level *this);</span>
<span class="line">  ResourcePackManager *(__fastcall *getClientResourcePackManager)(Level *this);</span>
<span class="line">  ResourcePackManager *(__fastcall *getServerResourcePackManager)(Level *this);</span>
<span class="line">  TradeTables *(__fastcall *getTradeTables)(Level *this);</span>
<span class="line">  void (__fastcall *addEntryToTagCache)(Level *this, const std::string *);</span>
<span class="line">  void (__fastcall *addEntriesToTagCache)(Level *this, const std::vector&lt;std::string&gt;);</span>
<span class="line">  void (__fastcall *dropEntryFromTagCache)(Level *this, const std::string *);</span>
<span class="line">  void (__fastcall *clearTagCache)(Level *this);</span>
<span class="line">  void (__fastcall *decrementTagCache)(Level *this, const std::string *, TagRegistry&lt;IDType&lt;LevelTagIDType&gt;,IDType&lt;LevelTagSetIDType&gt; &gt; *);</span>
<span class="line">  void (__fastcall *incrementTagCache)(Level *this, const std::string *, TagRegistry&lt;IDType&lt;LevelTagIDType&gt;,IDType&lt;LevelTagSetIDType&gt; &gt; *);</span>
<span class="line">  void (__fastcall *runCommand)(Level *this, Command *, CommandOrigin *, CommandOriginSystem);</span>
<span class="line">  void (__fastcall *runCommand)(Level *this, const HashedString *, CommandOrigin *, CommandOriginSystem, const CurrentCmdVersion);</span>
<span class="line">  TagRegistry&lt;IDType&lt;LevelTagIDType&gt;,IDType&lt;LevelTagSetIDType&gt; &gt; *(__fastcall *getTagRegistry)(Level *this);</span>
<span class="line">  bool (__fastcall *canUseSkin)(Level *this, const SerializedSkin *, const NetworkIdentifier *, const mce::UUID *, const std::string *);</span>
<span class="line">  PositionTrackingDB::PositionTrackingDBServer *(__fastcall *getPositionTrackerDBServer)(Level *this);</span>
<span class="line">  void (__fastcall *setFinishedInitializing)(Level *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serverplayer-vtbl" tabindex="-1"><a class="header-anchor" href="#serverplayer-vtbl"><span><code>ServerPlayer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ServerPlayer_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *prepareRegion)(Player *this, ChunkSource *);</span>
<span class="line">  void (__fastcall *destroyRegion)(Player *this);</span>
<span class="line">  void (__fastcall *suspendRegion)(Player *this);</span>
<span class="line">  void (__fastcall *resendAllChunks)(Player *this);</span>
<span class="line">  void (__fastcall *_fireWillChangeDimension)(Player *this);</span>
<span class="line">  void (__fastcall *_fireDimensionChanged)(Player *this);</span>
<span class="line">  void (__fastcall *changeDimensionWithCredits)(Player *this, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  int (__fastcall *tickWorld)(Player *this, const Tick *);</span>
<span class="line">  void (__fastcall *frameUpdate)(Player *this, FrameUpdateContextBase *);</span>
<span class="line">  const std::vector&lt;ChunkPos&gt; *(__fastcall *getTickingOffsets)(Player *this);</span>
<span class="line">  void (__fastcall *moveView)(Player *this);</span>
<span class="line">  void (__fastcall *setName)(Player *this, const std::string *);</span>
<span class="line">  void (__fastcall *checkMovementStats)(Player *this, const Vec3 *);</span>
<span class="line">  StructureFeatureType (__fastcall *getCurrentStructureFeature)(Player *this);</span>
<span class="line">  bool (__fastcall *isAutoJumpEnabled)(Player *this);</span>
<span class="line">  void (__fastcall *respawn)(Player *this);</span>
<span class="line">  void (__fastcall *resetRot)(Player *this);</span>
<span class="line">  void (__fastcall *resetPos)(Player *this, bool);</span>
<span class="line">  bool (__fastcall *isInTrialMode)(Player *this);</span>
<span class="line">  bool (__fastcall *hasResource)(Player *this, int);</span>
<span class="line">  void (__fastcall *completeUsingItem)(Player *this);</span>
<span class="line">  void (__fastcall *setPermissions)(Player *this, CommandPermissionLevel);</span>
<span class="line">  void (__fastcall *startDestroying)(Player *this);</span>
<span class="line">  void (__fastcall *stopDestroying)(Player *this);</span>
<span class="line">  void (__fastcall *openPortfolio)(Player *this);</span>
<span class="line">  void (__fastcall *openBook)(Player *this, int, bool, int, BlockActor *);</span>
<span class="line">  void (__fastcall *openTrading)(Player *this, const ActorUniqueID *, bool);</span>
<span class="line">  bool (__fastcall *canOpenContainerScreen)(Player *this);</span>
<span class="line">  void (__fastcall *openChalkboard)(Player *this, ChalkboardBlockActor *, bool);</span>
<span class="line">  void (__fastcall *openNpcInteractScreen)(Player *this, Actor *);</span>
<span class="line">  bool (__fastcall *openInventory)(Player *this);</span>
<span class="line">  void (__fastcall *displayChatMessage)(Player *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *displayClientMessage)(Player *this, const std::string *);</span>
<span class="line">  void (__fastcall *displayTextObjectMessage)(Player *this, const TextObjectRoot *);</span>
<span class="line">  void (__fastcall *displayTextObjectWhisperMessage)(Player *this, const ResolvedTextObject *, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *displayWhisperMessage)(Player *this, const std::string *, const std::string *, const std::string *, const std::string *);</span>
<span class="line">  BedSleepingResult (__fastcall *startSleepInBed)(Player *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *stopSleepInBed)(Player *this, bool, bool);</span>
<span class="line">  bool (__fastcall *canStartSleepInBed)(Player *this);</span>
<span class="line">  int (__fastcall *getSleepTimer)(Player *this);</span>
<span class="line">  int (__fastcall *getPreviousTickSleepTimer)(Player *this);</span>
<span class="line">  void (__fastcall *openSign)(Player *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *playEmote)(Player *this, const std::string *);</span>
<span class="line">  bool (__fastcall *isHostingPlayer)(Player *this);</span>
<span class="line">  bool (__fastcall *isLoading)(Player *this);</span>
<span class="line">  bool (__fastcall *isPlayerInitialized)(Player *this);</span>
<span class="line">  void (__fastcall *stopLoading)(Player *this);</span>
<span class="line">  void (__fastcall *registerTrackedBoss)(Player *this, ActorUniqueID);</span>
<span class="line">  void (__fastcall *unRegisterTrackedBoss)(Player *this, ActorUniqueID);</span>
<span class="line">  void (__fastcall *setPlayerGameType)(Player *this, GameType);</span>
<span class="line">  void (__fastcall *initHUDContainerManager)(Player *this);</span>
<span class="line">  void (__fastcall *_crit)(Player *this, Actor *);</span>
<span class="line">  IMinecraftEventing *(__fastcall *getEventing)(Player *this);</span>
<span class="line">  unsigned int (__fastcall *getUserId)(Player *this);</span>
<span class="line">  void (__fastcall *sendEventPacket)(Player *this, EventPacket *);</span>
<span class="line">  void (__fastcall *addExperience)(Player *this, int);</span>
<span class="line">  void (__fastcall *addLevels)(Player *this, int);</span>
<span class="line">  void (__fastcall *setContainerData)(Player *this, IContainerManager *, int, int);</span>
<span class="line">  void (__fastcall *slotChanged)(Player *this, IContainerManager *, Container *, int, const ItemStack *, const ItemStack *, bool);</span>
<span class="line">  void (__fastcall *inventoryChanged)(Player *this, Container *, int, const ItemStack *, const ItemStack *, bool);</span>
<span class="line">  void (__fastcall *refreshContainer)(Player *this, IContainerManager *);</span>
<span class="line">  void (__fastcall *deleteContainerManager)(Player *this);</span>
<span class="line">  void (__fastcall *setFieldOfViewModifier)(Player *this, float);</span>
<span class="line">  bool (__fastcall *is2DPositionRelevant)(Player *this, AutomaticID&lt;Dimension,int&gt;, const BlockPos *);</span>
<span class="line">  bool (__fastcall *isEntityRelevant)(Player *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isTeacher)(Player *this);</span>
<span class="line">  void (__fastcall *onSuspension)(Player *this);</span>
<span class="line">  void (__fastcall *onLinkedSlotsChanged)(Player *this);</span>
<span class="line">  void (__fastcall *startCooldown)(Player *this, const Item *);</span>
<span class="line">  int (__fastcall *getItemCooldownLeft)(Player *this, const std::string *);</span>
<span class="line">  bool (__fastcall *isItemInCooldown)(Player *this, const std::string *);</span>
<span class="line">  void (__fastcall *sendInventoryTransaction)(Player *this, const InventoryTransaction *);</span>
<span class="line">  void (__fastcall *sendComplexInventoryTransaction)(Player *this, std::unique_ptr&lt;ComplexInventoryTransaction&gt;);</span>
<span class="line">  void (__fastcall *sendNetworkPacket)(Player *this, Packet *);</span>
<span class="line">  PlayerEventCoordinator *(__fastcall *getPlayerEventCoordinator)(Player *this);</span>
<span class="line">  MoveInputHandler *(__fastcall *getMoveInputHandler)(Player *this);</span>
<span class="line">  InputMode (__fastcall *getInputMode)(Player *this);</span>
<span class="line">  ClientPlayMode (__fastcall *getPlayMode)(Player *this);</span>
<span class="line">  void (__fastcall *reportMovementTelemetry)(Player *this, const MovementEventType);</span>
<span class="line">  bool (__fastcall *getCamereDeparted)(Player *this);</span>
<span class="line">  bool (__fastcall *getThirdPersonPerspective)(Player *this);</span>
<span class="line">  Vec2 *(__fastcall *getRotationToCamera)(Player *this, Vec2 *result);</span>
<span class="line">  void (__fastcall *onMovePlayerPacketNormal)(Player *this, const Vec3 *, const Vec2 *, float);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulker-vtbl" tabindex="-1"><a class="header-anchor" href="#shulker-vtbl"><span><code>Shulker_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Shulker_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silverfish-vtbl" tabindex="-1"><a class="header-anchor" href="#silverfish-vtbl"><span><code>Silverfish_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Silverfish_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skullblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#skullblockactor-vtbl"><span><code>SkullBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SkullBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slime-vtbl" tabindex="-1"><a class="header-anchor" href="#slime-vtbl"><span><code>Slime_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Slime_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">  bool (__fastcall *canDealDamage)(Slime *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getSquishSound)(Slime *this);</span>
<span class="line">  void (__fastcall *setSlimeSize)(Slime *this, int);</span>
<span class="line">  bool (__fastcall *doPlayJumpSound)(Slime *this);</span>
<span class="line">  bool (__fastcall *doPlayLandSound)(Slime *this);</span>
<span class="line">  void (__fastcall *playJumpSound)(Slime *this);</span>
<span class="line">  void (__fastcall *playLandSound)(Slime *this);</span>
<span class="line">  void (__fastcall *decreaseSquish)(Slime *this);</span>
<span class="line">  std::unique_ptr&lt;Slime&gt; *(__fastcall *createChild)(Slime *this, std::unique_ptr&lt;Slime&gt; *result, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spider-vtbl" tabindex="-1"><a class="header-anchor" href="#spider-vtbl"><span><code>Spider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Spider_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">  float (__fastcall *getModelScale)(Spider *this);</span>
<span class="line">  Spider::Type (__fastcall *getSpiderType)(Spider *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="squid-vtbl" tabindex="-1"><a class="header-anchor" href="#squid-vtbl"><span><code>Squid_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Squid_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-1-1-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-1-1-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;1,1&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;1,1&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-16-16-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-16-16-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;16,16&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;16,16&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-2-2-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-2-2-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;2,2&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;2,2&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-3-3-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-3-3-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;3,3&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;3,3&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-4-4-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-4-4-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;4,4&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;4,4&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-5-5-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-5-5-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;5,5&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;5,5&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-6-6-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-6-6-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;6,6&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;6,6&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subchunkblockstoragepaletted-8-8-vtbl" tabindex="-1"><a class="header-anchor" href="#subchunkblockstoragepaletted-8-8-vtbl"><span><code>SubChunkBlockStoragePaletted&lt;8,8&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ SubChunkBlockStoragePaletted&lt;8,8&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="salmon-vtbl" tabindex="-1"><a class="header-anchor" href="#salmon-vtbl"><span><code>Salmon_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Salmon_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sheep-vtbl" tabindex="-1"><a class="header-anchor" href="#sheep-vtbl"><span><code>Sheep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Sheep_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shulkerboxblockactor-vtbl" tabindex="-1"><a class="header-anchor" href="#shulkerboxblockactor-vtbl"><span><code>ShulkerBoxBlockActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ShulkerBoxBlockActor_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BlockActor)(BlockActor *this);</span>
<span class="line">  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  bool (__fastcall *save)(BlockActor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);</span>
<span class="line">  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *tick)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isFinished)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *isCustomNameSaved)(BlockActor *this);</span>
<span class="line">  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);</span>
<span class="line">  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *onMove)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *triggerEvent)(BlockActor *this, int, int);</span>
<span class="line">  void (__fastcall *clearCache)(BlockActor *this);</span>
<span class="line">  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *hasAlphaLayer)(BlockActor *this);</span>
<span class="line">  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);</span>
<span class="line">  void (__fastcall *getDebugText)(BlockActor *this, std::vector&lt;std::string&gt; *, const BlockPos *);</span>
<span class="line">  const std::string *(__fastcall *getCustomName)(BlockActor *this);</span>
<span class="line">  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);</span>
<span class="line">  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);</span>
<span class="line">  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);</span>
<span class="line">  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);</span>
<span class="line">  int (__fastcall *getRepairCost)(BlockActor *this);</span>
<span class="line">  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);</span>
<span class="line">  const Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  Container *(__fastcall *getContainer)(BlockActor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);</span>
<span class="line">  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);</span>
<span class="line">  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);</span>
<span class="line">  std::unique_ptr&lt;BlockActorDataPacket&gt; *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr&lt;BlockActorDataPacket&gt; *result, BlockSource *);</span>
<span class="line">  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);</span>
<span class="line">  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);</span>
<span class="line">  void (__fastcall *loadItems)(ChestBlockActor *this, const CompoundTag *, Level *);</span>
<span class="line">  bool (__fastcall *saveItems)(ChestBlockActor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *playOpenSound)(ChestBlockActor *this, BlockSource *);</span>
<span class="line">  void (__fastcall *playCloseSound)(ChestBlockActor *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *_canOpenThis)(ChestBlockActor *this, BlockSource *);</span>
<span class="line">  AABB *(__fastcall *getObstructionAABB)(ChestBlockActor *this, AABB *result);</span>
<span class="line">  bool (__fastcall *_detectEntityObstruction)(ChestBlockActor *this, BlockSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skeleton-vtbl" tabindex="-1"><a class="header-anchor" href="#skeleton-vtbl"><span><code>Skeleton_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Skeleton_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strider-vtbl" tabindex="-1"><a class="header-anchor" href="#strider-vtbl"><span><code>Strider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Strider_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1075),t=[i];function c(d,r){return e(),a("div",null,t)}const p=s(l,[["render",c],["__file","S~4.html.vue"]]),b=JSON.parse('{"path":"/1.16.201/structure/S~4.html","title":"S~4","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_93622f71b2d1b3da07fa44fe633e4d31>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a4dc38abafd6bb1f7f898eecf86647d8>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_599c3e3b52bab211657dd2b12258525f>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_843fbf8f658197deabd5d66aca0b5d2c>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_44713807c694a34247116ac42237d921>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_2dc9e558cd4384c30952098dabdf69a6>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_bf6bd47537effc5005cc8af06f921a6b>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0ebaf0371ff09f45dab2f48e7253d4f7>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_b7f24edb716c239e18ac72d4f3c6733d>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a36afaf8a1afa0684c71071850b6dc59>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_3d8d548af9390a3e89d693eb21f9053e>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0b5b22390697ce2a7c10dc25a536ea1d>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d","children":[]},{"level":3,"title":"SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_ce0fde19203617737ec3f13040734e6d>","slug":"scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d","link":"#scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d","children":[]},{"level":3,"title":"Social::<lambda_a70a5a9432f0adfeb3ed076c01d0ac59>","slug":"social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59","link":"#social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59","children":[]},{"level":3,"title":"Social::<lambda_52ce7f45f90c5c2a0dd6d8adeb080876>","slug":"social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876","link":"#social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876","children":[]},{"level":3,"title":"Social::<lambda_b7ca127a156cd86fc46069d07be131eb>","slug":"social-lambda-b7ca127a156cd86fc46069d07be131eb","link":"#social-lambda-b7ca127a156cd86fc46069d07be131eb","children":[]},{"level":3,"title":"Social::<lambda_2ffb157acc314cd7a898b1a1b9dafa1a>","slug":"social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a","link":"#social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a","children":[]},{"level":3,"title":"ScaffoldingClimberSystem","slug":"scaffoldingclimbersystem","link":"#scaffoldingclimbersystem","children":[]},{"level":3,"title":"ScaffoldingClimberSystem_vtbl","slug":"scaffoldingclimbersystem-vtbl","link":"#scaffoldingclimbersystem-vtbl","children":[]},{"level":3,"title":"ScaleByAgeSystem","slug":"scalebyagesystem","link":"#scalebyagesystem","children":[]},{"level":3,"title":"ScaleByAgeSystem_vtbl","slug":"scalebyagesystem-vtbl","link":"#scalebyagesystem-vtbl","children":[]},{"level":3,"title":"SleepState","slug":"sleepstate","link":"#sleepstate","children":[]},{"level":3,"title":"SleepState_vtbl","slug":"sleepstate-vtbl","link":"#sleepstate-vtbl","children":[]},{"level":3,"title":"ScaredGoal","slug":"scaredgoal","link":"#scaredgoal","children":[]},{"level":3,"title":"ScaredGoal_vtbl","slug":"scaredgoal-vtbl","link":"#scaredgoal-vtbl","children":[]},{"level":3,"title":"ShareItemsGoal","slug":"shareitemsgoal","link":"#shareitemsgoal","children":[]},{"level":3,"title":"ShareItemsGoal_vtbl","slug":"shareitemsgoal-vtbl","link":"#shareitemsgoal-vtbl","children":[]},{"level":3,"title":"ShulkerPeekGoal","slug":"shulkerpeekgoal","link":"#shulkerpeekgoal","children":[]},{"level":3,"title":"ShulkerPeekGoal_vtbl","slug":"shulkerpeekgoal-vtbl","link":"#shulkerpeekgoal-vtbl","children":[]},{"level":3,"title":"SitGoal","slug":"sitgoal","link":"#sitgoal","children":[]},{"level":3,"title":"SitGoal_vtbl","slug":"sitgoal-vtbl","link":"#sitgoal-vtbl","children":[]},{"level":3,"title":"SkeletonHorseTrapGoal","slug":"skeletonhorsetrapgoal","link":"#skeletonhorsetrapgoal","children":[]},{"level":3,"title":"SkeletonHorseTrapGoal_vtbl","slug":"skeletonhorsetrapgoal-vtbl","link":"#skeletonhorsetrapgoal-vtbl","children":[]},{"level":3,"title":"SleepGoal","slug":"sleepgoal","link":"#sleepgoal","children":[]},{"level":3,"title":"SleepGoal_vtbl","slug":"sleepgoal-vtbl","link":"#sleepgoal-vtbl","children":[]},{"level":3,"title":"SlimeAttackDefinition","slug":"slimeattackdefinition","link":"#slimeattackdefinition","children":[]},{"level":3,"title":"SlimeAttackDefinition_vtbl","slug":"slimeattackdefinition-vtbl","link":"#slimeattackdefinition-vtbl","children":[]},{"level":3,"title":"SlimeAttackGoal","slug":"slimeattackgoal","link":"#slimeattackgoal","children":[]},{"level":3,"title":"SlimeAttackGoal_vtbl","slug":"slimeattackgoal-vtbl","link":"#slimeattackgoal-vtbl","children":[]},{"level":3,"title":"SlimeFloatDefinition","slug":"slimefloatdefinition","link":"#slimefloatdefinition","children":[]},{"level":3,"title":"SlimeFloatDefinition_vtbl","slug":"slimefloatdefinition-vtbl","link":"#slimefloatdefinition-vtbl","children":[]},{"level":3,"title":"SlimeFloatGoal","slug":"slimefloatgoal","link":"#slimefloatgoal","children":[]},{"level":3,"title":"SlimeFloatGoal_vtbl","slug":"slimefloatgoal-vtbl","link":"#slimefloatgoal-vtbl","children":[]},{"level":3,"title":"SlimeKeepOnJumpingDefinition","slug":"slimekeeponjumpingdefinition","link":"#slimekeeponjumpingdefinition","children":[]},{"level":3,"title":"SlimeKeepOnJumpingDefinition_vtbl","slug":"slimekeeponjumpingdefinition-vtbl","link":"#slimekeeponjumpingdefinition-vtbl","children":[]},{"level":3,"title":"SlimeKeepOnJumpingGoal","slug":"slimekeeponjumpinggoal","link":"#slimekeeponjumpinggoal","children":[]},{"level":3,"title":"SlimeKeepOnJumpingGoal_vtbl","slug":"slimekeeponjumpinggoal-vtbl","link":"#slimekeeponjumpinggoal-vtbl","children":[]},{"level":3,"title":"SlimeRandomDirectionDefinition","slug":"slimerandomdirectiondefinition","link":"#slimerandomdirectiondefinition","children":[]},{"level":3,"title":"SlimeRandomDirectionDefinition_vtbl","slug":"slimerandomdirectiondefinition-vtbl","link":"#slimerandomdirectiondefinition-vtbl","children":[]},{"level":3,"title":"SlimeRandomDirectionGoal","slug":"slimerandomdirectiongoal","link":"#slimerandomdirectiongoal","children":[]},{"level":3,"title":"SlimeRandomDirectionGoal_vtbl","slug":"slimerandomdirectiongoal-vtbl","link":"#slimerandomdirectiongoal-vtbl","children":[]},{"level":3,"title":"SnackGoal","slug":"snackgoal","link":"#snackgoal","children":[]},{"level":3,"title":"SnackGoal_vtbl","slug":"snackgoal-vtbl","link":"#snackgoal-vtbl","children":[]},{"level":3,"title":"SneezeGoal","slug":"sneezegoal","link":"#sneezegoal","children":[]},{"level":3,"title":"SneezeGoal_vtbl","slug":"sneezegoal-vtbl","link":"#sneezegoal-vtbl","children":[]},{"level":3,"title":"StalkAndPounceOnTargetGoal","slug":"stalkandpounceontargetgoal","link":"#stalkandpounceontargetgoal","children":[]},{"level":3,"title":"StalkAndPounceOnTargetGoal_vtbl","slug":"stalkandpounceontargetgoal-vtbl","link":"#stalkandpounceontargetgoal-vtbl","children":[]},{"level":3,"title":"StompAttackDefinition","slug":"stompattackdefinition","link":"#stompattackdefinition","children":[]},{"level":3,"title":"StompAttackDefinition_vtbl","slug":"stompattackdefinition-vtbl","link":"#stompattackdefinition-vtbl","children":[]},{"level":3,"title":"StompAttackGoal","slug":"stompattackgoal","link":"#stompattackgoal","children":[]},{"level":3,"title":"StompAttackGoal_vtbl","slug":"stompattackgoal-vtbl","link":"#stompattackgoal-vtbl","children":[]},{"level":3,"title":"StompBlockGoal","slug":"stompblockgoal","link":"#stompblockgoal","children":[]},{"level":3,"title":"StompBlockGoal_vtbl","slug":"stompblockgoal-vtbl","link":"#stompblockgoal-vtbl","children":[]},{"level":3,"title":"StompBlockGoal::findTargetBlock::__l2::<lambda_a693b3bf6a29e3a3addea54b11f109b6>","slug":"stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6","link":"#stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6","children":[]},{"level":3,"title":"StompEggGoal","slug":"stompegggoal","link":"#stompegggoal","children":[]},{"level":3,"title":"StompEggGoal_vtbl","slug":"stompegggoal-vtbl","link":"#stompegggoal-vtbl","children":[]},{"level":3,"title":"StrollTowardsVillageGoal","slug":"strolltowardsvillagegoal","link":"#strolltowardsvillagegoal","children":[]},{"level":3,"title":"StrollTowardsVillageGoal_vtbl","slug":"strolltowardsvillagegoal-vtbl","link":"#strolltowardsvillagegoal-vtbl","children":[]},{"level":3,"title":"SwellGoal","slug":"swellgoal","link":"#swellgoal","children":[]},{"level":3,"title":"SwellGoal_vtbl","slug":"swellgoal-vtbl","link":"#swellgoal-vtbl","children":[]},{"level":3,"title":"SwimIdleDefinition","slug":"swimidledefinition","link":"#swimidledefinition","children":[]},{"level":3,"title":"SwimIdleDefinition_vtbl","slug":"swimidledefinition-vtbl","link":"#swimidledefinition-vtbl","children":[]},{"level":3,"title":"SwimIdleGoal","slug":"swimidlegoal","link":"#swimidlegoal","children":[]},{"level":3,"title":"SwimIdleGoal_vtbl","slug":"swimidlegoal-vtbl","link":"#swimidlegoal-vtbl","children":[]},{"level":3,"title":"SwimWanderDefinition","slug":"swimwanderdefinition","link":"#swimwanderdefinition","children":[]},{"level":3,"title":"SwimWanderDefinition_vtbl","slug":"swimwanderdefinition-vtbl","link":"#swimwanderdefinition-vtbl","children":[]},{"level":3,"title":"SwimWanderGoal","slug":"swimwandergoal","link":"#swimwandergoal","children":[]},{"level":3,"title":"SwimWanderGoal_vtbl","slug":"swimwandergoal-vtbl","link":"#swimwandergoal-vtbl","children":[]},{"level":3,"title":"SwimWithEntityDefinition","slug":"swimwithentitydefinition","link":"#swimwithentitydefinition","children":[]},{"level":3,"title":"SwimWithEntityDefinition_vtbl","slug":"swimwithentitydefinition-vtbl","link":"#swimwithentitydefinition-vtbl","children":[]},{"level":3,"title":"SwimWithEntityGoal","slug":"swimwithentitygoal","link":"#swimwithentitygoal","children":[]},{"level":3,"title":"SwimWithEntityGoal_vtbl","slug":"swimwithentitygoal-vtbl","link":"#swimwithentitygoal-vtbl","children":[]},{"level":3,"title":"SwoopAttackDefinition","slug":"swoopattackdefinition","link":"#swoopattackdefinition","children":[]},{"level":3,"title":"SwoopAttackDefinition_vtbl","slug":"swoopattackdefinition-vtbl","link":"#swoopattackdefinition-vtbl","children":[]},{"level":3,"title":"SwoopAttackGoal","slug":"swoopattackgoal","link":"#swoopattackgoal","children":[]},{"level":3,"title":"SwoopAttackGoal_vtbl","slug":"swoopattackgoal-vtbl","link":"#swoopattackgoal-vtbl","children":[]},{"level":3,"title":"SwoopAttackDefinition::buildSchema::__l2::<lambda_0a8e5f314faa38471a21cb2cdc3a3253>","slug":"swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253","link":"#swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253","children":[]},{"level":3,"title":"SwoopAttackDefinition::buildSchema::__l2::<lambda_dac5f2c072a8807319193c03bd4687d5>","slug":"swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5","link":"#swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5","children":[]},{"level":3,"title":"SmithingTableContainerManagerController::_setupCallbacks::__l8::<lambda_7fd07675839948997f4dbbeb20ca8892>","slug":"smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892","link":"#smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892","children":[]},{"level":3,"title":"SmithingTableContainerManagerController::_setupCallbacks::__l5::<lambda_6f8bbbdf91b02ffa39d5070bc0fe2f56>","slug":"smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56","link":"#smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56","children":[]},{"level":3,"title":"StonecutterContainerManagerController::_setupCallbacks::__l2::<lambda_14fc1e693546ebebc2676629b20a40fb>","slug":"stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb","link":"#stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb","children":[]},{"level":3,"title":"StonecutterContainerManagerModel::getResultForItem::__l2::<lambda_941bbeac7973bc74b49ff8e09c55ff70>","slug":"stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70","link":"#stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70","children":[]},{"level":3,"title":"SpikeFeature::EndSpike","slug":"spikefeature-endspike","link":"#spikefeature-endspike","children":[]},{"level":3,"title":"SpikeFeature_vtbl","slug":"spikefeature-vtbl","link":"#spikefeature-vtbl","children":[]},{"level":3,"title":"ScatteredFeatureStart","slug":"scatteredfeaturestart","link":"#scatteredfeaturestart","children":[]},{"level":3,"title":"ScatteredFeatureStart_vtbl","slug":"scatteredfeaturestart-vtbl","link":"#scatteredfeaturestart-vtbl","children":[]},{"level":3,"title":"StrongholdFeature","slug":"strongholdfeature","link":"#strongholdfeature","children":[]},{"level":3,"title":"StrongholdFeature_vtbl","slug":"strongholdfeature-vtbl","link":"#strongholdfeature-vtbl","children":[]},{"level":3,"title":"ShipwreckFeature","slug":"shipwreckfeature","link":"#shipwreckfeature","children":[]},{"level":3,"title":"ShipwreckFeature_vtbl","slug":"shipwreckfeature-vtbl","link":"#shipwreckfeature-vtbl","children":[]},{"level":3,"title":"ShipwreckStart","slug":"shipwreckstart","link":"#shipwreckstart","children":[]},{"level":3,"title":"ShipwreckStart_vtbl","slug":"shipwreckstart-vtbl","link":"#shipwreckstart-vtbl","children":[]},{"level":3,"title":"ShipwreckPiece","slug":"shipwreckpiece","link":"#shipwreckpiece","children":[]},{"level":3,"title":"ShipwreckPiece_vtbl","slug":"shipwreckpiece-vtbl","link":"#shipwreckpiece-vtbl","children":[]},{"level":3,"title":"StrongholdStart","slug":"strongholdstart","link":"#strongholdstart","children":[]},{"level":3,"title":"StrongholdStart_vtbl","slug":"strongholdstart-vtbl","link":"#strongholdstart-vtbl","children":[]},{"level":3,"title":"SandFeature","slug":"sandfeature","link":"#sandfeature","children":[]},{"level":3,"title":"SandFeature_vtbl","slug":"sandfeature-vtbl","link":"#sandfeature-vtbl","children":[]},{"level":3,"title":"SpringFeature","slug":"springfeature","link":"#springfeature","children":[]},{"level":3,"title":"SpringFeature_vtbl","slug":"springfeature-vtbl","link":"#springfeature-vtbl","children":[]},{"level":3,"title":"SeaAnemoneFeature","slug":"seaanemonefeature","link":"#seaanemonefeature","children":[]},{"level":3,"title":"SeaAnemoneFeature_vtbl","slug":"seaanemonefeature-vtbl","link":"#seaanemonefeature-vtbl","children":[]},{"level":3,"title":"SeagrassFeature","slug":"seagrassfeature","link":"#seagrassfeature","children":[]},{"level":3,"title":"SeagrassFeature_vtbl","slug":"seagrassfeature-vtbl","link":"#seagrassfeature-vtbl","children":[]},{"level":3,"title":"SeaPickleFeature","slug":"seapicklefeature","link":"#seapicklefeature","children":[]},{"level":3,"title":"SeaPickleFeature_vtbl","slug":"seapicklefeature-vtbl","link":"#seapicklefeature-vtbl","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_9a0cf54a7c6987b75629f9dc8e25d931>","slug":"simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931","link":"#simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l4::<lambda_5a49cb9530c9848feed416a429bb7578>","slug":"simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578","link":"#simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_aa946525ce16594a79edba5c0ce3c281>","slug":"simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281","link":"#simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_334c50db7f7943517c1d62b1a1f6ed19>","slug":"simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19","link":"#simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l3::<lambda_47acba9ca575e196af6184deb709b75f>","slug":"simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f","link":"#simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_2694a72f79fa4fb7ed9ec7d7aeab4a73>","slug":"simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73","link":"#simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_7204e36fc61c7f88675eae865e9c7faf>","slug":"simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf","link":"#simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_4f2736b071532fdaed6c3238c29de24e>","slug":"sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e","link":"#sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_8fdc9b990dea9ddb2781ac8baaf6f522>","slug":"sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522","link":"#sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_f6e5d4c154a8ae9bd1f6062d56bb7f2c>","slug":"sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c","link":"#sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_5fd9c82cf29ce0f35711c88be0cbb321>","slug":"sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321","link":"#sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_6b8601fb6dc02f88ec8688cedf2edab9>","slug":"simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9","link":"#simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l5::<lambda_8a5617fb33e81e3200dd8bc1f270cae1>","slug":"simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1","link":"#simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_18810eaec2e6274e1efb268878dc3223>","slug":"simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223","link":"#simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_633d5d73bf0d4ff5fb3df6ad3999b270>","slug":"simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270","link":"#simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_f2a04e346fc5c98f20440d9e14936534>","slug":"simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534","link":"#simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_77c8da8048774a10c2ccfe7c1faf3c6d>","slug":"simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d","link":"#simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_cd0696f13ce9c1d0a0684a62f58acccf>","slug":"simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf","link":"#simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_0eefe2a7ccefc732975aba87eb8f6491>","slug":"simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491","link":"#simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_44126bd2db340a1b088a36a59ab8f28d>","slug":"simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d","link":"#simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_fa648e9934b0a3209964fba61308bc56>","slug":"simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56","link":"#simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_9239166c63a95c8d3353ef96d31987cf>","slug":"simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf","link":"#simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_d107e4e3f3cf13351d394e09260d3385>","slug":"sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385","link":"#sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_fca7866f235039823ff3afefd1b4d428>","slug":"sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428","link":"#sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_401c47c46ba1b3035efaf6e498058cf3>","slug":"sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3","link":"#sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_99ca4703c28310cf1b5d42a8a68d1b8e>","slug":"sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e","link":"#sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_17d26e6de326e0cb30a78ea9675b8c02>","slug":"simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02","link":"#simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_297f1d7cada4032c574fd76d19fb9c3f>","slug":"simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f","link":"#simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_d0af4e4571eece2f793be4451608e3f8>","slug":"simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8","link":"#simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_66f16c7c6c79bb568769181120decd24>","slug":"simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24","link":"#simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_1e212d0f28d8e1c31753c88b2200c09c>","slug":"simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c","link":"#simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_413cf5e39448ade55c26a9f72b911c3f>","slug":"simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f","link":"#simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_2b1dec13cb427f4a2c5893153eb1ccfb>","slug":"simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb","link":"#simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_b0526add3214a40b1f63dc26b9bec28d>","slug":"simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d","link":"#simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_9b8ce1f677434b80763cdd6dc239f214>","slug":"simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214","link":"#simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_eccc61c7bc240398106f0c3ec97076bb>","slug":"simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb","link":"#simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_9105a6e584fc9f5b2e1653f92d74c379>","slug":"sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379","link":"#sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_a0fd6c49d498a24c3b9bbf2f9aa7545f>","slug":"sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f","link":"#sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_1db25be528727c880487320b6fe0653e>","slug":"sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e","link":"#sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_9ee29b475dc6eac67a5ef09bf23aa45c>","slug":"sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c","link":"#sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_7b952491334165ac96498525aca14203>","slug":"simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203","link":"#simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l5::<lambda_96fb45bf078dfc128c134291bd87f0ca>","slug":"simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca","link":"#simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_38fd965631aa6711f037f9057add2524>","slug":"simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524","link":"#simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_115e85a690f241af304488eebedeb75b>","slug":"simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b","link":"#simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_8088bcbb51f3e94fa86fc3e4425ccd25>","slug":"simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25","link":"#simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_f0c0b10dbc699410ad3ed1c03f581df4>","slug":"simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4","link":"#simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l4::<lambda_b1ed281f6e775bfc2d4f3f8e4f04ba1c>","slug":"simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c","link":"#simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_6108a2c04376bc528045d0627f45713d>","slug":"simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d","link":"#simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_c670f8d9a276d5fde9772c8a3b6e2d11>","slug":"simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11","link":"#simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_aec916c82bceefd18b7ad1999ca05487>","slug":"simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487","link":"#simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l3::<lambda_0007908e8fc98706aac256d2be0c4318>","slug":"simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318","link":"#simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318","children":[]},{"level":3,"title":"ScatteredFeaturePiece","slug":"scatteredfeaturepiece","link":"#scatteredfeaturepiece","children":[]},{"level":3,"title":"ScatteredFeaturePiece_vtbl","slug":"scatteredfeaturepiece-vtbl","link":"#scatteredfeaturepiece-vtbl","children":[]},{"level":3,"title":"SwamplandHut","slug":"swamplandhut","link":"#swamplandhut","children":[]},{"level":3,"title":"SwamplandHut_vtbl","slug":"swamplandhut-vtbl","link":"#swamplandhut-vtbl","children":[]},{"level":3,"title":"StrongholdPiece_vtbl","slug":"strongholdpiece-vtbl","link":"#strongholdpiece-vtbl","children":[]},{"level":3,"title":"SHStairsDown","slug":"shstairsdown","link":"#shstairsdown","children":[]},{"level":3,"title":"SHStairsDown_vtbl","slug":"shstairsdown-vtbl","link":"#shstairsdown-vtbl","children":[]},{"level":3,"title":"SHPortalRoom","slug":"shportalroom","link":"#shportalroom","children":[]},{"level":3,"title":"SHPortalRoom_vtbl","slug":"shportalroom-vtbl","link":"#shportalroom-vtbl","children":[]},{"level":3,"title":"SHStartPiece","slug":"shstartpiece","link":"#shstartpiece","children":[]},{"level":3,"title":"SHStartPiece_vtbl","slug":"shstartpiece-vtbl","link":"#shstartpiece-vtbl","children":[]},{"level":3,"title":"SHChestCorridor","slug":"shchestcorridor","link":"#shchestcorridor","children":[]},{"level":3,"title":"SHChestCorridor_vtbl","slug":"shchestcorridor-vtbl","link":"#shchestcorridor-vtbl","children":[]},{"level":3,"title":"SHFillerCorridor","slug":"shfillercorridor","link":"#shfillercorridor","children":[]},{"level":3,"title":"SHFillerCorridor_vtbl","slug":"shfillercorridor-vtbl","link":"#shfillercorridor-vtbl","children":[]},{"level":3,"title":"SHFiveCrossing","slug":"shfivecrossing","link":"#shfivecrossing","children":[]},{"level":3,"title":"SHFiveCrossing_vtbl","slug":"shfivecrossing-vtbl","link":"#shfivecrossing-vtbl","children":[]},{"level":3,"title":"SHLeftTurn","slug":"shleftturn","link":"#shleftturn","children":[]},{"level":3,"title":"SHLeftTurn_vtbl","slug":"shleftturn-vtbl","link":"#shleftturn-vtbl","children":[]},{"level":3,"title":"SHRightTurn","slug":"shrightturn","link":"#shrightturn","children":[]},{"level":3,"title":"SHRightTurn_vtbl","slug":"shrightturn-vtbl","link":"#shrightturn-vtbl","children":[]},{"level":3,"title":"SHLibrary","slug":"shlibrary","link":"#shlibrary","children":[]},{"level":3,"title":"SHLibrary_vtbl","slug":"shlibrary-vtbl","link":"#shlibrary-vtbl","children":[]},{"level":3,"title":"SHPrisonHall","slug":"shprisonhall","link":"#shprisonhall","children":[]},{"level":3,"title":"SHPrisonHall_vtbl","slug":"shprisonhall-vtbl","link":"#shprisonhall-vtbl","children":[]},{"level":3,"title":"SHRoomCrossing","slug":"shroomcrossing","link":"#shroomcrossing","children":[]},{"level":3,"title":"SHRoomCrossing_vtbl","slug":"shroomcrossing-vtbl","link":"#shroomcrossing-vtbl","children":[]},{"level":3,"title":"SHStraight","slug":"shstraight","link":"#shstraight","children":[]},{"level":3,"title":"SHStraight_vtbl","slug":"shstraight-vtbl","link":"#shstraight-vtbl","children":[]},{"level":3,"title":"SHStraightStairsDown","slug":"shstraightstairsdown","link":"#shstraightstairsdown","children":[]},{"level":3,"title":"SHStraightStairsDown_vtbl","slug":"shstraightstairsdown-vtbl","link":"#shstraightstairsdown-vtbl","children":[]},{"level":3,"title":"SmoothStoneSelector","slug":"smoothstoneselector","link":"#smoothstoneselector","children":[]},{"level":3,"title":"SmoothStoneSelector_vtbl","slug":"smoothstoneselector-vtbl","link":"#smoothstoneselector-vtbl","children":[]},{"level":3,"title":"SharedCounter<EndCrystalItem>","slug":"sharedcounter-endcrystalitem","link":"#sharedcounter-endcrystalitem","children":[]},{"level":3,"title":"SharedPtr<EndCrystalItem>","slug":"sharedptr-endcrystalitem","link":"#sharedptr-endcrystalitem","children":[]},{"level":3,"title":"SharedCounter<EndGatewayBlock>","slug":"sharedcounter-endgatewayblock","link":"#sharedcounter-endgatewayblock","children":[]},{"level":3,"title":"SoundChannelFMOD","slug":"soundchannelfmod","link":"#soundchannelfmod","children":[]},{"level":3,"title":"SoundSystemFMOD::_addToSoundCache::__l5::<lambda_cae3fd833bb655085bfe054d224c3470>::()::__l2::<lambda_9b09a02bff452da82691cbf9ff79d1cd>","slug":"soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd","link":"#soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd","children":[]},{"level":3,"title":"SoundSystemFMOD::_updateMusicStatus::__l5::<lambda_8360d204e655f2c1c10b888daad4dfc3>","slug":"soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3","link":"#soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3","children":[]},{"level":3,"title":"SoundSystemFMOD::stopMusic::__l8::<lambda_6ef4ca1ed178cf81809ef2edf360f6ea>","slug":"soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea","link":"#soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea","children":[]},{"level":3,"title":"SoundSystemFMOD::loadRawFromMemory::__l8::<lambda_5bb05d132cbf8074618a264696cff1ab>","slug":"soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab","link":"#soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab","children":[]},{"level":3,"title":"SoundSystemFMOD::loadAsync::__l43::<lambda_9e3fdf78c49eb3088301e0fd4fc6aa36>","slug":"soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36","link":"#soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36","children":[]},{"level":3,"title":"SoundSystemFMOD::_handleLooping::__l2::<lambda_b390fbefbce80ef595f22443b108ead0>","slug":"soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0","link":"#soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0","children":[]},{"level":3,"title":"savable_state","slug":"savable-state","link":"#savable-state","children":[]},{"level":3,"title":"StrAndBool","slug":"strandbool","link":"#strandbool","children":[]},{"level":3,"title":"ServiceOverrider<bool (__cdecl*)(AssertHandlerContext const &)>::ScopedOverrider","slug":"serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider","link":"#serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider","children":[]},{"level":3,"title":"SFAT::FATCellValueType","slug":"sfat-fatcellvaluetype","link":"#sfat-fatcellvaluetype","children":[]},{"level":3,"title":"SFAT::FileDescriptorRecord","slug":"sfat-filedescriptorrecord","link":"#sfat-filedescriptorrecord","children":[]},{"level":3,"title":"SFAT::FileBase","slug":"sfat-filebase","link":"#sfat-filebase","children":[]},{"level":3,"title":"SFAT::FileBase_vtbl","slug":"sfat-filebase-vtbl","link":"#sfat-filebase-vtbl","children":[]},{"level":3,"title":"SFAT::FileStorageBase","slug":"sfat-filestoragebase","link":"#sfat-filestoragebase","children":[]},{"level":3,"title":"SFAT::FileStorageBase_vtbl","slug":"sfat-filestoragebase-vtbl","link":"#sfat-filestoragebase-vtbl","children":[]},{"level":3,"title":"SFAT::FileHandle","slug":"sfat-filehandle","link":"#sfat-filehandle","children":[]},{"level":3,"title":"SFAT::SplitFATConfigurationBase","slug":"sfat-splitfatconfigurationbase","link":"#sfat-splitfatconfigurationbase","children":[]},{"level":3,"title":"SFAT::BlockVirtualizationHeader","slug":"sfat-blockvirtualizationheader","link":"#sfat-blockvirtualizationheader","children":[]},{"level":3,"title":"SFAT::BlockVirtualizationDescriptor","slug":"sfat-blockvirtualizationdescriptor","link":"#sfat-blockvirtualizationdescriptor","children":[]},{"level":3,"title":"SFAT::VolumeDescriptorExtraParameters","slug":"sfat-volumedescriptorextraparameters","link":"#sfat-volumedescriptorextraparameters","children":[]},{"level":3,"title":"SFAT::VolumeDescriptor","slug":"sfat-volumedescriptor","link":"#sfat-volumedescriptor","children":[]},{"level":3,"title":"SFAT::BitSet","slug":"sfat-bitset","link":"#sfat-bitset","children":[]},{"level":3,"title":"SFAT::FATBlock","slug":"sfat-fatblock","link":"#sfat-fatblock","children":[]},{"level":3,"title":"SFAT::VolumeManager","slug":"sfat-volumemanager","link":"#sfat-volumemanager","children":[]},{"level":3,"title":"SFAT::SFATMutex","slug":"sfat-sfatmutex","link":"#sfat-sfatmutex","children":[]},{"level":3,"title":"SFAT::FATDataManager","slug":"sfat-fatdatamanager","link":"#sfat-fatdatamanager","children":[]},{"level":3,"title":"SFAT::ClusterDataCache","slug":"sfat-clusterdatacache","link":"#sfat-clusterdatacache","children":[]},{"level":3,"title":"SFAT::DataBlockManager","slug":"sfat-datablockmanager","link":"#sfat-datablockmanager","children":[]},{"level":3,"title":"SFAT::VolumeControlData","slug":"sfat-volumecontroldata","link":"#sfat-volumecontroldata","children":[]},{"level":3,"title":"SFAT::TransactionEvent","slug":"sfat-transactionevent","link":"#sfat-transactionevent","children":[]},{"level":3,"title":"SFAT::TransactionEventsLog","slug":"sfat-transactioneventslog","link":"#sfat-transactioneventslog","children":[]},{"level":3,"title":"SFAT::BlockVirtualization","slug":"sfat-blockvirtualization","link":"#sfat-blockvirtualization","children":[]},{"level":3,"title":"SFAT::DataPlacementStrategyBase","slug":"sfat-dataplacementstrategybase","link":"#sfat-dataplacementstrategybase","children":[]},{"level":3,"title":"SFAT::DataPlacementStrategyBase_vtbl","slug":"sfat-dataplacementstrategybase-vtbl","link":"#sfat-dataplacementstrategybase-vtbl","children":[]},{"level":3,"title":"SFAT::RecoveryManager","slug":"sfat-recoverymanager","link":"#sfat-recoverymanager","children":[]},{"level":3,"title":"SFAT::RecoveryManager_vtbl","slug":"sfat-recoverymanager-vtbl","link":"#sfat-recoverymanager-vtbl","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem","slug":"sfat-virtualfilesystem","link":"#sfat-virtualfilesystem","children":[]},{"level":3,"title":"SFAT::CellTestResult","slug":"sfat-celltestresult","link":"#sfat-celltestresult","children":[]},{"level":3,"title":"SFAT::DescriptorLocation","slug":"sfat-descriptorlocation","link":"#sfat-descriptorlocation","children":[]},{"level":3,"title":"SFAT::ClusterChainTestResult","slug":"sfat-clusterchaintestresult","link":"#sfat-clusterchaintestresult","children":[]},{"level":3,"title":"SFAT::MemoryBufferPool","slug":"sfat-memorybufferpool","link":"#sfat-memorybufferpool","children":[]},{"level":3,"title":"SFAT::SplitFATConfigurationBase_vtbl","slug":"sfat-splitfatconfigurationbase-vtbl","link":"#sfat-splitfatconfigurationbase-vtbl","children":[]},{"level":3,"title":"SFAT::SFATRecursiveMutex","slug":"sfat-sfatrecursivemutex","link":"#sfat-sfatrecursivemutex","children":[]},{"level":3,"title":"SFAT::SplitFATFileStorage","slug":"sfat-splitfatfilestorage","link":"#sfat-splitfatfilestorage","children":[]},{"level":3,"title":"SFAT::SplitFATFileStorage_vtbl","slug":"sfat-splitfatfilestorage-vtbl","link":"#sfat-splitfatfilestorage-vtbl","children":[]},{"level":3,"title":"StbiFile","slug":"stbifile","link":"#stbifile","children":[]},{"level":3,"title":"SaveGameSecureStorage","slug":"savegamesecurestorage","link":"#savegamesecurestorage","children":[]},{"level":3,"title":"SaveGameSecureStorage_vtbl","slug":"savegamesecurestorage-vtbl","link":"#savegamesecurestorage-vtbl","children":[]},{"level":3,"title":"stbi__huffman","slug":"stbi-huffman","link":"#stbi-huffman","children":[]},{"level":3,"title":"stbi__jpeg::<unnamed_type_img_comp>","slug":"stbi-jpeg-unnamed-type-img-comp","link":"#stbi-jpeg-unnamed-type-img-comp","children":[]},{"level":3,"title":"stbi__jpeg","slug":"stbi-jpeg","link":"#stbi-jpeg","children":[]},{"level":3,"title":"stbi__resample","slug":"stbi-resample","link":"#stbi-resample","children":[]},{"level":3,"title":"stbi__pngchunk","slug":"stbi-pngchunk","link":"#stbi-pngchunk","children":[]},{"level":3,"title":"stbi__pic_packet","slug":"stbi-pic-packet","link":"#stbi-pic-packet","children":[]},{"level":3,"title":"stbir__contributors","slug":"stbir-contributors","link":"#stbir-contributors","children":[]},{"level":3,"title":"ShareableLock","slug":"shareablelock","link":"#shareablelock","children":[]},{"level":3,"title":"ShareableLock::ScopedUnique","slug":"shareablelock-scopedunique","link":"#shareablelock-scopedunique","children":[]},{"level":3,"title":"ShareableLock::ScopedShared","slug":"shareablelock-scopedshared","link":"#shareablelock-scopedshared","children":[]},{"level":3,"title":"StopwatchNLast","slug":"stopwatchnlast","link":"#stopwatchnlast","children":[]},{"level":3,"title":"StopwatchNLast_vtbl","slug":"stopwatchnlast-vtbl","link":"#stopwatchnlast-vtbl","children":[]},{"level":3,"title":"ScopeWatchdog","slug":"scopewatchdog","link":"#scopewatchdog","children":[]},{"level":3,"title":"SFAT::CRC32","slug":"sfat-crc32","link":"#sfat-crc32","children":[]},{"level":3,"title":"SFAT::SFATLockGuard","slug":"sfat-sfatlockguard","link":"#sfat-sfatlockguard","children":[]},{"level":3,"title":"SFAT::MemoryBufferHandle","slug":"sfat-memorybufferhandle","link":"#sfat-memorybufferhandle","children":[]},{"level":3,"title":"SFAT::PathString","slug":"sfat-pathstring","link":"#sfat-pathstring","children":[]},{"level":3,"title":"SFAT::FileManipulator","slug":"sfat-filemanipulator","link":"#sfat-filemanipulator","children":[]},{"level":3,"title":"SFAT::CRC16","slug":"sfat-crc16","link":"#sfat-crc16","children":[]},{"level":3,"title":"SFAT::RecoveryManager::testSingleFileIntegrity::__l8::<lambda_1e070c6a2247d80fbe8c7e14a3aea2dc>","slug":"sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc","link":"#sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc","children":[]},{"level":3,"title":"SFAT::SplitFATFile","slug":"sfat-splitfatfile","link":"#sfat-splitfatfile","children":[]},{"level":3,"title":"SFAT::SplitFATFile_vtbl","slug":"sfat-splitfatfile-vtbl","link":"#sfat-splitfatfile-vtbl","children":[]},{"level":3,"title":"SFAT::SplitFATTransactConfiguration","slug":"sfat-splitfattransactconfiguration","link":"#sfat-splitfattransactconfiguration","children":[]},{"level":3,"title":"SFAT::SplitFATTransactConfiguration_vtbl","slug":"sfat-splitfattransactconfiguration-vtbl","link":"#sfat-splitfattransactconfiguration-vtbl","children":[]},{"level":3,"title":"SFAT::TransactionEventsLog::_restoreFromTransactionFile::__l14::<lambda_f464715ebff49e584bad436c62bdaa1e>","slug":"sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e","link":"#sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e","children":[]},{"level":3,"title":"SFAT::CRC24","slug":"sfat-crc24","link":"#sfat-crc24","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_isDirectoryEmpty::__l2::<lambda_249a999051cf4832137a3f59aaa6c45b>","slug":"sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b","link":"#sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_createEntity::__l2::<lambda_8b7276f0a3e09da4a84a4e133743effd>","slug":"sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd","link":"#sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::read::__l2::<lambda_c23223065a2b55117ec1766b47f7c2a6>","slug":"sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6","link":"#sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::iterateThroughDirectory::__l2::<lambda_cecd217142c34c71fdeb7b761f727b9e>","slug":"sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e","link":"#sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_trunc::__l26::<lambda_47ce944f0503b9b4adb1d6cbf279dfdd>","slug":"sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd","link":"#sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_iterateThroughDirectoryRecursively::__l2::<lambda_ebf0c4dc747ea335e16db93745c87fdb>","slug":"sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb","link":"#sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_getClusterForPosition::__l2::<lambda_25729679247d20f75b7b6e5e2871a905>","slug":"sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905","link":"#sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_renameEntity::__l2::<lambda_d12879e995d60e1f647dd732045a77ba>","slug":"sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba","link":"#sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::_getCountClusters::__l2::<lambda_1e9471e70c826f487760fd9bb4988c6e>","slug":"sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e","link":"#sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e","children":[]},{"level":3,"title":"SFAT::VirtualFileSystem::write::__l2::<lambda_8ccf35fa49cd2e7a64c0d636e7f3b02a>","slug":"sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a","link":"#sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a","children":[]},{"level":3,"title":"SFNT_HeaderRec_","slug":"sfnt-headerrec","link":"#sfnt-headerrec","children":[]},{"level":3,"title":"stbrp__findresult","slug":"stbrp-findresult","link":"#stbrp-findresult","children":[]},{"level":3,"title":"static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>::iterator","slug":"static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator","link":"#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator","children":[]},{"level":3,"title":"static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>","slug":"static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32","link":"#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32","children":[]},{"level":3,"title":"Serializer::serializePrimaryField::__l2::<lambda_9af6748ea60d8af6979b10ce9c586e9b>","slug":"serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b","link":"#serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b","children":[]},{"level":3,"title":"starmapobject","slug":"starmapobject","link":"#starmapobject","children":[]},{"level":3,"title":"stringio","slug":"stringio","link":"#stringio","children":[]},{"level":3,"title":"SemLockObject","slug":"semlockobject","link":"#semlockobject","children":[]},{"level":3,"title":"SRE_REPEAT_T","slug":"sre-repeat-t","link":"#sre-repeat-t","children":[]},{"level":3,"title":"ScannerObject","slug":"scannerobject","link":"#scannerobject","children":[]},{"level":3,"title":"sre_umatch_context","slug":"sre-umatch-context","link":"#sre-umatch-context","children":[]},{"level":3,"title":"sre_match_context","slug":"sre-match-context","link":"#sre-match-context","children":[]},{"level":3,"title":"staticmethod","slug":"staticmethod","link":"#staticmethod","children":[]},{"level":3,"title":"seqiterobject","slug":"seqiterobject","link":"#seqiterobject","children":[]},{"level":3,"title":"sortwrapperobject","slug":"sortwrapperobject","link":"#sortwrapperobject","children":[]},{"level":3,"title":"setiterobject","slug":"setiterobject","link":"#setiterobject","children":[]},{"level":3,"title":"superobject","slug":"superobject","link":"#superobject","children":[]},{"level":3,"title":"stackentry","slug":"stackentry","link":"#stackentry","children":[]},{"level":3,"title":"stack","slug":"stack","link":"#stack","children":[]},{"level":3,"title":"sp_handle_object","slug":"sp-handle-object","link":"#sp-handle-object","children":[]},{"level":3,"title":"ShadersLibrary","slug":"shaderslibrary","link":"#shaderslibrary","children":[]},{"level":3,"title":"SliderComponent::_updateSliderBarProgress::__l2::<lambda_0fa219b87a373a09d30835719138e33a>","slug":"slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a","link":"#slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a","children":[]},{"level":3,"title":"StorageDependencyScreenController::_registerBindings::__l2::<lambda_abc0411e58cca189896914892e40c16b>::()::__l6::<lambda_15b24bd133e958d68a060ebbc5b1ece6>","slug":"storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6","link":"#storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6","children":[]},{"level":3,"title":"StartMenuScreenController::onOpen::__l5::<lambda_1574bd2e3698b4f242153fd310cd920b>","slug":"startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b","link":"#startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b","children":[]},{"level":3,"title":"StorageDependencyScreenController::_populateAllDependencies::__l2::<lambda_50ff95644bda46b030d63d05eaa74932>","slug":"storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932","link":"#storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932","children":[]},{"level":3,"title":"ServerFormBindingInformation::createBindingData::__l2::<lambda_5877bbc18e65de1799e21a4d6baf222e>","slug":"serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e","link":"#serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e","children":[]},{"level":3,"title":"SubscriptionsScreenController::tick::__l11::<lambda_1109a751a3b331261c66bffc74b4c0d6>","slug":"subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6","link":"#subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6","children":[]},{"level":3,"title":"SubscriptionsScreenController::tick::__l11::<lambda_3405681c330be99db571a029a5de6d5e>","slug":"subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e","link":"#subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e","children":[]},{"level":3,"title":"SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l8::<lambda_87d887136041d2858ff416203462d397>","slug":"subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397","link":"#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397","children":[]},{"level":3,"title":"SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l17::<lambda_bae8d35094fb397bedc67c3ba62ad721>","slug":"subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721","link":"#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721","children":[]},{"level":3,"title":"ScreenView::_updateControlCollections::__l36::<lambda_803420e90046a466ebce054da63600a8>","slug":"screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8","link":"#screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8","children":[]},{"level":3,"title":"SceneStack::flushStack::__l5::<lambda_08197decf7f176c94b189045c2e91557>","slug":"scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557","link":"#scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557","children":[]},{"level":3,"title":"ScreenView::_handleDirtyVisualTree::__l50::<lambda_2111019e43bda338732d87a7a0c5b0ae>","slug":"screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae","link":"#screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae","children":[]},{"level":3,"title":"SceneStack::isScreenReplaceable::__l8::<lambda_42a230a3bda507ad00601db397fdd7c6>","slug":"scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6","link":"#scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6","children":[]},{"level":3,"title":"SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>","slug":"scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c","link":"#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c","children":[]},{"level":3,"title":"SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>::()::__l2::StrAccessor","slug":"scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor","link":"#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor","children":[]},{"level":3,"title":"SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>","slug":"scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251","link":"#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251","children":[]},{"level":3,"title":"SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>::()::__l2::StrAccessor","slug":"scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor","link":"#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor","children":[]},{"level":3,"title":"SkinnedMesh::draw::__l2::<lambda_d8b94b46a694729780a8881de11c5537>","slug":"skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537","link":"#skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537","children":[]},{"level":3,"title":"ScriptEngineWithContext<ScriptClientContext>::createEntity::__l2::<lambda_e35908d952b2d50bdbc7c021fe0b8d2e>","slug":"scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e","link":"#scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e","children":[]},{"level":3,"title":"Social::MultiplayerEDU::_joinGame::__l2::<lambda_c0daf9fcddb69c3e6164bbe064128aa0>","slug":"social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0","link":"#social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0","children":[]},{"level":3,"title":"Social::UserManager::removeClient::__l4::<lambda_8bffe92b839cdd3926f9f46b2b9196ba>","slug":"social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba","link":"#social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba","children":[]},{"level":3,"title":"Social::XboxLiveUser::isUserOnFriendList::__l2::<lambda_938f7b7cbdf1e4157d9f58c7ba6ac2ab>","slug":"social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab","link":"#social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab","children":[]},{"level":3,"title":"SoundEngine::_isNewMusicQueued::__l9::<lambda_6058b0ebf9d487346dfc78cfeeed8549>","slug":"soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549","link":"#soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549","children":[]},{"level":3,"title":"StoreCatalogRepository::fetchRealmsCoinOffers::__l2::<lambda_4414f3671be2def991047236b7ca18b5>::()::__l9::<lambda_5b34530ea6fe3708d069590feac9be75>","slug":"storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75","link":"#storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75","children":[]},{"level":3,"title":"ServerPlayerBlockUseHandler::onBeforeMovementSimulation::__l2::<lambda_c316d9e687abcf3d528563fc19364bf8>","slug":"serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8","link":"#serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8","children":[]},{"level":3,"title":"ServerNetworkHandler::engineDownloadingResponseHelper::__l18::<lambda_00b0622c98e5187c8a83036a771f6e2e>","slug":"servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e","link":"#servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e","children":[]},{"level":3,"title":"ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>::()::__l12::<lambda_9d5d32d71ee2269e33a959b1a38ae504>","slug":"servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504","link":"#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504","children":[]},{"level":3,"title":"ServerNetworkHandler::_onClientAuthenticated::__l2::<lambda_5bf7633c5afa8e06c799ce108426113a>","slug":"servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a","link":"#servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a","children":[]},{"level":3,"title":"ServerNetworkHandler::_getActiveAndInProgressPlayerCount::__l2::<lambda_831ea39846ba7d8b403f58c6fc8cdb87>","slug":"servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87","link":"#servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87","children":[]},{"level":3,"title":"ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>","slug":"servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb","link":"#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb","children":[]},{"level":3,"title":"ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>::()::__l2::Literal","slug":"scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal","link":"#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal","children":[]},{"level":3,"title":"ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>","slug":"scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444","link":"#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444","children":[]},{"level":3,"title":"ServerInstance::suspend::__l5::<lambda_e2bf1bc6a494a9ac2de26852ce0ed296>::()::__l2::<lambda_dc1051d76d2d8e5ed26ddec900f12518>","slug":"serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518","link":"#serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518","children":[]},{"level":3,"title":"ServerPlayer::recoverR5LostInventoryAndXP::__l2::<lambda_07493d55d977c843ffdb606ac04a2f9f>","slug":"serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f","link":"#serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f","children":[]},{"level":3,"title":"ServerInstance::initializeServer::__l49::<lambda_3a7cf20926733d23785fdc1bad5b8ff2>","slug":"serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2","link":"#serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>::()::__l2::Literal","slug":"squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal","link":"#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>::()::__l2::Literal","slug":"squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal","link":"#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>::()::__l2::Literal","slug":"squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal","link":"#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>::()::__l2::Literal","slug":"squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal","link":"#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>::()::__l2::Literal","slug":"squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal","link":"#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal","children":[]},{"level":3,"title":"Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>::()::__l2::Literal","slug":"squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal","link":"#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>::()::__l2::Literal","slug":"squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal","link":"#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal","children":[]},{"level":3,"title":"Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>::()::__l2::Literal","slug":"squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal","link":"#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>","slug":"squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974","link":"#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974","children":[]},{"level":3,"title":"Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>","slug":"squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457","link":"#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>","slug":"squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d","link":"#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d","children":[]},{"level":3,"title":"Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>","slug":"squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b","link":"#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>","slug":"squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073","link":"#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>","slug":"squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137","link":"#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>","slug":"squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871","link":"#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871","children":[]},{"level":3,"title":"Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>","slug":"squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a","link":"#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a","children":[]},{"level":3,"title":"SubtreeDefinition::load::__l2::<lambda_812a7dd9662048876f94e3c602f5749a>","slug":"subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a","link":"#subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>::()::__l2::Literal","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>::()::__l2::Literal","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>::()::__l2::Literal","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal","children":[]},{"level":3,"title":"Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>::()::__l2::Literal","slug":"silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal","link":"#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>::()::__l2::Literal","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal","children":[]},{"level":3,"title":"Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>","slug":"silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53","link":"#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d","children":[]},{"level":3,"title":"Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>","slug":"shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2","link":"#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2","children":[]},{"level":3,"title":"SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>::()::__l2::Literal","slug":"spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal","link":"#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal","children":[]},{"level":3,"title":"SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>","slug":"spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2","link":"#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_b89d7faeb8625652467465f4053f1a1e>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_ee02d42ed08427f9fb42002a8b8ca57d>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_58da501a9e5a53b0697e720a47037e87>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_659fa460fcd8c91f9c29efb516ca29a4>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_bfaabf8c679a87b6e2d83295f0010d23>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_f8315e4b756b9df6ad9782338da705eb>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b6e2926387827d0322d995e610a39062>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_79653376107e589b67701292641889fb>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_41ef2a1cf9e6be72ad5379c22f5e274a>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_f6550f24920c305d2a3228c1caad78b8>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_bc44f7e86affe751fd9c46eb71543178>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_469bd9e3b15d63a3bec8b65106f8890c>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_2c377cf4a0b195dfab8182eb8ff7fe0f>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_bbbc0f4fafb53fc32059227f6c0c450f>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_3950691e075ab91cd491b17c4310546e>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_83d310390567ffecea966b4919d30ac8>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_d7d9298a0aebfa663a195f3482260e81>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_197910b15336c6c57fb079552212abf9>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_8f4d5d31dc10279ae8a6f79bc1288959>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_6cac658f9939f9fdcf21c2bb28998155>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_29e923ba2bd56312b230cf095fc262ab>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_8ed02beb6fa123e2e4b230d4b7fed29e>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_4b93ab98a1c1995005831a07db31e259>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_a742bfdf2437d491e99310db58d7daf2>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_cd9c28223f1f7e791d8b4829dc4db1a8>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_82094842f7d520b5264a46a912e7b041>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_9a10c8d6d7cc96e7b05d64277e151ddc>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_9a59a157a43846344d974fc798480d36>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_9e1a0dcb27e98dcb2b0dd0c738266d83>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_19fb2b0eda159d1884bb0c9ded0eccd8>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b99f6b3392fe60ef2f5160864d6377b0>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_9d4dc4f6cb6703c61b6dfd39d3a81637>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_e8bf3bc4d2c99c57826d07951044b5b5>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_9c3c32c12509b945041a07efec1f4018>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_30ac5ed33c057b47ad3e061255bc9f85>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7a0286341374ba7ace6e9c1673e7fcf0>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_d8c3aa28f4250d79cb1f214ff0524749>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_c91dd27f63e11c7332a1b13efc647b2a>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_7ed2c87cb0677ad293c75ec93c239094>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_77cb8d6a030c374aa1dc15ade6754a87>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_5c54a6d5e82ef8fe4e108535597a07a5>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_d529bd2d858807c48987aaa1084a2b8d>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_578a91390099f186d7171712656310be>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_1ed035df95b6b5b1bbdacd8771e68b80>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_8470c3d3d53641c5f515fa0a50f7d203>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_e64f1a17e18be658772b1736538eadb6>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_00be663ed5f61e98eadb6cdeb28378f4>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_c31f78ab0fc73eaf1e1744a301d0ad5f>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_961742dd9bc1d976bf071baf7b6a837b>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_835c95f7d954b44a1692ec9f4c720c21>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_7a387bd6d2d2ba4bd42bcc8d34cd3cd7>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_016baf4e196323c8538fd94c98b531d8>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_e1beab7cca7d279280ff45eb3be3974f>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_922346ceb579a190cf9385daa338d6c0>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_36b90fddf1b151e4e3615e85857d0647>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_8cb60d75dc4e5d8b6cd616474e0a20f3>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_8fa1d2d0560a314c97ef3959fc62aa6e>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_58a2dd194639f141c5dec720842771d5>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_186f12fb5c9ea95857c941f086043dfd>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_ffb12327d2445fa1d089d3cd84baf000>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_00de30484d20d3df2ccba38bd470dad4>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_b337c4c891a1361a908e2abb77fa22e4>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_2ecb361f8582be43669bd1b87db23296>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_07f6beca060ecad8ce0a9287d8b20e62>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::fetchBlocksInBox::__l2::<lambda_05dcea0d077ab08977860bf1536271dc>","slug":"subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc","link":"#subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::fetchBlocksInCylinder::__l2::<lambda_2225f5dd488587be97d5ef16dbb05a4e>","slug":"subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e","link":"#subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::fetchBlocksInCylinder::__l2::<lambda_2f8920f8aed8669ce026a439bb206b81>","slug":"subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81","link":"#subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::fetchBlocksInCylinder::__l2::<lambda_31ae1f2113d30483dfa86a8979a4b0c4>","slug":"subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4","link":"#subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::fetchBlocksInBox::__l2::<lambda_333c91ec917de2d00c7d7b20be94f138>","slug":"subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138","link":"#subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::fetchBlocksInBox::__l2::<lambda_3a25f8be0adce3e4613c2792bb15ad32>","slug":"subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32","link":"#subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::fetchBlocksInBox::__l2::<lambda_6805beeeeb20926306bc087a374beb00>","slug":"subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00","link":"#subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::fetchBlocksInCylinder::__l2::<lambda_69eb90666f66735dbbd3c93a3c693a3d>","slug":"subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d","link":"#subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::fetchBlocksInCylinder::__l2::<lambda_6eff12cf755cbc8df5ad19484681e643>","slug":"subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643","link":"#subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::fetchBlocksInCylinder::__l2::<lambda_7ad7ae9e0b04fad7956ba5c2462033f8>","slug":"subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8","link":"#subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::fetchBlocksInBox::__l2::<lambda_81f82229aefcc027330dfa10aa9c846d>","slug":"subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d","link":"#subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::fetchBlocksInCylinder::__l2::<lambda_8505f348207d8ed882a967b263f00729>","slug":"subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729","link":"#subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::fetchBlocksInCylinder::__l2::<lambda_92f021db926b66e17c3d1841e8d27176>","slug":"subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176","link":"#subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::fetchBlocksInBox::__l2::<lambda_997cfac59e34b9c498561474fd5a53aa>","slug":"subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa","link":"#subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::fetchBlocksInBox::__l2::<lambda_edcd7c6147545643dd4f557b53945643>","slug":"subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643","link":"#subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::fetchBlocksInBox::__l2::<lambda_f43d19be392b01ec54de03992e19bbb7>","slug":"subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7","link":"#subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_3d3775961188f5d75cc9165de79473f8>","slug":"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8","link":"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_544678e6bb1251d1e1246e2f40073bdf>","slug":"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf","link":"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_783ffbd839a4ef6bf7f3e7e71a917099>","slug":"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099","link":"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7f372ce8f01d8e7eca85b0df7b158601>","slug":"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601","link":"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_9d948e124c24db4d860e66e0195e2b1b>","slug":"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b","link":"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_b4ac387c3660a6cd85cfd19de4a596e5>","slug":"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5","link":"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_bb5dbc2c16fccebb88d3f7ca9022c57c>","slug":"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c","link":"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_f1843f9aa6d0f0bab8652ab8fb95c2ac>","slug":"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac","link":"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::_zeroIndicesGreaterEqualThan::__l2::<lambda_09a7b7eccde96f168aefdcf4510b1048>","slug":"subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048","link":"#subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::findUsedIndices::__l2::<lambda_17bedaa24e4c7f9ff6efe58e06d20e2c>","slug":"subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c","link":"#subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::findUsedIndices::__l2::<lambda_2ed1e938e204f4521098f089a261134c>","slug":"subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c","link":"#subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::findUsedIndices::__l2::<lambda_42453c35bc07ae9da0d838fd6046c080>","slug":"subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080","link":"#subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::findUsedIndices::__l2::<lambda_4c55d5191fba51a33256aebbbc639402>","slug":"subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402","link":"#subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::findUsedIndices::__l2::<lambda_5326846d6b6a4a52eef1e117e9eaadd5>","slug":"subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5","link":"#subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5b5744cc523e02cf0d9ddc9cfb78437c>","slug":"subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c","link":"#subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5c6bcf649dce0f48c2923e314a547cad>","slug":"subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad","link":"#subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6d55ad4cff0dd4eabb29215fb608913f>","slug":"subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f","link":"#subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6e0dba5c30f06b0dff0181aec7e4af94>","slug":"subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94","link":"#subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::_zeroIndicesGreaterEqualThan::__l2::<lambda_77d2db69a28f5aff5902a2cc0216082c>","slug":"subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c","link":"#subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>::_zeroIndicesGreaterEqualThan::__l2::<lambda_a77ad154162e45517fb3e1ee3c08a299>","slug":"subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299","link":"#subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>::findUsedIndices::__l2::<lambda_b3a5c9534f819a154621d0e7553c71e5>","slug":"subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5","link":"#subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>::findUsedIndices::__l2::<lambda_cae54f3a68597e07934177246dc8cb8f>","slug":"subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f","link":"#subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>::findUsedIndices::__l2::<lambda_ccd75c963cecbc6c25cfcda0d301d8c1>","slug":"subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1","link":"#subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>::_zeroIndicesGreaterEqualThan::__l2::<lambda_fa644e9c48b0892bfb38e0eb2c45d93d>","slug":"subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d","link":"#subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d","children":[]},{"level":3,"title":"SingleBlockFeature::_mayAttach::__l2::<lambda_2a6fcf79d125f18d56e9ee3d23280c35>","slug":"singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35","link":"#singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35","children":[]},{"level":3,"title":"SingleBlockFeature::_mayAttach::__l2::<lambda_e9c20ccf746f09597e99f3b2df791d8a>","slug":"singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a","link":"#singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a","children":[]},{"level":3,"title":"StructureFeature::waitForFeatureBlueprints::__l2::<lambda_ae7082b559214a814fc226cfd7f32516>","slug":"structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516","link":"#structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516","children":[]},{"level":3,"title":"StructureTemplate::_fillBlockInfo::__l2::<lambda_76eff4b48ee237c3d94a60cb41446511>","slug":"structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511","link":"#structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>::()::__l2::Literal","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f","children":[]},{"level":3,"title":"ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>","slug":"scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c","link":"#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c","children":[]},{"level":3,"title":"SnapshotEnv::createSnapshot::__l14::<lambda_633e2701bdb30152fc9f78453e74bb9a>","slug":"snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a","link":"#snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a","children":[]},{"level":3,"title":"ServerScoreboard::setDisplayObjective::__l8::<lambda_0747d8f05afc99c477135c4d36b10fe8>","slug":"serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8","link":"#serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>::()::__l2::Literal","slug":"simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal","link":"#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>","slug":"simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e","link":"#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>::()::__l2::Literal","slug":"sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal","link":"#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>","slug":"sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b","link":"#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>::()::__l2::Literal","slug":"simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal","link":"#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>","slug":"simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa","link":"#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>::()::__l2::Literal","slug":"sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal","link":"#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>","slug":"sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80","link":"#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>::()::__l2::Literal","slug":"simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal","link":"#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal","children":[]},{"level":3,"title":"SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>","slug":"simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af","link":"#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>::()::__l2::Literal","slug":"simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal","link":"#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal","children":[]},{"level":3,"title":"SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>","slug":"simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273","link":"#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>::()::__l2::Literal","slug":"sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal","link":"#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal","children":[]},{"level":3,"title":"SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>","slug":"sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13","link":"#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13","children":[]},{"level":3,"title":"SHPortalRoom::postProcess::__l2::<lambda_ad4ab04a3053cfc72944c670238dd6f2>","slug":"shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2","link":"#shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2","children":[]},{"level":3,"title":"SoundSystemFMOD::_addToSoundCache::__l5::<lambda_35441f677013214f2c5df3d329344406>","slug":"soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406","link":"#soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406","children":[]},{"level":3,"title":"SoundSystemFMOD::unloadAllExcept::__l20::<lambda_0e65d4d3526df21953afe127ce5ce183>","slug":"soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183","link":"#soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183","children":[]},{"level":3,"title":"SoundSystemFMOD::fadeOut::__l2::<lambda_2b792a64d6c135a6d4a0beb3927c5059>","slug":"soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059","link":"#soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059","children":[]},{"level":3,"title":"SerializerEnumMapping::lookup::__l2::<lambda_4bef74521c4bc00b8d630ed3c33fba83>","slug":"serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83","link":"#serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83","children":[]},{"level":3,"title":"sequence","slug":"sequence","link":"#sequence","children":[]},{"level":3,"title":"ScriptClientInstanceEventListener_vtbl","slug":"scriptclientinstanceeventlistener-vtbl","link":"#scriptclientinstanceeventlistener-vtbl","children":[]},{"level":3,"title":"ServerLevel_vtbl","slug":"serverlevel-vtbl","link":"#serverlevel-vtbl","children":[]},{"level":3,"title":"ServerPlayer_vtbl","slug":"serverplayer-vtbl","link":"#serverplayer-vtbl","children":[]},{"level":3,"title":"Shulker_vtbl","slug":"shulker-vtbl","link":"#shulker-vtbl","children":[]},{"level":3,"title":"Silverfish_vtbl","slug":"silverfish-vtbl","link":"#silverfish-vtbl","children":[]},{"level":3,"title":"SkullBlockActor_vtbl","slug":"skullblockactor-vtbl","link":"#skullblockactor-vtbl","children":[]},{"level":3,"title":"Slime_vtbl","slug":"slime-vtbl","link":"#slime-vtbl","children":[]},{"level":3,"title":"Spider_vtbl","slug":"spider-vtbl","link":"#spider-vtbl","children":[]},{"level":3,"title":"Squid_vtbl","slug":"squid-vtbl","link":"#squid-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<1,1>_vtbl","slug":"subchunkblockstoragepaletted-1-1-vtbl","link":"#subchunkblockstoragepaletted-1-1-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<16,16>_vtbl","slug":"subchunkblockstoragepaletted-16-16-vtbl","link":"#subchunkblockstoragepaletted-16-16-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<2,2>_vtbl","slug":"subchunkblockstoragepaletted-2-2-vtbl","link":"#subchunkblockstoragepaletted-2-2-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<3,3>_vtbl","slug":"subchunkblockstoragepaletted-3-3-vtbl","link":"#subchunkblockstoragepaletted-3-3-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<4,4>_vtbl","slug":"subchunkblockstoragepaletted-4-4-vtbl","link":"#subchunkblockstoragepaletted-4-4-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<5,5>_vtbl","slug":"subchunkblockstoragepaletted-5-5-vtbl","link":"#subchunkblockstoragepaletted-5-5-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<6,6>_vtbl","slug":"subchunkblockstoragepaletted-6-6-vtbl","link":"#subchunkblockstoragepaletted-6-6-vtbl","children":[]},{"level":3,"title":"SubChunkBlockStoragePaletted<8,8>_vtbl","slug":"subchunkblockstoragepaletted-8-8-vtbl","link":"#subchunkblockstoragepaletted-8-8-vtbl","children":[]},{"level":3,"title":"Salmon_vtbl","slug":"salmon-vtbl","link":"#salmon-vtbl","children":[]},{"level":3,"title":"Sheep_vtbl","slug":"sheep-vtbl","link":"#sheep-vtbl","children":[]},{"level":3,"title":"ShulkerBoxBlockActor_vtbl","slug":"shulkerboxblockactor-vtbl","link":"#shulkerboxblockactor-vtbl","children":[]},{"level":3,"title":"Skeleton_vtbl","slug":"skeleton-vtbl","link":"#skeleton-vtbl","children":[]},{"level":3,"title":"Strider_vtbl","slug":"strider-vtbl","link":"#strider-vtbl","children":[]}],"git":{"updatedTime":1659743947000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1}]},"filePathRelative":"1.16.201/structure/S~4.md"}');export{p as comp,b as data};
