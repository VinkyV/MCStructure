import{_ as s,c as n,o as a,d as l}from"./app-CsZ-F4rT.js";const i={},e=l(`<h1 id="i-2" tabindex="-1"><a class="header-anchor" href="#i-2"><span>I~2</span></a></h1><h3 id="isubchunkblockstoragepaletted-vtbl" tabindex="-1"><a class="header-anchor" href="#isubchunkblockstoragepaletted-vtbl"><span><code>ISubChunkBlockStoragePaletted_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ISubChunkBlockStoragePaletted_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);</span>
<span class="line">  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);</span>
<span class="line">  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);</span>
<span class="line">  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);</span>
<span class="line">  std::unique_ptr&lt;SubChunkBlockStorage&gt; *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr&lt;SubChunkBlockStorage&gt; *result, SubChunkBlockStorage::PruneType);</span>
<span class="line">  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);</span>
<span class="line">  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);</span>
<span class="line">  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function&lt;bool __cdecl(Block const &amp;)&gt; *, std::vector&lt;BlockFetchResult&gt; *);</span>
<span class="line">  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);</span>
<span class="line">  gsl::span&lt;unsigned int const ,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int const ,-1&gt; *result);</span>
<span class="line">  gsl::span&lt;unsigned int,-1&gt; *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;unsigned int,-1&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);</span>
<span class="line">  gsl::span&lt;Block const * const,-1&gt; *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span&lt;Block const * const,-1&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomattribute-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomattribute-vtbl"><span><code>IXMLDOMAttribute_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMAttribute_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_name)(IXMLDOMAttribute *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_value)(IXMLDOMAttribute *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_value)(IXMLDOMAttribute *this, tagVARIANT);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomcharacterdata-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomcharacterdata-vtbl"><span><code>IXMLDOMCharacterData_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMCharacterData_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_data)(IXMLDOMCharacterData *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_data)(IXMLDOMCharacterData *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_length)(IXMLDOMCharacterData *this, int *);</span>
<span class="line">  HRESULT (__fastcall *substringData)(IXMLDOMCharacterData *this, int, int, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *appendData)(IXMLDOMCharacterData *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *insertData)(IXMLDOMCharacterData *this, int, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *deleteData)(IXMLDOMCharacterData *this, int, int);</span>
<span class="line">  HRESULT (__fastcall *replaceData)(IXMLDOMCharacterData *this, int, int, wchar_t *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomdocumenttype-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomdocumenttype-vtbl"><span><code>IXMLDOMDocumentType_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMDocumentType_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_name)(IXMLDOMDocumentType *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_entities)(IXMLDOMDocumentType *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *get_notations)(IXMLDOMDocumentType *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomdocument-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomdocument-vtbl"><span><code>IXMLDOMDocument_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMDocument_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_doctype)(IXMLDOMDocument *this, IXMLDOMDocumentType **);</span>
<span class="line">  HRESULT (__fastcall *get_implementation)(IXMLDOMDocument *this, IXMLDOMImplementation **);</span>
<span class="line">  HRESULT (__fastcall *get_documentElement)(IXMLDOMDocument *this, IXMLDOMElement **);</span>
<span class="line">  HRESULT (__fastcall *putref_documentElement)(IXMLDOMDocument *this, IXMLDOMElement *);</span>
<span class="line">  HRESULT (__fastcall *createElement)(IXMLDOMDocument *this, wchar_t *, IXMLDOMElement **);</span>
<span class="line">  HRESULT (__fastcall *createDocumentFragment)(IXMLDOMDocument *this, IXMLDOMDocumentFragment **);</span>
<span class="line">  HRESULT (__fastcall *createTextNode)(IXMLDOMDocument *this, wchar_t *, IXMLDOMText **);</span>
<span class="line">  HRESULT (__fastcall *createComment)(IXMLDOMDocument *this, wchar_t *, IXMLDOMComment **);</span>
<span class="line">  HRESULT (__fastcall *createCDATASection)(IXMLDOMDocument *this, wchar_t *, IXMLDOMCDATASection **);</span>
<span class="line">  HRESULT (__fastcall *createProcessingInstruction)(IXMLDOMDocument *this, wchar_t *, wchar_t *, IXMLDOMProcessingInstruction **);</span>
<span class="line">  HRESULT (__fastcall *createAttribute)(IXMLDOMDocument *this, wchar_t *, IXMLDOMAttribute **);</span>
<span class="line">  HRESULT (__fastcall *createEntityReference)(IXMLDOMDocument *this, wchar_t *, IXMLDOMEntityReference **);</span>
<span class="line">  HRESULT (__fastcall *getElementsByTagName)(IXMLDOMDocument *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *createNode)(IXMLDOMDocument *this, tagVARIANT, wchar_t *, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *nodeFromID)(IXMLDOMDocument *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *load)(IXMLDOMDocument *this, tagVARIANT, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_readyState)(IXMLDOMDocument *this, int *);</span>
<span class="line">  HRESULT (__fastcall *get_parseError)(IXMLDOMDocument *this, IXMLDOMParseError **);</span>
<span class="line">  HRESULT (__fastcall *get_url)(IXMLDOMDocument *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_async)(IXMLDOMDocument *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *put_async)(IXMLDOMDocument *this, __int16);</span>
<span class="line">  HRESULT (__fastcall *abort)(IXMLDOMDocument *this);</span>
<span class="line">  HRESULT (__fastcall *loadXML)(IXMLDOMDocument *this, wchar_t *, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *save)(IXMLDOMDocument *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_validateOnParse)(IXMLDOMDocument *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *put_validateOnParse)(IXMLDOMDocument *this, __int16);</span>
<span class="line">  HRESULT (__fastcall *get_resolveExternals)(IXMLDOMDocument *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *put_resolveExternals)(IXMLDOMDocument *this, __int16);</span>
<span class="line">  HRESULT (__fastcall *get_preserveWhiteSpace)(IXMLDOMDocument *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *put_preserveWhiteSpace)(IXMLDOMDocument *this, __int16);</span>
<span class="line">  HRESULT (__fastcall *put_onreadystatechange)(IXMLDOMDocument *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *put_ondataavailable)(IXMLDOMDocument *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *put_ontransformnode)(IXMLDOMDocument *this, tagVARIANT);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomelement-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomelement-vtbl"><span><code>IXMLDOMElement_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMElement_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_tagName)(IXMLDOMElement *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *getAttribute)(IXMLDOMElement *this, wchar_t *, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *setAttribute)(IXMLDOMElement *this, wchar_t *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *removeAttribute)(IXMLDOMElement *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *getAttributeNode)(IXMLDOMElement *this, wchar_t *, IXMLDOMAttribute **);</span>
<span class="line">  HRESULT (__fastcall *setAttributeNode)(IXMLDOMElement *this, IXMLDOMAttribute *, IXMLDOMAttribute **);</span>
<span class="line">  HRESULT (__fastcall *removeAttributeNode)(IXMLDOMElement *this, IXMLDOMAttribute *, IXMLDOMAttribute **);</span>
<span class="line">  HRESULT (__fastcall *getElementsByTagName)(IXMLDOMElement *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *normalize)(IXMLDOMElement *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomprocessinginstruction-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomprocessinginstruction-vtbl"><span><code>IXMLDOMProcessingInstruction_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMProcessingInstruction_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_target)(IXMLDOMProcessingInstruction *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_data)(IXMLDOMProcessingInstruction *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_data)(IXMLDOMProcessingInstruction *this, wchar_t *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ixmldomtext-vtbl" tabindex="-1"><a class="header-anchor" href="#ixmldomtext-vtbl"><span><code>IXMLDOMText_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IXMLDOMText_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);</span>
<span class="line">  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);</span>
<span class="line">  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);</span>
<span class="line">  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);</span>
<span class="line">  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);</span>
<span class="line">  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);</span>
<span class="line">  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);</span>
<span class="line">  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);</span>
<span class="line">  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);</span>
<span class="line">  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);</span>
<span class="line">  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);</span>
<span class="line">  HRESULT (__fastcall *get_data)(IXMLDOMCharacterData *this, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *put_data)(IXMLDOMCharacterData *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *get_length)(IXMLDOMCharacterData *this, int *);</span>
<span class="line">  HRESULT (__fastcall *substringData)(IXMLDOMCharacterData *this, int, int, wchar_t **);</span>
<span class="line">  HRESULT (__fastcall *appendData)(IXMLDOMCharacterData *this, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *insertData)(IXMLDOMCharacterData *this, int, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *deleteData)(IXMLDOMCharacterData *this, int, int);</span>
<span class="line">  HRESULT (__fastcall *replaceData)(IXMLDOMCharacterData *this, int, int, wchar_t *);</span>
<span class="line">  HRESULT (__fastcall *splitText)(IXMLDOMText *this, int, IXMLDOMText **);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemactor-vtbl" tabindex="-1"><a class="header-anchor" href="#itemactor-vtbl"><span><code>ItemActor_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemActor_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iteminstance-vtbl" tabindex="-1"><a class="header-anchor" href="#iteminstance-vtbl"><span><code>ItemInstance_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemInstance_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackBase)(ItemStackBase *this);</span>
<span class="line">  void (__fastcall *reinit)(ItemStackBase *this, const gsl::basic_string_span&lt;char const ,-1&gt;, int, int);</span>
<span class="line">  void (__fastcall *reinit)(ItemStackBase *this, const BlockLegacy *, int);</span>
<span class="line">  void (__fastcall *reinit)(ItemStackBase *this, const Item *, int, int);</span>
<span class="line">  void (__fastcall *setNull)(ItemStackBase *this);</span>
<span class="line">  std::string *(__fastcall *toString)(ItemStackBase *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *toDebugString)(ItemStackBase *this, std::string *result);</span>
<span class="line">  bool (__fastcall *reviewItemDirty)(ItemStackBase *this, SensitiveWordsManager *, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraftbase-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraftbase-vtbl"><span><code>ItemStackRequestActionCraftBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraftBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl"><span><code>ItemStackRequestActionCraftNonImplemented_DEPRECATEDASKTYLAING_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraftNonImplemented_DEPRECATEDASKTYLAING_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraftrecipeoptional-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraftrecipeoptional-vtbl"><span><code>ItemStackRequestActionCraftRecipeOptional_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraftRecipeOptional_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11blendstate1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11blendstate1-vtbl"><span><code>ID3D11BlendState1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11BlendState1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11BlendState *this, D3D11_BLEND_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11BlendState1 *this, D3D11_BLEND_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11buffer-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11buffer-vtbl"><span><code>ID3D11Buffer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11Buffer_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);</span>
<span class="line">  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);</span>
<span class="line">  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11Buffer *this, D3D11_BUFFER_DESC *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11depthstencilview-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11depthstencilview-vtbl"><span><code>ID3D11DepthStencilView_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11DepthStencilView_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11DepthStencilView *this, D3D11_DEPTH_STENCIL_VIEW_DESC *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11query1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11query1-vtbl"><span><code>ID3D11Query1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11Query1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  unsigned int (__fastcall *GetDataSize)(ID3D11Asynchronous *this);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11Query *this, D3D11_QUERY_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11Query1 *this, D3D11_QUERY_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11rasterizerstate1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11rasterizerstate1-vtbl"><span><code>ID3D11RasterizerState1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11RasterizerState1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11RasterizerState *this, D3D11_RASTERIZER_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11RasterizerState1 *this, D3D11_RASTERIZER_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11rasterizerstate2-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11rasterizerstate2-vtbl"><span><code>ID3D11RasterizerState2_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11RasterizerState2_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11RasterizerState *this, D3D11_RASTERIZER_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11RasterizerState1 *this, D3D11_RASTERIZER_DESC1 *);</span>
<span class="line">  void (__fastcall *GetDesc2)(ID3D11RasterizerState2 *this, D3D11_RASTERIZER_DESC2 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11rendertargetview-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11rendertargetview-vtbl"><span><code>ID3D11RenderTargetView_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11RenderTargetView_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11RenderTargetView *this, D3D11_RENDER_TARGET_VIEW_DESC *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11shaderresourceview-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11shaderresourceview-vtbl"><span><code>ID3D11ShaderResourceView_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11ShaderResourceView_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11ShaderResourceView *this, D3D11_SHADER_RESOURCE_VIEW_DESC *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11texture2d1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11texture2d1-vtbl"><span><code>ID3D11Texture2D1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11Texture2D1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);</span>
<span class="line">  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);</span>
<span class="line">  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11Texture2D *this, D3D11_TEXTURE2D_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11Texture2D1 *this, D3D11_TEXTURE2D_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11texture3d1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11texture3d1-vtbl"><span><code>ID3D11Texture3D1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11Texture3D1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);</span>
<span class="line">  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);</span>
<span class="line">  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11Texture3D *this, D3D11_TEXTURE3D_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11Texture3D1 *this, D3D11_TEXTURE3D_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11unorderedaccessview-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11unorderedaccessview-vtbl"><span><code>ID3D11UnorderedAccessView_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11UnorderedAccessView_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11UnorderedAccessView *this, D3D11_UNORDERED_ACCESS_VIEW_DESC *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="illagerbeast-vtbl" tabindex="-1"><a class="header-anchor" href="#illagerbeast-vtbl"><span><code>IllagerBeast_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IllagerBeast_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="irongolem-vtbl" tabindex="-1"><a class="header-anchor" href="#irongolem-vtbl"><span><code>IronGolem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ IronGolem_vtbl</span>
<span class="line">{</span>
<span class="line">  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);</span>
<span class="line">  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);</span>
<span class="line">  void (__fastcall *_serverInitItemStackIds)(Actor *this);</span>
<span class="line">  void (__fastcall *_doInitialMove)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkAllSensitiveWords)(Actor *this);</span>
<span class="line">  bool (__fastcall *checkNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *~Actor)(Actor *this);</span>
<span class="line">  void (__fastcall *reset)(Actor *this);</span>
<span class="line">  int (__fastcall *getOnDeathExperience)(Actor *this);</span>
<span class="line">  ActorType (__fastcall *getOwnerEntityType)(Actor *this);</span>
<span class="line">  void (__fastcall *remove)(Actor *this);</span>
<span class="line">  void (__fastcall *setPos)(Actor *this, const Vec3 *);</span>
<span class="line">  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPos)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosOld)(Actor *this);</span>
<span class="line">  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);</span>
<span class="line">  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);</span>
<span class="line">  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);</span>
<span class="line">  void (__fastcall *setRot)(Actor *this, const Vec2 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);</span>
<span class="line">  void (__fastcall *move)(Actor *this, const Vec3 *);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);</span>
<span class="line">  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);</span>
<span class="line">  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this);</span>
<span class="line">  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function&lt;void __cdecl(BlockSource &amp;,Block const &amp;,BlockPos const &amp;,Actor &amp;)&gt;);</span>
<span class="line">  bool (__fastcall *isFireImmune)(Actor *this);</span>
<span class="line">  bool (__fastcall *breaksFallingBlocks)(Actor *this);</span>
<span class="line">  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);</span>
<span class="line">  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);</span>
<span class="line">  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);</span>
<span class="line">  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);</span>
<span class="line">  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);</span>
<span class="line">  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);</span>
<span class="line">  std::unique_ptr&lt;AddActorBasePacket&gt; *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr&lt;AddActorBasePacket&gt; *result);</span>
<span class="line">  void (__fastcall *normalTick)(Actor *this);</span>
<span class="line">  void (__fastcall *baseTick)(Actor *this);</span>
<span class="line">  void (__fastcall *rideTick)(Actor *this);</span>
<span class="line">  void (__fastcall *positionRider)(Actor *this, Actor *, float);</span>
<span class="line">  float (__fastcall *getRidingHeight)(Actor *this);</span>
<span class="line">  bool (__fastcall *startRiding)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *addRider)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);</span>
<span class="line">  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);</span>
<span class="line">  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isInWall)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canShowNameTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *canExistInPeaceful)(Actor *this);</span>
<span class="line">  void (__fastcall *setNameTagVisible)(Actor *this, bool);</span>
<span class="line">  const std::string *(__fastcall *getNameTag)(Actor *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);</span>
<span class="line">  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);</span>
<span class="line">  void (__fastcall *setNameTag)(Actor *this, const std::string *);</span>
<span class="line">  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);</span>
<span class="line">  void (__fastcall *setScoreTag)(Actor *this, const std::string *);</span>
<span class="line">  const std::string *(__fastcall *getScoreTag)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *hasEnteredWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isImmersedInWater)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInWaterOrRain)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInLava)(Actor *this);</span>
<span class="line">  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);</span>
<span class="line">  bool (__fastcall *isOverWater)(Actor *this);</span>
<span class="line">  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);</span>
<span class="line">  float (__fastcall *getCameraOffset)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowHeightOffs)(Actor *this);</span>
<span class="line">  float (__fastcall *getShadowRadius)(Actor *this);</span>
<span class="line">  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);</span>
<span class="line">  bool (__fastcall *canSeeInvisible)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canSee)(Actor *this, const Actor *);</span>
<span class="line">  bool (__fastcall *isSkyLit)(Actor *this, float);</span>
<span class="line">  float (__fastcall *getBrightness)(Actor *this, float);</span>
<span class="line">  bool (__fastcall *interactPreventDefault)(Actor *this);</span>
<span class="line">  void (__fastcall *playerTouch)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);</span>
<span class="line">  bool (__fastcall *isImmobile)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSilent)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPickable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isFishable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSleeping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isShootable)(Actor *this);</span>
<span class="line">  void (__fastcall *setSneaking)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isBlocking)(Actor *this);</span>
<span class="line">  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *isAlive)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnFire)(Actor *this);</span>
<span class="line">  bool (__fastcall *isOnHotBlock)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreativeModeAllowed)(Actor *this);</span>
<span class="line">  bool (__fastcall *isSurfaceMob)(Actor *this);</span>
<span class="line">  bool (__fastcall *isTargetable)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLocalPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *isPlayer)(Actor *this);</span>
<span class="line">  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);</span>
<span class="line">  void (__fastcall *setTarget)(Actor *this, Actor *);</span>
<span class="line">  Actor *(__fastcall *findAttackTarget)(Actor *this);</span>
<span class="line">  bool (__fastcall *isValidTarget)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *attack)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);</span>
<span class="line">  void (__fastcall *adjustDamageAmount)(Actor *this, int *);</span>
<span class="line">  int (__fastcall *getEquipmentCount)(Actor *this);</span>
<span class="line">  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSitting)(Actor *this, bool);</span>
<span class="line">  void (__fastcall *onTame)(Actor *this);</span>
<span class="line">  void (__fastcall *onFailedTame)(Actor *this);</span>
<span class="line">  int (__fastcall *getInventorySize)(Actor *this);</span>
<span class="line">  int (__fastcall *getEquipSlots)(Actor *this);</span>
<span class="line">  int (__fastcall *getChestSlots)(Actor *this);</span>
<span class="line">  void (__fastcall *setStanding)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *canPowerJump)(Actor *this);</span>
<span class="line">  void (__fastcall *setCanPowerJump)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *isJumping)(Actor *this);</span>
<span class="line">  bool (__fastcall *isEnchanted)(Actor *this);</span>
<span class="line">  void (__fastcall *rideJumped)(Actor *this);</span>
<span class="line">  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *shouldRender)(Actor *this);</span>
<span class="line">  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);</span>
<span class="line">  void (__fastcall *animateHurt)(Actor *this);</span>
<span class="line">  bool (__fastcall *doFireHurt)(Actor *this, int);</span>
<span class="line">  void (__fastcall *onLightningHit)(Actor *this);</span>
<span class="line">  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *feed)(Actor *this, int);</span>
<span class="line">  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);</span>
<span class="line">  float (__fastcall *getPickRadius)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *getActorRendererId)(Actor *this);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);</span>
<span class="line">  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);</span>
<span class="line">  void (__fastcall *despawn)(Actor *this);</span>
<span class="line">  void (__fastcall *killed)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);</span>
<span class="line">  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);</span>
<span class="line">  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);</span>
<span class="line">  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);</span>
<span class="line">  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);</span>
<span class="line">  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *consumeTotem)(Actor *this);</span>
<span class="line">  bool (__fastcall *save)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);</span>
<span class="line">  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector&lt;ActorLink&gt; *, DataLoadHelper *);</span>
<span class="line">  ActorType (__fastcall *getEntityTypeId)(Actor *this);</span>
<span class="line">  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *setOnFire)(Actor *this, int);</span>
<span class="line">  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);</span>
<span class="line">  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);</span>
<span class="line">  int (__fastcall *getPortalCooldown)(Actor *this);</span>
<span class="line">  int (__fastcall *getPortalWaitTime)(Actor *this);</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; *(__fastcall *getDimensionId)(Actor *this, AutomaticID&lt;Dimension,int&gt; *result);</span>
<span class="line">  bool (__fastcall *canChangeDimensions)(Actor *this);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);</span>
<span class="line">  void (__fastcall *changeDimension)(Actor *this, AutomaticID&lt;Dimension,int&gt;, bool);</span>
<span class="line">  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);</span>
<span class="line">  void (__fastcall *checkFallDamage)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *causeFallDamage)(Actor *this, float);</span>
<span class="line">  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);</span>
<span class="line">  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);</span>
<span class="line">  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canAddRider)(Actor *this, Actor *);</span>
<span class="line">  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);</span>
<span class="line">  bool (__fastcall *inCaravan)(Actor *this);</span>
<span class="line">  bool (__fastcall *isLeashableType)(Actor *this);</span>
<span class="line">  void (__fastcall *tickLeash)(Actor *this);</span>
<span class="line">  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);</span>
<span class="line">  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);</span>
<span class="line">  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);</span>
<span class="line">  void (__fastcall *startSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSwimming)(Actor *this);</span>
<span class="line">  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);</span>
<span class="line">  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);</span>
<span class="line">  int (__fastcall *getDeathTime)(Actor *this);</span>
<span class="line">  void (__fastcall *heal)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  bool (__fastcall *canBeAffected)(Actor *this, int);</span>
<span class="line">  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);</span>
<span class="line">  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);</span>
<span class="line">  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);</span>
<span class="line">  void (__fastcall *openContainerComponent)(Actor *this, Player *);</span>
<span class="line">  void (__fastcall *swing)(Actor *this);</span>
<span class="line">  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);</span>
<span class="line">  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);</span>
<span class="line">  int (__fastcall *getOutputSignal)(Actor *this);</span>
<span class="line">  void (__fastcall *getDebugText)(Actor *this, std::vector&lt;std::string&gt; *);</span>
<span class="line">  float (__fastcall *getMapDecorationRotation)(Actor *this);</span>
<span class="line">  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);</span>
<span class="line">  float (__fastcall *getYHeadRot)(Actor *this);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCreative)(Actor *this);</span>
<span class="line">  bool (__fastcall *isAdventure)(Actor *this);</span>
<span class="line">  bool (__fastcall *add)(Actor *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);</span>
<span class="line">  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);</span>
<span class="line">  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);</span>
<span class="line">  void (__fastcall *setAuxValue)(Actor *this, int);</span>
<span class="line">  void (__fastcall *setSize)(Actor *this, float, float);</span>
<span class="line">  int (__fastcall *getLifeSpan)(Actor *this);</span>
<span class="line">  void (__fastcall *onOrphan)(Actor *this);</span>
<span class="line">  void (__fastcall *wobble)(Actor *this);</span>
<span class="line">  bool (__fastcall *wasHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *startSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *stopSpinAttack)(Actor *this);</span>
<span class="line">  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);</span>
<span class="line">  bool (__fastcall *hasCritBox)(Actor *this);</span>
<span class="line">  bool (__fastcall *isCritHit)(Actor *this);</span>
<span class="line">  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);</span>
<span class="line">  void (__fastcall *reloadLootTable)(Actor *this);</span>
<span class="line">  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);</span>
<span class="line">  void (__fastcall *kill)(Actor *this);</span>
<span class="line">  void (__fastcall *die)(Actor *this, const ActorDamageSource *);</span>
<span class="line">  bool (__fastcall *shouldTick)(Actor *this);</span>
<span class="line">  std::shared_ptr&lt;IActorMovementProxy&gt; *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr&lt;IActorMovementProxy&gt; *result);</span>
<span class="line">  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);</span>
<span class="line">  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);</span>
<span class="line">  float (__fastcall *getNextStep)(Actor *this, const float);</span>
<span class="line">  bool (__fastcall *canMakeStepSound)(Actor *this);</span>
<span class="line">  void (__fastcall *outOfWorld)(Actor *this);</span>
<span class="line">  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  void (__fastcall *markHurt)(Actor *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);</span>
<span class="line">  bool (__fastcall *_makeFlySound)(Actor *this);</span>
<span class="line">  void (__fastcall *checkInsideBlocks)(Actor *this, float);</span>
<span class="line">  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);</span>
<span class="line">  bool (__fastcall *updateWaterState)(Actor *this);</span>
<span class="line">  void (__fastcall *doWaterSplashEffect)(Actor *this);</span>
<span class="line">  void (__fastcall *spawnTrailBubbles)(Actor *this);</span>
<span class="line">  void (__fastcall *updateInsideBlock)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getLootTable)(Actor *this);</span>
<span class="line">  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);</span>
<span class="line">  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);</span>
<span class="line">  void (__fastcall *_onSizeUpdated)(Actor *this);</span>
<span class="line">  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);</span>
<span class="line">  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);</span>
<span class="line">  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);</span>
<span class="line">  void (__fastcall *spawnAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *setSleeping)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *setSprinting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *playAmbientSound)(Mob *this);</span>
<span class="line">  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);</span>
<span class="line">  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);</span>
<span class="line">  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);</span>
<span class="line">  float (__fastcall *getSpeed)(Mob *this);</span>
<span class="line">  void (__fastcall *setSpeed)(Mob *this, float);</span>
<span class="line">  float (__fastcall *getJumpPower)(Mob *this);</span>
<span class="line">  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);</span>
<span class="line">  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);</span>
<span class="line">  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);</span>
<span class="line">  void (__fastcall *travel)(Mob *this, float, float, float);</span>
<span class="line">  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);</span>
<span class="line">  void (__fastcall *updateWalkAnim)(Mob *this);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *aiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *pushActors)(Mob *this);</span>
<span class="line">  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);</span>
<span class="line">  bool (__fastcall *isLookingAtAnEntity)(Mob *this);</span>
<span class="line">  bool (__fastcall *checkSpawnRules)(Mob *this, bool);</span>
<span class="line">  bool (__fastcall *checkSpawnObstruction)(Mob *this);</span>
<span class="line">  float (__fastcall *getAttackAnim)(Mob *this, float);</span>
<span class="line">  int (__fastcall *getItemUseDuration)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseStartupProgress)(Mob *this);</span>
<span class="line">  float (__fastcall *getItemUseIntervalProgress)(Mob *this);</span>
<span class="line">  int (__fastcall *getItemuseIntervalAxis)(Mob *this);</span>
<span class="line">  int (__fastcall *getTimeAlongSwing)(Mob *this);</span>
<span class="line">  void (__fastcall *ate)(Mob *this);</span>
<span class="line">  float (__fastcall *getMaxHeadXRot)(Mob *this);</span>
<span class="line">  Mob *(__fastcall *getLastHurtByMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);</span>
<span class="line">  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);</span>
<span class="line">  Mob *(__fastcall *getLastHurtMob)(Mob *this);</span>
<span class="line">  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);</span>
<span class="line">  bool (__fastcall *canBeControlledByRider)(Mob *this);</span>
<span class="line">  void (__fastcall *leaveCaravan)(Mob *this);</span>
<span class="line">  void (__fastcall *joinCaravan)(Mob *this, Mob *);</span>
<span class="line">  bool (__fastcall *hasCaravanTail)(Mob *this);</span>
<span class="line">  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);</span>
<span class="line">  int (__fastcall *getArmorValue)(Mob *this);</span>
<span class="line">  float (__fastcall *getArmorCoverPercentage)(Mob *this);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);</span>
<span class="line">  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *sendArmor)(Mob *this, const std::bitset&lt;4&gt; *);</span>
<span class="line">  void (__fastcall *containerChanged)(Mob *this, int);</span>
<span class="line">  void (__fastcall *updateEquipment)(Mob *this);</span>
<span class="line">  int (__fastcall *clearEquipment)(Mob *this);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllArmor)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;int&gt; *(__fastcall *getAllArmorID)(Mob *this, std::vector&lt;int&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllHand)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  std::vector&lt;ItemStack const *&gt; *(__fastcall *getAllEquipment)(Mob *this, std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getArmorTypeHash)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *sendInventory)(Mob *this, bool);</span>
<span class="line">  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  bool (__fastcall *createAIGoals)(Mob *this);</span>
<span class="line">  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);</span>
<span class="line">  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);</span>
<span class="line">  void (__fastcall *setTransitioningSitting)(Mob *this, bool);</span>
<span class="line">  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);</span>
<span class="line">  int (__fastcall *getAttackTime)(Mob *this);</span>
<span class="line">  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);</span>
<span class="line">  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);</span>
<span class="line">  bool (__fastcall *useNewAi)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendLadder)(Mob *this);</span>
<span class="line">  void (__fastcall *ascendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *descendScaffolding)(Mob *this);</span>
<span class="line">  void (__fastcall *dropContainer)(Mob *this);</span>
<span class="line">  std::unique_ptr&lt;BodyControl&gt; *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr&lt;BodyControl&gt; *result);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);</span>
<span class="line">  void (__fastcall *jumpFromGround)(Mob *this);</span>
<span class="line">  void (__fastcall *updateAi)(Mob *this);</span>
<span class="line">  void (__fastcall *newServerAiStep)(Mob *this);</span>
<span class="line">  void (__fastcall *_serverAiMobStep)(Mob *this);</span>
<span class="line">  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);</span>
<span class="line">  void (__fastcall *dropBags)(Mob *this);</span>
<span class="line">  void (__fastcall *tickDeath)(Mob *this);</span>
<span class="line">  void (__fastcall *updateGliding)(Mob *this);</span>
<span class="line">  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl"><span><code>ItemStackRequestActionCraft&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt;,12&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraft&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt;,12&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl"><span><code>ItemStackRequestActionCraft&lt;TypedServerNetId&lt;RecipeNetIdTag,unsigned int,0&gt;,10&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraft&lt;TypedServerNetId&lt;RecipeNetIdTag,unsigned int,0&gt;,10&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl" tabindex="-1"><a class="header-anchor" href="#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl"><span><code>ItemStackRequestActionCraft&lt;TypedServerNetId&lt;RecipeNetIdTag,unsigned int,0&gt;,11&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ItemStackRequestActionCraft&lt;TypedServerNetId&lt;RecipeNetIdTag,unsigned int,0&gt;,11&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);</span>
<span class="line">  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);</span>
<span class="line">  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);</span>
<span class="line">  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);</span>
<span class="line">  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11rendertargetview1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11rendertargetview1-vtbl"><span><code>ID3D11RenderTargetView1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11RenderTargetView1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11RenderTargetView *this, D3D11_RENDER_TARGET_VIEW_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11RenderTargetView1 *this, D3D11_RENDER_TARGET_VIEW_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11shaderresourceview1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11shaderresourceview1-vtbl"><span><code>ID3D11ShaderResourceView1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11ShaderResourceView1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11ShaderResourceView *this, D3D11_SHADER_RESOURCE_VIEW_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11ShaderResourceView1 *this, D3D11_SHADER_RESOURCE_VIEW_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id3d11unorderedaccessview1-vtbl" tabindex="-1"><a class="header-anchor" href="#id3d11unorderedaccessview1-vtbl"><span><code>ID3D11UnorderedAccessView1_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ID3D11UnorderedAccessView1_vtbl</span>
<span class="line">{</span>
<span class="line">  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);</span>
<span class="line">  unsigned int (__fastcall *AddRef)(IUnknown *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(IUnknown *this);</span>
<span class="line">  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);</span>
<span class="line">  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);</span>
<span class="line">  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);</span>
<span class="line">  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);</span>
<span class="line">  void (__fastcall *GetDesc)(ID3D11UnorderedAccessView *this, D3D11_UNORDERED_ACCESS_VIEW_DESC *);</span>
<span class="line">  void (__fastcall *GetDesc1)(ID3D11UnorderedAccessView1 *this, D3D11_UNORDERED_ACCESS_VIEW_DESC1 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65),t=[e];function c(d,o){return a(),n("div",null,t)}const v=s(i,[["render",c],["__file","I~2.html.vue"]]),p=JSON.parse('{"path":"/1.16.201/structure/I~2.html","title":"I~2","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"ISubChunkBlockStoragePaletted_vtbl","slug":"isubchunkblockstoragepaletted-vtbl","link":"#isubchunkblockstoragepaletted-vtbl","children":[]},{"level":3,"title":"IXMLDOMAttribute_vtbl","slug":"ixmldomattribute-vtbl","link":"#ixmldomattribute-vtbl","children":[]},{"level":3,"title":"IXMLDOMCharacterData_vtbl","slug":"ixmldomcharacterdata-vtbl","link":"#ixmldomcharacterdata-vtbl","children":[]},{"level":3,"title":"IXMLDOMDocumentType_vtbl","slug":"ixmldomdocumenttype-vtbl","link":"#ixmldomdocumenttype-vtbl","children":[]},{"level":3,"title":"IXMLDOMDocument_vtbl","slug":"ixmldomdocument-vtbl","link":"#ixmldomdocument-vtbl","children":[]},{"level":3,"title":"IXMLDOMElement_vtbl","slug":"ixmldomelement-vtbl","link":"#ixmldomelement-vtbl","children":[]},{"level":3,"title":"IXMLDOMProcessingInstruction_vtbl","slug":"ixmldomprocessinginstruction-vtbl","link":"#ixmldomprocessinginstruction-vtbl","children":[]},{"level":3,"title":"IXMLDOMText_vtbl","slug":"ixmldomtext-vtbl","link":"#ixmldomtext-vtbl","children":[]},{"level":3,"title":"ItemActor_vtbl","slug":"itemactor-vtbl","link":"#itemactor-vtbl","children":[]},{"level":3,"title":"ItemInstance_vtbl","slug":"iteminstance-vtbl","link":"#iteminstance-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraftBase_vtbl","slug":"itemstackrequestactioncraftbase-vtbl","link":"#itemstackrequestactioncraftbase-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraftNonImplemented_DEPRECATEDASKTYLAING_vtbl","slug":"itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl","link":"#itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraftRecipeOptional_vtbl","slug":"itemstackrequestactioncraftrecipeoptional-vtbl","link":"#itemstackrequestactioncraftrecipeoptional-vtbl","children":[]},{"level":3,"title":"ID3D11BlendState1_vtbl","slug":"id3d11blendstate1-vtbl","link":"#id3d11blendstate1-vtbl","children":[]},{"level":3,"title":"ID3D11Buffer_vtbl","slug":"id3d11buffer-vtbl","link":"#id3d11buffer-vtbl","children":[]},{"level":3,"title":"ID3D11DepthStencilView_vtbl","slug":"id3d11depthstencilview-vtbl","link":"#id3d11depthstencilview-vtbl","children":[]},{"level":3,"title":"ID3D11Query1_vtbl","slug":"id3d11query1-vtbl","link":"#id3d11query1-vtbl","children":[]},{"level":3,"title":"ID3D11RasterizerState1_vtbl","slug":"id3d11rasterizerstate1-vtbl","link":"#id3d11rasterizerstate1-vtbl","children":[]},{"level":3,"title":"ID3D11RasterizerState2_vtbl","slug":"id3d11rasterizerstate2-vtbl","link":"#id3d11rasterizerstate2-vtbl","children":[]},{"level":3,"title":"ID3D11RenderTargetView_vtbl","slug":"id3d11rendertargetview-vtbl","link":"#id3d11rendertargetview-vtbl","children":[]},{"level":3,"title":"ID3D11ShaderResourceView_vtbl","slug":"id3d11shaderresourceview-vtbl","link":"#id3d11shaderresourceview-vtbl","children":[]},{"level":3,"title":"ID3D11Texture2D1_vtbl","slug":"id3d11texture2d1-vtbl","link":"#id3d11texture2d1-vtbl","children":[]},{"level":3,"title":"ID3D11Texture3D1_vtbl","slug":"id3d11texture3d1-vtbl","link":"#id3d11texture3d1-vtbl","children":[]},{"level":3,"title":"ID3D11UnorderedAccessView_vtbl","slug":"id3d11unorderedaccessview-vtbl","link":"#id3d11unorderedaccessview-vtbl","children":[]},{"level":3,"title":"IllagerBeast_vtbl","slug":"illagerbeast-vtbl","link":"#illagerbeast-vtbl","children":[]},{"level":3,"title":"IronGolem_vtbl","slug":"irongolem-vtbl","link":"#irongolem-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraft<TypedServerNetId<CreativeItemNetIdTag,unsigned int,0>,12>_vtbl","slug":"itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl","link":"#itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,10>_vtbl","slug":"itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl","link":"#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl","children":[]},{"level":3,"title":"ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,11>_vtbl","slug":"itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl","link":"#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl","children":[]},{"level":3,"title":"ID3D11RenderTargetView1_vtbl","slug":"id3d11rendertargetview1-vtbl","link":"#id3d11rendertargetview1-vtbl","children":[]},{"level":3,"title":"ID3D11ShaderResourceView1_vtbl","slug":"id3d11shaderresourceview1-vtbl","link":"#id3d11shaderresourceview1-vtbl","children":[]},{"level":3,"title":"ID3D11UnorderedAccessView1_vtbl","slug":"id3d11unorderedaccessview1-vtbl","link":"#id3d11unorderedaccessview1-vtbl","children":[]}],"git":{"updatedTime":1659743947000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1}]},"filePathRelative":"1.16.201/structure/I~2.md"}');export{v as comp,p as data};
